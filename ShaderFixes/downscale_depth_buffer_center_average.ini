[ResourceInput]

; A bunch of downsampled depth buffers:
[ResourceDepthDownscale128]
width = 128
height = 128
format = R32_FLOAT
mode = stereo
[ResourceDepthDownscale64]
width = 64
height = 64
mode = stereo
[ResourceDepthDownscale32]
width = 32
height = 32
mode = stereo
[ResourceDepthDownscale16]
width = 16
height = 16
mode = stereo
[ResourceDepthDownscale8]
width = 8
height = 8
mode = stereo
[ResourceDepthDownscale4]
width = 4
height = 4
mode = stereo
[ResourceDepthDownscale2]
width = 2
height = 2
mode = stereo
[ResourceDepthDownscale1]
width = 1
height = 1
mode = stereo

[CustomShaderInitialDownscale]
; Description below where this is called
ps = ShaderFixes/downscale_coarse.hlsl
Draw = 4, 0

[CustomShaderInitialDownscaleCenter]
ps = ShaderFixes/downscale_center_coarse.hlsl
Draw = 4, 0

[CustomShaderIntermediateDownscaleAvg]
; Description below where this is called
ps = ShaderFixes/downscale_mono_half_avg.hlsl

ResourceDepthDownscale64 = copy_desc ResourceDepthDownscale128
o0 = set_viewport ResourceDepthDownscale64
ps-t110 = ResourceDepthDownscale128
Draw = 4, 0
;post Resource\debug_2d\2D = ResourceDepthDownscale64

ResourceDepthDownscale32 = copy_desc ResourceDepthDownscale128
o0 = set_viewport ResourceDepthDownscale32
ps-t110 = ResourceDepthDownscale64
Draw = 4, 0
;post Resource\debug_2d\2D = ResourceDepthDownscale32

ResourceDepthDownscale16 = copy_desc ResourceDepthDownscale128
o0 = set_viewport ResourceDepthDownscale16
ps-t110 = ResourceDepthDownscale32
Draw = 4, 0
;post Resource\debug_2d\2D = ResourceDepthDownscale16

ResourceDepthDownscale8 = copy_desc ResourceDepthDownscale128
o0 = set_viewport ResourceDepthDownscale8
ps-t110 = ResourceDepthDownscale16
Draw = 4, 0
;post Resource\debug_2d\2D = ResourceDepthDownscale8

ResourceDepthDownscale4 = copy_desc ResourceDepthDownscale128
o0 = set_viewport ResourceDepthDownscale4
ps-t110 = ResourceDepthDownscale8
Draw = 4, 0
;post Resource\debug_2d\2D = ResourceDepthDownscale4

ResourceDepthDownscale2 = copy_desc ResourceDepthDownscale128
o0 = set_viewport ResourceDepthDownscale2
ps-t110 = ResourceDepthDownscale4
Draw = 4, 0
;post Resource\debug_2d\2D = ResourceDepthDownscale2

[CustomShaderIntermediateDownscaleMax]
; Description below where this is called
ps = ShaderFixes/downscale_mono_half_max.hlsl

ResourceDepthDownscale1 = copy_desc ResourceDepthDownscale128
o0 = set_viewport ResourceDepthDownscale1
ps-t110 = ResourceDepthDownscale2
Draw = 4, 0
;post Resource\debug_2d\2D = ResourceDepthDownscale1

[CustomShaderDownscale]
vs = ShaderFixes/full_screen.hlsl
blend = disable
cull = none
topology = triangle_strip
run = CommandListUnbindAllRenderTargets

; Initial pass samples points on the depth buffer to downscale it to a fixed
; size, regardless of the original depth buffer size. This will have severe
; aliasing, and is not intended to be displayed graphically. Calling this
; custom shader from here to inherit common state:
ResourceDepthDownscale128 = copy_desc ResourceInput
o0 = set_viewport ResourceDepthDownscale128
ps-t110 = ResourceInput
run = CustomShaderInitialDownscale
;post Resource\debug_2d\2D = ResourceDepthDownscale128
;$\debug_2d\flip = 1

; Intermediate passes just combine the samples we have into a progressively
; smaller buffer. Calling this from here inherits common state, and this shader
; section will call Draw() multiple times for each progressive downscale step:
run = CustomShaderIntermediateDownscaleAvg
run = CustomShaderIntermediateDownscaleMax

[CustomShaderDownscaleCenter]
vs = ShaderFixes/full_screen.hlsl
blend = disable
cull = none
topology = triangle_strip
run = CommandListUnbindAllRenderTargets

; Initial pass samples points on the depth buffer to downscale it to a fixed
; size, regardless of the original depth buffer size. This will have severe
; aliasing, and is not intended to be displayed graphically. Calling this
; custom shader from here to inherit common state:
ResourceDepthDownscale128 = copy_desc ResourceInput
o0 = set_viewport ResourceDepthDownscale128
ps-t110 = ResourceInput
run = CustomShaderInitialDownscaleCenter
;post Resource\debug_2d\2D = ResourceDepthDownscale128
;$\debug_2d\flip = 1

; Intermediate passes just combine the samples we have into a progressively
; smaller buffer. Calling this from here inherits common state, and this shader
; section will call Draw() multiple times for each progressive downscale step:
run = CustomShaderIntermediateDownscaleAvg
run = CustomShaderIntermediateDownscaleMax
