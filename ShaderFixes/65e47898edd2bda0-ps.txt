// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 65e47898edd2bda0-ps.txt
// 3DMigoto: 65e47898edd2bda0 | Matched 2 variants of 1 shaders: Custom/CharacterBodypainting
//
//       Unity headers extracted from Custom_CharacterBodypainting
//       Shader "Custom/CharacterBodypainting" {
//         CustomEditor "ASEMaterialInspector"
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           Tags { "IsEmissive"="true" "QUEUE"="Geometry+0" "RenderType"="TransparentCutout" }
//           Pass 1/5 {
//             Name "FORWARD"
//             Tags { "IsEmissive"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+0" "RenderType"="TransparentCutout" "SHADOWSUPPORT"="true" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Custom_CharacterBodypainting:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 169 7 6
//      undeciphered1a: 13
// 2:   Keywords { "DIRECTIONAL" "INSTANCING_ON" "_BODYPAINTINGNORMAL_ON" }
// 1:   Keywords { "DIRECTIONAL" "INSTANCING_ON" }
//      undeciphered2: 1 9 5 8 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 336
//      Vector 32 [_LightColor0]
//      Vector 64 [_NormalRG_ST]
//      Float 80 [_NormalIntensity]
//      Float 84 [_DetailNormalUV0UV1]
//      Float 88 [_DetailNormalTiling]
//      Float 92 [_DetailNormalIntensity]
//      Vector 112 [_PaintingMasksRGB_ST]
//      Vector 128 [_PaintingDetailMasksRGB_ST]
//      Vector 160 [_Color]
//      Vector 176 [_Albedo_ST]
//      Vector 224 [_ColorB]
//      Float 240 [_EmissionPower]
//      Vector 256 [_EmissionColor]
//      Float 276 [_SmoothnessIntensity]
//      Float 280 [_NoiseCut]
//      Float 284 [_NoiseUVTiling]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 736 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityReflectionProbes" 128
//      Vector 0 [unity_SpecCube0_BoxMax]
//      Vector 16 [unity_SpecCube0_BoxMin]
//      Vector 32 [unity_SpecCube0_ProbePosition]
//      Vector 48 [unity_SpecCube0_HDR]
//      Vector 64 [unity_SpecCube1_BoxMax]
//      Vector 80 [unity_SpecCube1_BoxMin]
//      Vector 96 [unity_SpecCube1_ProbePosition]
//      Vector 112 [unity_SpecCube1_HDR]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_NormalRG] 2D 2
//      SetTexture 1 [_DetailNormalRG] 2D 3
//      SetTexture 2 [_PaintingMasksRGB] 2D 4
//      SetTexture 3 [_PaintingDetailMasksRGB] 2D 5
//      SetTexture 4 [_Albedo] 2D 6
//      SetTexture 5 [_Cutout] 2D 7
//      SetTexture 6 [unity_SpecCube0] CUBE 0
//      SetTexture 7 [unity_SpecCube1] CUBE -1
//      SetTexture 8 [unity_ProbeVolumeSH] 3D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityReflectionProbes" 3
//      BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:13:55 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 6   xyzw        5     NONE   float
// TEXCOORD                 7   xyzw        6     NONE   float
// SV_InstanceID            0   x           7     NONE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[18], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 65e47898edd2bda0-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r14.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r3.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
sample r3.xyzw, r3.xyxx, t0.xyzw, s2
add r4.xy, r3.xyxx, r3.xyxx
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r4.z, r1.w
add r3.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r3.xyz, cb0[5].xxxx, r3.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mul r4.xy, v1.xyxx, cb0[5].zzzz
mad r4.zw, v1.zzzw, cb0[5].zzzz, -r4.xxxy
mad r4.xy, cb0[5].yyyy, r4.zwzz, r4.xyxx
sample r4.xyzw, r4.xyxx, t1.xyzw, s3
add r5.xy, r4.xyxx, r4.xyxx
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r4.xyxx, r4.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
add r4.xyz, r5.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r4.xyz, cb0[5].wwww, r4.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
add r5.xy, r3.xyxx, r4.xyxx
mul r5.z, r3.z, r4.z
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r5.xyzx
mad r4.xy, v1.zwzz, cb0[7].xyxx, cb0[7].zwzz
sample r4.xyzw, r4.xyxx, t2.xyzw, s4
mad r4.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
sample r5.xyzw, r4.xyxx, t3.xyzw, s5
mad r4.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
sample r6.xyzw, r4.xyxx, t4.xyzw, s6
mul r4.xyw, r6.xyxz, cb0[10].xyxz
mul r1.w, r4.z, r5.z
mul r1.w, r1.w, cb0[14].w
mul r1.w, r1.w, cb0[15].x
mul r5.xy, v1.xyxx, cb0[17].wwww
sample r5.xyzw, r5.xyxx, t5.xyzw, s7
add r2.w, -r5.x, cb0[17].z
lt r2.w, r2.w, l(0.000000)
discard_nz r2.w
eq r2.w, cb4[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb4[0].y, l(1.000000)
  mul r5.yzw, v3.wwww, cb4[2].xxyz
  mad r5.yzw, cb4[1].xxyz, v2.wwww, r5.yyzw
  mad r5.yzw, cb4[3].xxyz, v4.wwww, r5.yyzw
  add r5.yzw, r5.yyzw, cb4[4].xxyz
  movc r5.yzw, r2.wwww, r5.yyzw, r0.xxyz
  add r5.yzw, r5.yyzw, -cb4[6].xxyz
  mul r7.yzw, r5.yyzw, cb4[5].xxyz
  mad r2.w, r7.y, l(0.250000), l(0.750000)
  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
  max r7.x, r2.w, r3.w
  sample r7.xyzw, r7.xzwx, t8.xyzw, s1
else
  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r7.xyzw, cb2[46].xyzw
dp3 r6.x, v2.xyzx, r3.xyzx
dp3 r6.y, v3.xyzx, r3.xyzx
dp3 r6.z, v4.xyzx, r3.xyzx
dp3 r3.x, r6.xyzx, r6.xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, r6.xyzx
mad r3.w, -cb0[17].y, r6.w, l(1.000000)
dp3 r4.z, -r2.xyzx, r3.xyzx
add r4.z, r4.z, r4.z
mad r5.yzw, r3.xxyz, -r4.zzzz, -r2.xxyz
mul r6.xyz, r2.wwww, cb0[2].xyzx
lt r2.w, l(0.000000), cb3[2].w
if_nz r2.w
  dp3 r2.w, r5.yzwy, r5.yzwy
  rsq r2.w, r2.w
  mul r7.xyz, r2.wwww, r5.yzwy
  add r8.xyz, -r0.xyzx, cb3[0].xyzx
  div r8.xyz, r8.xyzx, r7.xyzx
  add r9.xyz, -r0.xyzx, cb3[1].xyzx
  div r9.xyz, r9.xyzx, r7.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r2.w, r8.y, r8.x
  min r2.w, r8.z, r2.w
  add r8.xyz, r0.xyzx, -cb3[2].xyzx
  mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
else
  mov r7.xyz, r5.yzwy
endif
mad r2.w, -r3.w, l(0.700000), l(1.700000)
mul r2.w, r2.w, r3.w
mul r2.w, r2.w, l(6.000000)
sample_l r7.xyzw, r7.xyzx, t6.xyzw, s0, r2.w
add r4.z, r7.w, l(-1.000000)
mad r4.z, cb3[3].w, r4.z, l(1.000000)
log r4.z, r4.z
mul r4.z, r4.z, cb3[3].y
exp r4.z, r4.z
mul r4.z, r4.z, cb3[3].x
mul r8.xyz, r7.xyzx, r4.zzzz
lt r7.w, cb3[1].w, l(0.999990)
if_nz r7.w
  lt r7.w, l(0.000000), cb3[6].w
  if_nz r7.w
    dp3 r7.w, r5.yzwy, r5.yzwy
    rsq r7.w, r7.w
    mul r9.xyz, r5.yzwy, r7.wwww
    add r10.xyz, -r0.xyzx, cb3[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -r0.xyzx, cb3[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r7.w, r10.y, r10.x
    min r7.w, r10.z, r7.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r5.yzw, r9.xxyz, r7.wwww, r0.xxyz
  endif
  sample_l r9.xyzw, r5.yzwy, t7.xyzw, s0, r2.w
  add r0.x, r9.w, l(-1.000000)
  mad r0.x, cb3[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb3[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r9.xyzx, r0.xxxx
  mad r5.yzw, r4.zzzz, r7.xxyz, -r0.xxyz
  mad r8.xyz, cb3[1].wwww, r5.yzwy, r0.xyzx
endif
mul r0.xyz, r4.xywx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r3.xyzx, r2.xyzx
dp3_sat r2.x, r3.xyzx, cb2[0].xyzx
dp3_sat r2.y, r3.xyzx, r1.xyzx
dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
mul r1.y, r1.x, r1.x
dp2 r1.y, r1.yyyy, r3.wwww
add r1.y, r1.y, l(-0.500000)
add r1.z, -r2.x, l(1.000000)
mul r2.z, r1.z, r1.z
mul r2.z, r2.z, r2.z
mul r1.z, r1.z, r2.z
mad r1.z, r1.y, r1.z, l(1.000000)
add r2.z, -|r0.w|, l(1.000000)
mul r2.w, r2.z, r2.z
mul r2.w, r2.w, r2.w
mul r2.z, r2.z, r2.w
mad r1.y, r1.y, r2.z, l(1.000000)
mul r1.y, r1.y, r1.z
mul r1.y, r2.x, r1.y
mul r1.z, r3.w, r3.w
max r1.z, r1.z, l(0.002000)
add r2.w, -r1.z, l(1.000000)
mad r3.x, |r0.w|, r2.w, r1.z
mad r2.w, r2.x, r2.w, r1.z
mul r0.w, |r0.w|, r2.w
mad r0.w, r2.x, r3.x, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r2.w, r1.z, r1.z
mad r3.x, r2.y, r2.w, -r2.y
mad r2.y, r3.x, r2.y, l(1.000000)
mul r2.w, r2.w, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r2.w, r2.y
mul r0.w, r0.w, r2.y
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.x, r0.w
max r0.w, r0.w, l(0.000000)
mad r1.z, r1.z, r1.z, l(1.000000)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
mad_sat r2.x, cb0[17].y, r6.w, l(0.0400000215)
mul r3.xyz, r1.yyyy, r6.xyzx
mul r4.xyz, r6.xyzx, r0.wwww
add r0.w, -r1.x, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.w, r0.w, r1.x
mad r0.w, r0.w, l(0.960000), l(0.040000)
mul r4.xyz, r0.wwww, r4.xyzx
mad r0.xyz, r0.xyzx, r3.xyzx, r4.xyzx
mul r1.xyz, r8.xyzx, r1.zzzz
add r0.w, r2.x, l(-0.040000)
mad r0.w, r2.z, r0.w, l(0.040000)
mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
mad o0.xyz, r1.wwww, cb0[16].xyzx, r0.xyzx
mov o0.w, r5.x
ret
// Approximately 0 instruction slots used