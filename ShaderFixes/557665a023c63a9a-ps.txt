// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 557665a023c63a9a-ps.txt
// 3DMigoto: 557665a023c63a9a | Matched 3 variants of 1 shaders: Shader Forge/resin
//
//       Unity headers extracted from Shader Forge_resin
//       Shader "Shader Forge/resin" {
//         CustomEditor "ShaderForgeMaterialInspector"
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//           Pass 3/4 {
//             Name "FORWARD_DELTA"
//             Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent" "RenderType"="Transparent" "SHADOWSUPPORT"="true" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Shader Forge_resin:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 103 4 0
//      undeciphered1a: 6
// 2:   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "DIRLIGHTMAP_COMBINED" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 4:   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 1:   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//      undeciphered2: 1 5 4 5 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 192
//      Vector 96 [_LightColor0]
//      Float 128 [_RefractionIntensity]
//      Vector 144 [_Refraction_ST]
//      Vector 160 [_color]
//      Float 176 [_power]
//      Float 180 [_color_opacity]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      Vector 112 [_ZBufferParams]
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 32 [_LightProjectionParams]
//      ConstBuffer "UnityShadows" 416
//      Vector 384 [_LightShadowData]
//      SetTexture 0 [_Refraction] 2D 4
//      SetTexture 1 [_CameraDepthTexture] 2D 3
//      SetTexture 2 [_LightTextureB0] 2D 2
//      SetTexture 3 [_LightTexture0] CUBE 1
//      SetTexture 4 [_ShadowMapTexture] CUBE 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityShadows" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:04:07 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float
// TEXCOORD                 2   xy          2     NONE   float
// TEXCOORD                 3   xyzw        3     NONE   float   xyz
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// TEXCOORD                 5   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyz         6     NONE   float   xyz
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyz         8     NONE   float   xyz
// TEXCOORD                 9   xyz         9     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[25], immediateIndexed
dcl_sampler s0, mode_comparison
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.xyz
dcl_input_ps linear v9.xyz
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 557665a023c63a9a-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.xy, v7.xyxx, v7.wwww
sample r0.xyzw, r0.xyxx, t1.xyzw, s3
mad r0.x, cb1[7].z, r0.x, cb1[7].w
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r0.x, r0.x, -cb1[5].y
add r0.y, v7.z, -cb1[5].y
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r0.x, -r0.y, r0.x
div_sat r0.x, r0.x, cb0[11].x
mul r0.yzw, cb0[6].xxyz, cb0[10].xxyz
mul r0.xyz, r0.xxxx, r0.yzwy
mul r0.xyz, r0.xyzx, cb0[11].xxxx
mul r0.xyz, r0.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
max r0.w, |v9.y|, |v9.x|
max r0.w, r0.w, |v9.z|
add r0.w, r0.w, -cb2[2].z
max r0.w, r0.w, l(0.000010)
mul r0.w, r0.w, cb2[2].w
div r0.w, cb2[2].y, r0.w
add r0.w, r0.w, -cb2[2].x
add r0.w, -r0.w, l(1.000000)
add r1.xyz, v9.xyzx, l(0.00781250000, 0.00781250000, 0.00781250000, 0.000000)
sample_c_lz r1.x, r1.xyzx, t4.xxxx, s0, r0.w
add r2.xyz, v9.xyzx, l(-0.00781250000, -0.00781250000, 0.00781250000, 0.000000)
sample_c_lz r1.y, r2.xyzx, t4.xxxx, s0, r0.w
add r2.xyz, v9.xyzx, l(-0.00781250000, 0.00781250000, -0.00781250000, 0.000000)
sample_c_lz r1.z, r2.xyzx, t4.xxxx, s0, r0.w
add r2.xyz, v9.xyzx, l(0.00781250000, -0.00781250000, -0.00781250000, 0.000000)
sample_c_lz r1.w, r2.xyzx, t4.xxxx, s0, r0.w
dp4 r0.w, r1.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
add r1.x, -cb3[24].x, l(1.000000)
mad r0.w, r0.w, r1.x, cb3[24].x
dp3 r1.x, v8.xyzx, v8.xyzx
sample r1.xyzw, r1.xxxx, t2.xyzw, s2
sample r2.xyzw, v8.xyzx, t3.xyzw, s1
mul r1.x, r1.x, r2.w
mul r0.w, r0.w, r1.x
mul r1.xyz, r0.wwww, cb0[6].xyzx
mad r2.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
sample r2.xyzw, r2.xyxx, t0.xyzw, s4
mul r2.x, r2.w, r2.x
mad r2.zw, r2.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
add r3.xy, r2.xyxx, r2.xyxx
dp2 r0.w, r2.zwzz, r2.zwzz
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r3.z, r0.w
add r2.xyz, r3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r2.xyz, cb0[8].xxxx, r2.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mul r3.xyz, r2.yyyy, v6.xyzx
mad r2.xyw, r2.xxxx, v5.xyxz, r3.xyxz
mad r2.xyz, r2.zzzz, v4.xyzx, r2.xywx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mad r3.xyz, cb2[0].wwww, -v3.xyzx, cb2[0].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
add r4.xyz, -v3.xyzx, r7.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mad r5.xyz, r4.xyzx, r0.wwww, r3.xyzx
mul r4.xyz, r0.wwww, r4.xyzx
dp3 r0.w, r2.xyzx, r4.xyzx
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r5.xyzx
dp3_sat r1.w, r2.xyzx, r4.xyzx
dp3 r2.x, r2.xyzx, r3.xyzx
dp3_sat r2.y, r3.xyzx, r4.xyzx
mul r1.w, r1.w, r1.w
mad r1.w, r1.w, l(-0.998400), l(1.000000)
mad r1.w, r1.w, r1.w, l(1.000000012E-007)
div r1.w, l(0.000509295845), r1.w
mad r2.z, |r0.w|, l(0.960000), l(0.0400000028)
max r2.w, r2.x, l(0.000000)
mad r2.x, -r2.x, l(0.500000), l(1.000000)
min r3.x, r2.w, l(1.000000)
mad r3.y, r3.x, l(0.960000), l(0.0400000028)
mul r3.y, |r0.w|, r3.y
add r0.w, -|r0.w|, l(1.000000)
mad r2.z, r3.x, r2.z, r3.y
add r2.z, r2.z, l(0.000010)
div r2.z, l(0.500000), r2.z
mul r1.w, r1.w, r2.z
mul r1.w, r3.x, r1.w
mul r1.w, r1.w, l(3.14159274)
mul r3.xyz, r1.wwww, r1.xyzx
add r1.w, -r2.y, l(1.000000)
mul r2.z, r1.w, r1.w
mul r2.z, r2.z, r2.z
mul r1.w, r1.w, r2.z
mad r1.w, r1.w, l(0.960000), l(0.040000)
mul r3.xyz, r1.wwww, r3.xyzx
mul r1.w, r2.x, r2.x
mul r1.w, r1.w, r1.w
mul r1.w, r2.x, r1.w
add r2.x, r2.y, r2.y
mul r2.x, r2.y, r2.x
mad r2.x, r2.x, l(0.199999988), l(-0.500000)
mad r1.w, r2.x, r1.w, l(1.000000)
mul r2.y, r0.w, r0.w
mul r2.y, r2.y, r2.y
mul r0.w, r0.w, r2.y
mad r0.w, r2.x, r0.w, l(1.000000)
mul r0.w, r0.w, r1.w
mad r0.w, r0.w, r2.w, l(1.000000)
mul r1.xyz, r1.xyzx, r0.wwww
mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
mul o0.xyz, r0.xyzx, cb0[11].yyyy
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used