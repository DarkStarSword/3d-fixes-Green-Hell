// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9e108bfca3aed304-ps.txt
// 3DMigoto: 9e108bfca3aed304 |    Unity headers extracted from Shader Forge_Torch_opacity
//    Shader "Shader Forge/Torch_opacity" {
//      CustomEditor "ShaderForgeMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 3/3 {
//          Name "FORWARD_DELTA"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent" "RenderType"="Transparent" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Shader Forge_Torch_opacity:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 87 4 0
//   undeciphered1a: 5
//   Keywords { "SPOT" }
//   undeciphered2: 1 4 3 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 192
//   Vector 96 [_LightColor0]
//   Vector 144 [_nrm_ST]
//   Vector 160 [_color_ST]
//   Float 176 [_opacity]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   SetTexture 0 [_nrm] 2D 2
//   SetTexture 1 [_LightTexture0] 2D 0
//   SetTexture 2 [_LightTextureB0] 2D 1
//   SetTexture 3 [_color] 2D 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:47:37 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v7.xyzw
dcl_output o0.xyzw
dcl_temps 7
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9e108bfca3aed304-ps.txt

mul r5.w, -r5.x, r5.y
mad r6.xyz, -r5.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.xy, v7.xyxx, v7.wwww
add r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample r0.xyzw, r0.xyxx, t1.xyzw, s0
lt r0.x, l(0.000000), v7.z
and r0.x, r0.x, l(0x3f800000)
mul r0.x, r0.w, r0.x
dp3 r0.y, v7.xyzx, v7.xyzx
sample r1.xyzw, r0.yyyy, t2.xyzw, s1
mul r0.x, r0.x, r1.x
mul r0.xyz, r0.xxxx, cb0[6].xyzx
mad r1.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
sample r1.xyzw, r1.xyxx, t0.xyzw, s2
mul r1.x, r1.w, r1.x
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xyz, r1.yyyy, v5.xyzx
mad r2.xyz, r1.xxxx, v4.xyzx, r2.xyzx
dp2 r0.w, r1.xyxx, r1.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r0.w, r0.w
mad r1.xyz, r0.wwww, v3.xyzx, r2.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mad r2.xyz, cb2[0].wwww, -v2.xyzx, cb2[0].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
add r3.xyz, -v2.xyzx, r6.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mad r4.xyz, r3.xyzx, r0.wwww, r2.xyzx
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, r1.xyzx, r3.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r4.xyzx
dp3_sat r1.w, r1.xyzx, r3.xyzx
dp3 r1.x, r1.xyzx, r2.xyzx
dp3_sat r1.y, r2.xyzx, r3.xyzx
mad r2.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
sample r2.xyzw, r2.xyxx, t3.xyzw, s3
add r1.z, -r2.w, l(1.000000)
mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mul r2.w, r1.z, r1.z
mul r3.x, r2.w, r2.w
mad r3.y, r1.w, r3.x, -r1.w
mad r1.w, r3.y, r1.w, l(1.000000)
mad r1.w, r1.w, r1.w, l(1.000000012E-007)
mul r3.x, r3.x, l(0.318309873)
div r1.w, r3.x, r1.w
mad r3.x, -r1.z, r1.z, l(1.000000)
mad r3.y, |r0.w|, r3.x, r2.w
max r3.z, r1.x, l(0.000000)
max r1.x, -r1.x, l(0.000000)
add r1.x, r1.x, r3.z
min r3.w, r3.z, l(1.000000)
mad r2.w, r3.w, r3.x, r2.w
mul r2.w, |r0.w|, r2.w
add r0.w, -|r0.w|, l(1.000000)
mad r2.w, r3.w, r3.y, r2.w
add r2.w, r2.w, l(0.000010)
div r2.w, l(0.500000), r2.w
mul r1.w, r1.w, r2.w
mul r1.w, r3.w, r1.w
mul r1.w, r1.w, l(3.14159274)
max r1.w, r1.w, l(0.000000)
mul r3.xyw, r0.xyxz, r1.wwww
add r1.w, -r1.y, l(1.000000)
mul r2.w, r1.w, r1.w
mul r2.w, r2.w, r2.w
mul r1.w, r1.w, r2.w
mad r1.w, r1.w, l(0.960000), l(0.040000)
mul r3.xyw, r1.wwww, r3.xyxw
add r1.w, r1.y, r1.y
mul r1.y, r1.y, r1.w
mad r1.y, r1.y, r1.z, l(-0.500000)
mul r1.z, r0.w, r0.w
mul r1.z, r1.z, r1.z
mul r0.w, r0.w, r1.z
mad r0.w, r1.y, r0.w, l(1.000000)
add r1.z, -r3.z, l(1.000000)
mul r1.w, r1.z, r1.z
mul r1.w, r1.w, r1.w
mul r1.z, r1.z, r1.w
mad r1.y, r1.y, r1.z, l(1.000000)
mul r0.w, r0.w, r1.y
mad r0.w, r0.w, r3.z, r1.x
mul r0.xyz, r0.xyzx, r0.wwww
mul r0.xyz, r2.xyzx, r0.xyzx
mad o0.xyz, r0.xyzx, cb0[11].xxxx, r3.xywx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used