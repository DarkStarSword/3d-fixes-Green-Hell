// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed dbce0575e9f3a534-ds.txt
// 3DMigoto: dbce0575e9f3a534 |    Unity headers extracted from NatureManufacture Shaders_Water_Water Swamp Tesseled Vertex Color Flow
//    Shader "NatureManufacture Shaders/Water/Water Swamp Tesseled Vertex Color Flow" {
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//        Pass 3/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "dp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from NatureManufacture Shaders_Water_Water Swamp Tesseled Vertex Color Flow:
//   API d3d11
//   Shader model ds_5_0
//   undeciphered1: 201802150 85 0 0
//   undeciphered1a: 4
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 1 4 1 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 384
//   Float 64 [_WaterTessScale]
//   ScalarInt 68 [_UVVDirection1UDirection0]
//   Vector 72 [_WaterMixSpeed] 2
//   Vector 80 [_WaterNormal_ST]
//   Float 96 [_GlobalTiling]
//   Vector 100 [_WaterMainSpeed] 2
//   Float 348 [_TessPhongStrength]
//   Vector 352 [_texcoord_ST]
//   Vector 368 [_texcoord4_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityPerDraw" 176
//   Vector 144 [unity_WorldTransformParams]
//   Matrix 0 [unity_ObjectToWorld]
//   Matrix 64 [unity_WorldToObject]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 272 [unity_MatrixVP]
//   SetTexture 0 [_WaterTesselation] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:18:46 2019
//
//
// Patch Constant signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TessFactor            0   x           0  TRIEDGE   float
// SV_TessFactor            1   x           1  TRIEDGE   float
// SV_TessFactor            2   x           2  TRIEDGE   float
// SV_InsideTessFactor      0   x           3   TRIINT   float
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// INTERNALTESSPOS          0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xy
// TEXCOORD                 1   xyzw        4     NONE   float
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float   xy
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
ds_5_0
dcl_input_control_point_count 3
dcl_tessellator_domain domain_tri
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[24], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[10], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input vDomain.xyz
dcl_input vicp[3][0].xyzw
dcl_input vicp[3][1].xyzw
dcl_input vicp[3][2].xyz
dcl_input vicp[3][3].xy
dcl_input vicp[3][6].xy
dcl_input vicp[3][7].xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 5

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw

dp3 r0.x, vicp[1][0].xyzx, vicp[1][2].xyzx
mul r1.xyzw, vDomain.yyyy, vicp[1][0].xyzw
mad r1.xyzw, vicp[0][0].xyzw, vDomain.xxxx, r1.xyzw
mad r1.xyzw, vicp[2][0].xyzw, vDomain.zzzz, r1.xyzw
dp3 r0.y, r1.xyzx, vicp[1][2].xyzx
add r0.x, -r0.x, r0.y
mad r0.xyz, -vicp[1][2].xyzx, r0.xxxx, r1.xyzx
mul r0.xyz, r0.xyzx, vDomain.yyyy
dp3 r0.w, vicp[0][0].xyzx, vicp[0][2].xyzx
dp3 r2.x, r1.xyzx, vicp[0][2].xyzx
add r0.w, -r0.w, r2.x
mad r2.xyz, -vicp[0][2].xyzx, r0.wwww, r1.xyzx
mad r0.xyz, r2.xyzx, vDomain.xxxx, r0.xyzx
dp3 r0.w, vicp[2][0].xyzx, vicp[2][2].xyzx
dp3 r2.x, r1.xyzx, vicp[2][2].xyzx
add r0.w, -r0.w, r2.x
mad r2.xyz, -vicp[2][2].xyzx, r0.wwww, r1.xyzx
mad r0.xyz, r2.xyzx, vDomain.zzzz, r0.xyzx
add r0.w, -cb0[21].w, l(1.000000)
mul r1.xyz, r1.xyzx, r0.wwww
mad r0.xyz, cb0[21].wwww, r0.xyzx, r1.xyzx
mad r0.w, cb1[0].y, l(0.045000), l(0.500000)
frc r0.w, r0.w
mul r1.xy, vDomain.yyyy, vicp[1][6].xyxx
mad r1.xy, vicp[0][6].xyxx, vDomain.xxxx, r1.xyxx
mad r1.xy, vicp[2][6].xyxx, vDomain.zzzz, r1.xyxx
itof r1.z, cb0[4].y
eq r1.z, r1.z, l(1.000000)
movc r2.xy, r1.zzzz, cb0[6].yzyy, cb0[6].zyzz
movc r2.zw, r1.zzzz, cb0[4].zzzw, cb0[4].wwwz
mul r2.xy, r1.xyxx, r2.xyxx
mad o1.zw, r1.xxxy, cb0[23].xxxy, cb0[23].zzzw
mul r1.xy, vDomain.yyyy, vicp[1][3].xyxx
mad r1.xy, vicp[0][3].xyxx, vDomain.xxxx, r1.xyxx
mad r1.xy, vicp[2][3].xyxx, vDomain.zzzz, r1.xyxx
mad r3.xy, r1.xyxx, cb0[5].xyxx, cb0[5].zwzz
mad o1.xy, r1.xyxx, cb0[22].xyxx, cb0[22].zwzz
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[6].x
mul r1.xy, r1.xxxx, r3.xyxx
mad r3.xy, r2.xyxx, r0.wwww, r1.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.xyzw, s0, l(1.000000)
mul r1.z, cb1[0].y, l(0.045000)
frc r1.z, r1.z
mad r2.xy, r2.xyxx, r1.zzzz, r1.xyxx
mad r1.xy, cb1[0].yyyy, r2.zwzz, r1.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t0.wxyz, s0, l(1.000000)
add r1.y, r1.z, l(-0.500000)
add r1.y, r1.y, r1.y
sample_l_indexable(texture2d)(float,float,float,float) r1.z, r2.xyxx, t0.xywz, s0, l(1.000000)
add r0.w, r0.w, -r1.z
mad r0.w, |r1.y|, r0.w, r1.z
mul r0.w, r0.w, cb0[4].x
mad r0.w, cb0[4].x, r1.x, r0.w
mul r1.xyz, vDomain.yyyy, vicp[1][2].xyzx
mad r1.xyz, vicp[0][2].xyzx, vDomain.xxxx, r1.xyzx
mad r1.xyz, vicp[2][2].xyzx, vDomain.zzzz, r1.xyzx
mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
mul r2.xyzw, r0.yyyy, cb2[1].xyzw
mad r2.xyzw, cb2[0].xyzw, r0.xxxx, r2.xyzw
mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r2.xyzw
add r2.xyzw, r0.xyzw, cb2[3].xyzw
mad o5.xyz, cb2[3].xyzx, r1.wwww, r0.xyzx
mul r0.xyzw, r2.yyyy, cb3[18].xyzw
mad r0.xyzw, cb3[17].xyzw, r2.xxxx, r0.xyzw
mad r0.xyzw, cb3[19].xyzw, r2.zzzz, r0.xyzw
mad r0.xyzw, cb3[20].xyzw, r2.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed dbce0575e9f3a534-ds.txt
ne r4.w, r0.w, l(1.0)
if_nz r4.w
  add r4.w, r0.w, -r4.y
  mad r0.x, r4.w, r4.x, r0.x
endif

dp3 r2.y, r1.xyzx, cb2[4].xyzx
dp3 r2.z, r1.xyzx, cb2[5].xyzx
dp3 r2.x, r1.xyzx, cb2[6].xyzx
dp3 r1.x, r2.xyzx, r2.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, r2.xyzx
mov o2.z, r1.y
mul r2.xyzw, vDomain.yyyy, vicp[1][1].xyzw
mad r2.xyzw, vicp[0][1].xyzw, vDomain.xxxx, r2.xyzw
mad r2.xyzw, vicp[2][1].xyzw, vDomain.zzzz, r2.xyzw
mul r3.xyz, r2.yyyy, cb2[1].yzxy
mad r3.xyz, cb2[0].yzxy, r2.xxxx, r3.xyzx
mad r2.xyz, cb2[2].yzxy, r2.zzzz, r3.xyzx
mul r1.w, r2.w, cb2[9].w
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mul r3.xyz, r1.xyzx, r2.xyzx
mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
mul r3.xyz, r1.wwww, r3.xyzx
mov o2.y, r3.x
mov o2.x, r2.z
mov o3.x, r2.x
mov o4.x, r2.y
mov o3.z, r1.z
mov o4.z, r1.x
mov o3.y, r3.y
mov o4.y, r3.z
mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o6.zw, r0.zzzw
add o6.xy, r1.zzzz, r1.xwxx
mul r0.xyzw, vDomain.yyyy, vicp[1][7].xyzw
mad r0.xyzw, vicp[0][7].xyzw, vDomain.xxxx, r0.xyzw
mad o7.xyzw, vicp[2][7].xyzw, vDomain.zzzz, r0.xyzw
ret
// Approximately 0 instruction slots used