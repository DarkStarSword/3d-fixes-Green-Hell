// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e575191b7bf8a172-ps.txt
// 3DMigoto: e575191b7bf8a172 |    Unity headers extracted from NatureManufacture Shaders_Water_Water River
//    Shader "NatureManufacture Shaders/Water/Water River" {
//      SubShader 1/1 {
//        Tags { "IsEmissive"="true" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//        Pass 3/5 {
//          Name "FORWARD"
//          Tags { "IsEmissive"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from NatureManufacture Shaders_Water_Water River:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 275 15 2
//   undeciphered1a: 10
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 10 4 10 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 480
//   Vector 32 [_LightColor0]
//   Float 64 [_NormalScale]
//   ScalarInt 68 [_UVVDirection1UDirection0]
//   Vector 72 [_WaterMixSpeed] 2
//   Vector 80 [_WaterNormal_ST]
//   Float 96 [_GlobalTiling]
//   Vector 100 [_WaterMainSpeed] 2
//   Float 108 [_SmallCascadeNormalScale]
//   Vector 112 [_SmallCascadeMixSpeed] 2
//   Vector 128 [_SmallCascadeNormal_ST]
//   Vector 144 [_SmallCascadeMainSpeed] 2
//   Float 152 [_SmallCascadeAngle]
//   Float 156 [_SmallCascadeAngleFalloff]
//   Float 160 [_BigCascadeAngle]
//   Float 164 [_BigCascadeAngleFalloff]
//   Float 168 [_BigCascadeNormalScale]
//   Vector 176 [_BigCascadeMixSpeed] 2
//   Vector 192 [_BigCascadeNormal_ST]
//   Vector 208 [_BigCascadeMainSpeed] 2
//   Float 216 [_Distortion]
//   Vector 224 [_DeepColor]
//   Vector 240 [_ShalowColor]
//   Float 256 [_ShalowDepth]
//   Float 260 [_ShalowFalloff]
//   Float 264 [_BigCascadeTransparency]
//   Vector 272 [_FoamColor] 3
//   Float 284 [_FoamDepth]
//   Float 288 [_FoamFalloff]
//   Vector 292 [_FoamSpeed] 2
//   Vector 304 [_Foam_ST]
//   Vector 320 [_NoiseSpeed] 2
//   Vector 336 [_Noise_ST]
//   Float 352 [_SmallCascadeNoisePower]
//   Vector 356 [_SmallCascadeColor] 3
//   Float 368 [_SmallCascadeFoamFalloff]
//   Float 372 [_BigCascadeNoisePower]
//   Vector 384 [_BigCascadeColor] 3
//   Float 396 [_BigCascadeFoamFalloff]
//   Float 408 [_WaterSpecularFar]
//   Float 412 [_WaterSpecularClose]
//   Float 416 [_WaterSpecularThreshold]
//   Float 420 [_FoamSpecular]
//   Float 424 [_SmallCascadeSpecular]
//   Float 428 [_BigCascadeSpecular]
//   Float 432 [_WaterSmoothness]
//   Float 436 [_FoamSmoothness]
//   Float 440 [_SmallCascadeSmoothness]
//   Float 444 [_BigCascadeSmoothness]
//   Float 452 [_WaterDepth]
//   Float 456 [_WaterFalloffBorder]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 16 [_SinTime]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_WaterNormal] 2D 1
//   SetTexture 1 [_SmallCascadeNormal] 2D 2
//   SetTexture 2 [_BigCascadeNormal] 2D 3
//   SetTexture 3 [_WaterGrab] 2D 4
//   SetTexture 4 [_CameraDepthTexture] 2D 5
//   SetTexture 5 [_Foam] 2D 6
//   SetTexture 6 [_SmallCascade] 2D 7
//   SetTexture 7 [_Noise] 2D 8
//   SetTexture 8 [_BigCascade] 2D 9
//   SetTexture 9 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:23:22 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[29], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyw
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e575191b7bf8a172-ps.txt

mul r10.w, -r10.x, r10.y
mad r11.xyz, -r10.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, r11.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
mad r2.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[6].x
mul r2.xy, r1.wwww, r2.xyxx
itof r2.z, cb0[4].y
eq r2.z, r2.z, l(1.000000)
movc r3.xy, r2.zzzz, cb0[4].zwzz, cb0[4].wzww
mad r3.xy, cb1[0].yyyy, r3.xyxx, r2.xyxx
movc r3.zw, r2.zzzz, cb0[6].yyyz, cb0[6].zzzy
mad r2.xy, cb1[0].yyyy, r3.zwzz, r2.xyxx
sample r3.xyzw, r3.xyxx, t0.xyzw, s1
mul r2.w, cb0[4].x, l(1.200000)
mul r3.x, r3.w, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.zw, r2.wwww, r3.xxxy
dp2 r3.z, r3.zwzz, r3.zwzz
min r3.z, r3.z, l(1.000000)
add r3.z, -r3.z, l(1.000000)
sample r4.xyzw, r2.xyxx, t0.xyzw, s1
mul r4.x, r4.w, r4.x
mad r2.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, cb0[4].xxxx
dp2 r3.w, r2.xyxx, r2.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r3.zw, r3.zzzw
mad r4.xy, r3.xyxx, r2.wwww, r2.xyxx
mul r4.z, r3.w, r3.z
dp3 r2.x, r4.xyzx, r4.xyzx
rsq r2.x, r2.x
mul r2.xyw, r2.xxxx, r4.xyxz
mad r3.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
mul r3.xy, r1.wwww, r3.xyxx
movc r3.zw, r2.zzzz, cb0[7].xxxy, cb0[7].yyyx
mad r3.zw, cb1[0].yyyy, r3.zzzw, r3.xxxy
movc r4.xy, r2.zzzz, cb0[9].xyxx, cb0[9].yxyy
mad r3.xy, cb1[0].yyyy, r4.xyxx, r3.xyxx
mov_sat r4.x, v3.z
mul r4.y, cb0[9].z, l(0.0222222228)
mad r4.z, -cb0[9].z, l(0.0222222228), l(1.000000)
add r4.z, -r4.z, r4.x
max r4.z, r4.z, l(0.000000)
min r4.z, r4.z, l(2.000000)
div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), r4.y
mul_sat r4.y, r4.y, r4.z
mul r4.z, cb0[10].x, l(0.0222222228)
mad r4.w, -cb0[10].x, l(0.0222222228), l(1.000000)
add r4.x, -r4.w, r4.x
max r4.x, r4.x, l(0.000000)
min r4.x, r4.x, l(2.000000)
div r4.z, l(1.000000, 1.000000, 1.000000, 1.000000), r4.z
mul_sat r4.x, r4.z, r4.x
add r4.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
log r4.x, r4.x
mul r4.x, r4.x, cb0[10].y
exp r4.x, r4.x
min r4.x, r4.x, l(1.000000)
log r4.y, r4.y
mul r4.y, r4.y, cb0[9].w
exp r4.y, r4.y
add_sat r4.y, -r4.x, r4.y
sample r5.xyzw, r3.zwzz, t1.xyzw, s2
mul r5.x, r5.w, r5.x
mad r3.zw, r5.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r4.zw, r3.zzzw, cb0[6].wwww
dp2 r4.z, r4.zwzz, r4.zwzz
min r4.z, r4.z, l(1.000000)
add r4.z, -r4.z, l(1.000000)
sample r5.xyzw, r3.xyxx, t1.xyzw, s2
mul r5.x, r5.w, r5.x
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r5.xy, r5.xyxx, cb0[6].wwww
dp2 r4.w, r5.xyxx, r5.xyxx
min r4.w, r4.w, l(1.000000)
add r4.w, -r4.w, l(1.000000)
sqrt r4.zw, r4.zzzw
mad r5.xy, r3.zwzz, cb0[6].wwww, r5.xyxx
mul r5.z, r4.w, r4.z
dp3 r3.z, r5.xyzx, r5.xyzx
rsq r3.z, r3.z
mad r5.xyz, r5.xyzx, r3.zzzz, -r2.xywx
mad r2.xyw, r4.yyyy, r5.xyxz, r2.xyxw
mad r3.zw, v1.xxxy, cb0[12].xxxy, cb0[12].zzzw
mul r3.zw, r1.wwww, r3.zzzw
movc r4.zw, r2.zzzz, cb0[11].xxxy, cb0[11].yyyx
mad r4.zw, cb1[0].yyyy, r4.zzzw, r3.zzzw
movc r5.xy, r2.zzzz, cb0[13].xyxx, cb0[13].yxyy
mad r3.zw, cb1[0].yyyy, r5.xxxy, r3.zzzw
sample r5.xyzw, r4.zwzz, t2.xyzw, s3
mul r5.x, r5.w, r5.x
mad r4.zw, r5.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r5.xy, r4.zwzz, cb0[10].zzzz
dp2 r5.x, r5.xyxx, r5.xyxx
min r5.x, r5.x, l(1.000000)
add r5.x, -r5.x, l(1.000000)
sample r6.xyzw, r3.zwzz, t2.xyzw, s3
mul r6.x, r6.w, r6.x
mad r5.yz, r6.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
mul r5.yz, r5.yyzy, cb0[10].zzzz
dp2 r5.w, r5.yzyy, r5.yzyy
min r5.w, r5.w, l(1.000000)
add r5.w, -r5.w, l(1.000000)
sqrt r5.xw, r5.xxxw
mad r6.xy, r4.zwzz, cb0[10].zzzz, r5.yzyy
mul r6.z, r5.w, r5.x
dp3 r4.z, r6.xyzx, r6.xyzx
rsq r4.z, r4.z
mad r5.xyz, r6.xyzx, r4.zzzz, -r2.xywx
mad r2.xyw, r4.xxxx, r5.xyxz, r2.xyxw
add r5.xyw, v6.wxww, l(9.999999960E-012, 0.000000, 0.000000, 9.999999960E-012)
mul r4.z, r5.x, l(0.500000)
mad r4.w, -r5.x, l(0.500000), v6.y
mad r5.z, -r4.w, cb1[5].x, r4.z
div r5.yzw, r5.yyzw, r5.xxxx
div r4.zw, r5.yyyz, r5.wwww
mad r4.zw, r2.xxxy, cb0[13].zzzz, r4.zzzw
sample r6.xyzw, r4.zwzz, t3.xyzw, s4
div r4.zw, v6.xxxy, r5.xxxx
sample r7.xyzw, r4.zwzz, t4.xyzw, s5
mad r4.z, cb1[7].z, r7.x, cb1[7].w
div r4.z, l(1.000000, 1.000000, 1.000000, 1.000000), r4.z
add r4.z, -r5.x, r4.z
add r4.w, |r4.z|, cb0[16].x
log r4.w, r4.w
mul r4.w, r4.w, cb0[16].y
exp r4.w, r4.w
mul r5.x, r4.x, cb0[16].z
add r5.y, -r4.w, l(100.000000)
mad_sat r4.w, r5.x, r5.y, r4.w
add r5.xyz, -cb0[14].xyzx, cb0[15].xyzx
mad r5.xyz, r4.wwww, r5.xyzx, cb0[14].xyzx
add r5.w, |r4.z|, cb0[17].w
log r5.w, r5.w
mul r5.w, r5.w, cb0[18].x
exp r5.w, r5.w
min r5.w, r5.w, l(1.000000)
mad r7.xy, v1.xyxx, cb0[19].xyxx, cb0[19].zwzz
movc r7.zw, r2.zzzz, cb0[18].yyyz, cb0[18].zzzy
mul r7.xy, r1.wwww, r7.xyxx
mad r7.xy, cb1[0].yyyy, r7.zwzz, r7.xyxx
sample r7.xyzw, r7.xyxx, t5.xyzw, s6
mul r6.w, r5.w, r7.w
add r7.xyz, -r5.xyzx, cb0[17].xyzx
mad r7.xyz, r6.wwww, r7.xyzx, r5.xyzx
add r7.xyz, -r6.xyzx, r7.xyzx
mad r6.xyz, r5.wwww, r7.xyzx, r6.xyzx
add r5.w, -r4.w, l(1.000000)
add r5.xyz, r5.xyzx, -r6.xyzx
mad r5.xyz, r5.wwww, r5.xyzx, r6.xyzx
sample r7.xyzw, r3.xyxx, t6.xyzw, s7
movc r3.xy, r2.zzzz, cb0[20].xyxx, cb0[20].yxyy
mad r6.xy, v1.xyxx, cb0[21].xyxx, cb0[21].zwzz
mul r6.xy, r1.wwww, r6.xyxx
mul r7.xy, r3.xyxx, cb1[1].xxxx
mad r7.xy, r7.xyxx, l(-1.200000, -0.900000, 0.000000, 0.000000), r6.xyxx
sample r8.xyzw, r7.xyxx, t7.xyzw, s8
mad r3.xy, r3.xyxx, cb1[1].xxxx, r6.xyxx
sample r9.xyzw, r3.xyxx, t7.xyzw, s8
min r1.w, r8.w, r9.w
log r1.w, r1.w
mul r1.w, r1.w, cb0[22].x
exp r1.w, r1.w
mul r1.w, r1.w, l(20.000000)
min r1.w, r1.w, l(1.000000)
mul r1.w, r7.w, r1.w
log r2.z, r7.w
mul r2.z, r2.z, cb0[23].x
exp r2.z, r2.z
min r2.z, r2.z, l(1.000000)
mul r2.z, r2.z, r4.y
mad r6.xyz, r1.wwww, cb0[22].yzwy, -r5.xyzx
mad r5.xyz, r2.zzzz, r6.xyzx, r5.xyzx
sample r7.xyzw, r3.zwzz, t8.xyzw, s9
add r3.xy, r3.xyxx, l(-0.470000, 0.370000, 0.000000, 0.000000)
sample r3.xyzw, r3.xyxx, t7.xyzw, s8
min r1.w, r3.w, r8.w
log r1.w, r1.w
mul r1.w, r1.w, cb0[23].y
exp r1.w, r1.w
mul r1.w, r1.w, l(20.000000)
min r1.w, r1.w, l(1.000000)
mul r3.x, r7.w, l(0.500000)
mad r1.w, r1.w, r3.x, r3.x
log r3.x, r7.w
mul r3.x, r3.x, cb0[24].w
exp r3.x, r3.x
min r3.x, r3.x, l(1.000000)
mul r3.x, r3.x, r4.x
mad r3.yzw, r1.wwww, cb0[24].xxyz, -r5.xxyz
mad r3.yzw, r3.xxxx, r3.yyzw, r5.xxyz
log r1.w, r4.w
mul r1.w, r1.w, cb0[26].x
exp r1.w, r1.w
add r4.w, -cb0[25].z, cb0[25].w
mad r1.w, r1.w, r4.w, cb0[25].z
add r4.w, -r1.w, cb0[26].y
mad r1.w, r6.w, r4.w, r1.w
mul r2.z, r4.y, r2.z
add r4.y, -r1.w, cb0[26].z
mad r1.w, r2.z, r4.y, r1.w
mul r3.x, r4.x, r3.x
add r4.x, -r1.w, cb0[26].w
mad r1.w, r3.x, r4.x, r1.w
add r4.x, -cb0[27].x, cb0[27].y
mad r4.x, r6.w, r4.x, cb0[27].x
add r4.y, -r4.x, cb0[27].z
mad r2.z, r2.z, r4.y, r4.x
add r4.x, -r2.z, cb0[27].w
mad r2.z, r3.x, r4.x, r2.z
log r3.x, |r4.z|
mul r3.x, r3.x, cb0[28].y
exp r3.x, r3.x
min r3.x, r3.x, l(1.000000)
log r3.x, r3.x
mul r3.x, r3.x, cb0[28].z
exp o0.w, r3.x
eq r3.x, cb3[0].x, l(1.000000)
if_nz r3.x
  eq r3.x, cb3[0].y, l(1.000000)
  mul r4.xyz, v5.yyyy, cb3[2].xyzx
  mad r4.xyz, cb3[1].xyzx, v5.xxxx, r4.xyzx
  mad r4.xyz, cb3[3].xyzx, v5.zzzz, r4.xyzx
  add r4.xyz, r4.xyzx, cb3[4].xyzx
  movc r4.xyz, r3.xxxx, r4.xyzx, v5.xyzx
  add r4.xyz, r4.xyzx, -cb3[6].xyzx
  mul r4.yzw, r4.xxyz, cb3[5].xxyz
  mad r3.x, r4.y, l(0.250000), l(0.750000)
  mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
  max r4.x, r3.x, r4.y
  sample r4.xyzw, r4.xzwx, t9.xyzw, s0
else
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r3.x, r4.xyzw, cb2[46].xyzw
dp3 r4.x, v2.xyzx, r2.xywx
dp3 r4.y, v3.xyzx, r2.xywx
dp3 r4.z, v4.xyzx, r2.xywx
dp3 r2.x, r4.xyzx, r4.xyzx
rsq r2.x, r2.x
mul r2.xyw, r2.xxxx, r4.xyxz
mul r4.xyz, r3.xxxx, cb0[2].xyzx
max r3.x, r1.w, r1.w
max r3.x, r1.w, r3.x
add r3.x, -r3.x, l(1.000000)
mul r3.xyz, r3.xxxx, r3.yzwy
add r2.z, -r2.z, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r2.xywx, r1.xyzx
dp3_sat r1.x, r2.xywx, cb2[0].xyzx
dp3_sat r1.y, r2.xywx, r0.xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r2.zzzz
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.x, l(1.000000)
mul r1.z, r0.z, r0.z
mul r1.z, r1.z, r1.z
mul r0.z, r0.z, r1.z
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.z, -|r0.w|, l(1.000000)
mul r2.x, r1.z, r1.z
mul r2.x, r2.x, r2.x
mul r1.z, r1.z, r2.x
mad r0.y, r0.y, r1.z, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r2.z, r2.z
max r0.z, r0.z, l(0.002000)
add r1.z, -r0.z, l(1.000000)
mad r2.x, |r0.w|, r1.z, r0.z
mad r1.z, r1.x, r1.z, r0.z
mul r0.w, |r0.w|, r1.z
mad r0.w, r1.x, r2.x, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.z, r1.y, r0.z, -r1.y
mad r1.y, r1.z, r1.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.y, r1.y, r1.y, l(1.000000012E-007)
div r0.z, r0.z, r1.y
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r1.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r1.wwww, r1.wwww
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r4.xyzx
mul r0.yzw, r4.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r2.x, r0.x, r0.x
mul r2.x, r2.x, r2.x
mul r0.x, r0.x, r2.x
add r2.x, -r1.w, l(1.000000)
mad r0.x, r2.x, r0.x, r1.w
mul r0.xyz, r0.xxxx, r0.yzwy
mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
ret
// Approximately 0 instruction slots used