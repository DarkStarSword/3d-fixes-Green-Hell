// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e9d5d19211d38529-ps.txt
// 3DMigoto: e9d5d19211d38529 |    Unity headers extracted from Amplify_mud_buildings_rain
//    Shader "Amplify/mud_buildings_rain" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_mud_buildings_rain:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 201802150 237 9 6
//   undeciphered1a: 13
//   Keywords { "DIRECTIONAL" "INSTANCING_ON" "_INVERTMASK_ON" }
//   undeciphered2: 1 11 7 10 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 144
//   Vector 32 [_LightColor0]
//   Float 64 [_Tilingdetail]
//   Float 68 [_Tilingdetail2]
//   Float 72 [_MaskContrast]
//   Float 76 [_cracknrmpower]
//   Float 80 [_cracktilling]
//   Float 84 [_splaszczenienrm]
//   Float 88 [TERRAIN_RainIntensity]
//   Float 92 [TERRAIN_GlobalWetness]
//   Float 96 [_AlbedoVariabletilling]
//   Float 100 [_variablepower]
//   Vector 112 [_AlbedoColor]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   ConstBuffer "UnityDrawCallInfo" 16
//   ScalarInt 0 [unity_BaseInstanceID]
//   ConstBuffer "UnityInstancing_Amplifymud_buildings_rain" 32
//   Struct 0 [Amplifymud_buildings_rainArray] 2 16
//   Float 0 [_dry_smoothness]
//   Float 4 [_culling_mode]
//   SetTexture 0 [_mask] 2D 4
//   SetTexture 1 [_nrm1] 2D 2
//   SetTexture 2 [_nrm2] 2D 3
//   SetTexture 3 [_cracknrm] 2D 5
//   SetTexture 4 [_TextureSample11] 2D 6
//   SetTexture 5 [_Albedovariable] 2D 7
//   SetTexture 6 [_albedo1] 2D 8
//   SetTexture 7 [_albedo2] 2D 9
//   SetTexture 8 [unity_SpecCube0] CUBE 0
//   SetTexture 9 [unity_SpecCube1] CUBE -1
//   SetTexture 10 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//   BindCB "UnityProbeVolume" 4
//   BindCB "UnityDrawCallInfo" 5
//   BindCB "UnityInstancing_Amplifymud_buildings_rain" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:25:28 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 6   xyzw        5     NONE   float
// TEXCOORD                 7   xyzw        6     NONE   float
// SV_InstanceID            0   x           7     NONE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_constantbuffer cb6[2], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_resource_texturecube (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps constant v7.x
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e9d5d19211d38529-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

iadd r0.x, v7.x, cb5[0].x
mov r1.x, v2.w
mov r1.y, v3.w
mov r1.z, v4.w
add r0.yzw, -r1.xxyz, r14.xxyz
dp3 r1.w, r0.yzwy, r0.yzwy
rsq r1.w, r1.w
mul r2.xyz, r0.yzwy, r1.wwww
mul r3.xyzw, v1.xyxy, cb0[4].xxyy
sample_indexable(texture2d)(float,float,float,float) r2.w, v1.xyxx, t0.yzwx, s4
mad r2.w, -r2.w, cb0[4].z, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xyxx, t1.xywz, s2
mul r4.x, r4.z, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r4.xyxx, r4.xyxx
min r4.w, r4.w, l(1.000000)
add r4.w, -r4.w, l(1.000000)
sqrt r4.z, r4.w
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r3.zwzz, t2.xywz, s3
mul r5.x, r5.z, r5.x
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r5.xyxx, r5.xyxx
min r4.w, r4.w, l(1.000000)
add r4.w, -r4.w, l(1.000000)
sqrt r5.z, r4.w
add r5.xyz, -r4.xyzx, r5.xyzx
mad r4.xyz, r2.wwww, r5.xyzx, r4.xyzx
mul r5.xy, v1.xyxx, cb0[5].xxxx
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyxx, t3.xywz, s5
mul r5.x, r5.z, r5.x
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r5.zw, r5.xxxy, cb0[4].wwww
dp2 r4.w, r5.zwzz, r5.zwzz
min r4.w, r4.w, l(1.000000)
add r4.w, -r4.w, l(1.000000)
sqrt r4.w, r4.w
mad r5.xy, r5.xyxx, cb0[4].wwww, r4.xyxx
mul r5.z, r4.w, r4.z
dp3 r4.x, r5.xyzx, r5.xyzx
rsq r4.x, r4.x
mul r4.yzw, r4.xxxx, r5.xxyz
mad r5.xyz, -r5.xyzx, r4.xxxx, l(0.490196109, 0.490196109, 1.000000, 0.000000)
mad r5.xyz, cb0[5].yyyy, r5.xyzx, r4.yzwy
mul r4.x, v2.w, l(1.800000)
frc r6.x, r4.x
mul r4.x, v4.w, l(1.800000)
frc r6.y, r4.x
mul r4.x, cb1[0].y, l(0.625000)
ge r5.w, r4.x, -r4.x
frc r4.x, |r4.x|
movc r4.x, r5.w, r4.x, -r4.x
mul r4.x, r4.x, l(64.000000)
round_ne r4.x, r4.x
lt r5.w, r4.x, l(0.000000)
and r5.w, r5.w, l(0x42800000)
add r4.x, r4.x, r5.w
mul r5.w, r4.x, l(0.125000)
ge r6.z, r5.w, -r5.w
frc r5.w, |r5.w|
movc r5.w, r6.z, r5.w, -r5.w
mul r5.w, r5.w, l(8.000000)
round_ne r5.w, r5.w
mul r7.x, r5.w, l(0.125000)
add r4.x, r4.x, -r5.w
mul r4.x, r4.x, l(0.015625)
ge r5.w, r4.x, -r4.x
frc r4.x, |r4.x|
movc r4.x, r5.w, r4.x, -r4.x
mul r4.x, r4.x, l(8.000000)
round_ne r4.x, r4.x
add r4.x, -r4.x, l(7.000000)
mul r7.y, r4.x, l(0.125000)
mad r6.xy, r6.xyxx, l(0.125000, 0.125000, 0.000000, 0.000000), r7.xyxx
mov_sat r4.x, v3.z
add r4.x, -r4.x, l(1.000000)
mul r5.w, r4.x, l(-2.000000)
mad_sat r6.z, r4.x, l(-2.000000), l(1.350000)
add r6.w, cb0[5].w, cb0[5].w
max r6.w, r6.w, l(0.000000)
min r7.xy, r6.wwww, l(1.000000, 0.200000, 0.000000, 0.000000)
mul r6.z, r6.z, r7.x
sample_indexable(texture2d)(float,float,float,float) r6.xyw, r6.xyxx, t4.xyzw, s6
mul r6.x, r6.w, r6.x
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r7.zw, r6.xxxy, cb0[5].zzzz
dp2 r6.w, r7.zwzz, r7.zwzz
min r6.w, r6.w, l(1.000000)
add r6.w, -r6.w, l(1.000000)
sqrt r6.w, r6.w
mad r8.xy, r6.xyxx, cb0[5].zzzz, r5.xyxx
mul r8.z, r5.z, r6.w
dp3 r5.x, r8.xyzx, r8.xyzx
rsq r5.x, r5.x
mad r5.xyz, r8.xyzx, r5.xxxx, -r4.yzwy
mad r4.yzw, r6.zzzz, r5.xxyz, r4.yyzw
mul r5.xy, v1.xyxx, cb0[6].xxxx
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyxx, t5.xyzw, s7
add r5.xyz, r5.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r5.xyz, cb0[6].yyyy, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r6.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r5.xyz, r2.wwww, r6.xyzx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r3.xyxx, t6.xyzw, s8
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t7.xyzw, s9
add r3.xyz, -r6.xyzx, r3.xyzx
mad r3.xyz, r2.wwww, r3.xyzx, r6.xyzx
mul r3.xyz, r3.xyzx, cb0[7].xyzx
mul r3.xyz, r3.xyzx, r5.xyzx
mad r2.w, r7.x, l(2.000000), r5.w
max r2.w, r2.w, l(0.000000)
min r2.w, r2.w, l(0.450000)
mad r3.xyz, r2.wwww, -r3.xyzx, r3.xyzx
mul r2.w, r7.x, l(1.500000)
mad r2.w, r4.x, l(-2.000000), r2.w
max r0.x, r2.w, cb6[r0.x + 0].x
min r0.x, r0.x, l(0.800000)
eq r2.w, cb4[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb4[0].y, l(1.000000)
  mul r5.xyz, v3.wwww, cb4[2].xyzx
  mad r5.xyz, cb4[1].xyzx, v2.wwww, r5.xyzx
  mad r5.xyz, cb4[3].xyzx, v4.wwww, r5.xyzx
  add r5.xyz, r5.xyzx, cb4[4].xyzx
  movc r5.xyz, r2.wwww, r5.xyzx, r1.xyzx
  add r5.xyz, r5.xyzx, -cb4[6].xyzx
  mul r5.yzw, r5.xxyz, cb4[5].xxyz
  mad r2.w, r5.y, l(0.250000), l(0.750000)
  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
  max r5.x, r2.w, r3.w
  sample_indexable(texture3d)(float,float,float,float) r5.xyzw, r5.xzwx, t10.xyzw, s1
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
dp3 r5.x, v2.xyzx, r4.yzwy
dp3 r5.y, v3.xyzx, r4.yzwy
dp3 r5.z, v4.xyzx, r4.yzwy
dp3 r3.w, r5.xyzx, r5.xyzx
rsq r3.w, r3.w
mul r4.xyz, r3.wwww, r5.xyzx
add r3.w, -r0.x, l(1.000000)
dp3 r4.w, -r2.xyzx, r4.xyzx
add r4.w, r4.w, r4.w
mad r5.xyz, r4.xyzx, -r4.wwww, -r2.xyzx
mul r6.xyz, r2.wwww, cb0[2].xyzx
lt r2.w, l(0.000000), cb3[2].w
if_nz r2.w
  dp3 r2.w, r5.xyzx, r5.xyzx
  rsq r2.w, r2.w
  mul r7.xzw, r2.wwww, r5.xxyz
  add r8.xyz, -r1.xyzx, cb3[0].xyzx
  div r8.xyz, r8.xyzx, r7.xzwx
  add r9.xyz, -r1.xyzx, cb3[1].xyzx
  div r9.xyz, r9.xyzx, r7.xzwx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xzwx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r2.w, r8.y, r8.x
  min r2.w, r8.z, r2.w
  add r8.xyz, r1.xyzx, -cb3[2].xyzx
  mad r7.xzw, r7.xxzw, r2.wwww, r8.xxyz
else
  mov r7.xzw, r5.xxyz
endif
mad r2.w, -r3.w, l(0.700000), l(1.700000)
mul r2.w, r2.w, r3.w
mul r2.w, r2.w, l(6.000000)
sample_l_indexable(texturecube)(float,float,float,float) r8.xyzw, r7.xzwx, t8.xyzw, s0, r2.w
add r4.w, r8.w, l(-1.000000)
mad r4.w, cb3[3].w, r4.w, l(1.000000)
log r4.w, r4.w
mul r4.w, r4.w, cb3[3].y
exp r4.w, r4.w
mul r4.w, r4.w, cb3[3].x
mul r7.xzw, r8.xxyz, r4.wwww
lt r5.w, cb3[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb3[6].w
  if_nz r5.w
    dp3 r5.w, r5.xyzx, r5.xyzx
    rsq r5.w, r5.w
    mul r9.xyz, r5.wwww, r5.xyzx
    add r10.xyz, -r1.xyzx, cb3[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -r1.xyzx, cb3[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r5.w, r10.y, r10.x
    min r5.w, r10.z, r5.w
    add r1.xyz, r1.xyzx, -cb3[6].xyzx
    mad r5.xyz, r9.xyzx, r5.wwww, r1.xyzx
  endif
  sample_l_indexable(texturecube)(float,float,float,float) r5.xyzw, r5.xyzx, t9.xyzw, s0, r2.w
  add r1.x, r5.w, l(-1.000000)
  mad r1.x, cb3[7].w, r1.x, l(1.000000)
  log r1.x, r1.x
  mul r1.x, r1.x, cb3[7].y
  exp r1.x, r1.x
  mul r1.x, r1.x, cb3[7].x
  mul r1.xyz, r5.xyzx, r1.xxxx
  mad r5.xyz, r4.wwww, r8.xyzx, -r1.xyzx
  mad r7.xzw, cb3[1].wwww, r5.xxyz, r1.xxyz
endif
add r1.xyz, r3.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r1.xyz, r7.yyyy, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r2.w, -r7.y, l(0.960000), l(0.960000)
mul r3.xyz, r2.wwww, r3.xyzx
mad r0.yzw, r0.yyzw, r1.wwww, cb2[0].xxyz
dp3 r1.w, r0.yzwy, r0.yzwy
max r1.w, r1.w, l(0.001000)
rsq r1.w, r1.w
mul r0.yzw, r0.yyzw, r1.wwww
dp3 r1.w, r4.xyzx, r2.xyzx
dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
dp3_sat r2.y, r4.xyzx, r0.yzwy
dp3_sat r0.y, cb2[0].xyzx, r0.yzwy
mul r0.z, r0.y, r0.y
dp2 r0.z, r0.zzzz, r3.wwww
add r0.z, r0.z, l(-0.500000)
add r0.w, -r2.x, l(1.000000)
mul r2.z, r0.w, r0.w
mul r2.z, r2.z, r2.z
mul r0.w, r0.w, r2.z
mad r0.w, r0.z, r0.w, l(1.000000)
add r2.z, -|r1.w|, l(1.000000)
mul r4.x, r2.z, r2.z
mul r4.x, r4.x, r4.x
mul r2.z, r2.z, r4.x
mad r0.z, r0.z, r2.z, l(1.000000)
mul r0.z, r0.z, r0.w
mul r0.z, r2.x, r0.z
mul r0.w, r3.w, r3.w
mad r3.w, -r3.w, r3.w, l(1.000000)
mad r4.x, |r1.w|, r3.w, r0.w
mad r3.w, r2.x, r3.w, r0.w
mul r1.w, |r1.w|, r3.w
mad r1.w, r2.x, r4.x, r1.w
add r1.w, r1.w, l(0.000010)
div r1.w, l(0.500000), r1.w
mul r3.w, r0.w, r0.w
mad r4.x, r2.y, r3.w, -r2.y
mad r2.y, r4.x, r2.y, l(1.000000)
mul r3.w, r3.w, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r3.w, r2.y
mul r1.w, r1.w, r2.y
mul r1.w, r1.w, l(3.14159274)
mul r1.w, r2.x, r1.w
max r1.w, r1.w, l(0.000000)
mad r0.w, r0.w, r0.w, l(1.000000)
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
dp3 r2.x, r1.xyzx, r1.xyzx
ne r2.x, r2.x, l(0.000000)
and r2.x, r2.x, l(0x3f800000)
mul r1.w, r1.w, r2.x
add r0.x, r0.x, -r2.w
add_sat r0.x, r0.x, l(1.000000)
mul r2.xyw, r0.zzzz, r6.xyxz
mul r4.xyz, r6.xyzx, r1.wwww
add r0.y, -r0.y, l(1.000000)
mul r0.z, r0.y, r0.y
mul r0.z, r0.z, r0.z
mul r0.y, r0.y, r0.z
add r5.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r5.xyz, r5.xyzx, r0.yyyy, r1.xyzx
mul r4.xyz, r4.xyzx, r5.xyzx
mad r2.xyw, r3.xyxz, r2.xyxw, r4.xyxz
mul r0.yzw, r7.xxzw, r0.wwww
add r3.xyz, -r1.xyzx, r0.xxxx
mad r1.xyz, r2.zzzz, r3.xyzx, r1.xyzx
mad o0.xyz, r0.yzwy, r1.xyzx, r2.xywx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used