// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b2f51b9fa03f8082-ps.txt
// 3DMigoto: b2f51b9fa03f8082 | Matched 3 variants of 1 shaders: Shader Forge/CharacterSkin2
//
//       Unity headers extracted from Shader Forge_CharacterSkin2
//       Shader "Shader Forge/CharacterSkin2" {
//         CustomEditor "ShaderForgeMaterialInspector"
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           Tags { "RenderType"="Opaque" }
//           Pass 1/3 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDBASE" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Shader Forge_CharacterSkin2:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 155 3 4
//      undeciphered1a: 13
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 4:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//      undeciphered2: 1 5 5 4 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 176
//      Vector 32 [_LightColor0]
//      Vector 64 [_LightWrapping]
//      Float 80 [_Gloss]
//      Vector 96 [_albedo_ST]
//      Vector 112 [_NRm_ST]
//      Float 128 [_Gloss_copy]
//      Vector 144 [_Color]
//      Float 160 [_DEPTHS]
//      Float 164 [_NrmStr]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      ConstBuffer "UnityPerFrame" 368
//      Vector 0 [glstate_lightmodel_ambient]
//      ConstBuffer "UnityReflectionProbes" 128
//      Vector 0 [unity_SpecCube0_BoxMax]
//      Vector 16 [unity_SpecCube0_BoxMin]
//      Vector 32 [unity_SpecCube0_ProbePosition]
//      Vector 48 [unity_SpecCube0_HDR]
//      Vector 64 [unity_SpecCube1_BoxMax]
//      Vector 80 [unity_SpecCube1_BoxMin]
//      Vector 96 [unity_SpecCube1_ProbePosition]
//      Vector 112 [unity_SpecCube1_HDR]
//      SetTexture 0 [_NRm] 2D 3
//      SetTexture 1 [_ShadowMapTexture] 2D 1
//      SetTexture 2 [_albedo] 2D 2
//      SetTexture 3 [unity_SpecCube0] CUBE 0
//      SetTexture 4 [unity_SpecCube1] CUBE -1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityPerFrame" 3
//      BindCB "UnityReflectionProbes" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:59:49 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float
// TEXCOORD                 2   xy          2     NONE   float
// TEXCOORD                 3   xyzw        3     NONE   float   xyz
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// TEXCOORD                 5   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyz         6     NONE   float   xyz
// TEXCOORD                 7   xyzw        7     NONE   float     z
// TEXCOORD                 9   xyzw        8     NONE   float   xy w
// TEXCOORD                10   xyzw        9     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.z
dcl_input_ps linear v8.xyw
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b2f51b9fa03f8082-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v4.xyzx, v4.xyzx
rsq r0.x, r0.x
add r0.yzw, -v3.xxyz, r14.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r1.yzw, r0.yyzw, r1.xxxx
mad r2.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
sample r2.xyzw, r2.xyxx, t0.xyzw, s3
mul r2.x, r2.w, r2.x
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, cb0[10].yyyy
mul r2.yzw, r2.yyyy, v6.xxyz
mad r2.xyz, r2.xxxx, v5.xyzx, r2.yzwy
mad r2.xyz, v4.xyzx, r0.xxxx, r2.xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r2.xyzx
dp3 r0.x, -r1.yzwy, r2.xyzx
add r0.x, r0.x, r0.x
mad r3.xyz, r2.xyzx, -r0.xxxx, -r1.yzwy
add r0.x, v7.z, -cb1[5].y
dp3 r2.w, cb2[0].xyzx, cb2[0].xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, cb2[0].xyzx
mad r0.yzw, r0.yyzw, r1.xxxx, r4.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
div r5.xy, v8.xyxx, v8.wwww
sample r5.xyzw, r5.xyxx, t1.xyzw, s1
mul r5.xyz, r5.xxxx, cb0[2].xyzx
mad r6.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
sample r6.xyzw, r6.xyxx, t2.xyzw, s2
mad r1.x, -r6.w, cb0[5].x, l(1.000000)
mul r2.w, r1.x, r1.x
lt r3.w, l(0.000000), cb4[2].w
if_nz r3.w
  dp3 r3.w, r3.xyzx, r3.xyzx
  rsq r3.w, r3.w
  mul r7.xyz, r3.wwww, r3.xyzx
  add r8.xyz, -v3.xyzx, cb4[0].xyzx
  div r8.xyz, r8.xyzx, r7.xyzx
  add r9.xyz, -v3.xyzx, cb4[1].xyzx
  div r9.xyz, r9.xyzx, r7.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r3.w, r8.y, r8.x
  min r3.w, r8.z, r3.w
  add r8.xyz, v3.xyzx, -cb4[2].xyzx
  mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
else
  mov r7.xyz, r3.xyzx
endif
mad r3.w, -r1.x, l(0.700000), l(1.700000)
mul r3.w, r1.x, r3.w
mul r3.w, r3.w, l(6.000000)
sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r3.w
add r4.w, r7.w, l(-1.000000)
mad r4.w, cb4[3].w, r4.w, l(1.000000)
log r4.w, r4.w
mul r4.w, r4.w, cb4[3].y
exp r4.w, r4.w
mul r4.w, r4.w, cb4[3].x
mul r8.xyz, r7.xyzx, r4.wwww
lt r5.w, cb4[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb4[6].w
  if_nz r5.w
    dp3 r5.w, r3.xyzx, r3.xyzx
    rsq r5.w, r5.w
    mul r9.xyz, r3.xyzx, r5.wwww
    add r10.xyz, -v3.xyzx, cb4[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -v3.xyzx, cb4[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r5.w, r10.y, r10.x
    min r5.w, r10.z, r5.w
    add r10.xyz, v3.xyzx, -cb4[6].xyzx
    mad r3.xyz, r9.xyzx, r5.wwww, r10.xyzx
  endif
  sample_l r3.xyzw, r3.xyzx, t4.xyzw, s0, r3.w
  add r3.w, r3.w, l(-1.000000)
  mad r3.w, cb4[7].w, r3.w, l(1.000000)
  log r3.w, r3.w
  mul r3.w, r3.w, cb4[7].y
  exp r3.w, r3.w
  mul r3.w, r3.w, cb4[7].x
  mul r3.xyz, r3.xyzx, r3.wwww
  mad r7.xyz, r4.wwww, r7.xyzx, -r3.xyzx
  mad r8.xyz, cb4[1].wwww, r7.xyzx, r3.xyzx
endif
dp3 r3.x, r2.xyzx, r4.xyzx
max r3.y, r3.x, l(0.000000)
min r3.z, r3.y, l(1.000000)
dp3_sat r3.w, r4.xyzx, r0.yzwy
mul r4.x, r6.w, cb0[8].x
mul r4.yzw, r6.xxyz, cb0[9].xxyz
max r5.w, r4.x, r4.x
max r5.w, r4.x, r5.w
add r5.w, -r5.w, l(1.000000)
mul r4.yzw, r4.yyzw, r5.wwww
add r5.w, -r5.w, l(1.000000)
dp3 r1.y, r2.xyzx, r1.yzwy
dp3_sat r0.y, r2.xyzx, r0.yzwy
mad r0.z, -r1.x, r1.x, l(1.000000)
mad r0.w, |r1.y|, r0.z, r2.w
mad r0.z, r3.z, r0.z, r2.w
mul r0.z, r0.z, |r1.y|
mad r0.z, r3.z, r0.w, r0.z
add r0.z, r0.z, l(0.000010)
div r0.z, l(0.500000), r0.z
mul r0.w, r2.w, r2.w
mad r1.z, r0.y, r0.w, -r0.y
mad r0.y, r1.z, r0.y, l(1.000000)
mul r0.w, r0.w, l(0.318309873)
mad r0.y, r0.y, r0.y, l(1.000000012E-007)
div r0.y, r0.w, r0.y
mul r0.y, r0.y, r0.z
mul r0.y, r3.z, r0.y
mul r0.y, r0.y, l(3.14159274)
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r0.z, r2.w, r2.w, l(1.000000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
dp3 r0.w, r4.xxxx, r4.xxxx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.y, r0.w, r0.y
mul r2.xyz, r0.yyyy, r5.xyzx
add r0.y, -r3.w, l(1.000000)
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.y, r0.w
mad r0.w, -cb0[8].x, r6.w, l(1.000000)
mad r0.y, r0.w, r0.y, r4.x
mad_sat r0.w, r6.w, cb0[5].x, r5.w
add r1.y, -|r1.y|, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
mad r0.w, -cb0[8].x, r6.w, r0.w
mad r0.w, r1.y, r0.w, r4.x
mul r6.xyz, r0.wwww, r8.xyzx
mul r6.xyz, r0.zzzz, r6.xyzx
mad r0.yzw, r2.xxyz, r0.yyyy, r6.xxyz
add r2.xyz, cb3[0].xyzx, cb3[0].xyzx
add r6.xyz, -cb3[0].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r7.xyz, r3.xxxx, r6.xyzx, cb3[0].xyzx
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r6.yzw, -r3.xxxx, r6.xxyz, cb3[0].xxyz
max r6.yzw, r6.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.x, r0.x, cb0[10].x
mul r8.xyz, r0.xxxx, cb0[4].xyzx
add r0.x, r3.w, r3.w
mul r0.x, r3.w, r0.x
mad r1.z, -r3.x, r6.x, l(1.000000)
mul r1.w, r1.z, r1.z
mul r1.w, r1.w, r1.w
mul r1.z, r1.z, r1.w
mad r3.xzw, r6.yyzw, r8.xxyz, r7.xxyz
mad r0.x, r0.x, r1.x, l(-0.500000)
mad r1.x, r0.x, r1.z, l(1.000000)
mad r0.x, r0.x, r1.y, l(1.000000)
mul r0.x, r0.x, r1.x
mad r1.xyz, r0.xxxx, r3.yyyy, r3.xzwx
add r0.x, -r5.w, l(1.000000)
mul r3.xyz, r0.xxxx, r4.yzwy
mad r1.xyz, r1.xyzx, r5.xyzx, r2.xyzx
mad o0.xyz, r1.xyzx, r3.xyzx, r0.yzwy
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used