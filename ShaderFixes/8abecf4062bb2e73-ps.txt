// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8abecf4062bb2e73-ps.txt
// 3DMigoto: 8abecf4062bb2e73 |    Unity headers extracted from AdvancedTerrainGrass_Foliage Shader
//    Shader "AdvancedTerrainGrass/Foliage Shader" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "QUEUE"="Geometry+200" "RenderType"="ATGFoliage" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+200" "RenderType"="ATGFoliage" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from AdvancedTerrainGrass_Foliage Shader:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 93 3 2
//   undeciphered1a: 8
//   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "FOG_LINEAR" }
//   undeciphered2: 1 4 6 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 288
//   Vector 32 [_LightColor0]
//   Float 240 [_Glossiness]
//   Float 244 [_Cutoff]
//   Float 248 [_TransPower]
//   Float 252 [_TransStrength]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 16 [_LightPositionRange]
//   Vector 32 [_LightProjectionParams]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_LightTextureB0] 2D 2
//   SetTexture 2 [_LightTexture0] CUBE 1
//   SetTexture 3 [_ShadowMapTexture] CUBE 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:36:07 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 8     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float     z
// TEXCOORD                 2   xyz         3     NONE   float     z
// TEXCOORD                 3   xyz         4     NONE   float     z
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 6   xyz         7     NONE   float
// TEXCOORD                 7   xyzw        8     NONE   float
// SV_IsFrontFace           0   x           9    FFACE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_sampler s0, mode_comparison
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.z
dcl_input_ps linear v3.z
dcl_input_ps linear v4.z
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv v9.x, is_front_face
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8abecf4062bb2e73-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

movc r0.x, v9.x, l(1.000000), l(-1.000000)
add r0.yzw, -v5.xxyz, cb2[0].xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r1.yzw, r0.yyzw, r1.xxxx
add r2.xyz, -v5.xyzx, r9.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r2.xyzx
sample r4.xyzw, v1.xyxx, t0.xyzw, s3
mul r4.xyz, r4.xyzx, v6.xyzx
add r2.w, r4.w, -cb0[15].y
lt r2.w, r2.w, l(0.000000)
discard_nz r2.w
mul r5.xyz, v5.yyyy, cb0[5].xyzx
mad r5.xyz, cb0[4].xyzx, v5.xxxx, r5.xyzx
mad r5.xyz, cb0[6].xyzx, v5.zzzz, r5.xyzx
add r5.xyz, r5.xyzx, cb0[7].xyzx
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r2.x, r2.xyzx, r6.xyzx
add r2.yzw, v5.xxyz, -cb3[25].xxyz
dp3 r2.y, r2.yzwy, r2.yzwy
sqrt r2.y, r2.y
add r2.y, -r2.x, r2.y
mad r2.x, cb3[25].w, r2.y, r2.x
mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
lt r2.y, r2.x, l(0.990000)
if_nz r2.y
  add r2.yzw, v5.xxyz, -cb2[1].xxyz
  max r3.w, |r2.z|, |r2.y|
  max r3.w, |r2.w|, r3.w
  add r3.w, r3.w, -cb2[2].z
  max r3.w, r3.w, l(0.000010)
  mul r3.w, r3.w, cb2[2].w
  div r3.w, cb2[2].y, r3.w
  add r3.w, r3.w, -cb2[2].x
  add r3.w, -r3.w, l(1.000000)
  add r6.xyz, r2.yzwy, l(0.00781250000, 0.00781250000, 0.00781250000, 0.000000)
  sample_c_lz r6.x, r6.xyzx, t3.xxxx, s0, r3.w
  add r7.xyz, r2.yzwy, l(-0.00781250000, -0.00781250000, 0.00781250000, 0.000000)
  sample_c_lz r6.y, r7.xyzx, t3.xxxx, s0, r3.w
  add r7.xyz, r2.yzwy, l(-0.00781250000, 0.00781250000, -0.00781250000, 0.000000)
  sample_c_lz r6.z, r7.xyzx, t3.xxxx, s0, r3.w
  add r2.yzw, r2.yyzw, l(0.000000, 0.00781250000, -0.00781250000, -0.00781250000)
  sample_c_lz r6.w, r2.yzwy, t3.xxxx, s0, r3.w
  dp4 r2.y, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  add r2.z, -cb3[24].x, l(1.000000)
  mad r2.y, r2.y, r2.z, cb3[24].x
else
  mov r2.y, l(1.000000)
endif
add r2.z, -r2.y, l(1.000000)
mad r2.x, r2.x, r2.z, r2.y
dp3 r2.y, r5.xyzx, r5.xyzx
sample r6.xyzw, r2.yyyy, t1.xyzw, s2
sample r5.xyzw, r5.xyzx, t2.xyzw, s1
mul r2.y, r5.w, r6.x
mul r2.x, r2.x, r2.y
mul r5.x, r0.x, v2.z
mul r5.y, r0.x, v3.z
mul r5.z, r0.x, v4.z
dp3 r0.x, r5.xyzx, r5.xyzx
rsq r0.x, r0.x
mul r2.yzw, r0.xxxx, r5.xxyz
mul r5.xyz, r2.xxxx, cb0[2].xyzx
dp3_sat r0.x, r2.yzwy, r1.yzwy
mul r2.x, cb0[15].z, l(10.000000)
add r3.w, -cb0[15].x, l(1.000000)
mad r0.yzw, r0.yyzw, r1.xxxx, r3.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
max r1.x, r1.x, l(0.001000)
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
dp3 r1.x, r2.yzwy, r3.xyzx
dp3_sat r0.y, r1.yzwy, r0.yzwy
mul r0.y, r0.y, r0.y
dp2 r0.y, r0.yyyy, r3.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r0.x, l(1.000000)
mul r0.w, r0.z, r0.z
mul r0.w, r0.w, r0.w
mul r0.w, r0.z, r0.w
mad r0.w, r0.y, r0.w, l(1.000000)
add r1.x, -|r1.x|, l(1.000000)
mul r3.w, r1.x, r1.x
mul r3.w, r3.w, r3.w
mul r1.x, r1.x, r3.w
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.w
mul r0.x, r0.x, r0.y
mul r0.xyw, r0.xxxx, r5.xyxz
mad r1.xyz, r2.yzwy, l(0.010000, 0.010000, 0.010000, 0.000000), r1.yzwy
dp3_sat r1.x, -r1.xyzx, r3.xyzx
mad r1.x, r1.x, r2.x, -r2.x
exp r1.x, r1.x
mul r1.xyz, r5.xyzx, r1.xxxx
mul r1.xyz, r0.zzzz, r1.xyzx
mul r2.xyz, r4.xyzx, cb0[15].wwww
mul r1.xyz, r1.xyzx, r2.xyzx
mul r1.xyz, r1.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
mad r0.xyz, r4.xyzx, r0.xywx, r1.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used