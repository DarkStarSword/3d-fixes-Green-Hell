// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b05b38ad9b61474f-ps.txt
// 3DMigoto: b05b38ad9b61474f |    Unity headers extracted from Amplify_rock_surface
//    Shader "Amplify/rock_surface" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_rock_surface:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 201802150 231 8 4
//   undeciphered1a: 12
//   Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
//   undeciphered2: 1 9 7 9 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 288
//   Vector 96 [_ShadowMapTexture_TexelSize]
//   Vector 176 [_LightColor0]
//   Vector 208 [_Normal_ST]
//   Float 224 [_moss_mask_source_switch]
//   Vector 240 [_Albedo_ST]
//   Float 256 [_Moss_Mask_Size]
//   Float 260 [_Moss_Mask_power]
//   Float 264 [TERRAIN_RainIntensity]
//   Float 268 [TERRAIN_GlobalWetness]
//   Matrix 112 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   Matrix 128 [unity_WorldToShadow0]
//   Matrix 192 [unity_WorldToShadow1]
//   Matrix 256 [unity_WorldToShadow2]
//   Matrix 320 [unity_WorldToShadow3]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   ConstBuffer "Amplifyrock_surface" 16
//   Float 0 [_detail_normal_scale]
//   Float 4 [_detail_tiling]
//   SetTexture 0 [_Normal] 2D 5
//   SetTexture 1 [_Albedo] 2D 6
//   SetTexture 2 [_Moss_Normal] 2D 4
//   SetTexture 3 [_terrain_wetmask_gh] 2D 8
//   SetTexture 4 [_Rain_droplets_normal_map] 2D 7
//   SetTexture 5 [_LightTexture0] 2D 2
//   SetTexture 6 [_LightTextureB0] 2D 3
//   SetTexture 7 [unity_ProbeVolumeSH] 3D 0
//   SetTexture 8 [_ShadowMapTexture] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityProbeVolume" 5
//   BindCB "Amplifyrock_surface" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:58:22 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float
// TEXCOORD                 6   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_constantbuffer cb6[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 14
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b05b38ad9b61474f-ps.txt

mul r12.w, -r12.x, r12.y
mad r13.xyz, -r12.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v5.xyzx, r13.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r2.xyzx
mul r4.xy, v1.xyxx, cb6[0].yyyy
mad r4.zw, v1.xxxy, cb0[13].xxxy, cb0[13].zzzw
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r4.zwzz, t0.xywz, s5
mul r5.x, r5.z, r5.x
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
mad r4.zw, v1.xxxy, cb0[15].xxxy, cb0[15].zzzw
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r4.zwzz, t1.xyzw, s6
add r1.w, -r6.z, r6.y
mad r1.w, cb0[14].x, r1.w, r6.z
mul r1.w, r1.w, cb0[16].x
log r1.w, r1.w
mul r1.w, r1.w, cb0[16].y
exp r1.w, r1.w
min r1.w, r1.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t2.xywz, s4
mul r4.x, r4.z, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.zw, r4.xxxy, cb6[0].xxxx
dp2 r2.w, r4.zwzz, r4.zwzz
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r2.w, r2.w
mad r4.xy, r4.xyxx, cb6[0].xxxx, r5.xyxx
mul r4.z, r5.z, r2.w
dp3 r2.w, r4.xyzx, r4.xyzx
rsq r2.w, r2.w
mul r7.xyz, r2.wwww, r4.xyzx
mad r4.xyz, -r4.xyzx, r2.wwww, r5.xyzx
mad r4.xyz, r1.wwww, r4.xyzx, r7.xyzx
add r5.xyz, -r4.xyzx, l(0.494117588, 0.494117588, 1.000000, 0.000000)
mad r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
mul r1.w, cb0[16].z, l(1.500000)
max r1.w, r1.w, l(0.000000)
min r1.w, r1.w, l(1.300000)
mul r7.xyzw, v5.xzxz, l(1.600000, 1.600000, 0.000488281250, 0.000488281250)
frc r7.xy, r7.xyxx
mul r2.w, cb1[0].y, l(0.625000)
ge r3.w, r2.w, -r2.w
frc r2.w, |r2.w|
movc r2.w, r3.w, r2.w, -r2.w
mul r2.w, r2.w, l(64.000000)
round_ne r2.w, r2.w
lt r3.w, r2.w, l(0.000000)
and r3.w, r3.w, l(0x42800000)
add r2.w, r2.w, r3.w
mul r3.w, r2.w, l(0.125000)
ge r4.w, r3.w, -r3.w
frc r3.w, |r3.w|
movc r3.w, r4.w, r3.w, -r3.w
mul r3.w, r3.w, l(8.000000)
round_ne r3.w, r3.w
mul r8.x, r3.w, l(0.125000)
add r2.w, r2.w, -r3.w
mul r2.w, r2.w, l(0.015625)
ge r3.w, r2.w, -r2.w
frc r2.w, |r2.w|
movc r2.w, r3.w, r2.w, -r2.w
mul r2.w, r2.w, l(8.000000)
round_ne r2.w, r2.w
add r2.w, -r2.w, l(7.000000)
mul r8.y, r2.w, l(0.125000)
mad r7.xy, r7.xyxx, l(0.125000, 0.125000, 0.000000, 0.000000), r8.xyxx
add_sat r2.w, cb0[16].w, cb0[16].w
sample_indexable(texture2d)(float,float,float,float) r3.w, r7.zwzz, t3.xyzw, s8
log r3.w, r3.w
mul r3.w, r3.w, l(1.500000)
exp r3.w, r3.w
min r3.w, r3.w, l(1.000000)
mov_sat r4.w, v3.z
add r3.w, -r3.w, r4.w
mul r4.w, r2.w, r3.w
mad r3.w, -r3.w, r2.w, l(1.000000)
mad r2.w, r3.w, l(-2.000000), r2.w
add_sat r3.w, r2.w, r2.w
sample_indexable(texture2d)(float,float,float,float) r7.xyz, r7.xyxx, t4.xywz, s7
mul r7.x, r7.z, r7.x
mad r7.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r7.zw, r1.wwww, r7.xxxy
dp2 r5.w, r7.zwzz, r7.zwzz
min r5.w, r5.w, l(1.000000)
add r5.w, -r5.w, l(1.000000)
sqrt r5.w, r5.w
mad r7.xy, r7.xyxx, r1.wwww, r5.xyxx
mul r7.z, r5.w, r5.z
dp3 r1.w, r7.xyzx, r7.xyzx
rsq r1.w, r1.w
mad r5.xyz, r7.xyzx, r1.wwww, -r4.xyzx
mad r4.xyz, r3.wwww, r5.xyzx, r4.xyzx
max r5.xy, r4.wwww, l(0.000000, 0.200000, 0.000000, 0.000000)
min r5.xy, r5.xyxx, l(0.450000, 0.850000, 0.000000, 0.000000)
mad r5.xzw, r5.xxxx, -r6.xxyz, r6.xxyz
max r1.w, r2.w, l(0.000000)
min r1.w, r1.w, l(0.100000)
mul r6.xyzw, v5.yyyy, cb0[8].xyzw
mad r6.xyzw, cb0[7].xyzw, v5.xxxx, r6.xyzw
mad r6.xyzw, cb0[9].xyzw, v5.zzzz, r6.xyzw
add r6.xyzw, r6.xyzw, cb0[10].xyzw
mov r7.x, cb4[9].z
mov r7.y, cb4[10].z
mov r7.z, cb4[11].z
dp3 r2.x, r2.xyzx, r7.xyzx
add r2.yzw, v5.xxyz, -cb3[25].xxyz
dp3 r2.y, r2.yzwy, r2.yzwy
sqrt r2.y, r2.y
add r2.y, -r2.x, r2.y
mad r2.x, cb3[25].w, r2.y, r2.x
mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
eq r2.y, cb5[0].x, l(1.000000)
if_nz r2.y
  eq r2.y, cb5[0].y, l(1.000000)
  mul r7.xyz, v5.yyyy, cb5[2].xyzx
  mad r7.xyz, cb5[1].xyzx, v5.xxxx, r7.xyzx
  mad r7.xyz, cb5[3].xyzx, v5.zzzz, r7.xyzx
  add r7.xyz, r7.xyzx, cb5[4].xyzx
  movc r2.yzw, r2.yyyy, r7.xxyz, v5.xxyz
  add r2.yzw, r2.yyzw, -cb5[6].xxyz
  mul r7.yzw, r2.yyzw, cb5[5].xxyz
  mad r2.y, r7.y, l(0.250000), l(0.750000)
  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  max r7.x, r2.z, r2.y
  sample_indexable(texture3d)(float,float,float,float) r7.xyzw, r7.xzwx, t7.xyzw, s0
else
  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
lt r2.z, r2.x, l(0.990000)
if_nz r2.z
  mul r7.xyzw, v5.yyyy, cb3[9].xyzw
  mad r7.xyzw, cb3[8].xyzw, v5.xxxx, r7.xyzw
  mad r7.xyzw, cb3[10].xyzw, v5.zzzz, r7.xyzw
  add r7.xyzw, r7.xyzw, cb3[11].xyzw
  div r7.xyz, r7.xyzx, r7.wwww
  mad r2.zw, r7.xxxy, cb0[6].zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  round_ni r2.zw, r2.zzzw
  mad r7.xy, r7.xyxx, cb0[6].zwzz, -r2.zwzz
  add r8.xyzw, r7.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  mul r9.xw, r8.xxxz, r8.xxxz
  mad r8.xz, r9.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000), -r7.xxyx
  add r10.xy, -r7.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  min r10.zw, r7.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r10.xy, -r10.zwzz, r10.zwzz, r10.xyxx
  max r7.xy, r7.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r7.xy, -r7.xyxx, r7.xyxx, r8.ywyy
  mov r11.x, r8.x
  mov r11.y, r10.x
  mov r11.z, r7.x
  mov r11.w, r9.x
  mul r11.xyzw, r11.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  mov r9.x, r8.z
  mov r9.y, r10.y
  mov r9.z, r7.y
  mul r8.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  add r9.xyzw, r11.ywyw, r11.xzxz
  add r10.xyzw, r8.yyww, r8.xxzz
  div r7.xy, r11.ywyy, r9.zwzz
  add r7.xy, r7.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  div r8.xy, r8.ywyy, r10.ywyy
  add r8.xy, r8.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  mul r11.xy, r7.xyxx, cb0[6].xxxx
  mul r11.zw, r8.xxxy, cb0[6].yyyy
  mul r8.xyzw, r9.xyzw, r10.xyzw
  mad r9.xyzw, r2.zwzw, cb0[6].xyxy, r11.xzyz
  sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r9.xyxx, t8.xxxx, s1, r7.z
  sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r9.zwzz, t8.xxxx, s1, r7.z
  mul r4.w, r4.w, r8.y
  mad r3.w, r8.x, r3.w, r4.w
  mad r9.xyzw, r2.zwzw, cb0[6].xyxy, r11.xwyw
  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.z, r9.xyxx, t8.xxxx, s1, r7.z
  mad r2.z, r8.z, r2.z, r3.w
  sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r9.zwzz, t8.xxxx, s1, r7.z
  mad r2.z, r8.w, r2.w, r2.z
  add r2.w, -cb3[24].x, l(1.000000)
  mad r2.z, r2.z, r2.w, cb3[24].x
else
  mov r2.z, l(1.000000)
endif
add r2.y, -r2.z, r2.y
mad r2.x, r2.x, r2.y, r2.z
lt r2.y, l(0.000000), r6.z
and r2.y, r2.y, l(0x3f800000)
div r2.zw, r6.xxxy, r6.wwww
add r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r2.z, r2.zwzz, t5.xywz, s2
mul r2.y, r2.z, r2.y
dp3 r2.z, r6.xyzx, r6.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.z, r2.zzzz, t6.yzxw, s3
mul r2.y, r2.z, r2.y
mul r2.x, r2.x, r2.y
dp3 r6.x, v2.xyzx, r4.xyzx
dp3 r6.y, v3.xyzx, r4.xyzx
dp3 r6.z, v4.xyzx, r4.xyzx
dp3 r2.y, r6.xyzx, r6.xyzx
rsq r2.y, r2.y
mul r2.yzw, r2.yyyy, r6.xxyz
mul r4.xyz, r2.xxxx, cb0[11].xyzx
add r6.xyz, r5.xzwx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r6.xyz, r1.wwww, r6.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -r1.w, l(0.960000), l(0.960000)
mul r5.xzw, r1.wwww, r5.xxzw
add r1.w, -r5.y, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r2.yzwy, r3.xyzx
dp3_sat r2.x, r2.yzwy, r1.xyzx
dp3_sat r2.y, r2.yzwy, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r2.x, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
mad r1.x, -r1.w, r1.w, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r2.x, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r2.x, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r2.y, r0.z, -r2.y
mad r1.x, r1.x, r2.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r2.xxxx, r0.yyzy
dp3 r0.w, r6.xyzx, r6.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r4.xyzx
mul r0.yzw, r4.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad o0.xyz, r5.xzwx, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used