// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 318a3f234a062a50-ps.txt
// 3DMigoto: 318a3f234a062a50 | Matched 4 variants of 1 shaders: SineVFX/LivingParticles/LivingParticleMaskedPbr
//
//       Unity headers extracted from SineVFX_LivingParticles_LivingParticleMaskedPbr
//       Shader "SineVFX/LivingParticles/LivingParticleMaskedPbr" {
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "QUEUE"="AlphaTest+0" "RenderType"="TransparentCutout" }
//           Pass 1/4 {
//             Name "FORWARD"
//             Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="AlphaTest+0" "RenderType"="TransparentCutout" "SHADOWSUPPORT"="true" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from SineVFX_LivingParticles_LivingParticleMaskedPbr:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 201 9 8
//      undeciphered1a: 16
// 8:   Keywords { "DIRECTIONAL" "FOG_LINEAR" "_RAMPENABLED_ON" "_CENTERMASKENABLED_ON" }
// 4:   Keywords { "DIRECTIONAL" "FOG_LINEAR" "_RAMPENABLED_ON" "_OFFSETYLOCK_ON" }
// 2:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "_RAMPENABLED_ON" "_CENTERMASKENABLED_ON" }
// 1:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "_RAMPENABLED_ON" "_OFFSETYLOCK_ON" }
//      undeciphered2: 1 8 6 7 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 304
//      Vector 32 [_LightColor0]
//      Vector 64 [_Normal_ST]
//      Vector 80 [_ColorTint]
//      Vector 96 [_Albedo_ST]
//      Vector 112 [_Emission_ST]
//      Vector 128 [_Affector]
//      Float 144 [_Distance]
//      Float 148 [_DistancePower]
//      Float 152 [_FinalMaskMultiply]
//      Float 192 [_FinalPower]
//      Float 196 [_Metallic]
//      Vector 208 [_MetallicSmoothness_ST]
//      Float 224 [_Smoothness]
//      Float 248 [_Cutoff]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 624 [unity_SHAr]
//      Vector 640 [unity_SHAg]
//      Vector 656 [unity_SHAb]
//      Vector 736 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityFog" 32
//      Vector 0 [unity_FogColor]
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityReflectionProbes" 128
//      Vector 0 [unity_SpecCube0_BoxMax]
//      Vector 16 [unity_SpecCube0_BoxMin]
//      Vector 32 [unity_SpecCube0_ProbePosition]
//      Vector 48 [unity_SpecCube0_HDR]
//      Vector 64 [unity_SpecCube1_BoxMax]
//      Vector 80 [unity_SpecCube1_BoxMin]
//      Vector 96 [unity_SpecCube1_ProbePosition]
//      Vector 112 [unity_SpecCube1_HDR]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_Normal] 2D 2
//      SetTexture 1 [_Albedo] 2D 3
//      SetTexture 2 [_Ramp] 2D 4
//      SetTexture 3 [_Emission] 2D 5
//      SetTexture 4 [_MetallicSmoothness] 2D 6
//      SetTexture 5 [unity_SpecCube0] CUBE 0
//      SetTexture 6 [unity_SpecCube1] CUBE -1
//      SetTexture 7 [unity_ProbeVolumeSH] 3D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityFog" 3
//      BindCB "UnityReflectionProbes" 4
//      BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:46:38 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 7     z         1     NONE   float     z
// TEXCOORD                 1   xyzw        2     NONE   float     zw
// TEXCOORD                 2   xyzw        3     NONE   float   x
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// COLOR                    0   xyzw        7     NONE   float   xyzw
// TEXCOORD                 6   xyz         8     NONE   float   xyz
// TEXCOORD                 8   xyzw        9     NONE   float
// SV_IsFrontFace           0   x          10    FFACE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.zw
dcl_input_ps linear v3.x
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.xyz
dcl_input_ps_sgv v10.x, is_front_face
dcl_output o0.xyzw
dcl_temps 18
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r16.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 318a3f234a062a50-ps.txt

mul r16.w, -r16.x, r16.y
mad r17.xyz, -r16.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v4.w
mov r0.y, v5.w
mov r0.z, v6.w
add r1.xyz, -r0.xyzx, r17.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r3.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
sample r3.xyzw, r3.xyxx, t0.xyzw, s2
mul r3.x, r3.w, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r3.z, r1.w
movc r3.xyz, v10.xxxx, r3.xyzx, -r3.xyzx
mad r4.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
sample r4.xyzw, r4.xyxx, t1.xyzw, s3
mul r5.xyz, r4.xyzx, cb0[5].xyzx
mad r6.z, v3.x, cb0[7].x, cb0[7].z
mov r6.xy, v2.zwzz
mov r6.w, l(0)
add r6.xyzw, r6.xyzw, -cb0[8].xyzw
dp4 r1.w, r6.xyzw, r6.xyzw
sqrt r1.w, r1.w
add r1.w, -r1.w, l(1.000000)
add r2.w, cb0[9].x, l(-1.000000)
add r1.w, r1.w, r2.w
div_sat r1.w, r1.w, cb0[9].x
log r1.w, r1.w
mul r1.w, r1.w, cb0[9].y
exp r1.w, r1.w
mul_sat r6.x, r1.w, cb0[9].z
mov r6.y, l(0)
sample r6.xyzw, r6.xyxx, t2.xyzw, s4
mad r7.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
mul r6.xyz, r6.xyzx, v7.xyzx
mul r6.xyz, r6.xyzx, cb0[12].xxxx
mul r6.xyz, r6.xyzx, v7.wwww
sample r7.xyzw, r7.xyxx, t3.xyzw, s5
mad r7.yz, v1.xxyx, cb0[13].xxyx, cb0[13].zzwz
sample r8.xyzw, r7.yzyy, t4.xyzw, s6
mul r1.w, r8.x, cb0[12].y
add r2.w, r4.w, -cb0[15].z
lt r2.w, r2.w, l(0.000000)
discard_nz r2.w
eq r2.w, cb5[0].x, l(1.000000)
if_nz r2.w
  eq r3.w, cb5[0].y, l(1.000000)
  mul r7.yzw, v5.wwww, cb5[2].xxyz
  mad r7.yzw, cb5[1].xxyz, v4.wwww, r7.yyzw
  mad r7.yzw, cb5[3].xxyz, v6.wwww, r7.yyzw
  add r7.yzw, r7.yyzw, cb5[4].xxyz
  movc r7.yzw, r3.wwww, r7.yyzw, r0.xxyz
  add r7.yzw, r7.yyzw, -cb5[6].xxyz
  mul r9.yzw, r7.yyzw, cb5[5].xxyz
  mad r3.w, r9.y, l(0.250000), l(0.750000)
  mad r4.w, cb5[0].z, l(0.500000), l(0.750000)
  max r9.x, r3.w, r4.w
  sample r9.xyzw, r9.xzwx, t7.xyzw, s1
else
  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r3.w, r9.xyzw, cb2[46].xyzw
dp3 r8.x, v4.xyzx, r3.xyzx
dp3 r8.y, v5.xyzx, r3.xyzx
dp3 r8.z, v6.xyzx, r3.xyzx
dp3 r3.x, r8.xyzx, r8.xyzx
rsq r3.x, r3.x
mul r9.xyz, r3.xxxx, r8.xyzx
mad r3.x, -r8.w, cb0[14].x, l(1.000000)
dp3 r3.y, -r2.xyzx, r9.xyzx
add r3.y, r3.y, r3.y
mad r7.yzw, r9.xxyz, -r3.yyyy, -r2.xxyz
mul r3.yzw, r3.wwww, cb0[2].xxyz
if_nz r2.w
  eq r2.w, cb5[0].y, l(1.000000)
  mul r8.xyz, v5.wwww, cb5[2].xyzx
  mad r8.xyz, cb5[1].xyzx, v4.wwww, r8.xyzx
  mad r8.xyz, cb5[3].xyzx, v6.wwww, r8.xyzx
  add r8.xyz, r8.xyzx, cb5[4].xyzx
  movc r8.xyz, r2.wwww, r8.xyzx, r0.xyzx
  add r8.xyz, r8.xyzx, -cb5[6].xyzx
  mul r10.yzw, r8.xxyz, cb5[5].xxyz
  mul r2.w, r10.y, l(0.250000)
  mul r4.w, cb5[0].z, l(0.500000)
  mad r5.w, -cb5[0].z, l(0.500000), l(0.250000)
  max r2.w, r2.w, r4.w
  min r10.x, r5.w, r2.w
  sample r11.xyzw, r10.xzwx, t7.xyzw, s1
  add r8.xyz, r10.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r12.xyzw, r8.xyzx, t7.xyzw, s1
  add r8.xyz, r10.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r10.xyzw, r8.xyzx, t7.xyzw, s1
  mov r9.w, l(1.000000)
  dp4 r8.x, r11.xyzw, r9.xyzw
  dp4 r8.y, r12.xyzw, r9.xyzw
  dp4 r8.z, r10.xyzw, r9.xyzw
else
  mov r9.w, l(1.000000)
  dp4 r8.x, cb2[39].xyzw, r9.xyzw
  dp4 r8.y, cb2[40].xyzw, r9.xyzw
  dp4 r8.z, cb2[41].xyzw, r9.xyzw
endif
add r8.xyz, r8.xyzx, v8.xyzx
max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.w, l(0.000000), cb4[2].w
if_nz r2.w
  dp3 r2.w, r7.yzwy, r7.yzwy
  rsq r2.w, r2.w
  mul r10.xyz, r2.wwww, r7.yzwy
  add r11.xyz, -r0.xyzx, cb4[0].xyzx
  div r11.xyz, r11.xyzx, r10.xyzx
  add r12.xyz, -r0.xyzx, cb4[1].xyzx
  div r12.xyz, r12.xyzx, r10.xyzx
  lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  min r2.w, r11.y, r11.x
  min r2.w, r11.z, r2.w
  add r11.xyz, r0.xyzx, -cb4[2].xyzx
  mad r10.xyz, r10.xyzx, r2.wwww, r11.xyzx
else
  mov r10.xyz, r7.yzwy
endif
mad r2.w, -r3.x, l(0.700000), l(1.700000)
mul r2.w, r2.w, r3.x
mul r2.w, r2.w, l(6.000000)
sample_l r10.xyzw, r10.xyzx, t5.xyzw, s0, r2.w
add r4.w, r10.w, l(-1.000000)
mad r4.w, cb4[3].w, r4.w, l(1.000000)
log r4.w, r4.w
mul r4.w, r4.w, cb4[3].y
exp r4.w, r4.w
mul r4.w, r4.w, cb4[3].x
mul r11.xyz, r10.xyzx, r4.wwww
lt r5.w, cb4[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb4[6].w
  if_nz r5.w
    dp3 r5.w, r7.yzwy, r7.yzwy
    rsq r5.w, r5.w
    mul r12.xyz, r5.wwww, r7.yzwy
    add r13.xyz, -r0.xyzx, cb4[4].xyzx
    div r13.xyz, r13.xyzx, r12.xyzx
    add r14.xyz, -r0.xyzx, cb4[5].xyzx
    div r14.xyz, r14.xyzx, r12.xyzx
    lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
    movc r13.xyz, r15.xyzx, r13.xyzx, r14.xyzx
    min r5.w, r13.y, r13.x
    min r5.w, r13.z, r5.w
    add r0.xyz, r0.xyzx, -cb4[6].xyzx
    mad r7.yzw, r12.xxyz, r5.wwww, r0.xxyz
  endif
  sample_l r12.xyzw, r7.yzwy, t6.xyzw, s0, r2.w
  add r0.x, r12.w, l(-1.000000)
  mad r0.x, cb4[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb4[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r12.xyzx, r0.xxxx
  mad r7.yzw, r4.wwww, r10.xxyz, -r0.xxyz
  mad r11.xyz, cb4[1].wwww, r7.yzwy, r0.xyzx
endif
mad r0.xyz, cb0[5].xyzx, r4.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r0.xyz, r1.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -r1.w, l(0.960000), l(0.960000)
mul r4.xyz, r1.wwww, r5.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r9.xyzx, r2.xyzx
dp3_sat r2.x, r9.xyzx, cb2[0].xyzx
dp3_sat r2.y, r9.xyzx, r1.xyzx
dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
mul r1.y, r1.x, r1.x
dp2 r1.y, r1.yyyy, r3.xxxx
add r1.y, r1.y, l(-0.500000)
add r1.z, -r2.x, l(1.000000)
mul r2.z, r1.z, r1.z
mul r2.z, r2.z, r2.z
mul r1.z, r1.z, r2.z
mad r1.z, r1.y, r1.z, l(1.000000)
add r2.z, -|r0.w|, l(1.000000)
mul r2.w, r2.z, r2.z
mul r2.w, r2.w, r2.w
mul r2.z, r2.z, r2.w
mad r1.y, r1.y, r2.z, l(1.000000)
mul r1.y, r1.y, r1.z
mul r1.y, r2.x, r1.y
mul r1.z, r3.x, r3.x
max r1.z, r1.z, l(0.002000)
add r2.w, -r1.z, l(1.000000)
mad r3.x, |r0.w|, r2.w, r1.z
mad r2.w, r2.x, r2.w, r1.z
mul r0.w, |r0.w|, r2.w
mad r0.w, r2.x, r3.x, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r2.w, r1.z, r1.z
mad r3.x, r2.y, r2.w, -r2.y
mad r2.y, r3.x, r2.y, l(1.000000)
mul r2.w, r2.w, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r2.w, r2.y
mul r0.w, r0.w, r2.y
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.x, r0.w
max r0.w, r0.w, l(0.000000)
mad r1.z, r1.z, r1.z, l(1.000000)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
dp3 r2.x, r0.xyzx, r0.xyzx
ne r2.x, r2.x, l(0.000000)
and r2.x, r2.x, l(0x3f800000)
mul r0.w, r0.w, r2.x
mad r1.w, r8.w, cb0[14].x, -r1.w
add_sat r1.w, r1.w, l(1.000000)
mad r2.xyw, r3.yzyw, r1.yyyy, r8.xyxz
mul r3.xyz, r3.yzwy, r0.wwww
add r0.w, -r1.x, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.w, r0.w, r1.x
add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r5.xyz, r5.xyzx, r0.wwww, r0.xyzx
mul r3.xyz, r3.xyzx, r5.xyzx
mad r2.xyw, r4.xyxz, r2.xyxw, r3.xyxz
mul r1.xyz, r11.xyzx, r1.zzzz
add r3.xyz, -r0.xyzx, r1.wwww
mad r0.xyz, r2.zzzz, r3.xyzx, r0.xyzx
mad r0.xyz, r1.xyzx, r0.xyzx, r2.xywx
mad r0.xyz, r6.xyzx, r7.xxxx, r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used