// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 26cb4d6037f64341-vs.txt
// 3DMigoto: 26cb4d6037f64341 | Matched 2 variants of 2 shaders: DynamicFog/Reflections/Lambert Solid Color, DynamicFog/Reflections/Standard Shader Solid Color
//
// 2:    Unity headers extracted from DynamicFog_Reflections_Lambert Solid Color
// 1:    Unity headers extracted from DynamicFog_Reflections_Standard Shader Solid Color
// 2:    Shader "DynamicFog/Reflections/Lambert Solid Color" {
// 1:    Shader "DynamicFog/Reflections/Standard Shader Solid Color" {
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           LOD 200
//           Tags { "RenderType"="Opaque" }
//           Pass 2/3 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDADD" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             ZWrite Off
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
// 2: Unity 5.3 headers extracted from DynamicFog_Reflections_Lambert Solid Color:
// 1: Unity 5.3 headers extracted from DynamicFog_Reflections_Standard Shader Solid Color:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201802150 18 0 0
//      undeciphered1a: 2
//      Keywords { "DIRECTIONAL" }
//      undeciphered2: 1 0 3 0 0 0
//      undeciphered3: 255 2 0 0 1 1
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityPerDraw" 176
//      Matrix 0 [unity_ObjectToWorld]
//      Matrix 64 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 368
//      Matrix 272 [unity_MatrixVP]
//      BindCB "UnityPerCamera" 0
//      BindCB "UnityPerDraw" 1
//      BindCB "UnityPerFrame" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:41:40 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float
// TEXCOORD                 1   xyzw        4     NONE   float
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float
// COLOR                    0   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[21], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_temps 3

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r2.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
add r1.xyzw, r0.xyzw, cb1[3].xyzw
mad o2.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
mul r0.xyzw, r1.yyyy, cb2[18].xyzw
mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 26cb4d6037f64341-vs.txt
ne r2.w, r0.w, l(1.0)
if_nz r2.w
  add r2.w, r0.w, -r2.y
  mad r0.x, r2.w, r2.x, r0.x
endif

dp3 r1.x, v2.xyzx, cb1[4].xyzx
dp3 r1.y, v2.xyzx, cb1[5].xyzx
dp3 r1.z, v2.xyzx, cb1[6].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul o1.xyz, r1.wwww, r1.xyzx
mul r0.y, r0.y, cb0[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o3.zw, r0.zzzw
add o3.xy, r1.zzzz, r1.xwxx
mov o4.xyzw, l(0,0,0,0)
ret
// Approximately 0 instruction slots used