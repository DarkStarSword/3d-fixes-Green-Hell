// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6cbc2248cb6df717-ps.txt
// 3DMigoto: 6cbc2248cb6df717 |    Unity headers extracted from AVP_DoubleSided
//    Shader "AVP/DoubleSided" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Geometry+0" "RenderType"="TransparentCutout" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+0" "RenderType"="TransparentCutout" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from AVP_DoubleSided:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 168 6 6
//   undeciphered1a: 15
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
//   undeciphered2: 1 8 7 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 32 [_LightColor0]
//   Float 64 [_Normal_Power]
//   Vector 80 [_Normal_ST]
//   Vector 96 [_Color]
//   Vector 112 [_Albedo_ST]
//   Vector 128 [_Metallic_ST]
//   Float 144 [_Smoothness]
//   Vector 160 [_AmbientOcclusion_ST]
//   Float 176 [_AmbientOcclusion_Power]
//   Float 180 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_Normal] 2D 3
//   SetTexture 1 [_Albedo] 2D 4
//   SetTexture 2 [_Metallic] 2D 5
//   SetTexture 3 [_AmbientOcclusion] 2D 6
//   SetTexture 4 [_ShadowMapTexture] 2D 2
//   SetTexture 5 [unity_SpecCube0] CUBE 0
//   SetTexture 6 [unity_SpecCube1] CUBE -1
//   SetTexture 7 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityReflectionProbes" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:18:23 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 6   xyzw        5     NONE   float   xy w
// TEXCOORD                 7   xyzw        6     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyw
dcl_output o0.xyzw
dcl_temps 17
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r15.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6cbc2248cb6df717-ps.txt

mul r15.w, -r15.x, r15.y
mad r16.xyz, -r15.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r16.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r3.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r3.xyzw, r3.xyxx, t0.xyzw, s3
mul r3.x, r3.w, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, cb0[4].xxxx
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r3.z, r1.w
mad r4.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
sample r4.xyzw, r4.xyxx, t1.xyzw, s4
mul r5.xyz, r4.xyzx, cb0[6].xyzx
mad r6.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
sample r6.xyzw, r6.xyxx, t2.xyzw, s5
mad r6.yz, v1.xxyx, cb0[10].xxyx, cb0[10].zzwz
sample r7.xyzw, r6.yzyy, t3.xyzw, s6
add r1.w, r7.y, l(-1.000000)
mad r1.w, cb0[11].x, r1.w, l(1.000000)
add r2.w, r4.w, -cb0[11].y
lt r2.w, r2.w, l(0.000000)
discard_nz r2.w
mov r7.x, cb4[9].z
mov r7.y, cb4[10].z
mov r7.z, cb4[11].z
dp3 r2.w, r1.xyzx, r7.xyzx
add r7.xyz, r0.xyzx, -cb3[25].xyzx
dp3 r3.w, r7.xyzx, r7.xyzx
sqrt r3.w, r3.w
add r3.w, -r2.w, r3.w
mad r2.w, cb3[25].w, r3.w, r2.w
mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
eq r3.w, cb6[0].x, l(1.000000)
if_nz r3.w
  eq r3.w, cb6[0].y, l(1.000000)
  mul r7.xyz, v3.wwww, cb6[2].xyzx
  mad r7.xyz, cb6[1].xyzx, v2.wwww, r7.xyzx
  mad r7.xyz, cb6[3].xyzx, v4.wwww, r7.xyzx
  add r7.xyz, r7.xyzx, cb6[4].xyzx
  movc r7.xyz, r3.wwww, r7.xyzx, r0.xyzx
  add r7.xyz, r7.xyzx, -cb6[6].xyzx
  mul r7.yzw, r7.xxyz, cb6[5].xxyz
  mad r3.w, r7.y, l(0.250000), l(0.750000)
  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
  max r7.x, r3.w, r4.w
  sample r7.xyzw, r7.xzwx, t7.xyzw, s1
else
  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r3.w, r7.xyzw, cb2[46].xyzw
div r6.yz, v5.xxyx, v5.wwww
sample r7.xyzw, r6.yzyy, t4.xyzw, s2
add r3.w, r3.w, -r7.x
mad r2.w, r2.w, r3.w, r7.x
dp3 r7.x, v2.xyzx, r3.xyzx
dp3 r7.y, v3.xyzx, r3.xyzx
dp3 r7.z, v4.xyzx, r3.xyzx
dp3 r3.x, r7.xyzx, r7.xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, r7.xyzx
mad r3.w, -r6.w, cb0[9].x, l(1.000000)
dp3 r4.w, -r2.xyzx, r3.xyzx
add r4.w, r4.w, r4.w
mad r7.xyz, r3.xyzx, -r4.wwww, -r2.xyzx
mul r8.xyz, r2.wwww, cb0[2].xyzx
lt r2.w, l(0.000000), cb5[2].w
if_nz r2.w
  dp3 r2.w, r7.xyzx, r7.xyzx
  rsq r2.w, r2.w
  mul r9.xyz, r2.wwww, r7.xyzx
  add r10.xyz, -r0.xyzx, cb5[0].xyzx
  div r10.xyz, r10.xyzx, r9.xyzx
  add r11.xyz, -r0.xyzx, cb5[1].xyzx
  div r11.xyz, r11.xyzx, r9.xyzx
  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  min r2.w, r10.y, r10.x
  min r2.w, r10.z, r2.w
  add r10.xyz, r0.xyzx, -cb5[2].xyzx
  mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
else
  mov r9.xyz, r7.xyzx
endif
mad r2.w, -r3.w, l(0.700000), l(1.700000)
mul r2.w, r2.w, r3.w
mul r2.w, r2.w, l(6.000000)
sample_l r9.xyzw, r9.xyzx, t5.xyzw, s0, r2.w
add r4.w, r9.w, l(-1.000000)
mad r4.w, cb5[3].w, r4.w, l(1.000000)
log r4.w, r4.w
mul r4.w, r4.w, cb5[3].y
exp r4.w, r4.w
mul r4.w, r4.w, cb5[3].x
mul r10.xyz, r9.xyzx, r4.wwww
lt r5.w, cb5[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb5[6].w
  if_nz r5.w
    dp3 r5.w, r7.xyzx, r7.xyzx
    rsq r5.w, r5.w
    mul r11.xyz, r5.wwww, r7.xyzx
    add r12.xyz, -r0.xyzx, cb5[4].xyzx
    div r12.xyz, r12.xyzx, r11.xyzx
    add r13.xyz, -r0.xyzx, cb5[5].xyzx
    div r13.xyz, r13.xyzx, r11.xyzx
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
    min r5.w, r12.y, r12.x
    min r5.w, r12.z, r5.w
    add r0.xyz, r0.xyzx, -cb5[6].xyzx
    mad r7.xyz, r11.xyzx, r5.wwww, r0.xyzx
  endif
  sample_l r7.xyzw, r7.xyzx, t6.xyzw, s0, r2.w
  add r0.x, r7.w, l(-1.000000)
  mad r0.x, cb5[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb5[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb5[7].x
  mul r0.xyz, r7.xyzx, r0.xxxx
  mad r7.xyz, r4.wwww, r9.xyzx, -r0.xyzx
  mad r10.xyz, cb5[1].wwww, r7.xyzx, r0.xyzx
endif
mul r0.xyz, r1.wwww, r10.xyzx
mad r4.xyz, cb0[6].xyzx, r4.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r4.xyz, r6.xxxx, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -r6.x, l(0.960000), l(0.960000)
mul r5.xyz, r1.wwww, r5.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r3.xyzx, r2.xyzx
dp3_sat r2.x, r3.xyzx, cb2[0].xyzx
dp3_sat r2.y, r3.xyzx, r1.xyzx
dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
mul r1.y, r1.x, r1.x
dp2 r1.y, r1.yyyy, r3.wwww
add r1.y, r1.y, l(-0.500000)
add r1.z, -r2.x, l(1.000000)
mul r2.z, r1.z, r1.z
mul r2.z, r2.z, r2.z
mul r1.z, r1.z, r2.z
mad r1.z, r1.y, r1.z, l(1.000000)
add r2.z, -|r0.w|, l(1.000000)
mul r2.w, r2.z, r2.z
mul r2.w, r2.w, r2.w
mul r2.z, r2.z, r2.w
mad r1.y, r1.y, r2.z, l(1.000000)
mul r1.y, r1.y, r1.z
mul r1.y, r2.x, r1.y
mul r1.z, r3.w, r3.w
max r1.z, r1.z, l(0.002000)
add r2.w, -r1.z, l(1.000000)
mad r3.x, |r0.w|, r2.w, r1.z
mad r2.w, r2.x, r2.w, r1.z
mul r0.w, |r0.w|, r2.w
mad r0.w, r2.x, r3.x, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r2.w, r1.z, r1.z
mad r3.x, r2.y, r2.w, -r2.y
mad r2.y, r3.x, r2.y, l(1.000000)
mul r2.w, r2.w, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r2.w, r2.y
mul r0.w, r0.w, r2.y
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.x, r0.w
max r0.w, r0.w, l(0.000000)
mad r1.z, r1.z, r1.z, l(1.000000)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
dp3 r2.x, r4.xyzx, r4.xyzx
ne r2.x, r2.x, l(0.000000)
and r2.x, r2.x, l(0x3f800000)
mul r0.w, r0.w, r2.x
mad r1.w, r6.w, cb0[9].x, -r1.w
add_sat r1.w, r1.w, l(1.000000)
mul r2.xyw, r1.yyyy, r8.xyxz
mul r3.xyz, r8.xyzx, r0.wwww
add r0.w, -r1.x, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.xyzw, r0.xyzw, r1.zzzx
add r6.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r6.xyz, r6.xyzx, r0.wwww, r4.xyzx
mul r3.xyz, r3.xyzx, r6.xyzx
mad r2.xyw, r5.xyxz, r2.xyxw, r3.xyxz
add r1.xyz, -r4.xyzx, r1.wwww
mad r1.xyz, r2.zzzz, r1.xyzx, r4.xyzx
mad o0.xyz, r0.xyzx, r1.xyzx, r2.xywx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used