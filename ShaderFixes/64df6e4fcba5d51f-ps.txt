// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 64df6e4fcba5d51f-ps.txt
// 3DMigoto: 64df6e4fcba5d51f | Matched 2 variants of 1 shaders: Lux Water/WaterSurface
//
//       Unity headers extracted from Lux Water_WaterSurface
//       Shader "Lux Water/WaterSurface" {
//         CustomEditor "LuxWaterMaterialEditor"
//         SubShader 1/1 {
//           LOD 200
//           Tags { "FORCENOSHADOWCASTING"="true" "QUEUE"="Transparent-1" "RenderType"="Opaque" }
//           Pass 2/4 {
//             Name "FORWARD"
//             Tags { "FORCENOSHADOWCASTING"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent-1" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             ZWrite [_ZWrite]
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Lux Water_WaterSurface:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 302 12 4
//      undeciphered1a: 14
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "GEOM_TYPE_BRANCH_DETAIL" "GEOM_TYPE_MESH" }
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "GEOM_TYPE_BRANCH_DETAIL" "GEOM_TYPE_MESH" }
//      undeciphered2: 1 7 8 7 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 544
//      Vector 32 [_LightColor0]
//      Vector 48 [_SpecColor]
//      Float 64 [_FresnelPower]
//      Float 96 [_ReflectionStrength]
//      Float 100 [_WaterIOR]
//      Vector 112 [_UnderWaterReflCol]
//      Float 128 [_ScatteringPower]
//      Vector 132 [_TranslucencyColor] 3
//      Vector 144 [_FarBumpSampleParams] 2
//      Vector 176 [_BumpScale]
//      Vector 192 [_FinalBumpSpeed01]
//      Float 340 [_Glossiness]
//      Float 344 [_InvFade]
//      Float 348 [_ReflectionBumpScale]
//      Vector 384 [_Color]
//      Vector 400 [_DepthAtten] 3
//      Float 412 [_Density]
//      Float 420 [_FogAbsorptionCancellation]
//      Float 424 [_AbsorptionHeight]
//      Float 428 [_AbsorptionMaxHeight]
//      Float 432 [_AbsorptionDepth]
//      Float 436 [_AbsorptionColorStrength]
//      Float 440 [_AbsorptionStrength]
//      Float 444 [_Refraction]
//      Vector 448 [_FoamColor]
//      Float 464 [_FoamScale]
//      Float 468 [_FoamSpeed]
//      Float 472 [_FoamParallax]
//      Float 476 [_FoamSoftIntersectionFactor]
//      Float 480 [_FoamTiling]
//      Float 484 [_FoamNormalScale]
//      Vector 512 [_GrabTexture_TexelSize]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      Vector 112 [_ZBufferParams]
//      ConstBuffer "UnityPerCameraRare" 352
//      Matrix 288 [unity_CameraToWorld]
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 624 [unity_SHAr]
//      Vector 640 [unity_SHAg]
//      Vector 656 [unity_SHAb]
//      Vector 736 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityShadows" 416
//      Vector 384 [_LightShadowData]
//      Vector 400 [unity_ShadowFadeCenterAndType]
//      ConstBuffer "UnityPerFrame" 368
//      Matrix 144 [unity_MatrixV]
//      ConstBuffer "UnityFog" 32
//      Vector 0 [unity_FogColor]
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_BumpMap] 2D 4
//      SetTexture 1 [_CameraDepthTexture] 2D 6
//      SetTexture 2 [_GrabTexture] 2D 5
//      SetTexture 3 [_MainTex] 2D 2
//      SetTexture 4 [_LuxWater_ReflectionTex] 2D 3
//      SetTexture 5 [_ShadowMapTexture] 2D 1
//      SetTexture 6 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerCameraRare" 2
//      BindCB "UnityLighting" 3
//      BindCB "UnityShadows" 4
//      BindCB "UnityPerFrame" 5
//      BindCB "UnityFog" 6
//      BindCB "UnityProbeVolume" 7
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:13:16 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xy
// TEXCOORD                 7   xyz         8     NONE   float   xyz
// TEXCOORD                 8   xyzw        9     NONE   float   xy w
// SV_IsFrontFace           0   x          10    FFACE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[33], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[47], immediateIndexed
dcl_constantbuffer cb4[26], immediateIndexed
dcl_constantbuffer cb5[12], immediateIndexed
dcl_constantbuffer cb6[2], immediateIndexed
dcl_constantbuffer cb7[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xy
dcl_input_ps linear v8.xyz
dcl_input_ps linear v9.xyw
dcl_input_ps_sgv v10.x, is_front_face
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 64df6e4fcba5d51f-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

movc r0.z, v10.x, l(1.000000), l(-1.000000)
mov r1.y, v1.w
mov r1.z, v2.w
mov r1.w, v3.w
add r2.xyz, -r1.yzwy, r15.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r2.xyzx
mul r4.xy, cb0[12].xyxx, cb1[0].xxxx
mul r4.xy, r4.xyxx, cb0[9].xxxx
mad r4.xy, v4.xyxx, cb0[9].xxxx, r4.xyxx
sample r4.xyzw, r4.xyxx, t0.xyzw, s4
mad r4.xz, r4.wwyw, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
mad r4.xz, r4.xxzx, l(0.050000, 0.000000, 0.050000, 0.000000), v4.xxyx
sample r5.xyzw, r4.xzxx, t0.xyzw, s4
mul_sat r1.x, v5.w, cb0[9].y
add r4.xy, r4.wyww, -r5.wyww
mad r4.xy, r1.xxxx, r4.xyxx, r5.wyww
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, cb0[11].xxxx
mad r4.zw, r4.xxxy, l(0.000000, 0.000000, 0.050000, 0.050000), v4.zzzw
sample r5.xyzw, r4.zwzz, t0.xyzw, s4
sample r6.xyzw, v7.xyxx, t0.xyzw, s4
mad r4.zw, r5.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mad r4.xy, r4.zwzz, cb0[11].yyyy, r4.xyxx
mad r4.zw, r6.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mad r4.xy, r4.zwzz, cb0[11].zzzz, r4.xyxx
dp2 r1.x, r4.xyxx, r4.xyxx
min r1.x, r1.x, l(1.000000)
add r1.x, -r1.x, l(1.000000)
sqrt r4.z, r1.x
dp3 r1.x, r4.xyzx, r4.xyzx
rsq r1.x, r1.x
mul r4.xyz, r1.xxxx, r4.xyzx
mul r4.xyz, r0.zzzz, r4.xyzx
dp3 r5.x, v1.xyzx, r4.xyzx
dp3 r5.y, v3.xyzx, r4.xyzx
add r6.xyz, r1.yzwy, -r15.xyzx
dp3 r1.x, r6.xyzx, r6.xyzx
rsq r1.x, r1.x
mul r5.zw, r1.xxxx, r6.xxxz
div r6.xy, v5.xyxx, v5.wwww
sample r7.xyzw, r6.xyxx, t1.xyzw, s6
mad r1.x, cb1[7].z, r7.x, cb1[7].w
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
add r1.x, r1.x, -v5.w
mul_sat r1.x, r1.x, cb0[21].z
add r2.w, -v5.z, l(1.000000)
mul r7.yz, cb0[27].wwww, cb0[32].xxyx
mul r7.yz, r2.wwww, r7.yyzy
mul r7.yz, r1.xxxx, r7.yyzy
mad r8.xy, r5.xyxx, r7.yzyy, v5.xyxx
div r8.xy, r8.xyxx, v5.wwww
sample_l r9.xyzw, r8.xyxx, t1.xyzw, s6, l(0.000000)
mad r2.w, cb1[7].z, r9.x, cb1[7].w
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
lt r2.w, r2.w, v5.w
mov r6.z, r7.x
mov r8.z, r9.x
movc r8.xyz, r2.wwww, r6.xyzx, r8.xyzx
mad r6.zw, cb1[7].zzzx, r8.zzzz, cb1[7].wwwy
div r6.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r6.zzzw
add r2.w, r6.z, -v5.w
mul_sat r3.w, r2.w, cb0[21].z
div r4.w, cb1[5].z, v6.z
mul r9.xyz, r4.wwww, v6.xyzx
mul r9.xyz, r6.wwww, r9.xyzx
mul r4.w, r9.y, cb2[19].y
mad r4.w, cb2[18].y, r9.x, r4.w
mad r4.w, cb2[20].y, r9.z, r4.w
add r4.w, r4.w, cb2[21].y
add r4.w, -r4.w, v6.w
add r5.x, r4.w, -cb0[25].x
div_sat r5.x, r5.x, cb0[25].y
mul r5.x, r5.x, l(-11.541560)
exp r5.x, r5.x
add r5.x, -r5.x, l(1.000000)
mov_sat r6.z, cb0[25].z
mul r5.x, r5.x, r6.z
movc r6.z, v10.x, r2.w, v5.w
mul r6.w, -r6.z, cb0[25].w
mul r6.w, r6.w, l(1.442695)
exp r6.w, r6.w
add r6.w, -r6.w, l(1.000000)
max r6.w, r6.w, l(0.000000)
max r5.x, r5.x, r6.w
div_sat r4.w, r4.w, cb0[26].w
mul r4.w, r4.w, -r4.w
mul r4.w, r4.w, cb0[26].z
exp r4.w, r4.w
mul r6.z, -r6.z, cb0[27].x
mul r6.z, r6.z, l(1.442695)
exp r6.z, r6.z
mul r4.w, r4.w, r6.z
min r4.w, r4.w, l(1.000000)
add r4.w, r4.w, l(-1.000000)
mad r4.w, cb0[27].z, r4.w, l(1.000000)
mad_sat r4.w, r5.x, cb0[26].y, r4.w
add r9.xyzw, -r4.wwww, l(1.000000, -0.450000, -0.029000, -0.018000)
mul r6.z, r9.x, cb0[27].y
mad_sat r9.xyz, r6.zzzz, r9.yzwy, r4.wwww
sample_l r8.xyzw, r8.xyxx, t2.xyzw, s5, l(0.000000)
mul r4.w, r5.y, cb0[29].z
mul r5.y, cb0[29].y, cb1[0].x
mul r6.zw, r5.yyyy, cb0[12].xxxy
mad r6.zw, v4.xxxy, cb0[30].xxxx, r6.zzzw
mad r5.yz, r5.zzwz, r4.wwww, r6.zzwz
sample r10.xyzw, r5.yzyy, t3.xyzw, s2
add r4.w, r4.z, r4.z
mul_sat r2.w, r2.w, cb0[29].w
mad_sat r4.w, -r2.w, r4.w, l(1.000000)
mad r2.w, -r2.w, r2.w, r2.w
max r2.w, r2.w, l(0.000000)
mul r2.w, r2.w, r4.w
dp2 r4.w, r4.xxxx, r4.zzzz
add_sat r4.w, r4.w, l(0.600000)
mul r2.w, r2.w, r4.w
mul_sat r2.w, r2.w, cb0[29].x
add r4.w, -r10.w, l(0.800000)
add r4.w, r2.w, -r4.w
mul_sat r4.w, r4.w, l(1.250000)
mad r5.y, r4.w, l(-2.000000), l(3.000000)
mul r4.w, r4.w, r4.w
mul r4.w, r4.w, r5.y
mul r2.w, r2.w, r4.w
mul r2.w, r2.w, cb0[29].x
mul_sat r2.w, r2.w, cb0[28].w
mul r4.w, r2.w, cb0[30].y
mul r10.x, r10.x, r10.x
mad r5.yz, r10.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
mul r10.xy, r4.wwww, r5.yzyy
dp2 r4.w, r10.xyxx, r10.xyxx
min r4.w, r4.w, l(1.000000)
add r4.w, -r4.w, l(1.000000)
sqrt r10.z, r4.w
add r4.w, -r2.w, l(1.000000)
mad r5.yzw, r10.xxyz, r0.zzzz, -r4.xxyz
mad r4.xyz, r2.wwww, r5.yzwy, r4.xyzx
add r5.y, -cb0[21].y, l(0.100000)
mad r5.y, r2.w, r5.y, cb0[21].y
mov r0.xy, l(0,0,0,0)
add r10.xyz, -r0.yyzy, r4.xyzx
mad r0.xyz, cb0[21].wwww, r10.xyzx, r0.xyzx
dp3 r10.x, v1.xyzx, r0.xyzx
dp3 r10.y, v3.xyzx, r0.xyzx
mad r0.xy, r10.xyxx, r7.yzyy, r6.xyxx
sample r6.xyzw, r0.xyxx, t4.xyzw, s3
div r0.x, v5.z, cb1[5].y
add r0.x, -r0.x, l(1.000000)
mul r0.x, r0.x, cb1[5].z
max r0.x, r0.x, l(0.000000)
mov r7.x, cb5[9].z
mov r7.y, cb5[10].z
mov r7.z, cb5[11].z
dp3 r0.y, r2.xyzx, r7.xyzx
add r7.xyz, r1.yzwy, -cb4[25].xyzx
dp3 r0.z, r7.xyzx, r7.xyzx
sqrt r0.z, r0.z
add r0.z, -r0.y, r0.z
mad r0.y, cb4[25].w, r0.z, r0.y
mad_sat r0.y, r0.y, cb4[24].z, cb4[24].w
eq r0.z, cb7[0].x, l(1.000000)
if_nz r0.z
  eq r5.z, cb7[0].y, l(1.000000)
  mul r7.xyz, v2.wwww, cb7[2].xyzx
  mad r7.xyz, cb7[1].xyzx, v1.wwww, r7.xyzx
  mad r7.xyz, cb7[3].xyzx, v3.wwww, r7.xyzx
  add r7.xyz, r7.xyzx, cb7[4].xyzx
  movc r7.xyz, r5.zzzz, r7.xyzx, r1.yzwy
  add r7.xyz, r7.xyzx, -cb7[6].xyzx
  mul r7.yzw, r7.xxyz, cb7[5].xxyz
  mad r5.z, r7.y, l(0.250000), l(0.750000)
  mad r5.w, cb7[0].z, l(0.500000), l(0.750000)
  max r7.x, r5.w, r5.z
  sample r7.xyzw, r7.xzwx, t6.xyzw, s0
else
  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r5.z, r7.xyzw, cb3[46].xyzw
div r7.xy, v9.xyxx, v9.wwww
sample r7.xyzw, r7.xyxx, t5.xyzw, s1
add r5.z, r5.z, -r7.x
mad r0.y, r0.y, r5.z, r7.x
dp3 r7.x, v1.xyzx, r4.xyzx
dp3 r7.y, v2.xyzx, r4.xyzx
dp3 r7.z, v3.xyzx, r4.xyzx
dp3 r4.x, r7.xyzx, r7.xyzx
rsq r4.x, r4.x
mul r7.xyz, r4.xxxx, r7.xyzx
mul r4.xyz, r0.yyyy, cb0[2].xyzx
if_nz r0.z
  eq r0.y, cb7[0].y, l(1.000000)
  mul r10.xyz, v2.wwww, cb7[2].xyzx
  mad r10.xyz, cb7[1].xyzx, v1.wwww, r10.xyzx
  mad r10.xyz, cb7[3].xyzx, v3.wwww, r10.xyzx
  add r10.xyz, r10.xyzx, cb7[4].xyzx
  movc r1.yzw, r0.yyyy, r10.xxyz, r1.yyzw
  add r1.yzw, r1.yyzw, -cb7[6].xxyz
  mul r10.yzw, r1.yyzw, cb7[5].xxyz
  mul r0.y, r10.y, l(0.250000)
  mul r0.z, cb7[0].z, l(0.500000)
  mad r1.y, -cb7[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.z, r0.y
  min r10.x, r1.y, r0.y
  sample r11.xyzw, r10.xzwx, t6.xyzw, s0
  add r1.yzw, r10.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r12.xyzw, r1.yzwy, t6.xyzw, s0
  add r1.yzw, r10.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r10.xyzw, r1.yzwy, t6.xyzw, s0
  mov r7.w, l(1.000000)
  dp4 r11.x, r11.xyzw, r7.xyzw
  dp4 r11.y, r12.xyzw, r7.xyzw
  dp4 r11.z, r10.xyzw, r7.xyzw
else
  mov r7.w, l(1.000000)
  dp4 r11.x, cb3[39].xyzw, r7.xyzw
  dp4 r11.y, cb3[40].xyzw, r7.xyzw
  dp4 r11.z, cb3[41].xyzw, r7.xyzw
endif
add r1.yzw, r11.xxyz, v8.xxyz
max r1.yzw, r1.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
max r0.y, cb0[3].y, cb0[3].x
max r0.y, r0.y, cb0[3].z
add r0.y, -r0.y, l(1.000000)
add r0.z, -r5.y, l(1.000000)
mad r2.xyz, r2.xyzx, r0.wwww, cb3[0].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, r7.xyzx, r3.xyzx
dp3_sat r5.z, r7.xyzx, cb3[0].xyzx
dp3_sat r5.w, r7.xyzx, r2.xyzx
dp3_sat r2.x, cb3[0].xyzx, r2.xyzx
mul r2.y, r0.z, r0.z
mad r2.z, -r0.z, r0.z, l(1.000000)
mad r6.w, |r0.w|, r2.z, r2.y
mad r2.z, r5.z, r2.z, r2.y
mul r2.z, |r0.w|, r2.z
mad r2.z, r5.z, r6.w, r2.z
add r2.z, r2.z, l(0.000010)
div r2.z, l(0.500000), r2.z
mul r6.w, r2.y, r2.y
mad r7.w, r5.w, r6.w, -r5.w
mad r5.w, r7.w, r5.w, l(1.000000)
mul r6.w, r6.w, l(0.318309873)
mad r5.w, r5.w, r5.w, l(1.000000012E-007)
div r5.w, r6.w, r5.w
mul r2.z, r2.z, r5.w
mul r2.z, r2.z, l(3.14159274)
mul r2.z, r5.z, r2.z
max r2.z, r2.z, l(0.000000)
mul r10.xyz, r4.xyzx, r2.zzzz
add r2.z, -r2.x, l(1.000000)
mul r5.w, r2.z, r2.z
mul r5.w, r5.w, r5.w
mul r2.z, r2.z, r5.w
add r11.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r11.xyz, r11.xyzx, r2.zzzz, cb0[3].xyzx
mad r2.y, r2.y, r2.y, l(1.000000)
div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
add r0.y, -r0.y, r5.y
add_sat r0.y, r0.y, l(1.000000)
mul r2.z, cb0[6].y, l(0.999707043)
mul r2.z, r2.z, r2.z
mad r5.y, -|r0.w|, |r0.w|, l(1.000000)
mul r5.w, r2.z, r5.y
ge r5.w, l(1.000000), r5.w
mad r2.z, -r2.z, r5.y, l(1.000000)
sqrt r2.z, r2.z
add r2.z, -r2.z, l(1.000000)
mul r5.y, r2.z, r2.z
mul r5.y, r5.y, r5.y
mul r2.z, r2.z, r5.y
add r5.y, r0.y, l(-0.020370)
mad r2.z, r2.z, r5.y, l(0.020370)
movc r2.z, r5.w, r2.z, l(1.000000)
add r0.w, -|r0.w|, l(1.000000)
log r5.y, r0.w
mul r5.y, r5.y, cb0[4].x
exp r5.y, r5.y
add r12.xyz, r0.yyyy, -cb0[3].xyzx
mad r12.xyz, r5.yyyy, r12.xyzx, cb0[3].xyzx
movc r12.xyz, v10.xxxx, r12.xyzx, r2.zzzz
mul r0.y, r2.x, r2.x
dp2 r0.y, r0.yyyy, r0.zzzz
add r0.y, r0.y, l(-0.500000)
add r0.z, -r5.z, l(1.000000)
mul r2.x, r0.z, r0.z
mul r2.x, r2.x, r2.x
mul r0.z, r0.z, r2.x
mad r0.z, r0.y, r0.z, l(1.000000)
mul r2.x, r0.w, r0.w
mul r2.x, r2.x, r2.x
mul r0.w, r0.w, r2.x
mad r0.y, r0.y, r0.w, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.y, r5.z, r0.y
mul r2.xzw, r2.wwww, cb0[28].xxyz
mad r0.yzw, r4.xxyz, r0.yyyy, r1.yyzw
mul r0.yzw, r0.yyzw, r2.xxzw
mov_sat r2.x, cb3[0].y
mul r2.xzw, r2.xxxx, r4.xxyz
dp3 r5.y, cb3[0].xyzx, r3.xyzx
add_sat r5.y, r5.y, l(1.750000)
add r5.y, -r5.y, l(1.000000)
mad r5.y, r5.y, l(2.000000), l(1.000000)
mad r1.yzw, r2.xxzw, r5.yyyy, r1.yyzw
add r2.x, -r5.x, l(1.000000)
mul r5.yzw, r0.yyzw, r2.xxxx
movc r0.yzw, v10.xxxx, r0.yyzw, r5.yyzw
add r5.yzw, -r12.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
mul r13.xyz, r5.yzwy, r8.xyzx
mul r13.xyz, r4.wwww, r13.xyzx
movc r13.xyz, v10.xxxx, r8.xyzx, r13.xyzx
mad r1.yzw, cb0[24].xxyz, r1.yyzw, -r13.xxyz
mad r1.yzw, r5.xxxx, r1.yyzw, r13.xxyz
mul r13.xyz, r9.xyzx, r1.yzwy
mul r2.yzw, r6.xxyz, r2.yyyy
mul r2.yzw, r12.xxyz, r2.yyzw
mul r2.yzw, r2.yyzw, cb0[6].xxxx
movc r6.xyz, v10.xxxx, l(1.000000,1.000000,1.000000,0), cb0[7].xyzx
mul r2.yzw, r2.yyzw, r6.xxyz
mad r2.yzw, r10.xxyz, r11.xxyz, r2.yyzw
mad r1.yzw, r1.yyzw, r9.xxyz, r0.yyzw
mul r6.xyz, r2.xxxx, r2.yzwy
mul r9.xyz, r4.wwww, r13.xyzx
mad r0.yzw, r9.xxyz, r5.yyzw, r0.yyzw
movc r0.yzw, v10.xxxx, r0.yyzw, r1.yyzw
movc r1.yzw, v10.xxxx, r2.yyzw, r6.xxyz
add r0.yzw, r0.yyzw, r1.yyzw
mad r1.yzw, -r7.xxyz, l(0.000000, 0.100000, 0.100000, 0.100000), cb3[0].xxyz
dp3_sat r1.y, -r1.yzwy, r3.xyzx
mad r1.y, r1.y, cb0[8].x, -cb0[8].x
exp r1.y, r1.y
add r1.z, -|r7.y|, l(1.000000)
add_sat r1.z, r1.z, r1.z
mul r1.y, r1.z, r1.y
mul r1.yzw, r4.xxyz, r1.yyyy
mul r1.yzw, r4.wwww, r1.yyzw
mul r1.yzw, r1.yyzw, cb0[8].yyzw
mul_sat r1.yzw, r1.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
add r0.yzw, r0.yyzw, r1.yyzw
add r0.yzw, -r8.xxyz, r0.yyzw
mad r0.yzw, r3.wwww, r0.yyzw, r8.xxyz
mad_sat r0.x, r0.x, cb6[1].z, cb6[1].w
add r1.yzw, r0.yyzw, -cb6[0].xxyz
mad r1.yzw, r0.xxxx, r1.yyzw, cb6[0].xxyz
movc o0.xyz, v10.xxxx, r1.yzwy, r0.yzwy
mov o0.w, r1.x
ret
// Approximately 0 instruction slots used