// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 0ba556f0f9fb30a1-ps.txt
// 3DMigoto: 0ba556f0f9fb30a1 |    Unity headers extracted from AdvancedTerrainGrass_Internal-DeferredShading
//    Shader "AdvancedTerrainGrass/Internal-DeferredShading" {
//      SubShader 1/1 {
//        Pass 1/2 {
//          Tags { "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from AdvancedTerrainGrass_Internal-DeferredShading:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 112 5 1
//   undeciphered1a: 9
//   Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "UNITY_HDR_ON" }
//   undeciphered2: 1 6 4 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 48 [_LightDir]
//   Vector 80 [_LightColor]
//   Matrix 112 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_ShadowMapTexture] 2D 2
//   SetTexture 2 [_LightTexture0] 2D 1
//   SetTexture 3 [_CameraGBufferTexture0] 2D 3
//   SetTexture 4 [_CameraGBufferTexture1] 2D 4
//   SetTexture 5 [_CameraGBufferTexture2] 2D 5
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//   BindCB "UnityShadows" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:29:00 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 3      w        2     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 14

// New input from vertex shader with unity_CameraInvProjection[0].x:
dcl_input_ps linear v2.w
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 0ba556f0f9fb30a1-ps.txt

mul r9.w, -r9.x, r9.y
ne r11.x, l(0.0, 0.0, 0.0, 0.0), v2.w
if_nz r11.x
  mul r9.w, r9.w, v2.w
  mad r10.xyz, -r9.wwww, cb2[18].xyzw, cb1[4].xyzw
else
  mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw
endif

div r0.x, cb1[5].z, v2.z
mul r0.xyz, r0.xxxx, v2.xyzx
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r2.xyz, r0.wwww, r0.xyzx

// copy depth from r2.z to r12.x:
mov r12.x, r2.z


// Unity light/shadow fix (pixel shader stage) inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 0ba556f0f9fb30a1-ps.txt

add r13.x, r12.x, -r9.y
mul r13.x, r9.x, r13.x
ne r9.w, l(0.0, 0.0, 0.0, 0.0), v2.w
if_nz r9.w
  mad r2.x, -r13.x, v2.w, r2.x
endif

mul r3.xyz, r2.yyyy, cb2[19].xyzx
mad r2.xyw, cb2[18].xyxz, r2.xxxx, r3.xyxz
mad r2.xyw, cb2[20].xyxz, r2.zzzz, r2.xyxw
add r2.xyw, r2.xyxw, cb2[21].xyxz

if_z r9.w
  mad r2.xyw, -r13.xxxx, cb10[0].xyxz, r2.xyzw
endif

add r3.xyz, r2.xywx, -cb3[25].xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
sqrt r0.x, r0.x
mad r0.x, -r0.z, r0.w, r0.x
mad r0.x, cb3[25].w, r0.x, r2.z
mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
sample r3.xyzw, r1.xyxx, t1.xyzw, s2
add r0.y, -r3.x, l(1.000000)
mad r0.x, r0.x, r0.y, r3.x
mul r0.yz, r2.yyyy, cb0[8].xxyx
mad r0.yz, cb0[7].xxyx, r2.xxxx, r0.yyzy
mad r0.yz, cb0[9].xxyx, r2.wwww, r0.yyzy
add r0.yz, r0.yyzy, cb0[10].xxyx
sample_b r3.xyzw, r0.yzyy, t2.xyzw, s1, l(-8.000000)
mul r0.x, r0.x, r3.w
sample r3.xyzw, r1.xyxx, t3.xyzw, s3
sample r4.xyzw, r1.xyxx, t4.xzwy, s4
sample r1.xyzw, r1.xyxx, t5.xyzw, s5
mad r0.y, r1.w, l(3.000000), l(0.500000)
round_ni r0.y, r0.y
eq r0.y, r0.y, l(2.000000)
and r0.z, r0.y, l(0x3f800000)
mul r5.xyz, r0.xxxx, cb0[5].xyzx
movc r6.xyz, r0.yyyy, r4.xxxx, r4.xwyx
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
add r2.xyz, r2.xywx, -r10.xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r7.xyz, r0.xxxx, r2.xyzx
eq r0.w, r4.x, l(1.000000)
and r0.z, r0.z, r0.w
ne r0.w, l(0.000000, 0.000000, 0.000000, 0.000000), r0.z
mov r4.x, l(0.040000)
mov r6.w, l(1.000000)
movc r6.xyzw, r0.wwww, r4.xxxw, r6.xyzw
dp3_sat r0.w, r1.xyzx, -cb0[3].xyzx
add r1.w, -r4.z, l(1.000000)
mad r2.xyz, -r2.xyzx, r0.xxxx, -cb0[3].xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
max r0.x, r0.x, l(0.001000)
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r2.xyzx
dp3 r0.x, r1.xyzx, -r7.xyzx
dp3_sat r2.w, r1.xyzx, r2.xyzx
dp3_sat r2.x, -cb0[3].xyzx, r2.xyzx
mul r2.y, r2.x, r2.x
dp2 r2.y, r2.yyyy, r1.wwww
add r2.y, r2.y, l(-0.500000)
add r2.z, -r0.w, l(1.000000)
mul r3.w, r2.z, r2.z
mul r3.w, r3.w, r3.w
mul r3.w, r2.z, r3.w
mad r3.w, r2.y, r3.w, l(1.000000)
add r4.x, -|r0.x|, l(1.000000)
mul r4.z, r4.x, r4.x
mul r4.z, r4.z, r4.z
mul r4.x, r4.x, r4.z
mad r2.y, r2.y, r4.x, l(1.000000)
mul r2.y, r2.y, r3.w
mul r2.y, r0.w, r2.y
mul r3.w, r1.w, r1.w
mad r1.w, -r1.w, r1.w, l(1.000000)
mad r4.x, |r0.x|, r1.w, r3.w
mad r1.w, r0.w, r1.w, r3.w
mul r0.x, |r0.x|, r1.w
mad r0.x, r0.w, r4.x, r0.x
add r0.x, r0.x, l(0.000010)
div r0.x, l(0.500000), r0.x
mul r1.w, r3.w, r3.w
mad r3.w, r2.w, r1.w, -r2.w
mad r2.w, r3.w, r2.w, l(1.000000)
mul r1.w, r1.w, l(0.318309873)
mad r2.w, r2.w, r2.w, l(1.000000012E-007)
div r1.w, r1.w, r2.w
mul r0.x, r0.x, r1.w
mul r0.x, r0.x, l(3.14159274)
mul r0.x, r0.w, r0.x
max r0.x, r0.x, l(0.000000)
dp3 r0.w, r6.xyzx, r6.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.x, r0.w, r0.x
add r0.w, -r2.x, l(1.000000)
mul r1.w, r0.w, r0.w
mul r1.w, r1.w, r1.w
mul r0.w, r0.w, r1.w
add r8.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r6.xyz, r8.xyzx, r0.wwww, r6.xyzx
mul r6.xyz, r0.xxxx, r6.xyzx
mul r6.xyz, r6.wwww, r6.xyzx
mul r2.xyw, r2.yyyy, r5.xyxz
mul r6.yzw, r5.xxyz, r6.xxyz
mad r2.xyw, r3.xyxz, r2.xyxw, r6.yzyw
if_nz r0.y
  mul r0.x, r4.w, l(10.000000)
  mad r0.y, -r4.w, l(10.000000), l(6.000000)
  mad r0.x, r0.z, r0.y, r0.x
  mad r1.xyz, r1.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000), -cb0[3].xyzx
  dp3_sat r0.y, r1.xyzx, r7.xyzx
  mad r0.x, r0.y, r0.x, -r0.x
  exp r0.x, r0.x
  mul r0.xyw, r5.xyxz, r0.xxxx
  add r1.x, -r2.z, l(1.000000)
  mad r0.z, r0.z, r1.x, r2.z
  mul r0.xyz, r0.zzzz, r0.xywx
  mul r1.xyz, r3.xyzx, r4.yyyy
  mul r0.xyz, r0.xyzx, r1.xyzx
  mul r0.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
  mov_sat r6.x, r6.x
  add r0.w, -r6.x, l(1.000000)
  mad r2.xyw, r0.xyxz, r0.wwww, r2.xyxw
endif
mov o0.xyz, r2.xywx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used