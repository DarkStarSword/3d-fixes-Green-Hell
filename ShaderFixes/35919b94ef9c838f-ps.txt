// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 35919b94ef9c838f-ps.txt
// 3DMigoto: 35919b94ef9c838f |    Unity headers extracted from AdvancedTerrainGrass_Internal-DeferredShading
//    Shader "AdvancedTerrainGrass/Internal-DeferredShading" {
//      SubShader 1/1 {
//        Pass 1/2 {
//          Tags { "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from AdvancedTerrainGrass_Internal-DeferredShading:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 98 4 1
//   undeciphered1a: 7
//   Keywords { "DIRECTIONAL" "UNITY_HDR_ON" }
//   undeciphered2: 1 4 3 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 48 [_LightDir]
//   Vector 80 [_LightColor]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_CameraGBufferTexture0] 2D 1
//   SetTexture 2 [_CameraGBufferTexture1] 2D 2
//   SetTexture 3 [_CameraGBufferTexture2] 2D 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:48:34 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 3      w        2     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 12

// New input from vertex shader with unity_CameraInvProjection[0].x:
dcl_input_ps linear v2.w
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 35919b94ef9c838f-ps.txt

mul r7.w, -r7.x, r7.y
ne r9.x, l(0.0, 0.0, 0.0, 0.0), v2.w
if_nz r9.x
  mul r7.w, r7.w, v2.w
  mad r8.xyz, -r7.wwww, cb2[18].xyzw, cb1[4].xyzw
else
  mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw
endif

div r0.x, cb1[5].z, v2.z
mul r0.xyz, r0.xxxx, v2.xyzx
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.xyz, r0.wwww, r0.xyzx

// copy depth from r0.z to r10.x:
mov r10.x, r0.z


// Unity light/shadow fix (pixel shader stage) inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed 35919b94ef9c838f-ps.txt

add r11.x, r10.x, -r7.y
mul r11.x, r7.x, r11.x
ne r7.w, l(0.0, 0.0, 0.0, 0.0), v2.w
if_nz r7.w
  mad r0.x, -r11.x, v2.w, r0.x
endif

mul r2.xyz, r0.yyyy, cb2[19].xyzx
mad r0.xyw, cb2[18].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb2[20].xyzx, r0.zzzz, r0.xywx
add r0.xyz, r0.xyzx, cb2[21].xyzx

if_z r7.w
  mad r0.xyz, -r11.xxxx, cb10[0].xyzx, r0.xyzw
endif

sample r2.xyzw, r1.xyxx, t1.xyzw, s1
sample r3.xyzw, r1.xyxx, t2.xzwy, s2
sample r1.xyzw, r1.xyxx, t3.xyzw, s3
mad r0.w, r1.w, l(3.000000), l(0.500000)
round_ni r0.w, r0.w
eq r0.w, r0.w, l(2.000000)
and r1.w, r0.w, l(0x3f800000)
movc r4.xyz, r0.wwww, r3.xxxx, r3.xwyx
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r2.w, r1.xyzx, r1.xyzx
rsq r2.w, r2.w
mul r1.xyz, r1.xyzx, r2.wwww
add r0.xyz, r0.xyzx, -r8.xyzx
dp3 r2.w, r0.xyzx, r0.xyzx
rsq r2.w, r2.w
mul r5.xyz, r0.xyzx, r2.wwww
eq r5.w, r3.x, l(1.000000)
and r1.w, r1.w, r5.w
ne r5.w, l(0.000000, 0.000000, 0.000000, 0.000000), r1.w
mov r3.x, l(0.040000)
mov r4.w, l(1.000000)
movc r4.xyzw, r5.wwww, r3.xxxw, r4.xyzw
dp3_sat r3.x, r1.xyzx, -cb0[3].xyzx
add r3.z, -r3.z, l(1.000000)
mad r0.xyz, -r0.xyzx, r2.wwww, -cb0[3].xyzx
dp3 r2.w, r0.xyzx, r0.xyzx
max r2.w, r2.w, l(0.001000)
rsq r2.w, r2.w
mul r0.xyz, r0.xyzx, r2.wwww
dp3 r2.w, r1.xyzx, -r5.xyzx
dp3_sat r5.w, r1.xyzx, r0.xyzx
dp3_sat r0.x, -cb0[3].xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r3.zzzz
add r0.y, r0.y, l(-0.500000)
add r0.z, -r3.x, l(1.000000)
mul r6.x, r0.z, r0.z
mul r6.x, r6.x, r6.x
mul r6.x, r0.z, r6.x
mad r6.x, r0.y, r6.x, l(1.000000)
add r6.y, -|r2.w|, l(1.000000)
mul r6.z, r6.y, r6.y
mul r6.z, r6.z, r6.z
mul r6.y, r6.y, r6.z
mad r0.y, r0.y, r6.y, l(1.000000)
mul r0.y, r0.y, r6.x
mul r0.y, r3.x, r0.y
mul r6.x, r3.z, r3.z
mad r3.z, -r3.z, r3.z, l(1.000000)
mad r6.y, |r2.w|, r3.z, r6.x
mad r3.z, r3.x, r3.z, r6.x
mul r2.w, |r2.w|, r3.z
mad r2.w, r3.x, r6.y, r2.w
add r2.w, r2.w, l(0.000010)
div r2.w, l(0.500000), r2.w
mul r3.z, r6.x, r6.x
mad r6.x, r5.w, r3.z, -r5.w
mad r5.w, r6.x, r5.w, l(1.000000)
mul r3.z, r3.z, l(0.318309873)
mad r5.w, r5.w, r5.w, l(1.000000012E-007)
div r3.z, r3.z, r5.w
mul r2.w, r2.w, r3.z
mul r2.w, r2.w, l(3.14159274)
mul r2.w, r3.x, r2.w
max r2.w, r2.w, l(0.000000)
dp3 r3.x, r4.xyzx, r4.xyzx
ne r3.x, r3.x, l(0.000000)
and r3.x, r3.x, l(0x3f800000)
mul r2.w, r2.w, r3.x
add r0.x, -r0.x, l(1.000000)
mul r3.x, r0.x, r0.x
mul r3.x, r3.x, r3.x
mul r0.x, r0.x, r3.x
add r6.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyz, r6.xyzx, r0.xxxx, r4.xyzx
mul r4.xyz, r2.wwww, r4.xyzx
mul r4.xyz, r4.wwww, r4.xyzx
mul r6.xyz, r0.yyyy, cb0[5].xyzx
mul r4.yzw, r4.xxyz, cb0[5].xxyz
mad r4.yzw, r2.xxyz, r6.xxyz, r4.yyzw
if_nz r0.w
  mul r0.x, r3.w, l(10.000000)
  mad r0.y, -r3.w, l(10.000000), l(6.000000)
  mad r0.x, r1.w, r0.y, r0.x
  mad r1.xyz, r1.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000), -cb0[3].xyzx
  dp3_sat r0.y, r1.xyzx, r5.xyzx
  mad r0.x, r0.y, r0.x, -r0.x
  exp r0.x, r0.x
  mul r0.xyw, r0.xxxx, cb0[5].xyxz
  add r1.x, -r0.z, l(1.000000)
  mad r0.z, r1.w, r1.x, r0.z
  mul r0.xyz, r0.zzzz, r0.xywx
  mul r1.xyz, r2.xyzx, r3.yyyy
  mul r0.xyz, r0.xyzx, r1.xyzx
  mul r0.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
  mov_sat r4.x, r4.x
  add r0.w, -r4.x, l(1.000000)
  mad r4.yzw, r0.xxyz, r0.wwww, r4.yyzw
endif
mov o0.xyz, r4.yzwy
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used