// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 565241a22ebe7d89-ps.txt
// 3DMigoto: 565241a22ebe7d89 |    Unity headers extracted from Lux Water_WaterSurface
//    Shader "Lux Water/WaterSurface" {
//      CustomEditor "LuxWaterMaterialEditor"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "FORCENOSHADOWCASTING"="true" "QUEUE"="Transparent-1" "RenderType"="Opaque" }
//        Pass 3/4 {
//          Name "FORWARD"
//          Tags { "FORCENOSHADOWCASTING"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent-1" "RenderType"="Opaque" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Lux Water_WaterSurface:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 189 7 2
//   undeciphered1a: 7
//   Keywords { "DIRECTIONAL_COOKIE" "GEOM_TYPE_BRANCH" "USINGWATERVOLUME" }
//   undeciphered2: 1 4 5 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 592
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Float 128 [_FresnelPower]
//   Float 164 [_WaterIOR]
//   Float 192 [_ScatteringPower]
//   Vector 196 [_TranslucencyColor] 3
//   Vector 208 [_FarBumpSampleParams] 2
//   Vector 240 [_BumpScale]
//   Vector 256 [_FinalBumpSpeed01]
//   Float 280 [_WaterSurfaceYPos]
//   Float 404 [_Glossiness]
//   Float 408 [_InvFade]
//   Vector 432 [_Color]
//   Vector 448 [_DepthAtten] 3
//   Float 460 [_Density]
//   Float 468 [_FogAbsorptionCancellation]
//   Float 472 [_AbsorptionHeight]
//   Float 476 [_AbsorptionMaxHeight]
//   Float 480 [_AbsorptionDepth]
//   Float 484 [_AbsorptionColorStrength]
//   Float 488 [_AbsorptionStrength]
//   Float 492 [_Refraction]
//   Vector 560 [_GrabTexture_TexelSize]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_BumpMap] 2D 2
//   SetTexture 1 [_CameraDepthTexture] 2D 3
//   SetTexture 2 [_LightTexture0] 2D 1
//   SetTexture 3 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//   BindCB "UnityLighting" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:04:39 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyz
// TEXCOORD                 7   xyzw        8     NONE   float   xy
// TEXCOORD                 8   xy          9     NONE   float
// TEXCOORD                 9   xyzw       10     NONE   float
// SV_IsFrontFace           0   x          11    FFACE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[36], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[47], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xy
dcl_input_ps_sgv v11.x, is_front_face
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 565241a22ebe7d89-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

movc r0.x, v11.x, l(1.000000), l(-1.000000)
add r0.yzw, -v4.xxyz, r8.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r1.yzw, r0.yyzw, r1.xxxx
mul r2.xy, cb0[16].xyxx, cb1[0].xxxx
mul r2.xy, r2.xyxx, cb0[13].xxxx
mad r2.xy, v5.xyxx, cb0[13].xxxx, r2.xyxx
sample r2.xyzw, r2.xyxx, t0.xyzw, s2
mad r2.xz, r2.wwyw, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
mad r2.xz, r2.xxzx, l(0.050000, 0.000000, 0.050000, 0.000000), v5.xxyx
sample r3.xyzw, r2.xzxx, t0.xyzw, s2
mul_sat r2.x, v6.w, cb0[13].y
add r2.yz, r2.wwyw, -r3.wwyw
mad r2.xy, r2.xxxx, r2.yzyy, r3.wyww
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, cb0[15].xxxx
mad r2.zw, r2.xxxy, l(0.000000, 0.000000, 0.050000, 0.050000), v5.zzzw
sample r3.xyzw, r2.zwzz, t0.xyzw, s2
sample r4.xyzw, v8.xyxx, t0.xyzw, s2
mad r2.zw, r3.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mad r2.xy, r2.zwzz, cb0[15].yyyy, r2.xyxx
mad r2.zw, r4.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mad r2.xy, r2.zwzz, cb0[15].zzzz, r2.xyxx
dp2 r2.w, r2.xyxx, r2.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r2.z, r2.w
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mul r2.xyz, r0.xxxx, r2.xyzx
dp3 r3.x, v1.xyzx, r2.xyzx
dp3 r3.z, v3.xyzx, r2.xyzx
div r4.xy, v6.xyxx, v6.wwww
sample r4.xyzw, r4.xyxx, t1.xyzw, s3
mad r0.x, cb1[7].z, r4.x, cb1[7].w
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r0.x, r0.x, -v6.w
mul_sat r0.x, r0.x, cb0[25].z
add r2.w, -v6.z, l(1.000000)
mul r4.yz, cb0[30].wwww, cb0[35].xxyx
mul r4.yz, r2.wwww, r4.yyzy
mul r4.yz, r0.xxxx, r4.yyzy
mad r4.yz, r3.xxzx, r4.yyzy, v6.xxyx
div r4.yz, r4.yyzy, v6.wwww
mul r4.yz, r4.yyzy, cb0[35].zzwz
round_ni r4.yz, r4.yyzy
add r4.yz, r4.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
div r4.yz, r4.yyzy, cb0[35].zzwz
sample_l r5.xyzw, r4.yzyy, t1.xyzw, s3, l(0.000000)
mad r2.w, cb1[7].z, r5.x, cb1[7].w
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
lt r2.w, r2.w, v6.w
movc r2.w, r2.w, r4.x, r5.x
mad r4.xy, cb1[7].zxzz, r2.wwww, cb1[7].wyww
div r4.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyxx
add r2.w, r4.x, -v6.w
mul_sat r3.w, r2.w, cb0[25].z
div r4.x, cb1[5].z, v7.z
mul r4.xzw, r4.xxxx, v7.xxyz
mul r4.xyz, r4.yyyy, r4.xzwx
mul r4.y, r4.y, cb2[19].y
mad r4.x, cb2[18].y, r4.x, r4.y
mad r4.x, cb2[20].y, r4.z, r4.x
add r4.x, r4.x, cb2[21].y
add r4.x, -r4.x, cb0[17].z
add r4.y, r4.x, -cb0[28].x
div_sat r4.y, r4.y, cb0[28].y
mul r4.y, r4.y, l(-11.541560)
exp r4.y, r4.y
add r4.y, -r4.y, l(1.000000)
mov_sat r4.z, cb0[28].z
mul r4.y, r4.z, r4.y
movc r2.w, v11.x, r2.w, v6.w
mul r4.z, -r2.w, cb0[28].w
mul r4.z, r4.z, l(1.442695)
exp r4.z, r4.z
add r4.z, -r4.z, l(1.000000)
max r4.z, r4.z, l(0.000000)
max r4.y, r4.z, r4.y
div_sat r4.x, r4.x, cb0[29].w
mul r4.x, r4.x, -r4.x
mul r4.x, r4.x, cb0[29].z
exp r4.x, r4.x
mul r2.w, -r2.w, cb0[30].x
mul r2.w, r2.w, l(1.442695)
exp r2.w, r2.w
mul r2.w, r4.x, r2.w
min r2.w, r2.w, l(1.000000)
add r2.w, r2.w, l(-1.000000)
mad r2.w, cb0[30].z, r2.w, l(1.000000)
mad_sat r2.w, r4.y, cb0[29].y, r2.w
add r5.xyzw, -r2.wwww, l(1.000000, -0.450000, -0.029000, -0.018000)
mul r4.x, r5.x, cb0[30].y
mad_sat r4.xzw, r4.xxxx, r5.yyzw, r2.wwww
mul r5.xy, v4.yyyy, cb0[5].xyxx
mad r5.xy, cb0[4].xyxx, v4.xxxx, r5.xyxx
mad r5.xy, cb0[6].xyxx, v4.zzzz, r5.xyxx
add r5.xy, r5.xyxx, cb0[7].xyxx
eq r2.w, cb4[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb4[0].y, l(1.000000)
  mul r6.xyz, v4.yyyy, cb4[2].xyzx
  mad r6.xyz, cb4[1].xyzx, v4.xxxx, r6.xyzx
  mad r6.xyz, cb4[3].xyzx, v4.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb4[4].xyzx
  movc r6.xyz, r2.wwww, r6.xyzx, v4.xyzx
  add r6.xyz, r6.xyzx, -cb4[6].xyzx
  mul r6.yzw, r6.xxyz, cb4[5].xxyz
  mad r2.w, r6.y, l(0.250000), l(0.750000)
  mad r5.z, cb4[0].z, l(0.500000), l(0.750000)
  max r6.x, r2.w, r5.z
  sample r6.xyzw, r6.xzwx, t3.xyzw, s0
else
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r6.xyzw, cb3[46].xyzw
sample r5.xyzw, r5.xyxx, t2.xyzw, s1
mul r2.w, r2.w, r5.w
dp3 r3.y, v2.xyzx, r2.xyzx
dp3 r2.x, r3.xyzx, r3.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, r3.xyzx
mul r3.xyz, r2.wwww, cb0[2].xyzx
max r2.w, cb0[3].y, cb0[3].x
max r2.w, r2.w, cb0[3].z
add r2.w, -r2.w, l(1.000000)
add r5.x, -cb0[25].y, l(1.000000)
mad r0.yzw, r0.yyzw, r1.xxxx, cb3[0].xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
max r1.x, r1.x, l(0.001000)
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
dp3 r1.x, r2.xyzx, r1.yzwy
dp3_sat r5.y, r2.xyzx, cb3[0].xyzx
dp3_sat r5.z, r2.xyzx, r0.yzwy
dp3_sat r0.y, cb3[0].xyzx, r0.yzwy
mul r0.z, r5.x, r5.x
mad r0.w, -r5.x, r5.x, l(1.000000)
mad r5.x, |r1.x|, r0.w, r0.z
mad r0.w, r5.y, r0.w, r0.z
mul r0.w, r0.w, |r1.x|
mad r0.w, r5.y, r5.x, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r5.x, r5.z, r0.z, -r5.z
mad r5.x, r5.x, r5.z, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r5.x, r5.x, r5.x, l(1.000000012E-007)
div r0.z, r0.z, r5.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.z, r5.y, r0.z
max r0.z, r0.z, l(0.000000)
mul r5.xyz, r3.xyzx, r0.zzzz
add r0.y, -r0.y, l(1.000000)
mul r0.z, r0.y, r0.y
mul r0.z, r0.z, r0.z
mul r0.y, r0.y, r0.z
add r6.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.yzw, r6.xxyz, r0.yyyy, cb0[3].xxyz
mul r0.yzw, r0.yyzw, r5.xxyz
add r2.w, -r2.w, cb0[25].y
add_sat r2.w, r2.w, l(1.000000)
mul r5.x, cb0[10].y, l(0.999707043)
mul r5.x, r5.x, r5.x
mad r5.y, -|r1.x|, |r1.x|, l(1.000000)
mul r5.z, r5.y, r5.x
ge r5.z, l(1.000000), r5.z
mad r5.x, -r5.x, r5.y, l(1.000000)
sqrt r5.x, r5.x
add r5.x, -r5.x, l(1.000000)
mul r5.y, r5.x, r5.x
mul r5.y, r5.y, r5.y
mul r5.x, r5.x, r5.y
add r5.y, r2.w, l(-0.020370)
mad r5.x, r5.x, r5.y, l(0.020370)
movc r5.x, r5.z, r5.x, l(1.000000)
add r1.x, -|r1.x|, l(1.000000)
log r1.x, r1.x
mul r1.x, r1.x, cb0[8].x
exp r1.x, r1.x
add r5.yzw, r2.wwww, -cb0[3].xxyz
mad r5.yzw, r1.xxxx, r5.yyzw, cb0[3].xxyz
movc r5.xyz, v11.xxxx, r5.yzwy, r5.xxxx
mov_sat r1.x, cb3[0].y
mul r6.xyz, r1.xxxx, r3.xyzx
mul r6.xyz, r6.xyzx, cb0[27].xyzx
mul r6.xyz, r4.yyyy, r6.xyzx
mul r4.xzw, r4.xxzw, r6.xxyz
add r1.x, -r4.y, l(1.000000)
mul r6.xyz, r0.yzwy, r1.xxxx
add r5.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r5.xyz, r4.xzwx, r5.xyzx
movc r4.xyz, v11.xxxx, r5.xyzx, r4.xzwx
movc r0.yzw, v11.xxxx, r0.yyzw, r6.xxyz
add r0.yzw, r0.yyzw, r4.xxyz
mad r2.xzw, -r2.xxyz, l(0.100000, 0.000000, 0.100000, 0.100000), cb3[0].xxyz
dp3_sat r1.x, -r2.xzwx, r1.yzwy
mad r1.x, r1.x, cb0[12].x, -cb0[12].x
exp r1.x, r1.x
add r1.y, -|r2.y|, l(1.000000)
add_sat r1.y, r1.y, r1.y
mul r1.x, r1.y, r1.x
mul r1.xyz, r3.xyzx, r1.xxxx
mul r1.xyz, r1.xyzx, cb0[12].yzwy
mul_sat r1.xyz, r1.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
add r0.yzw, r0.yyzw, r1.xxyz
mul o0.xyz, r0.yzwy, r3.wwww
mov o0.w, r0.x
ret
// Approximately 0 instruction slots used