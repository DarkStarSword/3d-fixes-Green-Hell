// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b5328ee83410bbfb-ps.txt
// 3DMigoto: b5328ee83410bbfb |    Unity headers extracted from Nature_Terrain_Standard
//    Shader "Nature/Terrain/Standard" {
//      Fallback "Nature/Terrain/Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry-100" "RenderType"="Opaque" }
//        Pass 1/7 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry-100" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Nature_Terrain_Standard:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 236 14 8
//   undeciphered1a: 14
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "_NORMALMAP" }
//   undeciphered2: 1 13 8 12 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 32 [_LightColor0]
//   Vector 80 [_Control_TexelSize]
//   Vector 96 [_Splat0_ST]
//   Vector 112 [_Splat1_ST]
//   Vector 128 [_Splat2_ST]
//   Vector 144 [_Splat3_ST]
//   Float 160 [_NormalScale0]
//   Float 164 [_NormalScale1]
//   Float 168 [_NormalScale2]
//   Float 172 [_NormalScale3]
//   Float 176 [_Metallic0]
//   Float 180 [_Metallic1]
//   Float 184 [_Metallic2]
//   Float 188 [_Metallic3]
//   Float 192 [_Smoothness0]
//   Float 196 [_Smoothness1]
//   Float 200 [_Smoothness2]
//   Float 204 [_Smoothness3]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_Control] 2D 3
//   SetTexture 1 [_Splat0] 2D 4
//   SetTexture 2 [_Splat1] 2D 5
//   SetTexture 3 [_Splat2] 2D 6
//   SetTexture 4 [_Splat3] 2D 7
//   SetTexture 5 [_Normal0] 2D 8
//   SetTexture 6 [_Normal1] 2D 9
//   SetTexture 7 [_Normal2] 2D 10
//   SetTexture 8 [_Normal3] 2D 11
//   SetTexture 9 [_ShadowMapTexture] 2D 2
//   SetTexture 10 [unity_SpecCube0] CUBE 0
//   SetTexture 11 [unity_SpecCube1] CUBE -1
//   SetTexture 12 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityReflectionProbes" 6
//   BindCB "UnityProbeVolume" 7
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:00:57 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy
// TEXCOORD                 4   x           5     NONE   float   x
// TEXCOORD                 5    yzw        5     NONE   float    yzw
// TEXCOORD                 6   xyzw        6     NONE   float   xy w
// TEXCOORD                 7   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[8], immediateIndexed
dcl_constantbuffer cb7[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_sampler s11, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texturecube (float,float,float,float) t10
dcl_resource_texturecube (float,float,float,float) t11
dcl_resource_texture3d (float,float,float,float) t12
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_input_ps linear v5.x
dcl_input_ps linear v5.yzw
dcl_input_ps linear v6.xyw
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b5328ee83410bbfb-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v1.w
mov r0.y, v2.w
mov r0.z, v3.w
add r1.xyz, -r0.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
add r3.xy, cb0[5].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r3.xy, v4.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, cb0[5].xyxx
sample r3.xyzw, r3.xyxx, t0.xyzw, s3
dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r2.w, r1.w, l(0.001000)
div r3.xyzw, r3.xyzw, r2.wwww
mad r4.xy, v4.xyxx, cb0[6].xyxx, cb0[6].zwzz
mad r4.zw, v4.xxxy, cb0[7].xxxy, cb0[7].zzzw
mad r5.xy, v4.xyxx, cb0[8].xyxx, cb0[8].zwzz
mad r5.zw, v4.xxxy, cb0[9].xxxy, cb0[9].zzzw
sample r6.xyzw, r4.xyxx, t1.xyzw, s4
mul r6.xyzw, r3.xxxx, r6.xyzw
mul r6.w, r6.w, cb0[12].x
sample r7.xyzw, r4.zwzz, t2.xyzw, s5
mul r7.xyzw, r3.yyyy, r7.xyzw
mul r7.w, r7.w, cb0[12].y
add r6.xyzw, r6.xyzw, r7.xyzw
sample r7.xyzw, r5.xyxx, t3.xyzw, s6
mul r7.xyzw, r3.zzzz, r7.xyzw
mul r7.w, r7.w, cb0[12].z
add r6.xyzw, r6.xyzw, r7.xyzw
sample r7.xyzw, r5.zwzz, t4.xyzw, s7
mul r7.xyzw, r3.wwww, r7.xyzw
mul r7.w, r7.w, cb0[12].w
add r6.xyzw, r6.xyzw, r7.xyzw
sample r7.xyzw, r4.xyxx, t5.xyzw, s8
mul r7.x, r7.w, r7.x
mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r7.xy, r4.xyxx, cb0[10].xxxx
dp2 r2.w, r7.xyxx, r7.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r7.z, r2.w
sample r4.xyzw, r4.zwzz, t6.xyzw, s9
mul r4.x, r4.w, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, cb0[10].yyyy
dp2 r2.w, r4.xyxx, r4.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r4.z, r2.w
mul r4.xyz, r3.yyyy, r4.xyzx
mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
sample r7.xyzw, r5.xyxx, t7.xyzw, s10
mul r7.x, r7.w, r7.x
mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r7.xy, r5.xyxx, cb0[10].zzzz
dp2 r2.w, r7.xyxx, r7.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r7.z, r2.w
mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
sample r5.xyzw, r5.zwzz, t8.xyzw, s11
mul r5.x, r5.w, r5.x
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r5.xy, r5.xyxx, cb0[10].wwww
dp2 r2.w, r5.xyxx, r5.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r5.z, r2.w
mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
dp4 r2.w, r3.xyzw, cb0[11].xyzw
mov r3.x, cb4[9].z
mov r3.y, cb4[10].z
mov r3.z, cb4[11].z
dp3 r3.x, r1.xyzx, r3.xyzx
add r3.yzw, r0.xxyz, -cb3[25].xxyz
dp3 r3.y, r3.yzwy, r3.yzwy
sqrt r3.y, r3.y
add r3.y, -r3.x, r3.y
mad r3.x, cb3[25].w, r3.y, r3.x
mad_sat r3.x, r3.x, cb3[24].z, cb3[24].w
eq r3.y, cb7[0].x, l(1.000000)
if_nz r3.y
  eq r3.z, cb7[0].y, l(1.000000)
  mul r5.xyz, v2.wwww, cb7[2].xyzx
  mad r5.xyz, cb7[1].xyzx, v1.wwww, r5.xyzx
  mad r5.xyz, cb7[3].xyzx, v3.wwww, r5.xyzx
  add r5.xyz, r5.xyzx, cb7[4].xyzx
  movc r5.xyz, r3.zzzz, r5.xyzx, r0.xyzx
  add r5.xyz, r5.xyzx, -cb7[6].xyzx
  mul r5.yzw, r5.xxyz, cb7[5].xxyz
  mad r3.z, r5.y, l(0.250000), l(0.750000)
  mad r3.w, cb7[0].z, l(0.500000), l(0.750000)
  max r5.x, r3.w, r3.z
  sample r5.xyzw, r5.xzwx, t12.xyzw, s1
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r3.z, r5.xyzw, cb2[46].xyzw
div r5.xy, v6.xyxx, v6.wwww
sample r5.xyzw, r5.xyxx, t9.xyzw, s2
add r3.z, r3.z, -r5.x
mad r3.x, r3.x, r3.z, r5.x
add r4.w, r4.z, l(0.000010)
dp3 r5.x, v1.xyzx, r4.xywx
dp3 r5.y, v2.xyzx, r4.xywx
dp3 r5.z, v3.xyzx, r4.xywx
dp3 r3.z, r5.xyzx, r5.xyzx
rsq r3.z, r3.z
mul r4.xyz, r3.zzzz, r5.xyzx
add r3.z, -r6.w, l(1.000000)
dp3 r3.w, -r2.xyzx, r4.xyzx
add r3.w, r3.w, r3.w
mad r5.xyz, r4.xyzx, -r3.wwww, -r2.xyzx
mul r7.xyz, r3.xxxx, cb0[2].xyzx
if_nz r3.y
  eq r3.x, cb7[0].y, l(1.000000)
  mul r8.xyz, v2.wwww, cb7[2].xyzx
  mad r8.xyz, cb7[1].xyzx, v1.wwww, r8.xyzx
  mad r8.xyz, cb7[3].xyzx, v3.wwww, r8.xyzx
  add r8.xyz, r8.xyzx, cb7[4].xyzx
  movc r3.xyw, r3.xxxx, r8.xyxz, r0.xyxz
  add r3.xyw, r3.xyxw, -cb7[6].xyxz
  mul r8.yzw, r3.xxyw, cb7[5].xxyz
  mul r3.x, r8.y, l(0.250000)
  mul r3.y, cb7[0].z, l(0.500000)
  mad r3.w, -cb7[0].z, l(0.500000), l(0.250000)
  max r3.x, r3.y, r3.x
  min r8.x, r3.w, r3.x
  sample r9.xyzw, r8.xzwx, t12.xyzw, s1
  add r3.xyw, r8.xzxw, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r10.xyzw, r3.xywx, t12.xyzw, s1
  add r3.xyw, r8.xzxw, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r8.xyzw, r3.xywx, t12.xyzw, s1
  mov r4.w, l(1.000000)
  dp4 r9.x, r9.xyzw, r4.xyzw
  dp4 r9.y, r10.xyzw, r4.xyzw
  dp4 r9.z, r8.xyzw, r4.xyzw
else
  mov r4.w, l(1.000000)
  dp4 r9.x, cb2[39].xyzw, r4.xyzw
  dp4 r9.y, cb2[40].xyzw, r4.xyzw
  dp4 r9.z, cb2[41].xyzw, r4.xyzw
endif
add r3.xyw, r9.xyxz, v5.yzyw
max r3.xyw, r3.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r4.w, l(0.000000), cb6[2].w
if_nz r4.w
  dp3 r4.w, r5.xyzx, r5.xyzx
  rsq r4.w, r4.w
  mul r8.xyz, r4.wwww, r5.xyzx
  add r9.xyz, -r0.xyzx, cb6[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r0.xyzx, cb6[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r4.w, r9.y, r9.x
  min r4.w, r9.z, r4.w
  add r9.xyz, r0.xyzx, -cb6[2].xyzx
  mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
else
  mov r8.xyz, r5.xyzx
endif
mad r4.w, -r3.z, l(0.700000), l(1.700000)
mul r4.w, r3.z, r4.w
mul r4.w, r4.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t10.xyzw, s0, r4.w
add r5.w, r8.w, l(-1.000000)
mad r5.w, cb6[3].w, r5.w, l(1.000000)
log r5.w, r5.w
mul r5.w, r5.w, cb6[3].y
exp r5.w, r5.w
mul r5.w, r5.w, cb6[3].x
mul r9.xyz, r8.xyzx, r5.wwww
lt r7.w, cb6[1].w, l(0.999990)
if_nz r7.w
  lt r7.w, l(0.000000), cb6[6].w
  if_nz r7.w
    dp3 r7.w, r5.xyzx, r5.xyzx
    rsq r7.w, r7.w
    mul r10.xyz, r5.xyzx, r7.wwww
    add r11.xyz, -r0.xyzx, cb6[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r0.xyzx, cb6[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r7.w, r11.y, r11.x
    min r7.w, r11.z, r7.w
    add r0.xyz, r0.xyzx, -cb6[6].xyzx
    mad r5.xyz, r10.xyzx, r7.wwww, r0.xyzx
  endif
  sample_l r10.xyzw, r5.xyzx, t11.xyzw, s0, r4.w
  add r0.x, r10.w, l(-1.000000)
  mad r0.x, cb6[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb6[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb6[7].x
  mul r0.xyz, r10.xyzx, r0.xxxx
  mad r5.xyz, r5.wwww, r8.xyzx, -r0.xyzx
  mad r9.xyz, cb6[1].wwww, r5.xyzx, r0.xyzx
endif
add r0.xyz, r6.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r0.xyz, r2.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r2.w, -r2.w, l(0.960000), l(0.960000)
mul r5.xyz, r2.wwww, r6.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r4.xyzx, r2.xyzx
dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
dp3_sat r2.y, r4.xyzx, r1.xyzx
dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
mul r1.y, r1.x, r1.x
dp2 r1.y, r1.yyyy, r3.zzzz
add r1.y, r1.y, l(-0.500000)
add r1.z, -r2.x, l(1.000000)
mul r2.z, r1.z, r1.z
mul r2.z, r2.z, r2.z
mul r1.z, r1.z, r2.z
mad r1.z, r1.y, r1.z, l(1.000000)
add r2.z, -|r0.w|, l(1.000000)
mul r4.x, r2.z, r2.z
mul r4.x, r4.x, r4.x
mul r2.z, r2.z, r4.x
mad r1.y, r1.y, r2.z, l(1.000000)
mul r1.y, r1.y, r1.z
mul r1.y, r2.x, r1.y
mul r1.z, r3.z, r3.z
max r1.z, r1.z, l(0.002000)
add r3.z, -r1.z, l(1.000000)
mad r4.x, |r0.w|, r3.z, r1.z
mad r3.z, r2.x, r3.z, r1.z
mul r0.w, |r0.w|, r3.z
mad r0.w, r2.x, r4.x, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r3.z, r1.z, r1.z
mad r4.x, r2.y, r3.z, -r2.y
mad r2.y, r4.x, r2.y, l(1.000000)
mul r3.z, r3.z, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r3.z, r2.y
mul r0.w, r0.w, r2.y
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.x, r0.w
max r0.w, r0.w, l(0.000000)
mad r1.z, r1.z, r1.z, l(1.000000)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
dp3 r2.x, r0.xyzx, r0.xyzx
ne r2.x, r2.x, l(0.000000)
and r2.x, r2.x, l(0x3f800000)
mul r0.w, r0.w, r2.x
add r2.x, -r2.w, r6.w
add_sat r2.x, r2.x, l(1.000000)
mad r3.xyz, r7.xyzx, r1.yyyy, r3.xywx
mul r4.xyz, r7.xyzx, r0.wwww
add r0.w, -r1.x, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.w, r0.w, r1.x
add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
mul r4.xyz, r4.xyzx, r6.xyzx
mad r3.xyz, r5.xyzx, r3.xyzx, r4.xyzx
mul r1.xyz, r9.xyzx, r1.zzzz
add r2.xyw, -r0.xyxz, r2.xxxx
mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
mad r0.xyz, r1.xyzx, r0.xyzx, r3.xyzx
div r0.w, v5.x, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
mad r0.xyz, r0.xyzx, r1.wwww, -cb5[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used