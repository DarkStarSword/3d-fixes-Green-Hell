// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f5f8f2bd350c40f5-ps.txt
// 3DMigoto: f5f8f2bd350c40f5 |    Unity headers extracted from Amplify_pan_texture_billboard
//    Shader "Amplify/pan_texture_billboard" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "QUEUE"="Transparent+0" "RenderType"="Transparent" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent+0" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_pan_texture_billboard:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 108 6 2
//   undeciphered1a: 8
//   Keywords { "POINT" "FOG_LINEAR" }
//   undeciphered2: 1 3 5 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 240
//   Vector 96 [_LightColor0]
//   Vector 128 [_Albedo_color]
//   Float 144 [_opacity_power]
//   Float 148 [_R_power]
//   Vector 152 [_Red_channel_pan] 2
//   Float 160 [_R2_power]
//   Vector 164 [_Red2_channel_pan] 2
//   Float 172 [_G_power]
//   Vector 176 [_Green_channel_pan] 2
//   Float 184 [_B_power]
//   Vector 192 [_Blue_channel_pan] 2
//   Float 200 [_cuttopmaskpower]
//   Float 204 [_cuttopmaskcontrast]
//   Float 208 [_edgemaskcontrast]
//   Float 212 [_mask_range]
//   Float 216 [_mask_fallof]
//   Matrix 32 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_Texture_to_pan] 2D 2
//   SetTexture 1 [_LightTexture0] 2D 1
//   SetTexture 2 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:31:04 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 4     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f5f8f2bd350c40f5-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v3.xyzx, r9.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
add r3.xy, v1.xyxx, l(0.000000, 1.000000, 0.000000, 0.000000)
mad r3.zw, cb1[0].yyyy, cb0[9].zzzw, r3.xxxy
mad r4.xy, cb1[0].yyyy, cb0[10].yzyy, r3.xyxx
mad r4.zw, cb1[0].yyyy, cb0[11].xxxy, r3.xxxy
mad r3.xy, cb1[0].yyyy, cb0[12].xyxx, r3.xyxx
add r1.w, -v1.y, l(1.000000)
log r1.w, r1.w
mul r1.w, r1.w, cb0[12].z
exp r1.w, r1.w
mul_sat r1.w, r1.w, cb0[12].w
mul r5.xy, v1.xyxx, l(3.140000, 3.140000, 0.000000, 0.000000)
sincos r5.xy, null, r5.xyxx
mul r5.xy, r5.xyxx, r5.xyxx
mul r5.xy, r5.xyxx, cb0[13].xxxx
mul_sat r2.w, r5.y, r5.x
add r5.xyz, v3.xyzx, -r9.xyzx
dp3 r5.x, r5.xyzx, r5.xyzx
sqrt r5.x, r5.x
div r5.x, r5.x, cb0[13].y
log r5.x, r5.x
mul r5.x, r5.x, cb0[13].z
exp r5.x, r5.x
min r5.x, r5.x, l(1.000000)
sample r6.xyzw, r3.zwzz, t0.xyzw, s2
sample r7.xyzw, r4.xyxx, t0.xyzw, s2
mul r3.z, r7.x, cb0[10].x
mad r3.z, cb0[9].y, r6.x, r3.z
sample r4.xyzw, r4.zwzz, t0.xyzw, s2
mad r3.z, cb0[10].w, r4.y, r3.z
sample r4.xyzw, r3.xyxx, t0.xyzw, s2
mad r3.x, cb0[11].z, r4.z, r3.z
mul r1.w, r1.w, r3.x
mul r1.w, r2.w, r1.w
mul r1.w, r5.x, r1.w
mul_sat r3.w, r1.w, cb0[9].x
mul r4.xyz, v3.yyyy, cb0[3].xyzx
mad r4.xyz, cb0[2].xyzx, v3.xxxx, r4.xyzx
mad r4.xyz, cb0[4].xyzx, v3.zzzz, r4.xyzx
add r4.xyz, r4.xyzx, cb0[5].xyzx
eq r1.w, cb4[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb4[0].y, l(1.000000)
  mul r5.xyz, v3.yyyy, cb4[2].xyzx
  mad r5.xyz, cb4[1].xyzx, v3.xxxx, r5.xyzx
  mad r5.xyz, cb4[3].xyzx, v3.zzzz, r5.xyzx
  add r5.xyz, r5.xyzx, cb4[4].xyzx
  movc r5.xyz, r1.wwww, r5.xyzx, v3.xyzx
  add r5.xyz, r5.xyzx, -cb4[6].xyzx
  mul r5.yzw, r5.xxyz, cb4[5].xxyz
  mad r1.w, r5.y, l(0.250000), l(0.750000)
  mad r2.w, cb4[0].z, l(0.500000), l(0.750000)
  max r5.x, r1.w, r2.w
  sample r5.xyzw, r5.xzwx, t2.xyzw, s0
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r1.w, r5.xyzw, cb2[46].xyzw
dp3 r2.w, r4.xyzx, r4.xyzx
sample r4.xyzw, r2.wwww, t1.xyzw, s1
mul r1.w, r1.w, r4.x
mul r4.xyz, r1.wwww, cb0[6].xyzx
dp3 r1.w, v2.xyzx, r1.xyzx
max r1.w, -r1.w, l(0.000000)
mul r5.xyz, r4.xyzx, r1.wwww
mul r5.xyz, r5.xyzx, cb0[8].xyzx
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r6.xyz, r1.wwww, v2.xyzx
mul r7.xyz, cb0[8].xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r6.xyzx, r2.xyzx
dp3_sat r1.w, r6.xyzx, r1.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
dp2 r0.y, r0.xxxx, r0.xxxx
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.w, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
add r0.z, |r0.w|, r1.w
add r0.z, r0.z, l(0.000010)
div r0.z, l(0.500000), r0.z
mul r0.z, r0.z, l(0.999999881)
mul r0.yz, r1.wwww, r0.yyzy
mul r1.xyz, r0.yyyy, r4.xyzx
mul r0.yzw, r4.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
mad r0.x, r0.x, l(0.960000), l(0.040000)
mul r0.xyz, r0.xxxx, r0.yzwy
mad r3.xyz, r7.xyzx, r1.xyzx, r0.xyzx
mov r5.w, l(0)
add r0.xyzw, r3.xyzw, r5.xyzw
div r1.x, v1.z, cb1[5].y
add r1.x, -r1.x, l(1.000000)
mul r1.x, r1.x, cb1[5].z
max r1.x, r1.x, l(0.000000)
mad_sat r1.x, r1.x, cb3[1].z, cb3[1].w
mul o0.xyz, r0.xyzx, r1.xxxx
mov o0.w, r0.w
ret
// Approximately 0 instruction slots used