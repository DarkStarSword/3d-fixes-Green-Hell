// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 56930936f2accc40-ps.txt
// 3DMigoto: 56930936f2accc40 |    Unity headers extracted from Amplify_mia_disappear
//    Shader "Amplify/mia_disappear" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "QUEUE"="Geometry+0" "RenderType"="Transparent" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+0" "RenderType"="Transparent" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_mia_disappear:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 144 7 2
//   undeciphered1a: 7
//   Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" "FOG_LINEAR" }
//   undeciphered2: 1 7 9 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 32 [_LightColor0]
//   Vector 128 [_Normal_ST]
//   Float 144 [_useRtomultiply]
//   Vector 160 [_Albedo_ST]
//   Float 176 [_use_albedo_alpha]
//   Float 180 [_Cutoff]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerDraw" 176
//   Matrix 0 [unity_ObjectToWorld]
//   Matrix 64 [unity_WorldToObject]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   ConstBuffer "Amplifymia_disappear" 64
//   Vector 0 [_Albedo_color_multiply]
//   Float 32 [_main_normal_scale]
//   Float 36 [_detail_normal_scale]
//   Float 40 [_detail_tiling]
//   Float 44 [_metallic]
//   Float 48 [_smooothnes]
//   Float 52 [_disappear_mask_multiply]
//   Float 56 [_disolve_texture_tile]
//   Float 60 [_disappear_mask_size]
//   SetTexture 0 [_Normal] 2D 3
//   SetTexture 1 [_Normal_detail] 2D 4
//   SetTexture 2 [_Albedo] 2D 5
//   SetTexture 3 [_dissolveguide] 2D 6
//   SetTexture 4 [_ShadowMapTexture] 2D 1
//   SetTexture 5 [_LightTexture0] 2D 2
//   SetTexture 6 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerDraw" 4
//   BindCB "UnityPerFrame" 5
//   BindCB "UnityFog" 6
//   BindCB "UnityProbeVolume" 7
//   BindCB "Amplifymia_disappear" 8
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:04:53 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 5     zw        1     NONE   float
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[12], immediateIndexed
dcl_constantbuffer cb6[2], immediateIndexed
dcl_constantbuffer cb7[7], immediateIndexed
dcl_constantbuffer cb8[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyw
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 56930936f2accc40-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, r8.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
mad r2.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
mul r2.zw, v1.xxxy, cb8[2].zzzz
sample r3.xyzw, r2.xyxx, t0.xyzw, s3
mul r3.x, r3.w, r3.x
mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xy, r2.xyxx, cb8[2].xxxx
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.w, r1.w
sample r3.xyzw, r2.zwzz, t1.xyzw, s4
mul r3.x, r3.w, r3.x
mad r2.zw, r3.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r2.zw, r2.zzzw, cb8[2].yyyy
dp2 r3.x, r2.zwzz, r2.zwzz
min r3.x, r3.x, l(1.000000)
add r3.x, -r3.x, l(1.000000)
sqrt r3.x, r3.x
mad r2.xy, r2.xyxx, cb8[2].xxxx, r2.zwzz
mul r2.z, r1.w, r3.x
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mad r3.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
sample r3.xyzw, r3.xyxx, t2.xyzw, s5
add r4.xyz, -r3.xyzx, r3.xxxx
mad r3.xyz, cb0[9].xxxx, r4.xyzx, r3.xyzx
mul r4.xyz, r3.xyzx, cb8[0].xyzx
mul r5.xyz, v5.yyyy, cb4[5].xyzx
mad r5.xyz, cb4[4].xyzx, v5.xxxx, r5.xyzx
mad r5.xyz, cb4[6].xyzx, v5.zzzz, r5.xyzx
add r5.xyz, r5.xyzx, cb4[7].xyzx
mul r1.w, r5.y, cb4[1].y
mad r1.w, cb4[0].y, r5.x, r1.w
mad r1.w, cb4[2].y, r5.z, r1.w
mul r5.xy, v1.xyxx, cb8[3].zzzz
sample r5.xyzw, r5.xyxx, t3.xyzw, s6
mad r1.w, r5.x, cb8[3].w, r1.w
ge r1.w, r1.w, cb8[3].y
movc r5.xy, r1.wwww, l(0,-0.000000,0,0), l(1.000000,-1.000000,0,0)
mad r1.w, r3.w, r5.x, r5.y
mad r1.w, cb0[11].x, r1.w, r5.x
add r1.w, r1.w, -cb0[11].y
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
mul r5.xy, v5.yyyy, cb0[5].xyxx
mad r5.xy, cb0[4].xyxx, v5.xxxx, r5.xyxx
mad r5.xy, cb0[6].xyxx, v5.zzzz, r5.xyxx
add r5.xy, r5.xyxx, cb0[7].xyxx
mov r6.x, cb5[9].z
mov r6.y, cb5[10].z
mov r6.z, cb5[11].z
dp3 r1.w, r0.xyzx, r6.xyzx
add r6.xyz, v5.xyzx, -cb3[25].xyzx
dp3 r2.w, r6.xyzx, r6.xyzx
sqrt r2.w, r2.w
add r2.w, -r1.w, r2.w
mad r1.w, cb3[25].w, r2.w, r1.w
mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
eq r2.w, cb7[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb7[0].y, l(1.000000)
  mul r6.xyz, v5.yyyy, cb7[2].xyzx
  mad r6.xyz, cb7[1].xyzx, v5.xxxx, r6.xyzx
  mad r6.xyz, cb7[3].xyzx, v5.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb7[4].xyzx
  movc r6.xyz, r2.wwww, r6.xyzx, v5.xyzx
  add r6.xyz, r6.xyzx, -cb7[6].xyzx
  mul r6.yzw, r6.xxyz, cb7[5].xxyz
  mad r2.w, r6.y, l(0.250000), l(0.750000)
  mad r3.w, cb7[0].z, l(0.500000), l(0.750000)
  max r6.x, r2.w, r3.w
  sample r6.xyzw, r6.xzwx, t6.xyzw, s0
else
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r6.xyzw, cb2[46].xyzw
div r5.zw, v6.xxxy, v6.wwww
sample r6.xyzw, r5.zwzz, t4.xyzw, s1
add r2.w, r2.w, -r6.x
mad r1.w, r1.w, r2.w, r6.x
sample r5.xyzw, r5.xyxx, t5.xyzw, s2
mul r1.w, r1.w, r5.w
dp3 r5.x, v2.xyzx, r2.xyzx
dp3 r5.y, v3.xyzx, r2.xyzx
dp3 r5.z, v4.xyzx, r2.xyzx
dp3 r2.x, r5.xyzx, r5.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, r5.xyzx
mul r5.xyz, r1.wwww, cb0[2].xyzx
mad r3.xyz, cb8[0].xyzx, r3.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r3.xyz, cb8[2].wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -cb8[2].w, l(0.960000), l(0.960000)
mul r4.xyz, r1.wwww, r4.xyzx
add r1.w, -cb8[3].x, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r2.xyzx, r1.xyzx
dp3_sat r1.x, r2.xyzx, cb2[0].xyzx
dp3_sat r1.y, r2.xyzx, r0.xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.x, l(1.000000)
mul r1.z, r0.z, r0.z
mul r1.z, r1.z, r1.z
mul r0.z, r0.z, r1.z
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.z, -|r0.w|, l(1.000000)
mul r2.x, r1.z, r1.z
mul r2.x, r2.x, r2.x
mul r1.z, r1.z, r2.x
mad r0.y, r0.y, r1.z, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
max r0.z, r0.z, l(0.002000)
add r1.z, -r0.z, l(1.000000)
mad r1.w, |r0.w|, r1.z, r0.z
mad r1.z, r1.x, r1.z, r0.z
mul r0.w, |r0.w|, r1.z
mad r0.w, r1.x, r1.w, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.z, r1.y, r0.z, -r1.y
mad r1.y, r1.z, r1.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.y, r1.y, r1.y, l(1.000000012E-007)
div r0.z, r0.z, r1.y
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r1.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r3.xyzx, r3.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r5.xyzx
mul r0.yzw, r5.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r2.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r3.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
div r0.w, v2.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb6[1].z, cb6[1].w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used