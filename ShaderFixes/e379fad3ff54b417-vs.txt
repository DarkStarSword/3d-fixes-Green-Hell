// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed e379fad3ff54b417-vs.txt
// 3DMigoto: e379fad3ff54b417 | Matched 2 variants of 1 shaders: AdvancedTerrainGrass/VertexLit Shader
//
//       Unity headers extracted from AdvancedTerrainGrass_VertexLit Shader
//       Shader "AdvancedTerrainGrass/VertexLit Shader" {
//         SubShader 1/1 {
//           LOD 200
//           Tags { "IGNOREPROJECTOR"="true" "RenderType"="ATGVertexLit" }
//           Pass 1/4 {
//             Name "FORWARD"
//             Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "RenderType"="ATGVertexLit" "SHADOWSUPPORT"="true" }
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from AdvancedTerrainGrass_VertexLit Shader:
//      API d3d11
//      Shader model vs_5_0
//      undeciphered1: 201802150 54 0 0
//      undeciphered1a: 8
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" "PROCEDURAL_INSTANCING_ON" }
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" "PROCEDURAL_INSTANCING_ON" }
//      undeciphered2: 1 1 5 0 0 0
//      undeciphered3: 23 3 0 0 1 1 4 5
//      ConstBuffer "$Globals" 160
//      Vector 80 [_HealthyColor]
//      Vector 96 [_DryColor]
//      Vector 112 [_MinMaxScales] 2
//      Vector 144 [_MainTex_ST]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 768
//      Vector 48 [unity_4LightPosX0]
//      Vector 64 [unity_4LightPosY0]
//      Vector 80 [unity_4LightPosZ0]
//      Vector 96 [unity_4LightAtten0]
//      Vector 112 [unity_LightColor0]
//      Vector 128 [unity_LightColor1]
//      Vector 144 [unity_LightColor2]
//      Vector 160 [unity_LightColor3]
//      Vector 176 [unity_LightColor4]
//      Vector 192 [unity_LightColor5]
//      Vector 208 [unity_LightColor6]
//      Vector 224 [unity_LightColor7]
//      Vector 672 [unity_SHBr]
//      Vector 688 [unity_SHBg]
//      Vector 704 [unity_SHBb]
//      Vector 720 [unity_SHC]
//      ConstBuffer "UnityPerFrame" 368
//      Matrix 272 [unity_MatrixVP]
//      ConstBuffer "UnityDrawCallInfo" 16
//      ScalarInt 0 [unity_BaseInstanceID]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityPerFrame" 3
//      BindCB "UnityDrawCallInfo" 4
//      SetBuffer 0 [GrassMatrixBuffer]
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:22:28 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xy
// SV_InstanceID            0   x           4   INSTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// SV_InstanceID            0   x           7     NONE    uint   x
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_resource_structured t0, 64
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input_sgv v4.x, instance_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output o7.x
dcl_temps 9

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw

mov r0.xyz, v0.xyzx
mov r0.w, l(1.000000)
iadd r1.x, v4.x, cb4[0].x
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r2.xyz, r1.x, l(0), t0.zxyx
mov r3.x, r2.z
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r4.xyz, r1.x, l(16), t0.yxzx
mov r3.y, r4.x
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r1.yzw, r1.x, l(32), t0.xxyz
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r5.xyzw, r1.x, l(48), t0.xyzw
mov r3.z, r1.z
mov r3.w, r5.y
dp4 r1.x, r3.xyzw, r0.xyzw
dp4 r6.y, r3.xyzw, v0.xyzw
dp3 r3.y, r3.xyzx, v2.xyzx
mul r7.xyzw, r1.xxxx, cb3[18].xyzw
mov r4.x, r2.y
mov r2.y, r4.z
mov r4.z, r1.y
mov r2.z, r1.w
mov r4.w, r5.x
dp4 r1.x, r4.xyzw, r0.xyzw
dp4 r6.x, r4.xyzw, v0.xyzw
dp3 r3.x, r4.xyzx, v2.xyzx
mad r1.xyzw, cb3[17].xyzw, r1.xxxx, r7.xyzw
mov r2.w, r5.z
frc r3.w, r5.w
mad r3.w, r3.w, l(100.000000), -cb0[7].x
mul r3.w, r3.w, cb0[7].y
dp4 r0.x, r2.xyzw, r0.xyzw
dp4 r6.z, r2.xyzw, v0.xyzw
dp3 r3.z, r2.xyzx, v2.xyzx
mad r0.xyzw, cb3[19].xyzw, r0.xxxx, r1.xyzw
add r0.xyzw, r0.xyzw, cb3[20].xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed e379fad3ff54b417-vs.txt
ne r8.w, r0.w, l(1.0)
if_nz r8.w
  add r8.w, r0.w, -r8.y
  mad r0.x, r8.w, r8.x, r0.x
endif

mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
dp3 r1.x, r3.xyzx, r3.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, r3.xyzx
mov o2.xyz, r1.xyzx
mov o3.xyz, r6.xyzx
add r2.xyzw, -r6.xxxx, cb2[3].xyzw
add r4.xyzw, -r6.yyyy, cb2[4].xyzw
add r5.xyzw, -r6.zzzz, cb2[5].xyzw
add r3.xyz, -cb0[5].xyzx, cb0[6].xyzx
mad o4.xyz, r3.wwww, r3.xyzx, cb0[5].xyzx
mul r3.xyzw, r1.yyyy, r4.xyzw
mul r4.xyzw, r4.xyzw, r4.xyzw
mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
mad r2.xyzw, r2.xyzw, r1.xxxx, r3.xyzw
mad r2.xyzw, r5.xyzw, r1.zzzz, r2.xyzw
mad r3.xyzw, r5.xyzw, r5.xyzw, r4.xyzw
max r3.xyzw, r3.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
rsq r4.xyzw, r3.xyzw
mad r3.xyzw, r3.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyzw
mul r2.xyzw, r2.xyzw, r4.xyzw
max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.xyzw, r3.xyzw, r2.xyzw
mul r3.xyz, r2.yyyy, cb2[8].xyzx
mad r3.xyz, cb2[7].xyzx, r2.xxxx, r3.xyzx
mad r2.xyz, cb2[9].xyzx, r2.zzzz, r3.xyzx
mad r2.xyz, cb2[10].xyzx, r2.wwww, r2.xyzx
mul r1.w, r1.y, r1.y
mad r1.w, r1.x, r1.x, -r1.w
mul r3.xyzw, r1.yzzx, r1.xyzz
dp4 r1.x, cb2[42].xyzw, r3.xyzw
dp4 r1.y, cb2[43].xyzw, r3.xyzw
dp4 r1.z, cb2[44].xyzw, r3.xyzw
mad r1.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
add o5.xyz, r1.xyzx, r2.xyzx
mul r0.y, r0.y, cb1[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o6.zw, r0.zzzw
add o6.xy, r1.zzzz, r1.xwxx
mov o7.x, v4.x
ret
// Approximately 0 instruction slots used