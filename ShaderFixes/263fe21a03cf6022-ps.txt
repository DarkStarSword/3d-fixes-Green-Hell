// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 263fe21a03cf6022-ps.txt
// 3DMigoto: 263fe21a03cf6022 |    Unity headers extracted from Hidden_HxVolumetricSpotLight
//    Shader "Hidden/HxVolumetricSpotLight" {
//      SubShader 1/1 {
// 1:     Pass 1/2 {
// 2:     Pass 2/2 {
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_HxVolumetricSpotLight:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 229 0 10
//   undeciphered1a: 17
//   Keywords { "NOISE_ON" }
//   undeciphered2: 1 6 3 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 6016
//   Float 208 [hxNoiseContrast]
//   Vector 224 [Phase]
//   Vector 256 [NoiseOffset] 3
//   Vector 272 [NoiseScale] 3
//   Vector 288 [Density]
//   Vector 960 [hxVolumeSettingsOld0] 2
//   Vector 968 [hxVolumeSettingsOld1] 2
//   Vector 976 [hxVolumeSettingsOld2] 2
//   Vector 984 [hxVolumeSettingsOld3] 2
//   Vector 992 [hxVolumeSettingsOld4] 2
//   Vector 1000 [hxVolumeSettingsOld5] 2
//   Vector 1008 [hxVolumeSettingsOld6] 2
//   Vector 1016 [hxVolumeSettingsOld7] 2
//   Vector 1024 [hxVolumeSettingsOld8] 2
//   Vector 1032 [hxVolumeSettingsOld9] 2
//   Float 5344 [hxNearPlane]
//   Vector 5360 [_SpotLightParams]
//   Float 5376 [hxRayOffset]
//   Vector 5380 [LightColour] 3
//   Vector 5392 [LightColour2] 3
//   Float 5404 [TintPercent]
//   Vector 5424 [_LightParams]
//   Vector 5440 [_CustomLightPosition]
//   Float 5456 [HxTileSize]
//   Float 5856 [VolumeScale]
//   Vector 5936 [ShadowBias]
//   Vector 5956 [TopFrustumNormal] 3
//   Vector 5968 [BottomFrustumNormal] 3
//   Vector 5984 [LeftFrustumNormal] 3
//   Vector 6000 [RightFrustumNormal] 3
//   Matrix 320 [hxVolumeMatrixOld0]
//   Matrix 384 [hxVolumeMatrixOld1]
//   Matrix 448 [hxVolumeMatrixOld2]
//   Matrix 512 [hxVolumeMatrixOld3]
//   Matrix 576 [hxVolumeMatrixOld4]
//   Matrix 640 [hxVolumeMatrixOld5]
//   Matrix 704 [hxVolumeMatrixOld6]
//   Matrix 768 [hxVolumeMatrixOld7]
//   Matrix 832 [hxVolumeMatrixOld8]
//   Matrix 896 [hxVolumeMatrixOld9]
//   Matrix 5216 [hxCameraToWorld]
//   Matrix 5472 [InverseProjectionMatrix]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityPerDraw" 176
//   Matrix 64 [unity_WorldToObject]
//   SetTexture 0 [VolumetricDepth] 2D 4
//   SetTexture 1 [Tile5x5] 2D 3
//   SetTexture 2 [NoiseTexture3D] 3D 1
//   SetTexture 3 [_FalloffTex] 2D 2
//   SetTexture 4 [_LightTexture0] 2D 0
//   SetTexture 5 [_ShadowMapTexture] 2D 5
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:41:20 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[376], dynamicIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xyw
dcl_output o0.xyzw
dcl_temps 19
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r17.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 263fe21a03cf6022-ps.txt

mul r17.w, -r17.x, r17.y
mad r18.xyz, -r17.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.xy, v1.xyxx, v1.wwww
sample_l r1.xyzw, r0.xyxx, t0.xyzw, s4, l(0.000000)
dp2 r0.z, r1.xyxx, l(1.000000, 0.00392156886, 0.000000, 0.000000)
add r1.xy, -r1.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xyzw, r1.yyyy, cb0[343].xyzw
mad r1.xyzw, cb0[342].xyzw, r1.xxxx, r2.xyzw
add r1.xyzw, r1.xyzw, cb0[344].xyzw
add r1.xyzw, r1.xyzw, cb0[345].xyzw
div r1.xyz, r1.xyzx, r1.wwww
div r0.w, cb1[5].z, r1.z
mul r1.xyz, r0.wwww, -r1.xyzx
mul r1.xyz, r0.zzzz, r1.xyzx
mul r2.xyz, r1.yyyy, cb0[327].xyzx
mad r1.xyw, cb0[326].xyxz, r1.xxxx, r2.xyxz
mad r1.xyz, cb0[328].xyzx, r1.zzzz, r1.xywx
add r1.xyz, r1.xyzx, cb0[329].xyzx
add r1.xyz, r1.xyzx, -r18.xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.w, r0.z
mul r1.xyz, r0.wwww, r1.xyzx
sqrt r0.z, r0.z
add r0.z, r0.z, l(-0.050000)
dp3 r0.w, cb0[335].xyzx, r1.xyzx
mad r2.xyz, cb0[335].xyzx, cb0[339].zzzz, cb0[340].xyzx
add r2.xyz, r2.xyzx, -r18.xyzx
dp3 r1.w, r2.xyzx, cb0[335].xyzx
dp3 r2.x, cb0[373].xyzx, r1.xyzx
add r2.yzw, cb0[340].xxyz, -r18.xxyz
dp3 r3.x, r2.yzwy, cb0[373].xyzx
dp3 r3.y, cb0[374].xyzx, r1.xyzx
dp3 r3.z, r2.yzwy, cb0[374].xyzx
dp3 r3.w, -cb0[335].xyzx, r1.xyzx
mad r4.xyz, cb0[335].xyzx, cb0[334].xxxx, cb0[340].xyzx
add r5.xyz, r4.xyzx, -r18.xyzx
dp3 r4.w, r5.xyzx, -cb0[335].xyzx
dp3 r5.w, cb0[372].yzwy, r1.xyzx
dp3 r6.x, r2.yzwy, cb0[372].yzwy
dp3 r6.y, cb0[375].xyzx, r1.xyzx
dp3 r2.y, r2.yzwy, cb0[375].xyzx
lt r2.z, l(0.000000), r3.w
div r2.w, r4.w, r3.w
min r7.z, r2.w, l(100000.000000)
lt r4.w, r3.w, l(0.000000)
max r6.z, r2.w, l(0.000000)
and r8.y, r4.w, r6.z
mov r7.y, l(0)
mov r8.z, l(100000.000000)
movc r7.yz, r2.zzzz, r7.yyzy, r8.yyzy
lt r2.z, l(0.000000), r5.w
div r4.w, r6.x, r5.w
min r7.w, r4.w, r7.z
lt r5.w, r5.w, l(0.000000)
max r4.w, r4.w, r7.y
movc r7.x, r5.w, r4.w, r7.y
movc r7.yz, r2.zzzz, r7.yywy, r7.xxzx
lt r2.z, l(0.000000), r6.y
div r2.y, r2.y, r6.y
min r7.w, r2.y, r7.z
lt r4.w, r6.y, l(0.000000)
max r2.y, r2.y, r7.y
movc r7.x, r4.w, r2.y, r7.y
movc r6.yz, r2.zzzz, r7.yywy, r7.xxzx
lt r2.y, l(0.000000), r0.w
div r1.w, r1.w, r0.w
min r6.w, r1.w, r6.z
lt r2.z, r0.w, l(0.000000)
max r1.w, r1.w, r6.y
movc r6.x, r2.z, r1.w, r6.y
movc r6.yz, r2.yyyy, r6.yywy, r6.xxzx
lt r1.w, l(0.000000), r2.x
div r2.y, r3.x, r2.x
min r6.w, r2.y, r6.z
lt r2.x, r2.x, l(0.000000)
max r2.y, r2.y, r6.y
movc r6.x, r2.x, r2.y, r6.y
movc r6.yz, r1.wwww, r6.yywy, r6.xxzx
lt r1.w, l(0.000000), r3.y
div r2.x, r3.z, r3.y
min r6.w, r2.x, r6.z
lt r2.y, r3.y, l(0.000000)
max r2.x, r2.x, r6.y
movc r6.x, r2.y, r2.x, r6.y
movc r2.xy, r1.wwww, r6.ywyy, r6.xzxx
min r0.z, r0.z, r2.y
ge r1.w, r2.x, r0.z
discard_nz r1.w
mad r2.xyz, r1.xyzx, r2.xxxx, r18.xyzx
mad r3.xyz, r1.xyzx, r0.zzzz, r18.xyzx
add r6.xyz, -r4.xyzx, r2.xyzx
dp3 r0.z, r6.xyzx, cb0[335].xyzx
add r4.xyz, -r4.xyzx, r3.xyzx
dp3 r1.w, r4.xyzx, cb0[335].xyzx
ge r4.x, l(0.000000), r0.z
ge r4.y, l(0.000000), r1.w
and r4.z, r4.y, r4.x
discard_nz r4.z
lt r0.z, l(0.000000), r0.z
and r0.z, r4.y, r0.z
lt r3.w, l(0.000001), r3.w
mad r4.yzw, r1.xxyz, r2.wwww, r18.xxyz
movc r4.yzw, r3.wwww, r4.yyzw, r3.xxyz
movc r3.xyz, r0.zzzz, r4.yzwy, r3.xyzx
lt r0.z, l(0.000000), r1.w
and r0.z, r0.z, r4.x
lt r1.w, l(0.000001), r0.w
dp3 r2.w, r5.xyzx, cb0[335].xyzx
div r0.w, r2.w, r0.w
mad r1.xyz, r1.xyzx, r0.wwww, r18.xyzx
movc r1.xyz, r1.wwww, r1.xyzx, r2.xyzx
movc r1.xyz, r0.zzzz, r1.xyzx, r2.xyzx
mul r0.zw, cb0[366].xxxx, cb1[6].xxxy
mul r0.xy, r0.xyxx, r0.zwzz
div r0.xy, r0.xyxx, cb0[341].xxxx
ge r0.zw, r0.xxxy, -r0.xxxy
frc r0.xy, |r0.xyxx|
movc r0.xy, r0.zwzz, r0.xyxx, -r0.xyxx
mul r0.xy, r0.xyxx, cb0[341].xxxx
add r2.xyz, r1.xyzx, -r18.xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
sqrt r0.z, r0.z
add r2.xyz, -r1.xyzx, r3.xyzx
min r0.w, cb0[18].y, l(128.000000)
ftoi r1.w, r0.w
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r3.w, r2.w
mul r2.xyz, r2.xyzx, r3.wwww
sqrt r2.w, r2.w
round_z r0.w, r0.w
div r2.w, r2.w, r0.w
mul r4.xyz, r2.wwww, r2.xyzx
add r5.xyz, r1.xyzx, -cb0[340].xyzx
mul r6.xyz, r5.yyyy, cb2[5].xyzx
mad r5.xyw, cb2[4].xyxz, r5.xxxx, r6.xyxz
mad r5.xyz, cb2[6].xyzx, r5.zzzz, r5.xywx
add r3.xyz, r3.xyzx, -cb0[340].xyzx
mul r6.xyz, r3.yyyy, cb2[5].xyzx
mad r3.xyw, cb2[4].xyxz, r3.xxxx, r6.xyxz
mad r3.xyz, cb2[6].xyzx, r3.zzzz, r3.xywx
add r3.xyz, -r5.xyzx, r3.xyzx
dp3 r3.w, r3.xyzx, r3.xyzx
sqrt r4.w, r3.w
div r0.w, r4.w, r0.w
rsq r3.w, r3.w
mul r3.xyz, r3.wwww, r3.xyzx
mul r6.xyz, r0.wwww, r3.xyzx
div r0.xy, r0.xyxx, cb0[341].xxxx
sample_l r7.xyzw, r0.xyxx, t1.xyzw, s3, l(0.000000)
add r0.x, r7.x, cb0[336].x
frc r0.x, r0.x
mad r5.xyz, r6.xyzx, r0.xxxx, r5.xyzx
mad r1.xyz, r4.xyzx, r0.xxxx, r1.xyzx
mul r0.x, r0.z, cb0[18].x
mul r0.x, r0.x, cb0[18].w
mul r0.y, r2.w, cb0[18].w
max r0.z, cb0[13].x, l(0.000000)
mul r3.w, cb0[339].z, cb0[339].z
div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
add r4.xyz, cb0[336].yzwy, -cb0[337].xyzx
mov r6.y, l(0)
mov r7.z, l(0)
mov r8.xyz, l(0,0,0,0)
mov r9.xyz, r5.xyzx
mov r10.xyz, r1.xyzx
mov r4.w, r0.x
mov r5.w, l(0)
loop
  ige r6.z, r5.w, r1.w
  breakc_nz r6.z
  mul r6.z, r9.z, l(0.500000)
  div r6.z, l(1.000000, 1.000000, 1.000000, 1.000000), r6.z
  mul r6.zw, r9.xxxy, r6.zzzz
  mul r11.xy, r6.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r6.zw, r6.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
  add r12.xyz, r10.xyzx, -cb0[340].xyzx
  add r13.xyz, r10.xyzx, cb0[16].xyzx
  mul r13.xyz, r13.xyzx, cb0[17].xyzx
  sample_l r13.xyzw, r13.xyzx, t2.xyzw, s1, l(1.000000)
  add r7.w, r13.w, l(-0.500000)
  mad r7.w, r7.w, r0.z, l(0.500000)
  dp2 r7.w, r7.wwww, cb0[18].xxxx
  mov r13.x, r7.w
  mov r13.yz, l(0,0,0,0)
  mov r8.w, l(0)
  loop
    ige r9.w, r13.z, l(10)
    mov r8.w, l(0)
    breakc_nz r9.w
    eq r9.w, l(-1.000000), cb0[r13.z + 60].y
    if_nz r9.w
      mov r13.xy, r13.xxxx
      mov r8.w, l(-1)
      break
    endif
    ishl r10.w, r13.z, l(2)
    mul r14.xyz, r10.yyyy, cb0[r10.w + 21].xyzx
    mad r14.xyz, cb0[r10.w + 20].xyzx, r10.xxxx, r14.xyzx
    mad r14.xyz, cb0[r10.w + 22].xyzx, r10.zzzz, r14.xyzx
    add r14.xyz, r14.xyzx, cb0[r10.w + 23].xyzx
    lt r15.xyz, l(-0.500000, -0.500000, -0.500000, 0.000000), r14.xyzx
    lt r16.xyz, r14.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    and r10.w, r15.x, r16.x
    and r10.w, r15.y, r10.w
    and r10.w, r16.y, r10.w
    and r10.w, r15.z, r10.w
    and r10.w, r16.z, r10.w
    if_nz r10.w
      ge r10.w, l(3.000000), cb0[r13.z + 60].y
      if_nz r10.w
        max r10.w, r13.x, cb0[r13.z + 60].x
        add r11.z, r13.x, cb0[r13.z + 60].x
        min r11.w, r13.x, cb0[r13.z + 60].x
        eq r15.xyzw, l(0.000000, 1.000000, 2.000000, 3.000000), cb0[r13.z + 60].yyyy
        add r12.w, r13.x, -cb0[r13.z + 60].x
        movc r12.w, r15.w, r12.w, r13.x
        movc r11.w, r15.z, r11.w, r12.w
        movc r11.z, r15.y, r11.z, r11.w
        movc r7.x, r15.x, r10.w, r11.z
      else
        ge r10.w, l(7.000000), cb0[r13.z + 60].y
        dp3 r11.z, r14.xyzx, r14.xyzx
        sqrt r11.z, r11.z
        lt r11.z, r11.z, l(0.500000)
        and r10.w, r10.w, r11.z
        if_nz r10.w
          max r10.w, r13.x, cb0[r13.z + 60].x
          add r11.z, r13.x, cb0[r13.z + 60].x
          min r11.w, r13.x, cb0[r13.z + 60].x
          eq r15.xyzw, l(4.000000, 5.000000, 6.000000, 7.000000), cb0[r13.z + 60].yyyy
          add r12.w, r13.x, -cb0[r13.z + 60].x
          movc r12.w, r15.w, r12.w, r13.x
          movc r11.w, r15.z, r11.w, r12.w
          movc r11.z, r15.y, r11.z, r11.w
          movc r7.x, r15.x, r10.w, r11.z
        else
          ge r10.w, l(11.000000), cb0[r13.z + 60].y
          dp2 r11.z, r14.xzxx, r14.xzxx
          sqrt r11.z, r11.z
          lt r11.z, r11.z, l(0.500000)
          and r10.w, r10.w, r11.z
          max r11.z, r13.x, cb0[r13.z + 60].x
          add r11.w, r13.x, cb0[r13.z + 60].x
          min r12.w, r13.x, cb0[r13.z + 60].x
          eq r14.xyzw, l(8.000000, 9.000000, 10.000000, 11.000000), cb0[r13.z + 60].yyyy
          add r13.w, r13.x, -cb0[r13.z + 60].x
          movc r13.w, r14.w, r13.w, r13.x
          movc r12.w, r14.z, r12.w, r13.w
          movc r11.w, r14.y, r11.w, r12.w
          movc r11.z, r14.x, r11.z, r11.w
          movc r7.x, r10.w, r11.z, r13.x
        endif
      endif
    else
      mov r7.x, r13.x
    endif
    iadd r7.y, r13.z, l(1)
    mov r13.xyz, r7.xzyx
    mov r8.w, r9.w
  endloop
  movc r7.x, r8.w, r13.y, r13.x
  mul r7.y, r9.z, cb0[339].z
  mul r7.w, r7.y, cb0[371].x
  mad r7.y, -r7.y, cb0[371].y, l(1.000000)
  div r7.y, r7.y, r7.w
  add r7.y, -r7.y, l(1.000000)
  sample_c_lz r7.y, r6.zwzz, t5.xxxx, s5, r7.y
  dp3 r7.w, r12.xyzx, r12.xyzx
  rsq r9.w, r7.w
  mul r12.xyz, r9.wwww, r12.xyzx
  dp3 r9.w, r12.xyzx, -r2.xyzx
  mad r9.w, -cb0[14].w, r9.w, cb0[14].z
  log r9.w, r9.w
  mul r9.w, r9.w, l(1.500000)
  exp r9.w, r9.w
  div r9.w, cb0[14].y, r9.w
  mul r9.w, r9.w, cb0[14].x
  mul r6.x, r3.w, r7.w
  sample_l r12.xyzw, r6.xyxx, t3.xyzw, s2, l(0.000000)
  sample_l r14.xyzw, r6.zwzz, t4.xyzw, s0, l(0.000000)
  mul r6.x, r12.w, r14.w
  mad r6.z, -r7.w, r3.w, l(1.000000)
  dp2 r6.w, r11.xyxx, r11.xyxx
  sqrt r6.w, r6.w
  mad r6.w, -r6.w, l(2.000000), l(1.000000)
  min r6.z, r6.w, r6.z
  mul r6.z, r6.z, cb0[337].w
  mul_sat r6.z, r6.z, l(0.500000)
  mad r11.xyz, r6.zzzz, r4.xyzx, cb0[337].xyzx
  add r6.z, -r7.y, l(1.000000)
  mul r6.z, r6.z, cb0[371].z
  mad r6.z, r7.y, r9.w, r6.z
  mul r6.x, r6.x, r6.z
  mul r6.z, r4.w, l(-1.442695)
  exp r6.z, r6.z
  mul r6.x, r6.z, r6.x
  mul r6.x, r7.x, r6.x
  mul r6.x, r2.w, r6.x
  max r6.x, r6.x, l(0.000000)
  mad r8.xyz, r11.xyzx, r6.xxxx, r8.xyzx
  mad r4.w, r0.y, r7.x, r4.w
  mad r9.xyz, r3.xyzx, r0.wwww, r9.xyzx
  mad r10.xyz, r2.xyzx, r2.wwww, r10.xyzx
  iadd r5.w, r5.w, l(1)
endloop
mov o0.xyz, r8.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used