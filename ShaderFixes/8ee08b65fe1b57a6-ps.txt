// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8ee08b65fe1b57a6-ps.txt
// 3DMigoto: 8ee08b65fe1b57a6 |    Unity headers extracted from AdvancedTerrainGrass_VertexLit Shader
//    Shader "AdvancedTerrainGrass/VertexLit Shader" {
//      SubShader 1/1 {
//        LOD 200
//        Tags { "IGNOREPROJECTOR"="true" "RenderType"="ATGVertexLit" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "RenderType"="ATGVertexLit" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from AdvancedTerrainGrass_VertexLit Shader:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 201802150 106 2 2
//   undeciphered1a: 8
//   Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "PROCEDURAL_INSTANCING_ON" }
//   undeciphered2: 1 3 5 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 224
//   Vector 32 [_LightColor0]
//   Vector 192 [_SpecularReflectivity] 3
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 16 [_LightPositionRange]
//   Vector 32 [_LightProjectionParams]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_LightTexture0] 2D 1
//   SetTexture 2 [_ShadowMapTexture] CUBE 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:38:33 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float
// TEXCOORD                 5   xyzw        6     NONE   float
// SV_InstanceID            0   x           7     NONE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_sampler s0, mode_comparison
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8ee08b65fe1b57a6-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v3.xyzx, r9.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, v1.xyxx, t0.xyzw, s2
mul r4.xyz, r4.xyzx, v4.xyzx
mul r5.xyz, v3.yyyy, cb0[5].xyzx
mad r5.xyz, cb0[4].xyzx, v3.xxxx, r5.xyzx
mad r5.xyz, cb0[6].xyzx, v3.zzzz, r5.xyzx
add r5.xyz, r5.xyzx, cb0[7].xyzx
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r1.w, r2.xyzx, r6.xyzx
add r2.xyz, v3.xyzx, -cb3[25].xyzx
dp3 r2.x, r2.xyzx, r2.xyzx
sqrt r2.x, r2.x
add r2.x, -r1.w, r2.x
mad r1.w, cb3[25].w, r2.x, r1.w
mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
lt r2.x, r1.w, l(0.990000)
if_nz r2.x
  add r2.xyz, v3.xyzx, -cb2[1].xyzx
  max r2.w, |r2.y|, |r2.x|
  max r2.w, |r2.z|, r2.w
  add r2.w, r2.w, -cb2[2].z
  max r2.w, r2.w, l(0.000010)
  mul r2.w, r2.w, cb2[2].w
  div r2.w, cb2[2].y, r2.w
  add r2.w, r2.w, -cb2[2].x
  add r2.w, -r2.w, l(1.000000)
  add r6.xyz, r2.xyzx, l(0.00781250000, 0.00781250000, 0.00781250000, 0.000000)
  sample_c_lz_indexable(texturecube)(float,float,float,float) r6.x, r6.xyzx, t2.xxxx, s0, r2.w
  add r7.xyz, r2.xyzx, l(-0.00781250000, -0.00781250000, 0.00781250000, 0.000000)
  sample_c_lz_indexable(texturecube)(float,float,float,float) r6.y, r7.xyzx, t2.xxxx, s0, r2.w
  add r7.xyz, r2.xyzx, l(-0.00781250000, 0.00781250000, -0.00781250000, 0.000000)
  sample_c_lz_indexable(texturecube)(float,float,float,float) r6.z, r7.xyzx, t2.xxxx, s0, r2.w
  add r2.xyz, r2.xyzx, l(0.00781250000, -0.00781250000, -0.00781250000, 0.000000)
  sample_c_lz_indexable(texturecube)(float,float,float,float) r6.w, r2.xyzx, t2.xxxx, s0, r2.w
  dp4 r2.x, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  add r2.y, -cb3[24].x, l(1.000000)
  mad r2.x, r2.x, r2.y, cb3[24].x
else
  mov r2.x, l(1.000000)
endif
add r2.y, -r2.x, l(1.000000)
mad r1.w, r1.w, r2.y, r2.x
dp3 r2.x, r5.xyzx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xxxx, t1.xyzw, s1
mul r1.w, r1.w, r2.x
mul r2.xyz, r1.wwww, cb0[2].xyzx
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, v2.xyzx
max r1.w, cb0[12].y, cb0[12].x
max r1.w, r1.w, cb0[12].z
add r1.w, -r1.w, l(1.000000)
mul r4.xyz, r1.wwww, r4.xyzx
add r1.w, -r4.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r5.xyzx, r3.xyzx
dp3_sat r2.w, r5.xyzx, r1.xyzx
dp3_sat r3.x, r5.xyzx, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r2.w, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
max r0.z, r0.z, l(0.002000)
add r1.x, -r0.z, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r2.w, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r2.w, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r3.x, r0.z, -r3.x
mad r1.x, r1.x, r3.x, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r2.wwww, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, cb0[12].xyzx, cb0[12].xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r2.xyzx
mul r0.yzw, r2.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r2.xyz, -cb0[12].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, cb0[12].xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad o0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used