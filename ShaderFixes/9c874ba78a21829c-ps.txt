// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9c874ba78a21829c-ps.txt
// 3DMigoto: 9c874ba78a21829c | Matched 2 variants of 1 shaders: Amplify/pan_texture_billboard
//
//       Unity headers extracted from Amplify_pan_texture_billboard
//       Shader "Amplify/pan_texture_billboard" {
//         CustomEditor "ASEMaterialInspector"
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "QUEUE"="Transparent+0" "RenderType"="Transparent" }
//           Pass 4/4 {
//             Name "ShadowCaster"
//             Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "LIGHTMODE"="SHADOWCASTER" "QUEUE"="Transparent+0" "RenderType"="Transparent" "SHADOWSUPPORT"="true" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Amplify_pan_texture_billboard:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 35 5 0
//      undeciphered1a: 3
// 2:   Keywords { "SHADOWS_CUBE" "UNITY_PASS_SHADOWCASTER" }
// 1:   Keywords { "SHADOWS_DEPTH" "UNITY_PASS_SHADOWCASTER" }
//      undeciphered2: 1 2 2 2 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 160
//      Float 80 [_opacity_power]
//      Float 84 [_R_power]
//      Vector 88 [_Red_channel_pan] 2
//      Float 96 [_R2_power]
//      Vector 100 [_Red2_channel_pan] 2
//      Float 108 [_G_power]
//      Vector 112 [_Green_channel_pan] 2
//      Float 120 [_B_power]
//      Vector 128 [_Blue_channel_pan] 2
//      Float 136 [_cuttopmaskpower]
//      Float 140 [_cuttopmaskcontrast]
//      Float 144 [_edgemaskcontrast]
//      Float 148 [_mask_range]
//      Float 152 [_mask_fallof]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      SetTexture 0 [_Texture_to_pan] 2D 0
//      SetTexture 1 [_DitherMaskLOD] 3D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:46:29 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy
// TEXCOORD                 1   xy          1     NONE   float   xy
// TEXCOORD                 2   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 5
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9c874ba78a21829c-ps.txt

mul r3.w, -r3.x, r3.y
mad r4.xyz, -r3.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xy, v1.xyxx, l(0.000000, 1.000000, 0.000000, 0.000000)
mad r0.zw, cb1[0].yyyy, cb0[6].yyyz, r0.xxxy
sample r1.xyzw, r0.zwzz, t0.xyzw, s0
mul r0.z, r1.x, cb0[6].x
mad r1.xy, cb1[0].yyyy, cb0[5].zwzz, r0.xyxx
sample r1.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.z, cb0[5].y, r1.x, r0.z
mad r1.xy, cb1[0].yyyy, cb0[7].xyxx, r0.xyxx
mad r0.xy, cb1[0].yyyy, cb0[8].xyxx, r0.xyxx
sample r2.xyzw, r0.xyxx, t0.xyzw, s0
sample r1.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.x, cb0[6].w, r1.y, r0.z
mad r0.x, cb0[7].z, r2.z, r0.x
add r0.y, -v1.y, l(1.000000)
log r0.y, r0.y
mul r0.y, r0.y, cb0[8].z
exp r0.y, r0.y
mul_sat r0.y, r0.y, cb0[8].w
mul r0.x, r0.y, r0.x
mul r0.yz, v1.xxyx, l(0.000000, 3.140000, 3.140000, 0.000000)
sincos r0.yz, null, r0.yyzy
mul r0.yz, r0.yyzy, r0.yyzy
mul r0.yz, r0.yyzy, cb0[9].xxxx
mul_sat r0.y, r0.z, r0.y
mul r0.x, r0.y, r0.x
add r0.yzw, v2.xxyz, -r4.xxyz
dp3 r0.y, r0.yzwy, r0.yzwy
sqrt r0.y, r0.y
div r0.y, r0.y, cb0[9].y
log r0.y, r0.y
mul r0.y, r0.y, cb0[9].z
exp r0.y, r0.y
min r0.y, r0.y, l(1.000000)
mul r0.x, r0.y, r0.x
mul_sat r0.x, r0.x, cb0[5].x
mul r0.z, r0.x, l(0.937500)
mul r0.xy, v0.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
sample r0.xyzw, r0.xyzx, t1.xyzw, s1
add r0.x, r0.w, l(-0.010000)
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
mov o0.xyzw, l(0,0,0,0)
ret
// Approximately 0 instruction slots used