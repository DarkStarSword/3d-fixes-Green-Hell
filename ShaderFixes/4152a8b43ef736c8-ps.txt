// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4152a8b43ef736c8-ps.txt
// 3DMigoto: 4152a8b43ef736c8 |    Unity headers extracted from VolumetricFogAndMist_VolumetricFog
//    Shader "VolumetricFogAndMist/VolumetricFog" {
//      SubShader 1/1 {
//        Pass 1/5 {
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from VolumetricFogAndMist_VolumetricFog:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 178 3 11
//   undeciphered1a: 19
//   Keywords { "FOG_AREA_BOX" "FOG_VOID_SPHERE" "FOG_USE_XY_PLANE" "FOG_SCATTERING_ON" "FOG_POINT_LIGHT1" "FOG_SUN_SHADOWS_ON" "FOG_COMPUTE_DEPTH" }
//   undeciphered2: 1 5 2 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 640
//   Vector 32 [_MainTex_TexelSize]
//   Float 172 [_FogAlpha]
//   Vector 176 [_Color] 3
//   Vector 192 [_FogDistance]
//   Vector 208 [_FogData]
//   Vector 224 [_FogWindDir] 3
//   Vector 240 [_FogStepping]
//   Vector 272 [_FogVoidPosition] 3
//   Vector 288 [_FogVoidData]
//   Vector 304 [_FogAreaPosition] 3
//   Vector 320 [_FogAreaData]
//   Vector 336 [_FogPointLightPosition0] 3
//   Vector 352 [_FogPointLightColor0] 3
//   Vector 368 [_FogPointLightPosition1] 3
//   Vector 384 [_FogPointLightColor1] 3
//   Vector 400 [_SunPosition] 3
//   Vector 416 [_SunDir] 3
//   Vector 432 [_SunColor] 3
//   Vector 448 [_FogScatteringData]
//   Vector 464 [_FogScatteringData2]
//   Vector 560 [_VolumetricFogSunWorldPos]
//   Vector 576 [_VolumetricFogSunShadowsData]
//   Float 592 [_Jitter]
//   Matrix 496 [_VolumetricFogSunProj]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 96 [_ScreenParams]
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 2
//   SetTexture 1 [_VolumetricFogDepthTexture] 2D 3
//   SetTexture 2 [_NoiseTex] 2D 1
//   SetTexture 3 [_VolumetricFogSunDepthTexture] 2D 4
//   SetTexture 4 [_MainTex] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:54:16 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[38], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 21
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r19.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4152a8b43ef736c8-ps.txt

mul r19.w, -r19.x, r19.y
mad r20.xyz, -r19.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.zwzz, t0.xyzw, s2
mad r0.x, cb1[7].x, r0.x, cb1[7].y
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
sample r1.xyzw, v1.zwzz, t1.xyzw, s3
mad r0.y, cb1[7].x, r1.x, cb1[7].y
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
min r0.x, r0.y, r0.x
add r1.z, -cb0[13].x, r20.z
mov r1.xy, r20.xyxx
mad r0.xyz, v2.xyzx, r0.xxxx, r1.xyzx
add r1.w, r0.z, l(0.000010)
mul r2.xy, v1.xyxx, cb1[6].xyxx
dp2 r2.x, l(2.40845060, 3.25352120, 0.000000, 0.000000), r2.xyxx
frc r2.x, r2.x
add r2.x, r2.x, l(-0.500000)
lt r2.yz, cb0[13].yyyy, r1.zzwz
and r2.y, r2.z, r2.y
lt r2.z, r1.z, -cb0[13].y
lt r1.w, r1.w, -cb0[13].y
and r1.w, r1.w, r2.z
or r1.w, r1.w, r2.y
if_z r1.w
  add r0.w, r0.z, l(0.000010)
  add r0.xyz, -r1.xyzx, r0.xywx
  dp3 r0.w, r0.xyzx, r0.xyzx
  sqrt r0.w, r0.w
  add r2.yzw, r1.xxyz, -cb0[19].xxyz
  div r3.xyz, r0.wwww, r0.xyzx
  div r4.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[20].xyzx
  add r5.xyz, -r2.yzwy, -r4.xyzx
  mul r5.xyz, r3.xyzx, r5.xyzx
  add r2.yzw, -r2.yyzw, r4.xxyz
  mul r2.yzw, r2.yyzw, r3.xxyz
  min r4.xyz, r5.xyzx, r2.yzwy
  max r4.xy, r4.yzyy, r4.xxxx
  max r1.w, r4.y, r4.x
  max r1.w, r1.w, l(0.000000)
  max r2.yzw, r5.xxyz, r2.yyzw
  min r2.yz, r2.zzwz, r2.yyyy
  min r2.y, r2.z, r2.y
  min r2.z, r0.w, cb0[12].z
  min r2.y, r2.z, r2.y
  add r2.y, -r1.w, r2.y
  lt r2.w, l(0.000000), r2.y
  if_nz r2.w
    div r3.xyz, r1.wwww, r3.xyzx
    add r3.xyz, r1.xyzx, r3.xyzx
    mul r1.xyz, r0.xyzx, r2.yyyy
    div r1.xyz, r1.xyzx, r0.wwww
    add r1.xyz, r1.xyzx, r3.xyzx
    add r1.xyz, -r1.xyzx, cb0[17].xyzx
    dp3 r1.x, r1.xyzx, r1.xyzx
    sqrt r1.x, r1.x
    mad r1.x, r1.x, cb0[18].x, l(-1.000000)
    mad_sat r1.x, cb0[18].w, r1.x, l(1.000000)
    lt r1.y, l(0.000000), r1.x
    if_nz r1.y
      div r1.yz, cb0[20].xxyx, cb0[13].wwww
      log r2.w, r2.y
      mul r2.w, r2.w, l(0.693147182)
      max r2.w, r2.w, l(0.000000)
      mad r2.w, r2.w, cb0[15].x, l(0.100000)
      mul r2.w, r2.w, cb0[13].z
      mul_sat r4.x, r2.z, cb0[15].y
      mul r2.w, r2.w, r4.x
      add r2.z, -r1.w, r2.z
      max r2.w, r2.w, l(0.010000)
      mul r4.xyz, r0.xyzx, r2.wwww
      div r4.xyz, r4.xyzx, r0.wwww
      div r2.w, r2.y, r2.w
      add r5.xyz, r3.xyzx, -cb0[21].xyzx
      add r6.xyz, r3.xyzx, -cb0[23].xyzx
      mul r7.xy, r4.xyxx, cb0[13].wwww
      mul r4.w, cb0[13].z, cb0[13].y
      div r7.z, r4.z, r4.w
      add r8.xy, r3.xyxx, cb0[14].xzxx
      mul r8.xy, r8.xyxx, cb0[13].wwww
      div r4.w, r3.z, r4.w
      add r8.zw, cb0[14].xxxy, cb0[19].xxxy
      frc r5.w, r2.x
      mad r2.w, r5.w, cb0[37].x, r2.w
      add r3.w, r3.z, cb0[13].x
      mul r9.xyz, r3.yyyy, cb0[32].xywx
      mad r9.xyz, cb0[31].xywx, r3.xxxx, r9.xyzx
      mad r9.xyz, cb0[33].xywx, r3.wwww, r9.xyzx
      add r9.xyz, r9.xyzx, cb0[34].xywx
      div r9.xy, r9.xyxx, r9.zzzz
      mad r9.xy, r9.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mad r3.z, r2.x, cb0[36].y, l(1.000000)
      mul r3.z, r2.y, r3.z
      mul r10.xyz, r0.xyzx, r3.zzzz
      div r10.xyz, r10.xyzx, r0.wwww
      add r10.xyz, r3.xywx, r10.xyzx
      mul r11.xyz, r10.yyyy, cb0[32].xywx
      mad r11.xyz, cb0[31].xywx, r10.xxxx, r11.xyzx
      mad r11.xyz, cb0[33].xywx, r10.zzzz, r11.xyzx
      add r11.xyz, r11.xyzx, cb0[34].xywx
      div r9.zw, r11.xxxy, r11.zzzz
      mad r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r1.w, -r1.w, cb0[35].w
      mul_sat r1.w, r1.w, l(0.0285714287)
      mul r1.w, r1.w, cb0[36].x
      div r3.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
      ge r2.y, r2.y, r2.z
      and r2.y, r2.y, l(0x3f800000)
      add r9.xy, -r9.zwzz, r9.xyxx
      add r3.xyw, r3.xyxw, -r10.xyxz
      mov r11.xyzw, l(0,0,0,0)
      mov r12.xyz, r5.xyzx
      mov r13.xyz, r6.xyzx
      mov r15.xy, r8.xyxx
      mov r2.z, r2.w
      mov r15.z, r4.w
      mov r14.xyzw, l(0,0,0,0)
      loop
        ge r5.w, l(1.000000), r2.z
        breakc_nz r5.w
        mad r16.xy, r8.zwzz, cb0[13].wwww, -r15.xyxx
        mul r16.xy, r1.yzyy, |r16.xyxx|
        max r5.w, r16.y, r16.x
        sample_l r16.xyzw, r15.xyxx, t2.xyzw, s1, l(0.000000)
        mad r5.w, r5.w, cb0[20].w, |r15.z|
        add r5.w, -r5.w, r16.w
        lt r6.w, l(0.000000), r5.w
        if_nz r6.w
          add r6.w, -r5.w, l(1.000000)
          mul r17.xyz, r6.wwww, cb0[11].xyzx
          mul r17.w, r5.w, l(0.400000)
          mul r5.w, r3.z, r2.z
          mad r18.xy, r5.wwww, r9.xyxx, r9.zwzz
          sample_l r18.xyzw, r18.xyxx, t3.xyzw, s4, l(0.000000)
          dp4 r6.w, r18.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
          div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
          mad r18.xyz, r5.wwww, r3.xywx, r10.xyzx
          add r18.xyz, r18.xyzx, -cb0[35].xyzx
          dp3 r5.w, r18.xyzx, r18.xyzx
          sqrt r5.w, r5.w
          add_sat r5.w, -r5.w, r6.w
          mul r6.w, r1.w, r14.w
          add r5.w, r5.w, l(-1.000000)
          mad r6.w, r6.w, r5.w, l(1.000000)
          mad r5.w, cb0[36].z, r5.w, l(1.000000)
          mul r17.xyzw, r5.wwww, r17.xyzw
          dp3 r5.w, r12.xyzx, r12.xyzx
          div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
          dp3 r7.w, r13.xyzx, r13.xyzx
          div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
          mul r18.xyz, r5.wwww, cb0[22].xyzx
          mad r18.xyz, cb0[24].xyzx, r7.wwww, r18.xyzx
          mul r18.xyz, r17.wwww, r18.xyzx
          mad r16.xyz, r16.xyzx, r6.wwww, r18.xyzx
          mul r16.xyz, r17.wwww, r16.xyzx
          mul r17.xyz, r16.xyzx, r17.xyzx
          add r5.w, -r14.w, l(1.000000)
          mad r16.xyzw, r17.xyzw, r5.wwww, r14.xyzw
          lt r5.w, l(0.990000), r16.w
          if_nz r5.w
            mov r11.xyzw, r17.xyzw
            mov r14.xyzw, r16.xyzw
            break
          endif
          mov r11.xyzw, r17.xyzw
          mov r14.xyzw, r16.xyzw
        endif
        add r12.xyz, r4.xyzx, r12.xyzx
        add r13.xyz, r4.xyzx, r13.xyzx
        add r2.z, r2.z, l(-1.000000)
        add r15.xyz, r7.xyzx, r15.xyzx
      endloop
      lt r1.y, r14.w, l(0.990000)
      and r1.y, r1.y, l(0x3f800000)
      add r1.z, -r14.w, l(1.000000)
      mul r1.w, r2.z, r2.y
      mul r1.y, r1.z, r1.y
      mul r1.y, r1.w, r1.y
      mad r3.xyzw, r11.xyzw, r1.yyyy, r14.xyzw
      div r0.xyz, r0.xyzx, r0.wwww
      dp3 r0.x, r0.xyzx, cb0[26].xyzx
      mul r0.x, r0.x, cb0[29].w
      max r0.x, r0.x, l(0.000000)
      mul r0.x, r0.x, r0.x
      mul r0.x, r0.x, r0.x
      mul r0.x, r0.x, r0.x
      mul r0.x, r3.w, r0.x
      add r0.yzw, -r3.xxyz, cb0[27].xxyz
      mad r3.xyz, r0.xxxx, r0.yzwy, r3.xyzx
      mul r0.xyzw, r3.xyzw, cb0[10].wwww
      mul r0.xyzw, r1.xxxx, r0.xyzw
    else
      mov r0.xyzw, l(0,0,0,0)
    endif
  else
    mov r0.xyzw, l(0,0,0,0)
  endif
else
  mov r0.xyzw, l(0,0,0,0)
endif
mad r1.x, r2.x, cb0[15].w, l(1.000000)
mul r3.xyzw, r0.xyzw, r1.xxxx
sample r4.xyzw, v1.xyxx, t4.xyzw, s0
mad_sat r0.x, -r0.w, r1.x, l(1.000000)
mad r0.xyz, r4.xyzx, r0.xxxx, r3.xyzx
lt r0.w, cb0[2].y, l(0.000000)
add r1.x, -cb0[25].y, l(1.000000)
movc r0.w, r0.w, r1.x, cb0[25].y
add r1.x, -v1.x, cb0[25].x
add r1.y, r0.w, -v1.y
mad r0.w, r2.x, cb0[29].z, l(1.000000)
mul r0.w, r0.w, cb0[28].x
mov r2.xyz, l(0,0,0,0)
mov r1.zw, v1.xxxy
mov r2.w, cb0[29].x
mov r3.x, cb0[28].y
loop
  ge r3.y, l(0.000000), r3.x
  breakc_nz r3.y
  mad r1.zw, r1.xxxy, r0.wwww, r1.zzzw
  sample_l r4.xyzw, r1.zwzz, t4.xyzw, s0, l(0.000000)
  mul r4.xyz, r2.wwww, r4.xyzx
  mad r2.xyz, r4.xyzx, cb0[28].wwww, r2.xyzx
  mul r2.w, r2.w, cb0[29].y
  add r3.x, r3.x, l(-1.000000)
endloop
mad o0.xyz, r2.xyzx, cb0[28].zzzz, r0.xyzx
mov o0.w, r3.w
ret
// Approximately 0 instruction slots used