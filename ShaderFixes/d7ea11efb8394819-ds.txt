// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed d7ea11efb8394819-ds.txt
// 3DMigoto: d7ea11efb8394819 | Matched 2 variants of 1 shaders: NatureManufacture Shaders/Water/Water River Tesseled Vertex Color
//
//       Unity headers extracted from NatureManufacture Shaders_Water_Water River Tesseled Vertex Color
//       Shader "NatureManufacture Shaders/Water/Water River Tesseled Vertex Color" {
//         SubShader 1/1 {
//           Tags { "IsEmissive"="true" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//           Pass 3/5 {
//             Name "FORWARD"
//             Tags { "IsEmissive"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//             ZWrite Off
//             Program "dp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from NatureManufacture Shaders_Water_Water River Tesseled Vertex Color:
//      API d3d11
//      Shader model ds_5_0
//      undeciphered1: 201802150 123 0 0
//      undeciphered1a: 5
// 1:   Keywords { "POINT" "FOG_LINEAR" }
// 2:   Keywords { "POINT_COOKIE" "FOG_LINEAR" }
//      undeciphered2: 1 3 4 3 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 576
//      Float 128 [_WaterTessScale]
//      ScalarInt 132 [_UVVDirection1UDirection0]
//      Vector 136 [_WaterMixSpeed] 2
//      Vector 144 [_WaterNormal_ST]
//      Float 160 [_GlobalTiling]
//      Vector 164 [_WaterMainSpeed] 2
//      Vector 176 [_SmallCascadeMixSpeed] 2
//      Vector 192 [_SmallCascadeNormal_ST]
//      Float 208 [_SmallCascadeWaterTessScale]
//      Vector 212 [_SmallCascadeMainSpeed] 2
//      Float 220 [_SmallCascadeAngle]
//      Float 224 [_SmallCascadeAngleFalloff]
//      Float 228 [_BigCascadeAngle]
//      Float 232 [_BigCascadeAngleFalloff]
//      Float 236 [_BigCascadeWaterTessScale]
//      Vector 240 [_BigCascadeMixSpeed] 2
//      Vector 256 [_BigCascadeNormal_ST]
//      Vector 272 [_BigCascadeMainSpeed] 2
//      Float 548 [_TessPhongStrength]
//      Vector 560 [_texcoord_ST]
//      Matrix 64 [unity_WorldToLight]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityPerDraw" 176
//      Vector 144 [unity_WorldTransformParams]
//      Matrix 0 [unity_ObjectToWorld]
//      Matrix 64 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 368
//      Matrix 272 [unity_MatrixVP]
//      SetTexture 0 [_WaterTesselation] 2D 0
//      SetTexture 1 [_SmallCascadeWaterTess] 2D 1
//      SetTexture 2 [_BigCascadeWaterTess] 2D 2
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:17:02 2019
//
//
// Patch Constant signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TessFactor            0   x           0  TRIEDGE   float
// SV_TessFactor            1   x           1  TRIEDGE   float
// SV_TessFactor            2   x           2  TRIEDGE   float
// SV_InsideTessFactor      0   x           3   TRIINT   float
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// INTERNALTESSPOS          0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xy
// TEXCOORD                 1   xyzw        4     NONE   float
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 7     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// COLOR                    0   xyzw        7     NONE   float   xyzw
// TEXCOORD                 6   xyz         8     NONE   float   xyz
//
ds_5_0
dcl_input_control_point_count 3
dcl_tessellator_domain domain_tri
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[36], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[10], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input vDomain.xyz
dcl_input vicp[3][0].xyzw
dcl_input vicp[3][1].xyzw
dcl_input vicp[3][2].xyz
dcl_input vicp[3][3].xy
dcl_input vicp[3][7].xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyz
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.x, cb0[13].w, l(0.0222222228)
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
mad r0.y, -cb0[13].w, l(0.0222222228), l(1.000000)
mul r1.xyz, vDomain.yyyy, vicp[1][2].xyzx
mad r1.xyz, vicp[0][2].xyzx, vDomain.xxxx, r1.xyzx
mad r1.xyz, vicp[2][2].xyzx, vDomain.zzzz, r1.xyzx
dp3 r2.y, r1.xyzx, cb2[4].xyzx
dp3 r2.z, r1.xyzx, cb2[5].xyzx
dp3 r2.x, r1.xyzx, cb2[6].xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyzw, r0.zzzz, r2.zxyz
mov_sat r2.x, r2.x
add r0.y, -r0.y, r2.x
max r0.y, r0.y, l(0.000000)
min r0.y, r0.y, l(2.000000)
mul_sat r0.x, r0.x, r0.y
add r0.x, -r0.x, l(1.000000)
log r0.x, r0.x
mul r0.x, r0.x, cb0[14].x
exp r0.x, r0.x
mul r0.y, cb0[14].y, l(0.0222222228)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
mad r0.z, -cb0[14].y, l(0.0222222228), l(1.000000)
add r0.z, -r0.z, r2.x
max r0.z, r0.z, l(0.000000)
min r0.z, r0.z, l(2.000000)
mul_sat r0.y, r0.y, r0.z
add r0.y, -r0.y, l(1.000000)
log r0.y, r0.y
mul r0.y, r0.y, cb0[14].z
exp r0.y, r0.y
min r0.y, r0.y, l(1.000000)
add_sat r0.x, -r0.y, r0.x
mul r0.zw, vDomain.yyyy, vicp[1][3].xxxy
mad r0.zw, vicp[0][3].xxxy, vDomain.xxxx, r0.zzzw
mad r0.zw, vicp[2][3].xxxy, vDomain.zzzz, r0.zzzw
mad r3.xy, r0.zwzz, cb0[12].xyxx, cb0[12].zwzz
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[10].x
mul r3.xy, r1.wwww, r3.xyxx
itof r2.x, cb0[8].y
eq r2.x, r2.x, l(1.000000)
movc r3.zw, r2.xxxx, cb0[13].yyyz, cb0[13].zzzy
mad r3.zw, cb1[0].yyyy, r3.zzzw, r3.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r3.z, r3.zwzz, t1.xywz, s1, l(0.000000)
mul r3.z, r3.z, cb0[13].x
movc r4.xy, r2.xxxx, cb0[11].xyxx, cb0[11].yxyy
mad r3.xy, cb1[0].yyyy, r4.xyxx, r3.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r3.x, r3.xyxx, t1.wxyz, s1, l(1.000000)
mad r3.x, r3.x, cb0[13].x, r3.z
mad r3.yz, r0.zzwz, cb0[9].xxyx, cb0[9].zzwz
mul r3.yz, r1.wwww, r3.yyzy
movc r4.xy, r2.xxxx, cb0[10].yzyy, cb0[10].zyzz
mad r4.xy, cb1[0].yyyy, r4.xyxx, r3.yzyy
sample_l_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t0.xyzw, s0, l(1.000000)
mul r3.w, r3.w, cb0[8].x
movc r4.xy, r2.xxxx, cb0[8].zwzz, cb0[8].wzww
mad r3.yz, cb1[0].yyyy, r4.xxyx, r3.yyzy
sample_l_indexable(texture2d)(float,float,float,float) r3.y, r3.yzyy, t0.xwyz, s0, l(1.000000)
mad r3.y, cb0[8].x, r3.y, r3.w
mad r3.z, r3.x, r0.x, -r3.y
mad r0.x, r0.x, r3.z, r3.y
mad r3.zw, r0.zzzw, cb0[16].xxxy, cb0[16].zzzw
mad o1.xy, r0.zwzz, cb0[35].xyxx, cb0[35].zwzz
mul r0.zw, r1.wwww, r3.zzzw
movc r3.zw, r2.xxxx, cb0[17].xxxy, cb0[17].yyyx
movc r4.xy, r2.xxxx, cb0[15].xyxx, cb0[15].yxyy
mad r4.xy, cb1[0].yyyy, r4.xyxx, r0.zwzz
mad r0.zw, cb1[0].yyyy, r3.zzzw, r0.zzzw
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t2.xywz, s2, l(1.000000)
mul r0.z, r0.z, cb0[14].w
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t2.xyzw, s2, l(1.000000)
mad r0.z, cb0[14].w, r0.w, r0.z
mad r0.w, r0.z, r0.y, -r0.x
mad r0.x, r0.y, r0.w, r0.x
add r0.y, -r0.x, r3.y
mul r4.xyzw, vDomain.yyyy, vicp[1][7].xyzw
mad r4.xyzw, vicp[0][7].xyzw, vDomain.xxxx, r4.xyzw
mad r4.xyzw, vicp[2][7].xyzw, vDomain.zzzz, r4.xyzw
mad r0.x, r4.x, r0.y, r0.x
add r0.y, -r0.x, r3.x
mad r0.x, r4.y, r0.y, r0.x
add r0.y, -r0.x, r0.z
mad r0.x, r4.z, r0.y, r0.x
mov o7.xyzw, r4.xyzw
dp3 r0.y, vicp[1][0].xyzx, vicp[1][2].xyzx
mul r3.xyzw, vDomain.yyyy, vicp[1][0].xyzw
mad r3.xyzw, vicp[0][0].xyzw, vDomain.xxxx, r3.xyzw
mad r3.xyzw, vicp[2][0].xyzw, vDomain.zzzz, r3.xyzw
dp3 r0.z, r3.xyzx, vicp[1][2].xyzx
add r0.y, -r0.y, r0.z
mad r0.yzw, -vicp[1][2].xxyz, r0.yyyy, r3.xxyz
mul r0.yzw, r0.yyzw, vDomain.yyyy
dp3 r1.w, vicp[0][0].xyzx, vicp[0][2].xyzx
dp3 r2.x, r3.xyzx, vicp[0][2].xyzx
add r1.w, -r1.w, r2.x
mad r4.xyz, -vicp[0][2].xyzx, r1.wwww, r3.xyzx
mad r0.yzw, r4.xxyz, vDomain.xxxx, r0.yyzw
dp3 r1.w, vicp[2][0].xyzx, vicp[2][2].xyzx
dp3 r2.x, r3.xyzx, vicp[2][2].xyzx
add r1.w, -r1.w, r2.x
mad r4.xyz, -vicp[2][2].xyzx, r1.wwww, r3.xyzx
mad r0.yzw, r4.xxyz, vDomain.zzzz, r0.yyzw
add r1.w, -cb0[34].y, l(1.000000)
mul r3.xyz, r3.xyzx, r1.wwww
mad r0.yzw, cb0[34].yyyy, r0.yyzw, r3.xxyz
mad r0.xyz, r0.xxxx, r1.xyzx, r0.yzwy
mul r1.xyzw, r0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r0.xyzw, cb2[3].xyzw
mul r4.xyzw, r1.yyyy, cb3[18].xyzw
mad r4.xyzw, cb3[17].xyzw, r1.xxxx, r4.xyzw
mad r4.xyzw, cb3[19].xyzw, r1.zzzz, r4.xyzw
mad r1.xyzw, cb3[20].xyzw, r1.wwww, r4.xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed d7ea11efb8394819-ds.txt
ne r5.w, r1.w, l(1.0)
if_nz r5.w
  add r5.w, r1.w, -r5.y
  mad r1.x, r5.w, r5.x, r1.x
endif

mov o1.z, r1.z
mov o6.zw, r1.zzzw
mul r4.xyzw, vDomain.yyyy, vicp[1][1].xyzw
mad r4.xyzw, vicp[0][1].xyzw, vDomain.xxxx, r4.xyzw
mad r4.xyzw, vicp[2][1].xyzw, vDomain.zzzz, r4.xyzw
mul r3.xyz, r4.yyyy, cb2[1].yzxy
mad r3.xyz, cb2[0].yzxy, r4.xxxx, r3.xyzx
mad r3.xyz, cb2[2].yzxy, r4.zzzz, r3.xyzx
mul r1.z, r4.w, cb2[9].w
dp3 r2.x, r3.xyzx, r3.xyzx
rsq r2.x, r2.x
mul r3.xyz, r2.xxxx, r3.xyzx
mul r4.xyz, r2.yzwy, r3.xyzx
mad r4.xyz, r2.wyzw, r3.yzxy, -r4.xyzx
mul r4.xyz, r1.zzzz, r4.xyzx
mov o2.y, r4.x
mov o2.z, r2.z
mov o2.x, r3.z
mov o3.x, r3.x
mov o4.x, r3.y
mov o3.z, r2.w
mov o4.z, r2.y
mov o3.y, r4.y
mov o4.y, r4.z
mad o5.xyz, cb2[3].xyzx, r3.wwww, r0.xyzx
mad r0.xyzw, cb2[3].xyzw, r3.wwww, r0.xyzw
mul r1.y, r1.y, cb1[5].x
mul r1.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mul r1.w, r1.y, l(0.500000)
add o6.xy, r1.zzzz, r1.xwxx
mul r1.xyz, r0.yyyy, cb0[5].xyzx
mad r1.xyz, cb0[4].xyzx, r0.xxxx, r1.xyzx
mad r0.xyz, cb0[6].xyzx, r0.zzzz, r1.xyzx
mad o8.xyz, cb0[7].xyzx, r0.wwww, r0.xyzx
ret
// Approximately 0 instruction slots used