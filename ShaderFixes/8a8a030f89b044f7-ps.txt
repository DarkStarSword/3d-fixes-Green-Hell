// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8a8a030f89b044f7-ps.txt
// 3DMigoto: 8a8a030f89b044f7 |    Unity headers extracted from VolumetricFogAndMist_VolumetricFog
//    Shader "VolumetricFogAndMist/VolumetricFog" {
//      SubShader 1/1 {
//        Pass 1/5 {
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from VolumetricFogAndMist_VolumetricFog:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 152 4 10
//   undeciphered1a: 22
//   Keywords { "FOG_AREA_BOX" "FOG_HAZE_ON" "FOG_SCATTERING_ON" "FOG_BLUR_ON" "FOG_POINT_LIGHT3" }
//   undeciphered2: 1 4 2 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 576
//   Vector 32 [_MainTex_TexelSize]
//   Float 172 [_FogAlpha]
//   Vector 176 [_Color] 3
//   Vector 192 [_FogDistance]
//   Vector 208 [_FogData]
//   Vector 224 [_FogWindDir] 3
//   Vector 240 [_FogStepping]
//   Vector 256 [_FogSkyData]
//   Vector 272 [_FogAreaPosition] 3
//   Vector 288 [_FogAreaData]
//   Vector 304 [_FogSkyColor]
//   Vector 320 [_FogPointLightPosition0] 3
//   Vector 336 [_FogPointLightColor0] 3
//   Vector 352 [_FogPointLightPosition1] 3
//   Vector 368 [_FogPointLightColor1] 3
//   Vector 384 [_FogPointLightPosition2] 3
//   Vector 400 [_FogPointLightColor2] 3
//   Vector 416 [_FogPointLightPosition3] 3
//   Vector 432 [_FogPointLightColor3] 3
//   Vector 448 [_SunPosition] 3
//   Vector 464 [_SunDir] 3
//   Vector 480 [_SunColor] 3
//   Vector 496 [_FogScatteringData]
//   Vector 512 [_FogScatteringData2]
//   Float 528 [_Jitter]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 96 [_ScreenParams]
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 2
//   SetTexture 1 [_NoiseTex] 2D 1
//   SetTexture 2 [_MainTex] 2D 0
//   SetTexture 3 [_BlurTex] 2D 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:36:00 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 24
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r22.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8a8a030f89b044f7-ps.txt

mul r22.w, -r22.x, r22.y
mad r23.xyz, -r22.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.zwzz, t0.xyzw, s2
mad r0.x, cb1[7].x, r0.x, cb1[7].y
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r1.y, -cb0[13].x, r23.y
mov r1.xz, r23.xxzx
mad r2.xyz, v2.xyzx, r0.xxxx, r1.xyzx
add r0.y, r2.y, l(0.000010)
mul r0.zw, v1.xxxy, cb1[6].xxxy
dp2 r0.z, l(2.40845060, 3.25352120, 0.000000, 0.000000), r0.zwzz
frc r0.z, r0.z
add r0.z, r0.z, l(-0.500000)
lt r0.w, cb0[13].y, r1.y
lt r1.w, cb0[13].y, r0.y
and r0.w, r0.w, r1.w
lt r1.w, r1.y, -cb0[13].y
lt r3.x, r0.y, -cb0[13].y
and r1.w, r1.w, r3.x
or r0.w, r0.w, r1.w
if_z r0.w
  add r2.w, r2.y, l(0.000010)
  add r3.xyz, -r1.xyzx, r2.xwzx
  dp3 r0.w, r3.xyzx, r3.xyzx
  sqrt r0.w, r0.w
  add r4.xyz, r1.xyzx, -cb0[17].xyzx
  div r5.xyz, r0.wwww, r3.xyzx
  div r6.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[18].xyzx
  add r7.xyz, -r4.xyzx, -r6.xyzx
  mul r7.xyz, r5.xyzx, r7.xyzx
  add r4.xyz, -r4.xyzx, r6.xyzx
  mul r4.xyz, r4.xyzx, r5.xyzx
  min r6.xyz, r7.xyzx, r4.xyzx
  max r2.yw, r6.yyyz, r6.xxxx
  max r1.w, r2.w, r2.y
  max r1.w, r1.w, l(0.000000)
  max r4.xyz, r7.xyzx, r4.xyzx
  min r2.yw, r4.yyyz, r4.xxxx
  min r2.y, r2.w, r2.y
  min r2.w, r0.w, cb0[12].z
  min r2.y, r2.w, r2.y
  add r2.y, -r1.w, r2.y
  lt r3.w, l(0.000000), r2.y
  if_nz r3.w
    div r4.xyz, r1.wwww, r5.xyzx
    add r1.xyz, r1.xyzx, r4.xyzx
    div r4.xy, cb0[18].xzxx, cb0[13].wwww
    log r3.w, r2.y
    mul r3.w, r3.w, l(0.693147182)
    max r3.w, r3.w, l(0.000000)
    mad r3.w, r3.w, cb0[15].x, l(0.100000)
    mul r3.w, r3.w, cb0[13].z
    mul_sat r4.z, r2.w, cb0[15].y
    mul r3.w, r3.w, r4.z
    add r1.w, -r1.w, r2.w
    max r2.w, r3.w, l(0.010000)
    mul r5.xyz, r2.wwww, r3.xyzx
    div r5.xyz, r5.xyzx, r0.wwww
    div r2.w, r2.y, r2.w
    add r6.xyz, r1.xyzx, -cb0[20].xyzx
    add r7.xyz, r1.xyzx, -cb0[22].xyzx
    add r8.xyz, r1.xyzx, -cb0[24].xyzx
    add r9.xyz, r1.xyzx, -cb0[26].xyzx
    mul r10.xz, r5.xxzx, cb0[13].wwww
    mul r3.w, cb0[13].z, cb0[13].y
    div r10.y, r5.y, r3.w
    add r1.xz, r1.xxzx, cb0[14].xxzx
    mul r1.xz, r1.xxzx, cb0[13].wwww
    div r1.y, r1.y, r3.w
    add r4.zw, cb0[14].xxxz, cb0[17].xxxz
    frc r3.w, r0.z
    mad r2.w, r3.w, cb0[33].x, r2.w
    ge r1.w, r2.y, r1.w
    mov r11.xyzw, l(0,0,0,0)
    mov r12.xyz, r6.xyzx
    mov r13.xyz, r7.xyzx
    mov r14.xyz, r8.xyzx
    mov r15.xyz, r9.xyzx
    mov r2.y, r2.w
    mov r17.xyz, r1.xyzx
    mov r16.xyzw, l(0,0,0,0)
    loop
      ge r3.w, l(1.000000), r2.y
      breakc_nz r3.w
      mad r18.xy, r4.zwzz, cb0[13].wwww, -r17.xzxx
      mul r18.xy, r4.xyxx, |r18.xyxx|
      max r3.w, r18.y, r18.x
      sample_l r18.xyzw, r17.xzxx, t1.xyzw, s1, l(0.000000)
      mad r3.w, r3.w, cb0[18].w, |r17.y|
      add r3.w, -r3.w, r18.w
      lt r5.w, l(0.000000), r3.w
      if_nz r5.w
        add r5.w, -r3.w, l(1.000000)
        mul r19.xyz, r5.wwww, cb0[11].xyzx
        mul r20.w, r3.w, l(0.400000)
        dp3 r3.w, r12.xyzx, r12.xyzx
        div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
        dp3 r5.w, r13.xyzx, r13.xyzx
        div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
        dp3 r6.w, r14.xyzx, r14.xyzx
        div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
        dp3 r7.w, r15.xyzx, r15.xyzx
        div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
        mul r21.xyz, r6.wwww, cb0[25].xyzx
        mad r21.xyz, cb0[27].xyzx, r7.wwww, r21.xyzx
        mad r21.xyz, cb0[23].xyzx, r5.wwww, r21.xyzx
        mad r21.xyz, cb0[21].xyzx, r3.wwww, r21.xyzx
        mad r18.xyz, r21.xyzx, r20.wwww, r18.xyzx
        mul r18.xyz, r20.wwww, r18.xyzx
        mul r20.xyz, r18.xyzx, r19.xyzx
        add r3.w, -r16.w, l(1.000000)
        mad r18.xyzw, r20.xyzw, r3.wwww, r16.xyzw
        lt r3.w, l(0.990000), r18.w
        if_nz r3.w
          mov r11.xyzw, r20.xyzw
          mov r16.xyzw, r18.xyzw
          break
        endif
        mov r11.xyzw, r20.xyzw
        mov r16.xyzw, r18.xyzw
      endif
      add r12.xyz, r5.xyzx, r12.xyzx
      add r13.xyz, r5.xyzx, r13.xyzx
      add r14.xyz, r5.xyzx, r14.xyzx
      add r15.xyz, r5.xyzx, r15.xyzx
      add r2.y, r2.y, l(-1.000000)
      add r17.xyz, r10.xyzx, r17.xyzx
    endloop
    lt r1.x, r16.w, l(0.990000)
    and r1.xw, r1.xxxw, l(0x3f800000, 0, 0, 0x3f800000)
    add r1.y, -r16.w, l(1.000000)
    mul r1.z, r2.y, r1.w
    mul r1.x, r1.y, r1.x
    mul r1.x, r1.z, r1.x
    mad r1.xyzw, r11.xyzw, r1.xxxx, r16.xyzw
    div r3.xyz, r3.xyzx, r0.wwww
    dp3 r0.w, r3.xyzx, cb0[29].xyzx
    mul r0.w, r0.w, cb0[32].w
    max r0.w, r0.w, l(0.000000)
    mul r0.w, r0.w, r0.w
    mul r0.w, r0.w, r0.w
    mul r0.w, r0.w, r0.w
    mul r0.w, r1.w, r0.w
    add r3.xyz, -r1.xyzx, cb0[30].xyzx
    mad r1.xyz, r0.wwww, r3.xyzx, r1.xyzx
    mul r1.xyzw, r1.xyzw, cb0[10].wwww
  else
    mov r1.xyzw, l(0,0,0,0)
  endif
else
  mov r1.xyzw, l(0,0,0,0)
endif
mul r0.w, r0.z, cb0[15].w
mad r2.y, r0.z, cb0[15].w, l(1.000000)
mul r3.xyzw, r1.xyzw, r2.yyyy
sample r4.xyzw, v1.xyxx, t2.xyzw, s0
sample r5.xyzw, v1.zwzz, t3.xyzw, s3
add r1.xyz, -r4.xyzx, r5.xyzx
mad r1.xyz, r3.wwww, r1.xyzx, r4.xyzx
ge r0.x, r0.x, cb0[16].w
if_nz r0.x
  add r0.x, r0.y, cb0[13].x
  max r0.x, r0.x, l(1.000000)
  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  mul r2.xz, r0.xxxx, r2.xxzx
  mad r2.xz, r2.xxzx, cb0[13].wwww, cb0[16].zzzz
  sample r4.xyzw, r2.xzxx, t1.xyzw, s1
  mad r0.y, r0.w, l(3.000000), r4.w
  mul r0.x, r0.x, cb0[16].x
  mad r0.y, -r0.y, cb0[16].y, l(1.000000)
  mul_sat r0.x, r0.y, r0.x
  mul r0.x, r0.x, cb0[19].w
  add r2.xzw, -r1.xxyz, cb0[19].xxyz
  mad r1.xyz, r0.xxxx, r2.xzwx, r1.xyzx
endif
mad_sat r0.x, -r1.w, r2.y, l(1.000000)
mad r0.xyw, r1.xyxz, r0.xxxx, r3.xyxz
lt r1.x, cb0[2].y, l(0.000000)
add r1.y, -cb0[28].y, l(1.000000)
movc r1.x, r1.x, r1.y, cb0[28].y
add r2.x, -v1.x, cb0[28].x
add r2.y, r1.x, -v1.y
mad r0.z, r0.z, cb0[32].z, l(1.000000)
mul r0.z, r0.z, cb0[31].x
mov r1.xyz, l(0,0,0,0)
mov r2.zw, v1.xxxy
mov r1.w, cb0[32].x
mov r3.x, cb0[31].y
loop
  ge r3.y, l(0.000000), r3.x
  breakc_nz r3.y
  mad r2.zw, r2.xxxy, r0.zzzz, r2.zzzw
  sample_l r4.xyzw, r2.zwzz, t2.xyzw, s0, l(0.000000)
  mul r4.xyz, r1.wwww, r4.xyzx
  mad r1.xyz, r4.xyzx, cb0[31].wwww, r1.xyzx
  mul r1.w, r1.w, cb0[32].y
  add r3.x, r3.x, l(-1.000000)
endloop
mad o0.xyz, r1.xyzx, cb0[31].zzzz, r0.xywx
mov o0.w, r3.w
ret
// Approximately 0 instruction slots used