// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d6c8df8d08e0edbb-ps.txt
// 3DMigoto: d6c8df8d08e0edbb | Matched 2 variants of 1 shaders: AdvancedTerrainGrass/Grass Base Shader
//
//       Unity headers extracted from AdvancedTerrainGrass_Grass Base Shader
//       Shader "AdvancedTerrainGrass/Grass Base Shader" {
//         SubShader 1/1 {
//           LOD 200
//           Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "QUEUE"="Geometry+200" "RenderType"="ATGrass" }
//           Pass 1/4 {
//             Name "FORWARD"
//             Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+200" "RenderType"="ATGrass" "SHADOWSUPPORT"="true" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from AdvancedTerrainGrass_Grass Base Shader:
//      API d3d11
//      Shader model ps_5_0
//      undeciphered1: 201802150 104 1 4
//      undeciphered1a: 11
// 1:   Keywords { "DIRECTIONAL" "FOG_LINEAR" "PROCEDURAL_INSTANCING_ON" }
// 2:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "PROCEDURAL_INSTANCING_ON" }
//      undeciphered2: 1 3 5 2 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 224
//      Vector 32 [_LightColor0]
//      Float 164 [_TransStrength]
//      Float 196 [_Cutoff]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 624 [unity_SHAr]
//      Vector 640 [unity_SHAg]
//      Vector 656 [unity_SHAb]
//      ConstBuffer "UnityFog" 32
//      Vector 0 [unity_FogColor]
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityReflectionProbes" 128
//      Vector 0 [unity_SpecCube0_BoxMax]
//      Vector 16 [unity_SpecCube0_BoxMin]
//      Vector 32 [unity_SpecCube0_ProbePosition]
//      Vector 48 [unity_SpecCube0_HDR]
//      Vector 64 [unity_SpecCube1_BoxMax]
//      Vector 80 [unity_SpecCube1_BoxMin]
//      Vector 96 [unity_SpecCube1_ProbePosition]
//      Vector 112 [unity_SpecCube1_HDR]
//      SetTexture 0 [_MainTex] 2D 1
//      SetTexture 1 [unity_SpecCube0] CUBE 0
//      SetTexture 2 [unity_SpecCube1] CUBE -1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityFog" 3
//      BindCB "UnityReflectionProbes" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:16:32 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 6     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float
// TEXCOORD                 4   xyzw        5     NONE   float   xyz
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 7   xyzw        7     NONE   float
// SV_InstanceID            0   x           8     NONE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[42], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d6c8df8d08e0edbb-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r12.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t0.xyzw, s1
add r1.w, r2.w, -cb0[12].y
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
mul r2.xyz, r2.xyzx, v5.xyzx
mul r1.w, r2.y, cb0[10].y
dp3 r2.w, -r1.xyzx, v2.xyzx
add r2.w, r2.w, r2.w
mad r3.xyz, v2.xyzx, -r2.wwww, -r1.xyzx
mov r4.xyz, v2.xyzx
mov r4.w, l(1.000000)
dp4 r5.x, cb2[39].xyzw, r4.xyzw
dp4 r5.y, cb2[40].xyzw, r4.xyzw
dp4 r5.z, cb2[41].xyzw, r4.xyzw
add r4.xyz, r5.xyzx, v6.xyzx
max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.w, l(0.000000), cb4[2].w
if_nz r2.w
  dp3 r2.w, r3.xyzx, r3.xyzx
  rsq r2.w, r2.w
  mul r5.xyz, r2.wwww, r3.xyzx
  add r6.xyz, -v3.xyzx, cb4[0].xyzx
  div r6.xyz, r6.xyzx, r5.xyzx
  add r7.xyz, -v3.xyzx, cb4[1].xyzx
  div r7.xyz, r7.xyzx, r5.xyzx
  lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
  movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
  min r2.w, r6.y, r6.x
  min r2.w, r6.z, r2.w
  add r6.xyz, v3.xyzx, -cb4[2].xyzx
  mad r5.xyz, r5.xyzx, r2.wwww, r6.xyzx
else
  mov r5.xyz, r3.xyzx
endif
sample_l_indexable(texturecube)(float,float,float,float) r5.xyzw, r5.xyzx, t1.xyzw, s0, l(6.000000)
add r2.w, r5.w, l(-1.000000)
mad r2.w, cb4[3].w, r2.w, l(1.000000)
log r2.w, r2.w
mul r2.w, r2.w, cb4[3].y
exp r2.w, r2.w
mul r2.w, r2.w, cb4[3].x
mul r6.xyz, r5.xyzx, r2.wwww
lt r3.w, cb4[1].w, l(0.999990)
if_nz r3.w
  lt r3.w, l(0.000000), cb4[6].w
  if_nz r3.w
    dp3 r3.w, r3.xyzx, r3.xyzx
    rsq r3.w, r3.w
    mul r7.xyz, r3.wwww, r3.xyzx
    add r8.xyz, -v3.xyzx, cb4[4].xyzx
    div r8.xyz, r8.xyzx, r7.xyzx
    add r9.xyz, -v3.xyzx, cb4[5].xyzx
    div r9.xyz, r9.xyzx, r7.xyzx
    lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
    movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
    min r3.w, r8.y, r8.x
    min r3.w, r8.z, r3.w
    add r8.xyz, v3.xyzx, -cb4[6].xyzx
    mad r3.xyz, r7.xyzx, r3.wwww, r8.xyzx
  endif
  sample_l_indexable(texturecube)(float,float,float,float) r3.xyzw, r3.xyzx, t2.xyzw, s0, l(6.000000)
  add r3.w, r3.w, l(-1.000000)
  mad r3.w, cb4[7].w, r3.w, l(1.000000)
  log r3.w, r3.w
  mul r3.w, r3.w, cb4[7].y
  exp r3.w, r3.w
  mul r3.w, r3.w, cb4[7].x
  mul r3.xyz, r3.xyzx, r3.wwww
  mad r5.xyz, r2.wwww, r5.xyzx, -r3.xyzx
  mad r6.xyz, cb4[1].wwww, r5.xyzx, r3.xyzx
endif
dp3 r2.w, v2.xyzx, v2.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, v2.xyzx
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.xyzx, r1.xyzx
dp3_sat r2.w, r3.xyzx, cb2[0].xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
dp2 r0.x, r0.xxxx, r0.xxxx
add r0.x, r0.x, l(-0.500000)
add r0.y, -r2.w, l(1.000000)
mul r0.z, r0.y, r0.y
mul r0.z, r0.z, r0.z
mul r0.y, r0.y, r0.z
mad r0.y, r0.x, r0.y, l(1.000000)
add r0.z, -|r0.w|, l(1.000000)
mul r0.w, r0.z, r0.z
mul r0.w, r0.w, r0.w
mul r0.z, r0.z, r0.w
mad r0.x, r0.x, r0.z, l(1.000000)
mul r0.x, r0.x, r0.y
mul r0.x, r2.w, r0.x
mad r0.xyw, cb0[2].xyxz, r0.xxxx, r4.xyxz
mul r4.xyz, r6.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
mad r0.z, r0.z, l(2.235174179E-008), l(0.040000)
mul r4.xyz, r0.zzzz, r4.xyzx
mad r0.xyz, r2.xyzx, r0.xywx, r4.xyzx
mad r3.xyz, r3.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000), cb2[0].xyzx
dp3_sat r0.w, -r3.xyzx, r1.xyzx
mad r0.w, r0.w, l(6.000000), l(-6.000000)
exp r0.w, r0.w
mul r1.xyz, r0.wwww, cb0[2].xyzx
mul r2.xyz, r1.wwww, r2.xyzx
mul r1.xyz, r1.xyzx, r2.xyzx
mad r0.xyz, r1.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used