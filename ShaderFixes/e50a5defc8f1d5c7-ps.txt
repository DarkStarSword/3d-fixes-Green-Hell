// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e50a5defc8f1d5c7-ps.txt
// 3DMigoto: e50a5defc8f1d5c7 |    Unity headers extracted from Hidden_HxVolumetricPointLight
//    Shader "Hidden/HxVolumetricPointLight" {
//      SubShader 1/1 {
// 1:     Pass 1/2 {
// 2:     Pass 2/2 {
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_HxVolumetricPointLight:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 146 0 10
//   undeciphered1a: 13
//   Keywords { "POINT_COOKIE" "SHADOWS_OFF" "HEIGHTFOG_ON" }
//   undeciphered2: 1 4 3 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 5856
//   Vector 224 [Phase]
//   Vector 256 [Density]
//   Vector 272 [FogHeights] 3
//   Vector 928 [hxVolumeSettingsOld0] 2
//   Vector 936 [hxVolumeSettingsOld1] 2
//   Vector 944 [hxVolumeSettingsOld2] 2
//   Vector 952 [hxVolumeSettingsOld3] 2
//   Vector 960 [hxVolumeSettingsOld4] 2
//   Vector 968 [hxVolumeSettingsOld5] 2
//   Vector 976 [hxVolumeSettingsOld6] 2
//   Vector 984 [hxVolumeSettingsOld7] 2
//   Vector 992 [hxVolumeSettingsOld8] 2
//   Vector 1000 [hxVolumeSettingsOld9] 2
//   Float 5152 [hxRayOffset]
//   Vector 5296 [LightColour] 3
//   Vector 5312 [LightColour2] 3
//   Vector 5344 [_LightParams]
//   Vector 5360 [_CustomLightPosition]
//   Float 5376 [HxTileSize]
//   Float 5728 [TintPercent]
//   Float 5808 [VolumeScale]
//   Matrix 288 [hxVolumeMatrixOld0]
//   Matrix 352 [hxVolumeMatrixOld1]
//   Matrix 416 [hxVolumeMatrixOld2]
//   Matrix 480 [hxVolumeMatrixOld3]
//   Matrix 544 [hxVolumeMatrixOld4]
//   Matrix 608 [hxVolumeMatrixOld5]
//   Matrix 672 [hxVolumeMatrixOld6]
//   Matrix 736 [hxVolumeMatrixOld7]
//   Matrix 800 [hxVolumeMatrixOld8]
//   Matrix 864 [hxVolumeMatrixOld9]
//   Matrix 5232 [InverseProjectionMatrix]
//   Matrix 5408 [hxCameraToWorld]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityPerDraw" 176
//   Matrix 64 [unity_WorldToObject]
//   SetTexture 0 [VolumetricDepth] 2D 2
//   SetTexture 1 [Tile5x5] 2D 1
//   SetTexture 2 [_FalloffTex] 2D 0
//   SetTexture 3 [PointCookieTexture] CUBE 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:23:12 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[364], dynamicIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_input_ps linear v1.xyw
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e50a5defc8f1d5c7-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.xy, v1.xyxx, v1.wwww
sample_l r1.xyzw, r0.xyxx, t0.xyzw, s2, l(0.000000)
dp2 r0.z, r1.xyxx, l(1.000000, 0.00392156886, 0.000000, 0.000000)
add r1.xy, -r1.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xyzw, r1.yyyy, cb0[328].xyzw
mad r1.xyzw, cb0[327].xyzw, r1.xxxx, r2.xyzw
add r1.xyzw, r1.xyzw, cb0[329].xyzw
add r1.xyzw, r1.xyzw, cb0[330].xyzw
div r1.xyz, r1.xyzx, r1.wwww
div r0.w, cb1[5].z, r1.z
mul r1.xyz, r0.wwww, -r1.xyzx
mul r1.xyz, r0.zzzz, r1.xyzx
mul r2.xyz, r1.yyyy, cb0[339].xyzx
mad r1.xyw, cb0[338].xyxz, r1.xxxx, r2.xyxz
mad r1.xyz, cb0[340].xyzx, r1.zzzz, r1.xywx
add r1.xyz, r1.xyzx, cb0[341].xyzx
mul r0.zw, cb0[363].xxxx, cb1[6].xxxy
mul r0.xy, r0.xyxx, r0.zwzz
div r0.xy, r0.xyxx, cb0[336].xxxx
ge r0.zw, r0.xxxy, -r0.xxxy
frc r0.xy, |r0.xyxx|
movc r0.xy, r0.zwzz, r0.xyxx, -r0.xyxx
mul r0.xy, r0.xyxx, cb0[336].xxxx
div r0.xy, r0.xyxx, cb0[336].xxxx
sample_l r0.xyzw, r0.xyxx, t1.xyzw, s1, l(0.000000)
add r0.x, r0.x, cb0[322].x
frc r0.x, r0.x
add r0.yzw, r1.xxyz, -r14.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.y, r1.x
mul r0.yzw, r0.yyzw, r1.yyyy
sqrt r1.x, r1.x
min r1.y, cb0[16].y, l(128.000000)
ftoi r1.z, r1.y
add r2.xyz, -cb0[335].xyzx, r14.xyzx
dp3 r1.w, r0.yzwy, r2.xyzx
add r2.w, r1.w, r1.w
dp3 r2.x, r2.xyzx, r2.xyzx
mul r2.y, cb0[334].z, cb0[334].z
mad r2.x, -cb0[334].z, cb0[334].z, r2.x
mul r2.x, r2.x, l(4.000000)
mad r2.x, r2.w, r2.w, -r2.x
lt r2.z, r2.x, l(0.000000)
discard_nz r2.z
sqrt r2.x, r2.x
mad r2.z, -r1.w, l(2.000000), -r2.x
mul r2.z, r2.z, l(0.500000)
mad r1.w, -r1.w, l(2.000000), r2.x
mul r1.w, r1.w, l(0.500000)
max r2.x, r2.z, r1.w
min r1.x, r1.x, r2.x
min r1.w, r2.z, r1.w
max r1.w, r1.w, l(0.000000)
add r1.x, -r1.w, r1.x
add r2.x, r1.x, l(-0.000100)
lt r2.x, r2.x, l(0.000000)
discard_nz r2.x
mad r2.xzw, r0.yyzw, r1.wwww, r14.xxyz
round_z r1.y, r1.y
div r1.x, r1.x, r1.y
mul r3.xyz, r0.yzwy, r1.xxxx
mad r2.xzw, r3.xxyz, r0.xxxx, r2.xxzw
mul r0.x, r1.w, cb0[16].x
mul r0.x, r0.x, cb0[16].w
mul r1.y, r1.x, cb0[16].w
add r1.w, -cb0[17].y, cb0[17].x
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
add r3.x, -cb0[17].z, l(1.000000)
div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
add r3.yzw, cb0[331].xxyz, -cb0[332].xxyz
mov r4.y, l(0)
mov r5.z, l(0)
mov r6.xyz, l(0,0,0,0)
mov r7.xyz, r2.xzwx
mov r4.z, r0.x
mov r4.w, l(0)
loop
  ige r5.w, r4.w, r1.z
  breakc_nz r5.w
  add r8.xyz, r7.xyzx, -cb0[335].xyzx
  dp3 r5.w, r8.xyzx, r8.xyzx
  rsq r6.w, r5.w
  mul r8.xyz, r6.wwww, r8.xyzx
  add r6.w, r7.y, -cb0[17].y
  mul_sat r6.w, r1.w, r6.w
  mad r7.w, r6.w, l(-2.000000), l(3.000000)
  mul r6.w, r6.w, r6.w
  mul r6.w, r6.w, r7.w
  mad r6.w, r6.w, r3.x, cb0[17].z
  mul r6.w, r6.w, cb0[16].x
  mov r9.x, r6.w
  mov r9.yz, l(0,0,0,0)
  mov r7.w, l(0)
  loop
    ige r8.w, r9.z, l(10)
    mov r7.w, l(0)
    breakc_nz r8.w
    eq r8.w, l(-1.000000), cb0[r9.z + 58].y
    if_nz r8.w
      mov r9.xy, r9.xxxx
      mov r7.w, l(-1)
      break
    endif
    ishl r9.w, r9.z, l(2)
    mul r10.xyz, r7.yyyy, cb0[r9.w + 19].xyzx
    mad r10.xyz, cb0[r9.w + 18].xyzx, r7.xxxx, r10.xyzx
    mad r10.xyz, cb0[r9.w + 20].xyzx, r7.zzzz, r10.xyzx
    add r10.xyz, r10.xyzx, cb0[r9.w + 21].xyzx
    lt r11.xyz, l(-0.500000, -0.500000, -0.500000, 0.000000), r10.xyzx
    lt r12.xyz, r10.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    and r9.w, r11.x, r12.x
    and r9.w, r11.y, r9.w
    and r9.w, r12.y, r9.w
    and r9.w, r11.z, r9.w
    and r9.w, r12.z, r9.w
    if_nz r9.w
      ge r9.w, l(3.000000), cb0[r9.z + 58].y
      if_nz r9.w
        max r9.w, r9.x, cb0[r9.z + 58].x
        add r10.w, r9.x, cb0[r9.z + 58].x
        min r11.x, r9.x, cb0[r9.z + 58].x
        eq r12.xyzw, l(0.000000, 1.000000, 2.000000, 3.000000), cb0[r9.z + 58].yyyy
        add r11.y, r9.x, -cb0[r9.z + 58].x
        movc r11.y, r12.w, r11.y, r9.x
        movc r11.x, r12.z, r11.x, r11.y
        movc r10.w, r12.y, r10.w, r11.x
        movc r5.x, r12.x, r9.w, r10.w
      else
        ge r9.w, l(7.000000), cb0[r9.z + 58].y
        dp3 r10.y, r10.xyzx, r10.xyzx
        sqrt r10.y, r10.y
        lt r10.y, r10.y, l(0.500000)
        and r9.w, r9.w, r10.y
        if_nz r9.w
          max r9.w, r9.x, cb0[r9.z + 58].x
          add r10.y, r9.x, cb0[r9.z + 58].x
          min r10.w, r9.x, cb0[r9.z + 58].x
          eq r11.xyzw, l(4.000000, 5.000000, 6.000000, 7.000000), cb0[r9.z + 58].yyyy
          add r12.x, r9.x, -cb0[r9.z + 58].x
          movc r11.w, r11.w, r12.x, r9.x
          movc r10.w, r11.z, r10.w, r11.w
          movc r10.y, r11.y, r10.y, r10.w
          movc r5.x, r11.x, r9.w, r10.y
        else
          ge r9.w, l(11.000000), cb0[r9.z + 58].y
          dp2 r10.x, r10.xzxx, r10.xzxx
          sqrt r10.x, r10.x
          lt r10.x, r10.x, l(0.500000)
          and r9.w, r9.w, r10.x
          max r10.x, r9.x, cb0[r9.z + 58].x
          add r10.y, r9.x, cb0[r9.z + 58].x
          min r10.z, r9.x, cb0[r9.z + 58].x
          eq r11.xyzw, l(8.000000, 9.000000, 10.000000, 11.000000), cb0[r9.z + 58].yyyy
          add r10.w, r9.x, -cb0[r9.z + 58].x
          movc r10.w, r11.w, r10.w, r9.x
          movc r10.z, r11.z, r10.z, r10.w
          movc r10.y, r11.y, r10.y, r10.z
          movc r10.x, r11.x, r10.x, r10.y
          movc r5.x, r9.w, r10.x, r9.x
        endif
      endif
    else
      mov r5.x, r9.x
    endif
    iadd r5.y, r9.z, l(1)
    mov r9.xyz, r5.xzyx
    mov r7.w, r8.w
  endloop
  movc r5.x, r7.w, r9.y, r9.x
  dp3 r5.y, r8.xyzx, -r0.yzwy
  mad r5.y, -cb0[14].w, r5.y, cb0[14].z
  log r5.y, r5.y
  mul r5.y, r5.y, l(1.500000)
  exp r5.y, r5.y
  div r5.y, cb0[14].y, r5.y
  mul r5.y, r5.y, cb0[14].x
  mul r4.x, r2.y, r5.w
  sample_l r8.xyzw, r4.xyxx, t2.xyzw, s0, l(0.000000)
  mul r8.xyz, r7.yyyy, cb2[5].xyzx
  mad r8.xyz, cb2[4].xyzx, r7.xxxx, r8.xyzx
  mad r8.xyz, cb2[6].xyzx, r7.zzzz, r8.xyzx
  add r8.xyz, r8.xyzx, cb2[7].xyzx
  sample_l r10.xyzw, r8.xyzx, t3.xyzw, s3, l(0.000000)
  mul r4.x, r8.w, r10.w
  mad r5.w, -r5.w, r2.y, l(1.000000)
  mul r5.w, r5.w, cb0[358].x
  mul_sat r5.w, r5.w, l(0.500000)
  mad r8.xyz, r5.wwww, r3.yzwy, cb0[332].xyzx
  mul r4.x, r4.x, r5.y
  mul r5.y, r4.z, l(-1.442695)
  exp r5.y, r5.y
  mul r4.x, r4.x, r5.y
  mul r4.x, r5.x, r4.x
  mul r4.x, r1.x, r4.x
  max r4.x, r4.x, l(0.000000)
  mad r6.xyz, r8.xyzx, r4.xxxx, r6.xyzx
  mad r7.xyz, r0.yzwy, r1.xxxx, r7.xyzx
  mad r4.z, r1.y, r5.x, r4.z
  iadd r4.w, r4.w, l(1)
endloop
mov o0.xyz, r6.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used