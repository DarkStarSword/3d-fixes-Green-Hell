// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 94f4f550c7a026b5-ps.txt
// 3DMigoto: 94f4f550c7a026b5 |    Unity headers extracted from Amplify_botfly_wound_shader
//    Shader "Amplify/botfly_wound_shader" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="AlphaTest+0" "RenderType"="Transparent" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="AlphaTest+0" "RenderType"="Transparent" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_botfly_wound_shader:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 165 9 2
//   undeciphered1a: 8
//   Keywords { "SPOT" "FOG_LINEAR" }
//   undeciphered2: 1 8 6 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 224
//   Vector 96 [_LightColor0]
//   Vector 128 [_main_base_nrm_ST]
//   Vector 144 [_Masks_ST]
//   Vector 160 [_Color1]
//   Vector 176 [_albedo_ST]
//   Float 192 [_Cutoff]
//   Matrix 32 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   ConstBuffer "Amplifybotfly_wound_shader" 80
//   Vector 0 [_albedo_falki1_color]
//   Vector 16 [_kierunekrobala1] 2
//   Vector 24 [_kierunekrobala2] 2
//   Float 32 [_main_mask_power]
//   Float 36 [_albedo_falki1]
//   Float 40 [_Float0]
//   Float 44 [_smoothnes2]
//   Float 48 [_smoothnes]
//   Float 52 [_detail_sking_tiling]
//   Float 56 [_tiling_falek]
//   Float 60 [_szybkosc_robala]
//   Float 64 [_normal_scale_falek]
//   Float 68 [_detail_skin_intensity]
//   Float 72 [_mask_power]
//   Float 76 [_main_base_scale_nrm]
//   SetTexture 0 [_nrm_do_ruszania] 2D 3
//   SetTexture 1 [_main_base_nrm] 2D 4
//   SetTexture 2 [_Masks] 2D 5
//   SetTexture 3 [_detail_normal] 2D 6
//   SetTexture 4 [_albedo] 2D 7
//   SetTexture 5 [_LightTexture0] 2D 1
//   SetTexture 6 [_LightTextureB0] 2D 2
//   SetTexture 7 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityProbeVolume" 4
//   BindCB "Amplifybotfly_wound_shader" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:42:03 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 7     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float
// TEXCOORD                 6   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_constantbuffer cb5[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 94f4f550c7a026b5-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v5.xyzx, r9.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r3.xy, v1.xyxx, cb5[3].yyyy
mad r4.xyzw, v1.xyxy, cb5[3].zzzz, l(0.000000, 1.000000, 0.000000, 1.000000)
mul r5.xyzw, cb5[1].zwxy, cb5[3].wwww
mad r4.xyzw, cb1[0].yyyy, r5.xyzw, r4.xyzw
sample r5.xyzw, r4.xyxx, t0.xyzw, s3
mul r6.x, r5.w, r5.x
mov r6.yz, r5.yyyy
mad r5.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r3.zw, r5.xxxz, cb5[4].xxxx
dp2 r1.w, r3.zwzz, r3.zwzz
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.w, r1.w
sample r4.xyzw, r4.zwzz, t0.xyzw, s3
mul r6.x, r4.w, r4.x
mov r6.yz, r4.yyyy
mad r4.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r4.xyz, r4.xyzx, cb5[4].xxxx
dp2 r2.w, r4.xzxx, r4.xzxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r2.w, r2.w
mad r3.zw, v1.xxxy, cb0[8].xxxy, cb0[8].zzzw
sample r6.xyzw, r3.zwzz, t1.xyzw, s4
mul r6.x, r6.w, r6.x
mad r3.zw, r6.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r6.xy, r3.zwzz, cb5[4].wwww
dp2 r3.z, r6.xyxx, r6.xyxx
min r3.z, r3.z, l(1.000000)
add r3.z, -r3.z, l(1.000000)
sqrt r6.z, r3.z
mad r3.zw, v1.xxxy, cb0[9].xxxy, cb0[9].zzzw
sample r7.xyzw, r3.zwzz, t2.xyzw, s5
mad r4.xyz, r5.xyzx, cb5[4].xxxx, r4.xyzx
mul r4.w, r1.w, r2.w
dp3 r1.w, r4.xywx, r4.xywx
rsq r1.w, r1.w
mul r2.w, r1.w, r4.w
mad r5.xy, r4.xyxx, r1.wwww, r6.xyxx
mul r5.z, r6.z, r2.w
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mul r4.xyw, r1.wwww, r5.xyxz
add r2.w, -r7.y, l(1.000000)
log r2.w, r2.w
mul r2.w, r2.w, cb5[4].z
exp r2.w, r2.w
mad r5.xyz, -r5.xyzx, r1.wwww, r6.xyzx
mad r4.xyw, r2.wwww, r5.xyxz, r4.xyxw
sample r3.xyzw, r3.xyxx, t3.xyzw, s6
mul r3.x, r3.w, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.zw, r3.xxxy, cb5[4].yyyy
dp2 r1.w, r3.zwzz, r3.zwzz
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.w, r1.w
mad r3.xy, r3.xyxx, cb5[4].yyyy, r4.xyxx
mul r3.z, r1.w, r4.w
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
mad r4.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
sample r5.xyzw, r4.xyxx, t4.xyzw, s7
mul_sat r4.xyw, r5.xyxz, cb0[10].xyxz
mul r5.xyz, r7.xyxx, cb5[2].xzyx
mul_sat r1.w, r4.z, r5.z
mul_sat r6.xyz, r4.xywx, cb5[0].xyzx
add r6.xyz, -r4.xywx, r6.xyzx
mad r4.xyz, r1.wwww, r6.xyzx, r4.xywx
mov_sat r5.xy, r5.xyxx
mul r4.xyz, r4.xyzx, r5.xxxx
add r1.w, cb5[2].w, -cb5[3].x
mad r1.w, r5.y, r1.w, cb5[3].x
add r2.w, r5.x, -cb0[12].x
lt r2.w, r2.w, l(0.000000)
discard_nz r2.w
mul r6.xyzw, v5.yyyy, cb0[3].xyzw
mad r6.xyzw, cb0[2].xyzw, v5.xxxx, r6.xyzw
mad r6.xyzw, cb0[4].xyzw, v5.zzzz, r6.xyzw
add r6.xyzw, r6.xyzw, cb0[5].xyzw
eq r2.w, cb4[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb4[0].y, l(1.000000)
  mul r5.yzw, v5.yyyy, cb4[2].xxyz
  mad r5.yzw, cb4[1].xxyz, v5.xxxx, r5.yyzw
  mad r5.yzw, cb4[3].xxyz, v5.zzzz, r5.yyzw
  add r5.yzw, r5.yyzw, cb4[4].xxyz
  movc r5.yzw, r2.wwww, r5.yyzw, v5.xxyz
  add r5.yzw, r5.yyzw, -cb4[6].xxyz
  mul r7.yzw, r5.yyzw, cb4[5].xxyz
  mad r2.w, r7.y, l(0.250000), l(0.750000)
  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
  max r7.x, r2.w, r3.w
  sample r7.xyzw, r7.xzwx, t7.xyzw, s0
else
  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r7.xyzw, cb2[46].xyzw
lt r3.w, l(0.000000), r6.z
and r3.w, r3.w, l(0x3f800000)
div r5.yz, r6.xxyx, r6.wwww
add r5.yz, r5.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
sample r7.xyzw, r5.yzyy, t5.xyzw, s1
mul r3.w, r3.w, r7.w
dp3 r4.w, r6.xyzx, r6.xyzx
sample r6.xyzw, r4.wwww, t6.xyzw, s2
mul r3.w, r3.w, r6.x
mul r2.w, r2.w, r3.w
dp3 r6.x, v2.xyzx, r3.xyzx
dp3 r6.y, v3.xyzx, r3.xyzx
dp3 r6.z, v4.xyzx, r3.xyzx
dp3 r3.x, r6.xyzx, r6.xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, r6.xyzx
mul r5.yzw, r2.wwww, cb0[6].xxyz
mul r4.xyz, r4.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
add r1.w, -r1.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.xyzx, r2.xyzx
dp3_sat r2.x, r3.xyzx, r1.xyzx
dp3_sat r2.y, r3.xyzx, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r2.x, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
max r0.z, r0.z, l(0.002000)
add r1.x, -r0.z, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r2.x, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r2.x, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r2.y, r0.z, -r2.y
mad r1.x, r1.x, r2.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r2.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
mul r1.xyz, r0.yyyy, r5.yzwy
mul r0.yzw, r5.yyzw, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
mad r0.x, r0.x, l(0.960000), l(0.040000)
mul r0.xyz, r0.xxxx, r0.yzwy
mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, r5.x
ret
// Approximately 0 instruction slots used