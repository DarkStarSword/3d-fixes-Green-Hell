// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed df5d8cccc5c9ea24-ps.txt
// 3DMigoto: df5d8cccc5c9ea24 | Matched 3 variants of 1 shaders: Shader Forge/larva vertex anim
//
//       Unity headers extracted from Shader Forge_larva vertex anim
//       Shader "Shader Forge/larva vertex anim" {
//         CustomEditor "ShaderForgeMaterialInspector"
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           Tags { "RenderType"="Opaque" }
//           Pass 1/4 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDBASE" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Shader Forge_larva vertex anim:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 86 6 2
//      undeciphered1a: 8
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "FOG_LINEAR" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 4:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//      undeciphered2: 1 4 5 4 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 128
//      Vector 32 [_LightColor0]
//      Vector 80 [_Diffuse_ST]
//      Vector 96 [_Normals_ST]
//      Float 112 [_BulgeShape]
//      Float 116 [_angle]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 624 [unity_SHAr]
//      Vector 640 [unity_SHAg]
//      Vector 656 [unity_SHAb]
//      ConstBuffer "UnityFog" 32
//      Vector 0 [unity_FogColor]
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_Normals] 2D 3
//      SetTexture 1 [_ShadowMapTexture] 2D 1
//      SetTexture 2 [_Diffuse] 2D 2
//      SetTexture 3 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityFog" 3
//      BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:20:26 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float
// TEXCOORD                 2   xy          2     NONE   float
// TEXCOORD                 9     z         2     NONE   float     z
// TEXCOORD                 3   xyzw        3     NONE   float   xyz
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// TEXCOORD                 5   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyz         6     NONE   float   xyz
// TEXCOORD                 8   xyzw        7     NONE   float   xy w
// TEXCOORD                10   xyzw        8     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[42], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.z
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyw
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed df5d8cccc5c9ea24-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v4.xyzx, v4.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v4.xyzx
add r1.xyz, -v3.xyzx, r9.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mad r2.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
sample r2.xyzw, r2.xyxx, t0.xyzw, s3
mul r2.x, r2.w, r2.x
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r2.xyxx, r2.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r2.z, r1.w
sincos r3.x, r4.x, cb0[7].y
add r3.yz, v1.xxyx, l(0.000000, -0.500000, -0.500000, 0.000000)
mov r4.y, r3.x
dp2 r1.w, r3.yzyy, r4.xyxx
add r1.w, r1.w, l(0.500000)
mad r1.w, cb1[0].y, l(0.200000), r1.w
frc r1.w, r1.w
add r1.w, r1.w, l(-0.500000)
mul r1.w, |r1.w|, l(3.000000)
log r1.w, r1.w
mul r1.w, r1.w, cb0[7].x
exp r1.w, r1.w
add r3.xyz, -r2.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mad r2.xyz, r1.wwww, r3.xyzx, r2.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r3.xyz, r2.yyyy, v6.xyzx
mad r2.xyw, r2.xxxx, v5.xyxz, r3.xyxz
mad r0.xyz, r2.zzzz, r0.xyzx, r2.xywx
dp3 r1.w, r0.xyzx, r0.xyzx
rsq r1.w, r1.w
mul r2.xyz, r0.xyzx, r1.wwww
dp3 r0.x, cb2[0].xyzx, cb2[0].xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, cb2[0].xyzx
mad r1.xyz, r1.xyzx, r0.wwww, r0.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
div r3.xy, v7.xyxx, v7.wwww
sample r3.xyzw, r3.xyxx, t1.xyzw, s1
mul r3.xyz, r3.xxxx, cb0[2].xyzx
mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r4.xyzw, r4.xyxx, t2.xyzw, s2
mad r0.w, r4.w, l(10.000000), l(1.000000)
exp r0.w, r0.w
eq r1.w, cb4[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb4[0].y, l(1.000000)
  mul r5.xyz, v3.yyyy, cb4[2].xyzx
  mad r5.xyz, cb4[1].xyzx, v3.xxxx, r5.xyzx
  mad r5.xyz, cb4[3].xyzx, v3.zzzz, r5.xyzx
  add r5.xyz, r5.xyzx, cb4[4].xyzx
  movc r5.xyz, r1.wwww, r5.xyzx, v3.xyzx
  add r5.xyz, r5.xyzx, -cb4[6].xyzx
  mul r5.yzw, r5.xxyz, cb4[5].xxyz
  mul r1.w, r5.y, l(0.250000)
  mul r3.w, cb4[0].z, l(0.500000)
  mad r4.w, -cb4[0].z, l(0.500000), l(0.250000)
  max r1.w, r1.w, r3.w
  min r5.x, r4.w, r1.w
  sample r6.xyzw, r5.xzwx, t3.xyzw, s0
  add r7.xyz, r5.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r7.xyzw, r7.xyzx, t3.xyzw, s0
  add r5.xyz, r5.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r5.xyzw, r5.xyzx, t3.xyzw, s0
  mov r2.w, l(1.000000)
  dp4 r6.x, r6.xyzw, r2.xyzw
  dp4 r6.y, r7.xyzw, r2.xyzw
  dp4 r6.z, r5.xyzw, r2.xyzw
else
  mov r2.w, l(1.000000)
  dp4 r6.x, cb2[39].xyzw, r2.xyzw
  dp4 r6.y, cb2[40].xyzw, r2.xyzw
  dp4 r6.z, cb2[41].xyzw, r2.xyzw
endif
add r5.xyz, r6.xyzx, v8.xyzx
max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r1.x, r1.xyzx, r2.xyzx
max r1.x, r1.x, l(0.000000)
log r1.x, r1.x
mul r0.w, r0.w, r1.x
exp r0.w, r0.w
mul r1.xyz, r0.wwww, r3.xyzx
dp3 r0.x, r2.xyzx, r0.xyzx
max r0.x, r0.x, l(0.000000)
mad r0.xyz, r0.xxxx, r3.xyzx, r5.xyzx
mad r0.xyz, r0.xyzx, r4.xyzx, r1.xyzx
div r0.w, v2.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used