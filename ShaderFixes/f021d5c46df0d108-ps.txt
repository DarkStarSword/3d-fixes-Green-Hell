// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f021d5c46df0d108-ps.txt
// 3DMigoto: f021d5c46df0d108 |    Unity headers extracted from Nature_Terrain_Diffuse
//    Shader "Nature/Terrain/Diffuse" {
//      Fallback "Diffuse"
//      SubShader 1/2 {
//        Tags { "QUEUE"="Geometry-99" "RenderType"="Opaque" }
//        Pass 2/9 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry-99" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Nature_Terrain_Diffuse:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 115 12 4
//   undeciphered1a: 7
//   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "FOG_LINEAR" "_NORMALMAP" }
//   undeciphered2: 1 13 7 13 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 240
//   Vector 32 [_LightColor0]
//   Vector 144 [_Control_TexelSize]
//   Vector 160 [_Splat0_ST]
//   Vector 176 [_Splat1_ST]
//   Vector 192 [_Splat2_ST]
//   Vector 208 [_Splat3_ST]
//   Float 224 [_NormalScale0]
//   Float 228 [_NormalScale1]
//   Float 232 [_NormalScale2]
//   Float 236 [_NormalScale3]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 16 [_LightPositionRange]
//   Vector 32 [_LightProjectionParams]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_Control] 2D 4
//   SetTexture 1 [_Splat0] 2D 5
//   SetTexture 2 [_Splat1] 2D 6
//   SetTexture 3 [_Splat2] 2D 7
//   SetTexture 4 [_Splat3] 2D 8
//   SetTexture 5 [_Normal0] 2D 9
//   SetTexture 6 [_Normal1] 2D 10
//   SetTexture 7 [_Normal2] 2D 11
//   SetTexture 8 [_Normal3] 2D 12
//   SetTexture 9 [_LightTextureB0] 2D 3
//   SetTexture 10 [_LightTexture0] CUBE 2
//   SetTexture 11 [unity_ProbeVolumeSH] 3D 0
//   SetTexture 12 [_ShadowMapTexture] CUBE 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:28:14 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 5      w        1     NONE   float      w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyzw        5     NONE   float   xy
// TEXCOORD                 6   xyz         6     NONE   float
// TEXCOORD                 7   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_sampler s11, mode_default
dcl_sampler s12, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texturecube (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t11
dcl_resource_texturecube (float,float,float,float) t12
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xy
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f021d5c46df0d108-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v4.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r1.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r1.xy, v5.xyxx, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, cb0[9].xyxx
sample r1.xyzw, r1.xyxx, t0.xyzw, s4
dp4 r0.w, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r2.x, r0.w, l(0.001000)
div r1.xyzw, r1.xyzw, r2.xxxx
mad r2.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
mad r2.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
mad r3.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
mad r3.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
sample r4.xyzw, r2.xyxx, t1.xyzw, s5
sample r5.xyzw, r2.zwzz, t2.xyzw, s6
mul r5.xyz, r1.yyyy, r5.xyzx
mad r4.xyz, r1.xxxx, r4.xyzx, r5.xyzx
sample r5.xyzw, r3.xyxx, t3.xyzw, s7
mad r4.xyz, r1.zzzz, r5.xyzx, r4.xyzx
sample r5.xyzw, r3.zwzz, t4.xyzw, s8
mad r4.xyz, r1.wwww, r5.xyzx, r4.xyzx
sample r5.xyzw, r2.xyxx, t5.xyzw, s9
mul r5.x, r5.w, r5.x
mad r2.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r5.xy, r2.xyxx, cb0[14].xxxx
dp2 r2.x, r5.xyxx, r5.xyxx
min r2.x, r2.x, l(1.000000)
add r2.x, -r2.x, l(1.000000)
sqrt r5.z, r2.x
sample r2.xyzw, r2.zwzz, t6.xyzw, s10
mul r2.x, r2.w, r2.x
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, cb0[14].yyyy
dp2 r2.w, r2.xyxx, r2.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r2.z, r2.w
mul r2.xyz, r1.yyyy, r2.xyzx
mad r2.xyz, r5.xyzx, r1.xxxx, r2.xyzx
sample r5.xyzw, r3.xyxx, t7.xyzw, s11
mul r5.x, r5.w, r5.x
mad r1.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r5.xy, r1.xyxx, cb0[14].zzzz
dp2 r1.x, r5.xyxx, r5.xyxx
min r1.x, r1.x, l(1.000000)
add r1.x, -r1.x, l(1.000000)
sqrt r5.z, r1.x
mad r1.xyz, r5.xyzx, r1.zzzz, r2.xyzx
sample r2.xyzw, r3.zwzz, t8.xyzw, s12
mul r2.x, r2.w, r2.x
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, cb0[14].wwww
dp2 r2.w, r2.xyxx, r2.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r2.z, r2.w
mad r1.xyz, r2.xyzx, r1.wwww, r1.xyzx
mul r2.xyz, v4.yyyy, cb0[5].xyzx
mad r2.xyz, cb0[4].xyzx, v4.xxxx, r2.xyzx
mad r2.xyz, cb0[6].xyzx, v4.zzzz, r2.xyzx
add r2.xyz, r2.xyzx, cb0[7].xyzx
add r3.xyz, -v4.xyzx, r8.xyzx
mov r5.x, cb4[9].z
mov r5.y, cb4[10].z
mov r5.z, cb4[11].z
dp3 r2.w, r3.xyzx, r5.xyzx
add r3.xyz, v4.xyzx, -cb3[25].xyzx
dp3 r3.x, r3.xyzx, r3.xyzx
sqrt r3.x, r3.x
add r3.x, -r2.w, r3.x
mad r2.w, cb3[25].w, r3.x, r2.w
mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
eq r3.x, cb6[0].x, l(1.000000)
if_nz r3.x
  eq r3.x, cb6[0].y, l(1.000000)
  mul r3.yzw, v4.yyyy, cb6[2].xxyz
  mad r3.yzw, cb6[1].xxyz, v4.xxxx, r3.yyzw
  mad r3.yzw, cb6[3].xxyz, v4.zzzz, r3.yyzw
  add r3.yzw, r3.yyzw, cb6[4].xxyz
  movc r3.xyz, r3.xxxx, r3.yzwy, v4.xyzx
  add r3.xyz, r3.xyzx, -cb6[6].xyzx
  mul r3.yzw, r3.xxyz, cb6[5].xxyz
  mad r3.y, r3.y, l(0.250000), l(0.750000)
  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
  max r3.x, r3.y, r4.w
  sample r3.xyzw, r3.xzwx, t11.xyzw, s0
else
  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r3.x, r3.xyzw, cb2[46].xyzw
lt r3.y, r2.w, l(0.990000)
if_nz r3.y
  add r3.yzw, v4.xxyz, -cb2[1].xxyz
  max r4.w, |r3.z|, |r3.y|
  max r4.w, |r3.w|, r4.w
  add r4.w, r4.w, -cb2[2].z
  max r4.w, r4.w, l(0.000010)
  mul r4.w, r4.w, cb2[2].w
  div r4.w, cb2[2].y, r4.w
  add r4.w, r4.w, -cb2[2].x
  add r4.w, -r4.w, l(1.000000)
  add r5.xyz, r3.yzwy, l(0.00781250000, 0.00781250000, 0.00781250000, 0.000000)
  sample_c_lz r5.x, r5.xyzx, t12.xxxx, s1, r4.w
  add r6.xyz, r3.yzwy, l(-0.00781250000, -0.00781250000, 0.00781250000, 0.000000)
  sample_c_lz r5.y, r6.xyzx, t12.xxxx, s1, r4.w
  add r6.xyz, r3.yzwy, l(-0.00781250000, 0.00781250000, -0.00781250000, 0.000000)
  sample_c_lz r5.z, r6.xyzx, t12.xxxx, s1, r4.w
  add r3.yzw, r3.yyzw, l(0.000000, 0.00781250000, -0.00781250000, -0.00781250000)
  sample_c_lz r5.w, r3.yzwy, t12.xxxx, s1, r4.w
  dp4 r3.y, r5.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  add r3.z, -cb3[24].x, l(1.000000)
  mad r3.y, r3.y, r3.z, cb3[24].x
else
  mov r3.y, l(1.000000)
endif
add r3.x, -r3.y, r3.x
mad r2.w, r2.w, r3.x, r3.y
dp3 r3.x, r2.xyzx, r2.xyzx
sample r3.xyzw, r3.xxxx, t9.xyzw, s3
sample r5.xyzw, r2.xyzx, t10.xyzw, s2
mul r2.x, r3.x, r5.w
mul r2.x, r2.w, r2.x
add r1.w, r1.z, l(0.000010)
dp3 r3.x, v1.xyzx, r1.xywx
dp3 r3.y, v2.xyzx, r1.xywx
dp3 r3.z, v3.xyzx, r1.xywx
dp3 r1.x, r3.xyzx, r3.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, r3.xyzx
mul r2.xyz, r2.xxxx, cb0[2].xyzx
dp3 r0.x, r1.xyzx, r0.xyzx
max r0.x, r0.x, l(0.000000)
mul r1.xyz, r2.xyzx, r4.xyzx
mul r0.xyz, r0.xxxx, r1.xyzx
mul r0.xyz, r0.wwww, r0.xyzx
div r0.w, v1.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used