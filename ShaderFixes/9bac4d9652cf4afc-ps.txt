// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9bac4d9652cf4afc-ps.txt
// 3DMigoto: 9bac4d9652cf4afc |    Unity headers extracted from VolumetricFogAndMist_VolumetricFog
//    Shader "VolumetricFogAndMist/VolumetricFog" {
//      SubShader 1/1 {
//        Pass 2/5 {
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from VolumetricFogAndMist_VolumetricFog:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 162 3 8
//   undeciphered1a: 26
//   Keywords { "FOG_AREA_SPHERE" "FOG_POINT_LIGHT4" "FOG_SUN_SHADOWS_ON" "FOG_COMPUTE_DEPTH" }
//   undeciphered2: 1 4 2 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 704
//   Vector 64 [_CameraDepthTexture_TexelSize]
//   Float 172 [_FogAlpha]
//   Vector 176 [_Color] 3
//   Vector 192 [_FogDistance]
//   Vector 208 [_FogData]
//   Vector 224 [_FogWindDir] 3
//   Vector 240 [_FogStepping]
//   Vector 272 [_FogAreaPosition] 3
//   Vector 288 [_FogAreaData]
//   Vector 304 [_FogPointLightPosition0] 3
//   Vector 320 [_FogPointLightColor0] 3
//   Vector 336 [_FogPointLightPosition1] 3
//   Vector 352 [_FogPointLightColor1] 3
//   Vector 368 [_FogPointLightPosition2] 3
//   Vector 384 [_FogPointLightColor2] 3
//   Vector 400 [_FogPointLightPosition3] 3
//   Vector 416 [_FogPointLightColor3] 3
//   Vector 432 [_FogPointLightPosition4] 3
//   Vector 448 [_FogPointLightColor4] 3
//   Vector 480 [_SunDir] 3
//   Vector 496 [_SunColor] 3
//   Vector 528 [_FogScatteringData2]
//   Vector 624 [_VolumetricFogSunWorldPos]
//   Vector 640 [_VolumetricFogSunShadowsData]
//   Float 656 [_Jitter]
//   Matrix 560 [_VolumetricFogSunProj]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 96 [_ScreenParams]
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 1
//   SetTexture 1 [_VolumetricFogDepthTexture] 2D 2
//   SetTexture 2 [_NoiseTex] 2D 0
//   SetTexture 3 [_VolumetricFogSunDepthTexture] 2D 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:46:01 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[42], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 28
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r26.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9bac4d9652cf4afc-ps.txt

mul r26.w, -r26.x, r26.y
mad r27.xyz, -r26.wwww, cb10[0].xyzw, cb1[4].xyzw

mad r0.xyzw, cb0[4].xyxy, l(0.000000, -0.750000, 0.000000, 0.750000), v1.zwzw
sample r1.xyzw, r0.xyxx, t0.xyzw, s1
sample r0.xyzw, r0.zwzz, t0.xyzw, s1
max r0.xyzw, r0.xxxx, r1.xxxx
mad r1.x, cb1[7].x, r0.w, cb1[7].y
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
sample r2.xyzw, v1.zwzz, t1.xyzw, s2
mad r1.y, cb1[7].x, r2.x, cb1[7].y
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
min r1.x, r1.y, r1.x
add r2.y, -cb0[13].x, r27.y
mov r2.xz, r27.xxzx
mad r1.xyz, v2.xyzx, r1.xxxx, r2.xyzx
add r2.w, r1.y, l(0.000010)
lt r3.xy, cb0[13].yyyy, r2.ywyy
and r3.x, r3.y, r3.x
lt r3.y, r2.y, -cb0[13].y
lt r2.w, r2.w, -cb0[13].y
and r2.w, r2.w, r3.y
or r2.w, r2.w, r3.x
if_z r2.w
  add r1.w, r1.y, l(0.000010)
  add r1.xyz, -r2.xyzx, r1.xwzx
  dp3 r1.w, r1.xyzx, r1.xyzx
  sqrt r1.w, r1.w
  add r3.xyz, r2.xyzx, -cb0[17].xyzx
  div r4.xyz, r1.xyzx, r1.wwww
  dp3 r2.w, r4.xyzx, r3.xyzx
  dp3 r3.x, r3.xyzx, r3.xyzx
  add r3.x, r3.x, -cb0[18].y
  mad r3.x, r2.w, r2.w, -r3.x
  ge r3.y, r3.x, l(0.000000)
  sqrt r3.z, r3.x
  movc r3.x, r3.y, r3.z, r3.x
  add r3.y, -r2.w, -r3.x
  max r3.y, r3.y, l(0.000000)
  min r3.z, r1.w, cb0[12].z
  add r2.w, -r2.w, r3.x
  min r2.w, r3.z, r2.w
  add r2.w, -r3.y, r2.w
  ge r3.x, r2.w, l(0.000000)
  if_nz r3.x
    mul r3.xw, v1.xxxy, cb1[6].xxxy
    dp2 r3.x, l(2.40845060, 3.25352120, 0.000000, 0.000000), r3.xwxx
    frc r3.x, r3.x
    add r3.x, r3.x, l(-0.500000)
    mad r5.xyz, r4.xyzx, r3.yyyy, r2.xyzx
    log r2.x, r2.w
    mul r2.x, r2.x, l(0.693147182)
    max r2.x, r2.x, l(0.000000)
    mad r2.x, r2.x, cb0[15].x, l(0.100000)
    mul r2.x, r2.x, cb0[13].z
    mul_sat r2.y, r3.z, cb0[15].y
    mul r2.x, r2.y, r2.x
    add r2.y, -r3.y, r3.z
    max r2.x, r2.x, l(0.010000)
    mul r6.xyz, r1.xyzx, r2.xxxx
    div r6.xyz, r6.xyzx, r1.wwww
    div r2.x, r2.w, r2.x
    add r7.xyz, r5.xyzx, -cb0[19].xyzx
    add r8.xyz, r5.xyzx, -cb0[21].xyzx
    add r9.xyz, r5.xyzx, -cb0[23].xyzx
    add r10.xyz, r5.xyzx, -cb0[25].xyzx
    add r11.xyz, r5.xyzx, -cb0[27].xyzx
    mul r12.xz, r6.xxzx, cb0[13].wwww
    mul r2.z, cb0[13].z, cb0[13].y
    div r12.y, r6.y, r2.z
    add r3.zw, r5.xxxz, cb0[14].xxxz
    mul r3.zw, r3.zzzw, cb0[13].wwww
    div r2.z, r5.y, r2.z
    add r13.xy, cb0[14].xzxx, cb0[17].xzxx
    frc r4.w, r3.x
    mad r2.x, r4.w, cb0[41].x, r2.x
    add r5.w, r5.y, cb0[13].x
    mul r14.xyz, r5.wwww, cb0[36].xywx
    mad r14.xyz, cb0[35].xywx, r5.xxxx, r14.xyzx
    mad r14.xyz, cb0[37].xywx, r5.zzzz, r14.xyzx
    add r14.xyz, r14.xyzx, cb0[38].xywx
    div r13.zw, r14.xxxy, r14.zzzz
    mad r13.zw, r13.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
    mad r3.x, r3.x, cb0[40].y, l(1.000000)
    mul r3.x, r2.w, r3.x
    mul r1.xyz, r1.xyzx, r3.xxxx
    div r1.xyz, r1.xyzx, r1.wwww
    add r1.xyz, r1.xyzx, r5.xwzx
    mul r14.xyz, r1.yyyy, cb0[36].xywx
    mad r14.xyz, cb0[35].xywx, r1.xxxx, r14.xyzx
    mad r14.xyz, cb0[37].xywx, r1.zzzz, r14.xyzx
    add r14.xyz, r14.xyzx, cb0[38].xywx
    div r14.xy, r14.xyxx, r14.zzzz
    mad r14.xy, r14.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r1.w, -r3.y, cb0[39].w
    mul_sat r1.w, r1.w, l(0.0285714287)
    mul r1.w, r1.w, cb0[40].x
    div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
    ge r2.y, r2.w, r2.y
    and r2.y, r2.y, l(0x3f800000)
    add r13.zw, r13.zzzw, -r14.xxxy
    add r5.xyz, -r1.xyzx, r5.xwzx
    mov r15.xyzw, l(0,0,0,0)
    mov r16.xyz, r7.xyzx
    mov r17.xyz, r8.xyzx
    mov r18.xyz, r9.xyzx
    mov r19.xyz, r10.xyzx
    mov r20.xyz, r11.xyzx
    mov r22.xz, r3.zzwz
    mov r2.w, r2.x
    mov r22.y, r2.z
    mov r21.xyzw, l(0,0,0,0)
    loop
      ge r3.y, l(1.000000), r2.w
      breakc_nz r3.y
      mad r14.zw, r13.xxxy, cb0[13].wwww, -r22.xxxz
      mul r14.zw, r14.zzzw, cb0[18].xxxx
      dp2 r3.y, r14.zwzz, r14.zwzz
      sample_l r23.xyzw, r22.xzxx, t2.xyzw, s0, l(0.000000)
      mad r3.y, r3.y, cb0[18].w, |r22.y|
      add r3.y, -r3.y, r23.w
      lt r4.w, l(0.000000), r3.y
      if_nz r4.w
        add r4.w, -r3.y, l(1.000000)
        mul r24.xyz, r4.wwww, cb0[11].xyzx
        mul r24.w, r3.y, l(0.400000)
        mul r3.y, r3.x, r2.w
        mad r14.zw, r3.yyyy, r13.zzzw, r14.xxxy
        sample_l r25.xyzw, r14.zwzz, t3.xyzw, s3, l(0.000000)
        dp4 r4.w, r25.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
        div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
        mad r25.xyz, r3.yyyy, r5.xyzx, r1.xyzx
        add r25.xyz, r25.xyzx, -cb0[39].xyzx
        dp3 r3.y, r25.xyzx, r25.xyzx
        sqrt r3.y, r3.y
        add_sat r3.y, -r3.y, r4.w
        mul r4.w, r1.w, r21.w
        add r3.y, r3.y, l(-1.000000)
        mad r4.w, r4.w, r3.y, l(1.000000)
        mad r3.y, cb0[40].z, r3.y, l(1.000000)
        mul r24.xyzw, r3.yyyy, r24.xyzw
        dp3 r3.y, r16.xyzx, r16.xyzx
        div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), r3.y
        dp3 r5.w, r17.xyzx, r17.xyzx
        div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
        dp3 r6.w, r18.xyzx, r18.xyzx
        div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
        dp3 r7.w, r19.xyzx, r19.xyzx
        div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
        dp3 r8.w, r20.xyzx, r20.xyzx
        div r8.w, l(1.000000, 1.000000, 1.000000, 1.000000), r8.w
        mul r25.xyz, r7.wwww, cb0[26].xyzx
        mad r25.xyz, cb0[28].xyzx, r8.wwww, r25.xyzx
        mad r25.xyz, cb0[24].xyzx, r6.wwww, r25.xyzx
        mad r25.xyz, cb0[22].xyzx, r5.wwww, r25.xyzx
        mad r25.xyz, cb0[20].xyzx, r3.yyyy, r25.xyzx
        mul r25.xyz, r24.wwww, r25.xyzx
        mad r23.xyz, r23.xyzx, r4.wwww, r25.xyzx
        mul r23.xyz, r24.wwww, r23.xyzx
        mul r24.xyz, r23.xyzx, r24.xyzx
        add r3.y, -r21.w, l(1.000000)
        mad r23.xyzw, r24.xyzw, r3.yyyy, r21.xyzw
        lt r3.y, l(0.990000), r23.w
        if_nz r3.y
          mov r15.xyzw, r24.xyzw
          mov r21.xyzw, r23.xyzw
          break
        endif
        mov r15.xyzw, r24.xyzw
        mov r21.xyzw, r23.xyzw
      endif
      add r16.xyz, r6.xyzx, r16.xyzx
      add r17.xyz, r6.xyzx, r17.xyzx
      add r18.xyz, r6.xyzx, r18.xyzx
      add r19.xyz, r6.xyzx, r19.xyzx
      add r20.xyz, r6.xyzx, r20.xyzx
      add r2.w, r2.w, l(-1.000000)
      add r22.xyz, r12.xyzx, r22.xyzx
    endloop
    lt r1.x, r21.w, l(0.990000)
    and r1.x, r1.x, l(0x3f800000)
    add r1.y, -r21.w, l(1.000000)
    mul r1.z, r2.w, r2.y
    mul r1.x, r1.y, r1.x
    mul r1.x, r1.z, r1.x
    mad r1.xyzw, r15.xyzw, r1.xxxx, r21.xyzw
    dp3 r2.x, r4.xyzx, cb0[30].xyzx
    mul r2.x, r2.x, cb0[33].w
    max r2.x, r2.x, l(0.000000)
    mul r2.x, r2.x, r2.x
    mul r2.x, r2.x, r2.x
    mul r2.x, r2.x, r2.x
    mul r2.x, r1.w, r2.x
    add r2.yzw, -r1.xxyz, cb0[31].xxyz
    mad r1.xyz, r2.xxxx, r2.yzwy, r1.xyzx
    mul o0.xyzw, r1.xyzw, cb0[10].wwww
  else
    mov o0.xyzw, l(0,0,0,0)
  endif
else
  mov o0.xyzw, l(0,0,0,0)
endif
mov o1.xyzw, r0.xyzw
ret
// Approximately 0 instruction slots used