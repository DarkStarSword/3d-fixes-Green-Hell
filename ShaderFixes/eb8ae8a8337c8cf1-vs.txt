// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed eb8ae8a8337c8cf1-vs.txt
// 3DMigoto: eb8ae8a8337c8cf1 | Matched 32 variants of 1 shaders: Lux Water/WaterSurface
//
//              Unity headers extracted from Lux Water_WaterSurface
//              Shader "Lux Water/WaterSurface" {
//                CustomEditor "LuxWaterMaterialEditor"
//                SubShader 1/1 {
//                  LOD 200
//                  Tags { "FORCENOSHADOWCASTING"="true" "QUEUE"="Transparent-1" "RenderType"="Opaque" }
//                  Pass 2/4 {
//                    Name "FORWARD"
//                    Tags { "FORCENOSHADOWCASTING"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent-1" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//                    ZWrite [_ZWrite]
//                    Program "vp" {
//                      SubProgram "d3d11" {
//                      }
//                    }
//                  }
//                }
//              }
//
//           Unity 5.3 headers extracted from Lux Water_WaterSurface:
//             API d3d11
//             Shader model vs_4_0
//             undeciphered1: 201802150 40 0 0
//             undeciphered1a: 6
// 80000000:   Keywords { "DIRECTIONAL" "GEOM_TYPE_BRANCH" "GEOM_TYPE_BRANCH_DETAIL" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 00008000:   Keywords { "DIRECTIONAL" "GEOM_TYPE_BRANCH" "GEOM_TYPE_BRANCH_DETAIL" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" }
// 00800000:   Keywords { "DIRECTIONAL" "GEOM_TYPE_BRANCH" "GEOM_TYPE_BRANCH_DETAIL" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 00000080:   Keywords { "DIRECTIONAL" "GEOM_TYPE_BRANCH" "GEOM_TYPE_BRANCH_DETAIL" "USINGWATERPROJECTORS" }
// 20000000:   Keywords { "DIRECTIONAL" "GEOM_TYPE_BRANCH" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 00002000:   Keywords { "DIRECTIONAL" "GEOM_TYPE_BRANCH" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" }
// 00200000:   Keywords { "DIRECTIONAL" "GEOM_TYPE_BRANCH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 00000020:   Keywords { "DIRECTIONAL" "GEOM_TYPE_BRANCH" "USINGWATERPROJECTORS" }
// 40000000:   Keywords { "DIRECTIONAL" "GEOM_TYPE_BRANCH_DETAIL" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 00004000:   Keywords { "DIRECTIONAL" "GEOM_TYPE_BRANCH_DETAIL" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" }
// 00400000:   Keywords { "DIRECTIONAL" "GEOM_TYPE_BRANCH_DETAIL" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 00000040:   Keywords { "DIRECTIONAL" "GEOM_TYPE_BRANCH_DETAIL" "USINGWATERPROJECTORS" }
// 01000000:   Keywords { "DIRECTIONAL" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 00000100:   Keywords { "DIRECTIONAL" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" }
// 08000000:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "GEOM_TYPE_BRANCH" "GEOM_TYPE_BRANCH_DETAIL" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 00000800:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "GEOM_TYPE_BRANCH" "GEOM_TYPE_BRANCH_DETAIL" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" }
// 00080000:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "GEOM_TYPE_BRANCH" "GEOM_TYPE_BRANCH_DETAIL" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 00000008:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "GEOM_TYPE_BRANCH" "GEOM_TYPE_BRANCH_DETAIL" "USINGWATERPROJECTORS" }
// 02000000:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "GEOM_TYPE_BRANCH" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 00000200:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "GEOM_TYPE_BRANCH" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" }
// 00020000:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "GEOM_TYPE_BRANCH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 00000002:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "GEOM_TYPE_BRANCH" "USINGWATERPROJECTORS" }
// 04000000:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "GEOM_TYPE_BRANCH_DETAIL" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 00000400:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "GEOM_TYPE_BRANCH_DETAIL" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" }
// 00040000:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "GEOM_TYPE_BRANCH_DETAIL" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 00000004:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "GEOM_TYPE_BRANCH_DETAIL" "USINGWATERPROJECTORS" }
// 10000000:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 00001000:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" }
// 00100000:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 00000010:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "USINGWATERPROJECTORS" }
// 00010000:   Keywords { "DIRECTIONAL" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 00000001:   Keywords { "DIRECTIONAL" "USINGWATERPROJECTORS" }
//             undeciphered2: 1 0 4 0 0 0
//             undeciphered3: 255 3 0 0 2 2 1 1
// 00ff00ff:   ConstBuffer "$Globals" 528
// ff00ff00:   ConstBuffer "$Globals" 544
//             Vector 160 [_BumpTiling]
//             ConstBuffer "UnityLighting" 768
//             Vector 672 [unity_SHBr]
//             Vector 688 [unity_SHBg]
//             Vector 704 [unity_SHBb]
//             Vector 720 [unity_SHC]
//             ConstBuffer "UnityPerDraw" 176
//             Vector 144 [unity_WorldTransformParams]
//             Matrix 0 [unity_ObjectToWorld]
//             Matrix 64 [unity_WorldToObject]
//             ConstBuffer "UnityPerFrame" 368
//             Matrix 144 [unity_MatrixV]
//             Matrix 272 [unity_MatrixVP]
//             BindCB "$Globals" 0
//             BindCB "UnityLighting" 1
//             BindCB "UnityPerDraw" 2
//             BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:26:16 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float
// TEXCOORD                 1   xyzw        4     NONE   float
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float
// COLOR                    0   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyz         8     NONE   float   xyz
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[46], immediateIndexed
dcl_constantbuffer cb2[10], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyz
dcl_output o9.xyzw
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
add r1.xyzw, r0.xyzw, cb2[3].xyzw
mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
mul r2.xyzw, r1.yyyy, cb3[18].xyzw
mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
mad r2.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
mov o0.xyzw, r2.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed eb8ae8a8337c8cf1-vs.txt
ne r6.w, r2.w, l(1.0)
if_nz r6.w
  add r6.w, r2.w, -r6.y
  mad r2.x, r6.w, r6.x, r2.x
endif

mov o1.w, r0.x
mul r3.xyz, v1.yyyy, cb2[1].yzxy
mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
rsq r0.x, r0.x
mul r3.xyz, r0.xxxx, r3.xyzx
mov o1.x, r3.z
dp3 r4.x, v2.xyzx, cb2[4].xyzx
dp3 r4.y, v2.xyzx, cb2[5].xyzx
dp3 r4.z, v2.xyzx, cb2[6].xyzx
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mul r4.xyzw, r0.xxxx, r4.xyzz
mul r5.xyz, r3.xyzx, r4.wxyw
mad r5.xyz, r4.ywxy, r3.yzxy, -r5.xyzx
mul r0.x, v1.w, cb2[9].w
mul r5.xyz, r0.xxxx, r5.xyzx
mov o1.y, r5.x
mov o1.z, r4.x
mov o2.x, r3.x
mov o3.x, r3.y
mov o2.w, r0.y
mov o3.w, r0.z
mov o2.y, r5.y
mov o3.y, r5.z
mov o2.z, r4.y
mov o3.z, r4.w
mov o4.zw, l(0,0,0,0)
mul o4.xy, r1.xzxx, cb0[10].wwww
mul r0.xyz, r2.xwyx, l(0.500000, 0.500000, -0.500000, 0.000000)
mov o5.zw, r2.zzzw
add o5.xy, r0.yyyy, r0.xzxx
mul r0.xyz, r1.yyyy, cb3[10].xyzx
mad r0.xyz, cb3[9].xyzx, r1.xxxx, r0.xyzx
mad r0.xyz, cb3[11].xyzx, r1.zzzz, r0.xyzx
mad r0.xyz, cb3[12].xyzx, r1.wwww, r0.xyzx
mov o6.w, r1.y
mul o6.xyz, r0.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000)
mov o7.xyzw, l(0,0,0,0)
mul r0.x, r4.y, r4.y
mad r0.x, r4.x, r4.x, -r0.x
mul r1.xyzw, r4.ywzx, r4.xyzw
dp4 r2.x, cb1[42].xyzw, r1.xyzw
dp4 r2.y, cb1[43].xyzw, r1.xyzw
dp4 r2.z, cb1[44].xyzw, r1.xyzw
mad o8.xyz, cb1[45].xyzx, r0.xxxx, r2.xyzx
mov o9.xyzw, l(0,0,0,0)
ret
// Approximately 0 instruction slots used