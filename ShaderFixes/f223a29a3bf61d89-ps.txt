// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f223a29a3bf61d89-ps.txt
// 3DMigoto: f223a29a3bf61d89 |    Unity headers extracted from Standard
//    Shader "Standard" {
//      CustomEditor "StandardShaderGUI"
//      Fallback "VertexLit"
//      SubShader 1/2 {
//        LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite [_ZWrite]
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 163 13 4
//   undeciphered1a: 10
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "_EMISSION" "INSTANCING_ON" "_NORMALMAP" "_DETAIL_MULX2" "_SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A" "_GLOSSYREFLECTIONS_OFF" "_METALLICGLOSSMAP" }
//   undeciphered2: 1 10 9 10 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 176
//   Vector 32 [_LightColor0]
//   Vector 64 [_Color]
//   Float 128 [_BumpScale]
//   Float 132 [_DetailNormalMapScale]
//   Float 144 [_GlossMapScale]
//   Float 148 [_OcclusionStrength]
//   Vector 160 [_EmissionColor]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Vector 64 [unity_IndirectSpecColor]
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   ConstBuffer "UnityDrawCallInfo" 16
//   ScalarInt 0 [unity_BaseInstanceID]
//   ConstBuffer "UnityInstancing_PerDraw2" 224
//   Struct 0 [unity_Builtins2Array] 2 112
//   Vector 0 [unity_SHArArray]
//   Vector 16 [unity_SHAgArray]
//   Vector 32 [unity_SHAbArray]
//   Vector 48 [unity_SHBrArray]
//   Vector 64 [unity_SHBgArray]
//   Vector 80 [unity_SHBbArray]
//   Vector 96 [unity_SHCArray]
//   SetTexture 0 [_MetallicGlossMap] 2D 6
//   SetTexture 1 [_MainTex] 2D 1
//   SetTexture 2 [_DetailMask] 2D 4
//   SetTexture 3 [_DetailAlbedoMap] 2D 2
//   SetTexture 4 [_BumpMap] 2D 3
//   SetTexture 5 [_DetailNormalMap] 2D 5
//   SetTexture 6 [_ShadowMapTexture] 2D 9
//   SetTexture 7 [_OcclusionMap] 2D 7
//   SetTexture 8 [_EmissionMap] 2D 8
//   SetTexture 9 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityProbeVolume" 6
//   BindCB "UnityDrawCallInfo" 7
//   BindCB "UnityInstancing_PerDraw2" 8
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:29:11 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
// SV_InstanceID            0   x           8     NONE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_constantbuffer cb7[1], immediateIndexed
dcl_constantbuffer cb8[14], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyw
dcl_input_ps constant v8.x
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f223a29a3bf61d89-ps.txt

mul r10.w, -r10.x, r10.y
mad r11.xyz, -r10.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s6
sample r1.xyzw, v1.xyxx, t1.xyzw, s1
mul r0.yzw, r1.xxyz, cb0[4].xxyz
sample r2.xyzw, v1.xyxx, t2.xyzw, s4
sample r3.xyzw, v1.zwzz, t3.xyzw, s2
mul r1.xyz, r2.wwww, r3.xyzx
add r2.x, -r2.w, l(1.000000)
mad r1.xyz, r1.xyzx, l(4.594794, 4.594794, 4.594794, 0.000000), r2.xxxx
mul r2.xyz, r0.yzwy, r1.xyzx
mad r0.yzw, r0.yyzw, r1.xxyz, l(0.000000, -0.040000, -0.040000, -0.040000)
mad r0.yzw, r0.xxxx, r0.yyzw, l(0.000000, 0.040000, 0.040000, 0.040000)
mad r0.x, -r0.x, l(0.960000), l(0.960000)
mul r1.xyz, r0.xxxx, r2.xyzx
sample r3.xyzw, v1.xyxx, t4.xyzw, s3
mul r3.x, r3.w, r3.x
mad r2.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xy, r2.xyxx, cb0[8].xxxx
dp2 r2.z, r3.xyxx, r3.xyxx
min r2.z, r2.z, l(1.000000)
add r2.z, -r2.z, l(1.000000)
sqrt r3.z, r2.z
sample r4.xyzw, v1.zwzz, t5.xyzw, s5
mul r4.x, r4.w, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, cb0[8].yyyy
dp2 r2.z, r4.xyxx, r4.xyxx
min r2.z, r2.z, l(1.000000)
add r2.z, -r2.z, l(1.000000)
sqrt r2.z, r2.z
mad r4.xy, r2.xyxx, cb0[8].xxxx, r4.xyxx
mul r4.z, r2.z, r3.z
dp3 r2.x, r4.xyzx, r4.xyzx
rsq r2.x, r2.x
mad r2.xyz, r4.xyzx, r2.xxxx, -r3.xyzx
mad r2.xyz, r2.wwww, r2.xyzx, r3.xyzx
mul r3.xyz, r2.yyyy, v4.xyzx
mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
dp3 r3.x, v2.xyzx, v2.xyzx
rsq r3.x, r3.x
mul r3.yzw, r3.xxxx, v2.xxyz
iadd r4.x, v8.x, cb7[0].x
mov r4.y, v3.w
mov r4.z, v4.w
mov r4.w, v5.w
add r5.xyz, -r4.yzwy, r11.xyzx
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r5.x, r5.xyzx, r6.xyzx
add r5.yzw, r4.yyzw, -cb3[25].xxyz
dp3 r5.y, r5.yzwy, r5.yzwy
sqrt r5.y, r5.y
add r5.y, -r5.x, r5.y
mad r5.x, cb3[25].w, r5.y, r5.x
mad_sat r5.x, r5.x, cb3[24].z, cb3[24].w
imul null, r4.x, r4.x, l(7)
eq r5.y, cb6[0].x, l(1.000000)
if_nz r5.y
  eq r5.z, cb6[0].y, l(1.000000)
  mul r6.xyz, v4.wwww, cb6[2].xyzx
  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  add r6.xyz, r6.xyzx, cb6[4].xyzx
  movc r6.xyz, r5.zzzz, r6.xyzx, r4.yzwy
  add r6.xyz, r6.xyzx, -cb6[6].xyzx
  mul r6.yzw, r6.xxyz, cb6[5].xxyz
  mad r5.z, r6.y, l(0.250000), l(0.750000)
  mad r5.w, cb6[0].z, l(0.500000), l(0.750000)
  max r6.x, r5.w, r5.z
  sample r6.xyzw, r6.xzwx, t9.xyzw, s0
else
  mov r6.xyzw, cb8[r4.x + 6].wwww
endif
dp4_sat r5.z, r6.xyzw, cb2[46].xyzw
div r6.xy, v7.xyxx, v7.wwww
sample r6.xyzw, r6.xyxx, t6.xyzw, s9
add r5.z, r5.z, -r6.x
mad r5.x, r5.x, r5.z, r6.x
sample r6.xyzw, v1.xyxx, t7.xyzw, s7
add r5.z, -cb0[9].y, l(1.000000)
mad r5.z, r6.y, cb0[9].y, r5.z
mul r6.xyz, r5.xxxx, cb0[2].xyzx
if_nz r5.y
  eq r5.x, cb6[0].y, l(1.000000)
  mul r7.xyz, v4.wwww, cb6[2].xyzx
  mad r7.xyz, cb6[1].xyzx, v3.wwww, r7.xyzx
  mad r7.xyz, cb6[3].xyzx, v5.wwww, r7.xyzx
  add r7.xyz, r7.xyzx, cb6[4].xyzx
  movc r4.yzw, r5.xxxx, r7.xxyz, r4.yyzw
  add r4.yzw, r4.yyzw, -cb6[6].xxyz
  mul r7.yzw, r4.yyzw, cb6[5].xxyz
  mul r4.y, r7.y, l(0.250000)
  mul r4.z, cb6[0].z, l(0.500000)
  mad r4.w, -cb6[0].z, l(0.500000), l(0.250000)
  max r4.y, r4.z, r4.y
  min r7.x, r4.w, r4.y
  sample r8.xyzw, r7.xzwx, t9.xyzw, s0
  add r4.yzw, r7.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r9.xyzw, r4.yzwy, t9.xyzw, s0
  add r4.yzw, r7.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r7.xyzw, r4.yzwy, t9.xyzw, s0
  mov r2.w, l(1.000000)
  dp4 r8.x, r8.xyzw, r2.xyzw
  dp4 r8.y, r9.xyzw, r2.xyzw
  dp4 r8.z, r7.xyzw, r2.xyzw
else
  mov r2.w, l(1.000000)
  dp4 r8.x, cb8[r4.x + 0].xyzw, r2.xyzw
  dp4 r8.y, cb8[r4.x + 1].xyzw, r2.xyzw
  dp4 r8.z, cb8[r4.x + 2].xyzw, r2.xyzw
endif
add r4.xyz, r8.xyzx, v6.xyzx
max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r5.xyw, r5.zzzz, cb4[4].xyxz
mad r2.w, -r1.w, cb0[9].x, l(1.000000)
mad r7.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
dp3 r3.x, r7.xyzx, r7.xyzx
max r3.x, r3.x, l(0.001000)
rsq r3.x, r3.x
mul r7.xyz, r3.xxxx, r7.xyzx
dp3 r3.x, r2.xyzx, -r3.yzwy
dp3_sat r3.y, r2.xyzx, cb2[0].xyzx
dp3_sat r2.x, r2.xyzx, r7.xyzx
dp3_sat r2.y, cb2[0].xyzx, r7.xyzx
mul r2.z, r2.y, r2.y
dp2 r2.z, r2.zzzz, r2.wwww
add r2.z, r2.z, l(-0.500000)
add r3.z, -r3.y, l(1.000000)
mul r3.w, r3.z, r3.z
mul r3.w, r3.w, r3.w
mul r3.z, r3.z, r3.w
mad r3.z, r2.z, r3.z, l(1.000000)
add r3.w, -|r3.x|, l(1.000000)
mul r4.w, r3.w, r3.w
mul r4.w, r4.w, r4.w
mul r3.w, r3.w, r4.w
mad r2.z, r2.z, r3.w, l(1.000000)
mul r2.z, r2.z, r3.z
mul r2.w, r2.w, r2.w
max r2.w, r2.w, l(0.002000)
add r3.z, -r2.w, l(1.000000)
mad r4.w, |r3.x|, r3.z, r2.w
mad r3.z, r3.y, r3.z, r2.w
mul r3.x, r3.z, |r3.x|
mad r3.x, r3.y, r4.w, r3.x
add r3.x, r3.x, l(0.000010)
div r3.x, l(0.500000), r3.x
mul r3.z, r2.w, r2.w
mad r4.w, r2.x, r3.z, -r2.x
mad r2.x, r4.w, r2.x, l(1.000000)
mul r3.z, r3.z, l(0.318309873)
mad r2.x, r2.x, r2.x, l(1.000000012E-007)
div r2.x, r3.z, r2.x
mul r2.x, r2.x, r3.x
mul r2.x, r2.x, l(3.14159274)
mul r2.xz, r3.yyyy, r2.xxzx
max r2.x, r2.x, l(0.000000)
mad r2.w, r2.w, r2.w, l(1.000000)
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
dp3 r3.x, r0.yzwy, r0.yzwy
ne r3.x, r3.x, l(0.000000)
and r3.x, r3.x, l(0x3f800000)
mul r2.x, r2.x, r3.x
mad r0.x, r1.w, cb0[9].x, -r0.x
add_sat r0.x, r0.x, l(1.000000)
mul r3.xyz, r2.zzzz, r6.xyzx
mad r3.xyz, r4.xyzx, r5.zzzz, r3.xyzx
mul r4.xyz, r6.xyzx, r2.xxxx
add r1.w, -r2.y, l(1.000000)
mul r2.x, r1.w, r1.w
mul r2.x, r2.x, r2.x
mul r1.w, r1.w, r2.x
add r2.xyz, -r0.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r1.wwww, r0.yzwy
mul r2.xyz, r2.xyzx, r4.xyzx
mad r1.xyz, r1.xyzx, r3.xyzx, r2.xyzx
mul r2.xyz, r5.xywx, r2.wwww
add r3.xyz, -r0.yzwy, r0.xxxx
mad r0.xyz, r3.wwww, r3.xyzx, r0.yzwy
mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
sample r1.xyzw, v1.xyxx, t8.xyzw, s8
mad r0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
div r0.w, v2.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
add r0.xyz, r0.xyzx, -cb5[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used