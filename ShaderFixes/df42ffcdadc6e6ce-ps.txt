// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed df42ffcdadc6e6ce-ps.txt
// 3DMigoto: df42ffcdadc6e6ce | Matched 3 variants of 1 shaders: Shader Forge/LightWrapping_resin
//
//       Unity headers extracted from Shader Forge_LightWrapping_resin
//       Shader "Shader Forge/LightWrapping_resin" {
//         CustomEditor "ShaderForgeMaterialInspector"
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           Tags { "RenderType"="Opaque" }
//           Pass 1/3 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDBASE" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Shader Forge_LightWrapping_resin:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 167 5 6
//      undeciphered1a: 14
// 2:   Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 4:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 1:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//      undeciphered2: 1 5 5 4 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 128
//      Vector 32 [_LightColor0]
//      Float 64 [_WRAPPOWER]
//      Vector 80 [_COLOR_ST]
//      Vector 96 [_NRM_ST]
//      Float 112 [_GLOSS]
//      Float 116 [_COLORPOWER]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 624 [unity_SHAr]
//      Vector 640 [unity_SHAg]
//      Vector 656 [unity_SHAb]
//      ConstBuffer "UnityReflectionProbes" 128
//      Vector 0 [unity_SpecCube0_BoxMax]
//      Vector 16 [unity_SpecCube0_BoxMin]
//      Vector 32 [unity_SpecCube0_ProbePosition]
//      Vector 48 [unity_SpecCube0_HDR]
//      Vector 64 [unity_SpecCube1_BoxMax]
//      Vector 80 [unity_SpecCube1_BoxMin]
//      Vector 96 [unity_SpecCube1_ProbePosition]
//      Vector 112 [unity_SpecCube1_HDR]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_NRM] 2D 3
//      SetTexture 1 [_COLOR] 2D 2
//      SetTexture 2 [unity_SpecCube0] CUBE 0
//      SetTexture 3 [unity_SpecCube1] CUBE -1
//      SetTexture 4 [unity_ProbeVolumeSH] 3D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityReflectionProbes" 3
//      BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:20:23 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float
// TEXCOORD                 2   xy          2     NONE   float
// TEXCOORD                 3   xyzw        3     NONE   float   xyz
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// TEXCOORD                 5   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyz         6     NONE   float   xyz
// TEXCOORD                 9   xyzw        7     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[42], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed df42ffcdadc6e6ce-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v4.xyzx, v4.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v4.xyzx
add r1.xyz, -v3.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r3.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
sample r3.xyzw, r3.xyxx, t0.xyzw, s3
mul r3.x, r3.w, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.w, r1.w
mul r3.yzw, r3.yyyy, v6.xxyz
mad r3.xyz, r3.xxxx, v5.xyzx, r3.yzwy
mad r0.xyz, r1.wwww, r0.xyzx, r3.xyzx
dp3 r1.w, r0.xyzx, r0.xyzx
rsq r1.w, r1.w
mul r3.xyz, r0.xyzx, r1.wwww
dp3 r0.x, -r2.xyzx, r3.xyzx
add r0.x, r0.x, r0.x
mad r0.xyz, r3.xyzx, -r0.xxxx, -r2.xyzx
dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, cb2[0].xyzx
mad r1.xyz, r1.xyzx, r0.wwww, r4.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mad r5.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r5.xyzw, r5.xyxx, t1.xyzw, s2
mul r6.xyz, r5.xyzx, cb0[7].yyyy
mad r0.w, -r5.w, cb0[7].x, l(1.000000)
mul r1.w, r0.w, r0.w
eq r2.w, cb4[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb4[0].y, l(1.000000)
  mul r7.xyz, v3.yyyy, cb4[2].xyzx
  mad r7.xyz, cb4[1].xyzx, v3.xxxx, r7.xyzx
  mad r7.xyz, cb4[3].xyzx, v3.zzzz, r7.xyzx
  add r7.xyz, r7.xyzx, cb4[4].xyzx
  movc r7.xyz, r2.wwww, r7.xyzx, v3.xyzx
  add r7.xyz, r7.xyzx, -cb4[6].xyzx
  mul r7.yzw, r7.xxyz, cb4[5].xxyz
  mul r2.w, r7.y, l(0.250000)
  mul r4.w, cb4[0].z, l(0.500000)
  mad r6.w, -cb4[0].z, l(0.500000), l(0.250000)
  max r2.w, r2.w, r4.w
  min r7.x, r6.w, r2.w
  sample r8.xyzw, r7.xzwx, t4.xyzw, s1
  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r9.xyzw, r9.xyzx, t4.xyzw, s1
  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r7.xyzw, r7.xyzx, t4.xyzw, s1
  mov r3.w, l(1.000000)
  dp4 r8.x, r8.xyzw, r3.xyzw
  dp4 r8.y, r9.xyzw, r3.xyzw
  dp4 r8.z, r7.xyzw, r3.xyzw
else
  mov r3.w, l(1.000000)
  dp4 r8.x, cb2[39].xyzw, r3.xyzw
  dp4 r8.y, cb2[40].xyzw, r3.xyzw
  dp4 r8.z, cb2[41].xyzw, r3.xyzw
endif
add r7.xyz, r8.xyzx, v7.xyzx
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.w, l(0.000000), cb3[2].w
if_nz r2.w
  dp3 r2.w, r0.xyzx, r0.xyzx
  rsq r2.w, r2.w
  mul r8.xyz, r0.xyzx, r2.wwww
  add r9.xyz, -v3.xyzx, cb3[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -v3.xyzx, cb3[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r2.w, r9.y, r9.x
  min r2.w, r9.z, r2.w
  add r9.xyz, v3.xyzx, -cb3[2].xyzx
  mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
else
  mov r8.xyz, r0.xyzx
endif
mad r2.w, -r0.w, l(0.700000), l(1.700000)
mul r2.w, r0.w, r2.w
mul r2.w, r2.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t2.xyzw, s0, r2.w
add r3.w, r8.w, l(-1.000000)
mad r3.w, cb3[3].w, r3.w, l(1.000000)
log r3.w, r3.w
mul r3.w, r3.w, cb3[3].y
exp r3.w, r3.w
mul r3.w, r3.w, cb3[3].x
mul r9.xyz, r8.xyzx, r3.wwww
lt r4.w, cb3[1].w, l(0.999990)
if_nz r4.w
  lt r4.w, l(0.000000), cb3[6].w
  if_nz r4.w
    dp3 r4.w, r0.xyzx, r0.xyzx
    rsq r4.w, r4.w
    mul r10.xyz, r0.xyzx, r4.wwww
    add r11.xyz, -v3.xyzx, cb3[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -v3.xyzx, cb3[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r4.w, r11.y, r11.x
    min r4.w, r11.z, r4.w
    add r11.xyz, v3.xyzx, -cb3[6].xyzx
    mad r0.xyz, r10.xyzx, r4.wwww, r11.xyzx
  endif
  sample_l r10.xyzw, r0.xyzx, t3.xyzw, s0, r2.w
  add r0.x, r10.w, l(-1.000000)
  mad r0.x, cb3[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb3[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r10.xyzx, r0.xxxx
  mad r8.xyz, r3.wwww, r8.xyzx, -r0.xyzx
  mad r9.xyz, cb3[1].wwww, r8.xyzx, r0.xyzx
endif
dp3 r0.x, r3.xyzx, r4.xyzx
max r0.y, r0.x, l(0.000000)
min r0.z, r0.y, l(1.000000)
dp3_sat r2.w, r4.xyzx, r1.xyzx
mul r4.xyz, r6.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
dp3 r2.x, r3.xyzx, r2.xyzx
dp3_sat r1.x, r3.xyzx, r1.xyzx
mad r1.y, -r0.w, r0.w, l(1.000000)
mad r1.z, |r2.x|, r1.y, r1.w
mad r1.y, r0.z, r1.y, r1.w
mul r1.y, r1.y, |r2.x|
mad r1.y, r0.z, r1.z, r1.y
add r1.y, r1.y, l(0.000010)
div r1.y, l(0.500000), r1.y
mul r1.z, r1.w, r1.w
mad r2.y, r1.x, r1.z, -r1.x
mad r1.x, r2.y, r1.x, l(1.000000)
mul r1.z, r1.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r1.x, r1.z, r1.x
mul r1.x, r1.x, r1.y
mul r0.z, r0.z, r1.x
mul r0.z, r0.z, l(3.14159274)
max r0.z, r0.z, l(0.000000)
mad r1.x, r1.w, r1.w, l(1.000000)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
mul r1.yzw, r0.zzzz, cb0[2].xxyz
add r0.z, -r2.w, l(1.000000)
mul r2.y, r0.z, r0.z
mul r2.y, r2.y, r2.y
mul r0.z, r0.z, r2.y
mad r0.z, r0.z, l(0.960000), l(0.040000)
mad_sat r2.y, r5.w, cb0[7].x, l(0.0400000215)
add r2.x, -|r2.x|, l(1.000000)
mul r2.z, r2.x, r2.x
mul r2.z, r2.z, r2.z
mul r2.x, r2.x, r2.z
add r2.y, r2.y, l(-0.040000)
mad r2.y, r2.x, r2.y, l(0.040000)
mul r3.xyz, r2.yyyy, r9.xyzx
mul r3.xyz, r1.xxxx, r3.xyzx
mad r1.xyz, r1.yzwy, r0.zzzz, r3.xyzx
mul r3.xyz, r5.xyzx, cb0[4].xxxx
mul r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mad r6.xyz, -r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
mul r8.xyz, r0.xxxx, r6.xyzx
mad r5.xyz, r0.xxxx, r6.xyzx, r5.xyzx
max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r6.yzw, r3.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), -r8.xxyz
max r6.yzw, r6.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
add r0.z, r2.w, r2.w
mul r0.z, r2.w, r0.z
mad r0.x, -r0.x, r6.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
mad r2.yzw, r6.yyzw, r3.xxyz, r5.xxyz
mad r0.z, r0.z, r0.w, l(-0.500000)
mad r0.x, r0.z, r0.x, l(1.000000)
mad r0.z, r0.z, r2.x, l(1.000000)
mul r0.x, r0.z, r0.x
mad r0.xyz, r0.xxxx, r0.yyyy, r2.yzwy
mad r0.xyz, r0.xyzx, cb0[2].xyzx, r7.xyzx
mad o0.xyz, r0.xyzx, r4.xyzx, r1.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used