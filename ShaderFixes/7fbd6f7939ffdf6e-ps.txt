// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7fbd6f7939ffdf6e-ps.txt
// 3DMigoto: 7fbd6f7939ffdf6e |    Unity headers extracted from DynamicFog_Opaque_Unlit
//    Shader "DynamicFog/Opaque/Unlit" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/1 {
//          Tags { "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from DynamicFog_Opaque_Unlit:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 75 1 4
//   undeciphered1a: 6
//   undeciphered2: 1 1 2 1 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 112
//   Vector 48 [_Color]
//   Vector 64 [_FogData]
//   Vector 80 [_FogColor]
//   Float 96 [_FogData2]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   SetTexture 0 [_MainTex] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:29:26 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7fbd6f7939ffdf6e-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s0
mul r0.xyzw, r0.xyzw, cb0[3].xyzw
add r1.x, cb0[4].y, l(0.000100)
add r1.y, -r1.x, r7.y
ge r1.w, cb0[4].x, r1.y
ge r2.x, cb0[4].x, v2.y
or r1.w, r1.w, r2.x
if_nz r1.w
  mov r1.xz, r7.xxzx
  add r2.xyz, -r1.xyzx, v2.xyzx
  dp2 r1.w, r2.xzxx, r2.xzxx
  sqrt r1.w, r1.w
  div r3.xy, r2.xzxx, r1.wwww
  div r1.w, r1.w, r2.y
  min r4.y, r1.y, cb0[4].x
  add r2.w, r1.y, -r4.y
  mul r2.w, r1.w, r2.w
  mad r4.xz, -r3.xxyx, r2.wwww, r7.xxzx
  dp3 r2.x, r2.xyzx, r2.xyzx
  sqrt r2.x, r2.x
  add r5.xyz, -r1.xyzx, r4.xyzx
  dp3 r1.x, r5.xyzx, r5.xyzx
  sqrt r1.x, r1.x
  lt r1.z, r1.x, r2.x
  if_nz r1.z
    lt r1.z, l(0.000000), r1.w
    lt r2.z, l(-0.500000), v2.y
    and r1.z, r1.z, r2.z
    lt r2.z, r1.w, l(0.000000)
    lt r2.w, v2.y, l(0.500000)
    and r2.z, r2.w, r2.z
    and r2.z, r2.z, v2.y
    movc r5.y, r1.z, cb0[4].x, r2.z
    add r1.y, -r1.y, r5.y
    mul r1.y, r1.y, r1.w
    mad r5.xz, -r3.xxyx, r1.yyyy, r7.xxzx
    add r1.yzw, r4.xxyz, -r5.xxyz
    dp3 r1.y, r1.yzwy, r1.yzwy
    sqrt r1.y, r1.y
    add r1.z, -r1.x, r2.x
    min r1.y, r1.z, r1.y
    lt r1.z, l(0.000000), r1.y
    div r1.w, r2.y, r2.x
    mul r1.w, r1.y, r1.w
    add r2.x, -r4.y, cb0[4].x
    mul r2.y, cb0[4].w, cb0[4].x
    div r2.x, r2.x, r2.y
    add r2.x, r2.x, l(-0.100000)
    add r2.z, r1.x, -cb0[4].z
    div r2.z, r2.z, cb0[6].x
    min_sat r2.x, r2.z, r2.x
    mul r3.w, r2.x, cb0[5].w
    mul r3.xyz, r3.wwww, cb0[5].xyzx
    mad r2.z, r1.w, l(0.500000), r4.y
    mad r1.x, r1.y, l(0.500000), r1.x
    add r2.w, -r2.z, cb0[4].x
    div r2.w, r2.w, r2.y
    add r2.w, r2.w, l(-0.100000)
    add r4.x, r1.x, -cb0[4].z
    div r4.x, r4.x, cb0[6].x
    min_sat r2.w, r2.w, r4.x
    mul r4.w, r2.w, cb0[5].w
    mul r4.xyz, r4.wwww, cb0[5].xyzx
    mad r2.x, -cb0[5].w, r2.x, l(1.000000)
    mad r3.xyzw, r4.xyzw, r2.xxxx, r3.xyzw
    mad r1.w, r1.w, l(0.500000), r2.z
    mad r1.x, r1.y, l(0.500000), r1.x
    add r1.y, -r1.w, cb0[4].x
    div r1.y, r1.y, r2.y
    add r1.y, r1.y, l(-0.100000)
    add r1.x, r1.x, -cb0[4].z
    div r1.x, r1.x, cb0[6].x
    min_sat r1.x, r1.x, r1.y
    mul r2.w, r1.x, cb0[5].w
    mul r2.xyz, r2.wwww, cb0[5].xyzx
    add r1.x, -r3.w, l(1.000000)
    mad r2.xyzw, r2.xyzw, r1.xxxx, r3.xyzw
    mul r3.xyzw, r2.xyzw, cb0[5].wwww
    mad r1.x, -r2.w, cb0[5].w, l(1.000000)
    mad r2.xyzw, r0.xyzw, r1.xxxx, r3.xyzw
    movc o0.xyzw, r1.zzzz, r2.xyzw, r0.xyzw
  else
    mov o0.xyzw, r0.xyzw
  endif
else
  mov o0.xyzw, r0.xyzw
endif
ret
// Approximately 0 instruction slots used