// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 23681306d9fc45b8-ps.txt
// 3DMigoto: 23681306d9fc45b8 | Matched 3 variants of 1 shaders: Shader Forge/select_yellow_shader
//
//       Unity headers extracted from Shader Forge_select_yellow_shader
//       Shader "Shader Forge/select_yellow_shader" {
//         CustomEditor "ShaderForgeMaterialInspector"
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           Tags { "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//           Pass 2/5 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" "SHADOWSUPPORT"="true" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Shader Forge_select_yellow_shader:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 184 6 6
//      undeciphered1a: 13
// 2:   Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "FOG_LINEAR" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 4:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 1:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//      undeciphered2: 1 6 6 5 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 144
//      Vector 32 [_LightColor0]
//      Float 64 [_Metalic]
//      Vector 80 [_Normal_ST]
//      Vector 96 [_Diffuse_ST]
//      Vector 112 [_Smoothness_ST]
//      Vector 128 [_outlinecolor]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 624 [unity_SHAr]
//      Vector 640 [unity_SHAg]
//      Vector 656 [unity_SHAb]
//      ConstBuffer "UnityFog" 32
//      Vector 0 [unity_FogColor]
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityReflectionProbes" 128
//      Vector 0 [unity_SpecCube0_BoxMax]
//      Vector 16 [unity_SpecCube0_BoxMin]
//      Vector 32 [unity_SpecCube0_ProbePosition]
//      Vector 48 [unity_SpecCube0_HDR]
//      Vector 64 [unity_SpecCube1_BoxMax]
//      Vector 80 [unity_SpecCube1_BoxMin]
//      Vector 96 [unity_SpecCube1_ProbePosition]
//      Vector 112 [unity_SpecCube1_HDR]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_Normal] 2D 2
//      SetTexture 1 [_Diffuse] 2D 3
//      SetTexture 2 [_Smoothness] 2D 4
//      SetTexture 3 [unity_SpecCube0] CUBE 0
//      SetTexture 4 [unity_SpecCube1] CUBE -1
//      SetTexture 5 [unity_ProbeVolumeSH] 3D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityFog" 3
//      BindCB "UnityReflectionProbes" 4
//      BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:40:02 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float
// TEXCOORD                 2   xy          2     NONE   float
// TEXCOORD                 9     z         2     NONE   float     z
// TEXCOORD                 3   xyzw        3     NONE   float   xyz
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// TEXCOORD                 5   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyz         6     NONE   float   xyz
// TEXCOORD                10   xyzw        7     NONE   float   xyz
// SV_IsFrontFace           0   x           8    FFACE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[42], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.z
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps_sgv v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 23681306d9fc45b8-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

movc r0.x, v8.x, l(1.000000), l(-1.000000)
dp3 r0.y, v4.xyzx, v4.xyzx
rsq r0.y, r0.y
mul r0.yzw, r0.yyyy, v4.xxyz
mul r0.xyz, r0.xxxx, r0.yzwy
add r1.xyz, -v3.xyzx, r14.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r3.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r3.xyzw, r3.xyxx, t0.xyzw, s2
mul r3.x, r3.w, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.w, r1.w
mul r3.yzw, r3.yyyy, v6.xxyz
mad r3.xyz, r3.xxxx, v5.xyzx, r3.yzwy
mad r0.xyz, r1.wwww, r0.xyzx, r3.xyzx
dp3 r1.w, r0.xyzx, r0.xyzx
rsq r1.w, r1.w
mul r3.xyz, r0.xyzx, r1.wwww
dp3 r0.x, -r2.xyzx, r3.xyzx
add r0.x, r0.x, r0.x
mad r0.xyz, r3.xyzx, -r0.xxxx, -r2.xyzx
mad r4.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
sample r4.xyzw, r4.xyxx, t1.xyzw, s3
add r1.w, r4.w, l(-0.500000)
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, cb2[0].xyzx
mad r1.xyz, r1.xyzx, r0.wwww, r5.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mad r6.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
sample r6.xyzw, r6.xyxx, t2.xyzw, s4
add r0.w, -r6.z, l(1.000000)
mul r1.w, r0.w, r0.w
eq r2.w, cb5[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb5[0].y, l(1.000000)
  mul r6.xyw, v3.yyyy, cb5[2].xyxz
  mad r6.xyw, cb5[1].xyxz, v3.xxxx, r6.xyxw
  mad r6.xyw, cb5[3].xyxz, v3.zzzz, r6.xyxw
  add r6.xyw, r6.xyxw, cb5[4].xyxz
  movc r6.xyw, r2.wwww, r6.xyxw, v3.xyxz
  add r6.xyw, r6.xyxw, -cb5[6].xyxz
  mul r7.yzw, r6.xxyw, cb5[5].xxyz
  mul r2.w, r7.y, l(0.250000)
  mul r4.w, cb5[0].z, l(0.500000)
  mad r5.w, -cb5[0].z, l(0.500000), l(0.250000)
  max r2.w, r2.w, r4.w
  min r7.x, r5.w, r2.w
  sample r8.xyzw, r7.xzwx, t5.xyzw, s1
  add r6.xyw, r7.xzxw, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r9.xyzw, r6.xywx, t5.xyzw, s1
  add r6.xyw, r7.xzxw, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r7.xyzw, r6.xywx, t5.xyzw, s1
  mov r3.w, l(1.000000)
  dp4 r8.x, r8.xyzw, r3.xyzw
  dp4 r8.y, r9.xyzw, r3.xyzw
  dp4 r8.z, r7.xyzw, r3.xyzw
else
  mov r3.w, l(1.000000)
  dp4 r8.x, cb2[39].xyzw, r3.xyzw
  dp4 r8.y, cb2[40].xyzw, r3.xyzw
  dp4 r8.z, cb2[41].xyzw, r3.xyzw
endif
add r6.xyw, r8.xyxz, v7.xyxz
max r6.xyw, r6.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.w, l(0.000000), cb4[2].w
if_nz r2.w
  dp3 r2.w, r0.xyzx, r0.xyzx
  rsq r2.w, r2.w
  mul r7.xyz, r0.xyzx, r2.wwww
  add r8.xyz, -v3.xyzx, cb4[0].xyzx
  div r8.xyz, r8.xyzx, r7.xyzx
  add r9.xyz, -v3.xyzx, cb4[1].xyzx
  div r9.xyz, r9.xyzx, r7.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r2.w, r8.y, r8.x
  min r2.w, r8.z, r2.w
  add r8.xyz, v3.xyzx, -cb4[2].xyzx
  mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
else
  mov r7.xyz, r0.xyzx
endif
mad r2.w, -r0.w, l(0.700000), l(1.700000)
mul r2.w, r0.w, r2.w
mul r2.w, r2.w, l(6.000000)
sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r2.w
add r3.w, r7.w, l(-1.000000)
mad r3.w, cb4[3].w, r3.w, l(1.000000)
log r3.w, r3.w
mul r3.w, r3.w, cb4[3].y
exp r3.w, r3.w
mul r3.w, r3.w, cb4[3].x
mul r8.xyz, r7.xyzx, r3.wwww
lt r4.w, cb4[1].w, l(0.999990)
if_nz r4.w
  lt r4.w, l(0.000000), cb4[6].w
  if_nz r4.w
    dp3 r4.w, r0.xyzx, r0.xyzx
    rsq r4.w, r4.w
    mul r9.xyz, r0.xyzx, r4.wwww
    add r10.xyz, -v3.xyzx, cb4[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -v3.xyzx, cb4[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r4.w, r10.y, r10.x
    min r4.w, r10.z, r4.w
    add r10.xyz, v3.xyzx, -cb4[6].xyzx
    mad r0.xyz, r9.xyzx, r4.wwww, r10.xyzx
  endif
  sample_l r9.xyzw, r0.xyzx, t4.xyzw, s0, r2.w
  add r0.x, r9.w, l(-1.000000)
  mad r0.x, cb4[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb4[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r9.xyzx, r0.xxxx
  mad r7.xyz, r3.wwww, r7.xyzx, -r0.xyzx
  mad r8.xyz, cb4[1].wwww, r7.xyzx, r0.xyzx
endif
dp3 r0.x, r3.xyzx, r5.xyzx
max r0.x, r0.x, l(0.000000)
min r0.y, r0.x, l(1.000000)
dp3_sat r0.z, r5.xyzx, r1.xyzx
lt r5.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), cb0[8].xyzx
add r7.xyz, cb0[8].xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r7.xyz, -r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
add r9.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r7.xyz, -r7.xyzx, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, cb0[8].xyzx
add r4.xyz, r4.xyzx, r4.xyzx
movc_sat r4.xyz, r5.xyzx, r7.xyzx, r4.xyzx
add r5.xyz, r4.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r5.xyz, cb0[4].xxxx, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r2.w, -cb0[4].x, l(0.960000), l(0.960000)
mul r4.xyz, r2.wwww, r4.xyzx
add r2.w, -r2.w, l(1.000000)
dp3 r2.x, r3.xyzx, r2.xyzx
dp3_sat r1.x, r3.xyzx, r1.xyzx
mad r1.y, -r0.w, r0.w, l(1.000000)
mad r1.z, |r2.x|, r1.y, r1.w
mad r1.y, r0.y, r1.y, r1.w
mul r1.y, r1.y, |r2.x|
mad r1.y, r0.y, r1.z, r1.y
add r1.y, r1.y, l(0.000010)
div r1.y, l(0.500000), r1.y
mul r1.z, r1.w, r1.w
mad r2.y, r1.x, r1.z, -r1.x
mad r1.x, r2.y, r1.x, l(1.000000)
mul r1.z, r1.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r1.x, r1.z, r1.x
mul r1.x, r1.x, r1.y
mul r0.y, r0.y, r1.x
mul r0.y, r0.y, l(3.14159274)
max r0.y, r0.y, l(0.000000)
mad r1.x, r1.w, r1.w, l(1.000000)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
dp3 r1.y, r5.xyzx, r5.xyzx
ne r1.y, r1.y, l(0.000000)
and r1.y, r1.y, l(0x3f800000)
mul r0.y, r0.y, r1.y
mul r1.yzw, r0.yyyy, cb0[2].xxyz
add r0.y, -r0.z, l(1.000000)
mul r2.y, r0.y, r0.y
mul r2.y, r2.y, r2.y
mul r0.y, r0.y, r2.y
add r3.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r3.xyzx, r0.yyyy, r5.xyzx
add_sat r0.y, r2.w, r6.z
add r2.x, -|r2.x|, l(1.000000)
mul r2.y, r2.x, r2.x
mul r2.y, r2.y, r2.y
mul r2.x, r2.x, r2.y
add r2.yzw, -r5.xxyz, r0.yyyy
mad r2.yzw, r2.xxxx, r2.yyzw, r5.xxyz
mul r2.yzw, r2.yyzw, r8.xxyz
mul r2.yzw, r1.xxxx, r2.yyzw
mad r1.xyz, r1.yzwy, r3.xyzx, r2.yzwy
add r0.y, r0.z, r0.z
mul r0.y, r0.z, r0.y
add r0.z, -r0.x, l(1.000000)
mul r1.w, r0.z, r0.z
mul r1.w, r1.w, r1.w
mul r0.z, r0.z, r1.w
mad r0.y, r0.y, r0.w, l(-0.500000)
mad r0.z, r0.y, r0.z, l(1.000000)
mad r0.y, r0.y, r2.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.x, r0.x, r0.y
mad r0.xyz, r0.xxxx, cb0[2].xyzx, r6.xywx
mad r0.xyz, r0.xyzx, r4.xyzx, r1.xyzx
div r0.w, v2.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used