// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6e19d7fb64bc1af4-ps.txt
// 3DMigoto: 6e19d7fb64bc1af4 |    Unity headers extracted from Amplify_lab_analyzer_screen
//    Shader "Amplify/lab_analyzer_screen" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IsEmissive"="true" "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "IsEmissive"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_lab_analyzer_screen:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 153 5 6
//   undeciphered1a: 11
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
//   undeciphered2: 1 7 8 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 128
//   Vector 32 [_LightColor0]
//   Vector 64 [_lab_analyzer_screen_prototype_ST]
//   Vector 80 [_lab_analyzer_screen_prototype_bw_mask_ST]
//   Vector 96 [_lab_analyzer_screen_prototype_base_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   ConstBuffer "Amplifylab_analyzer_screen" 48
//   Vector 0 [_circle_color]
//   Vector 16 [_circle_uv_tiling] 2
//   Vector 24 [_circle_uv_offset] 2
//   Float 32 [_progres_bar]
//   Float 36 [_circle_mask_size]
//   Float 40 [_gradient_mask_controll]
//   SetTexture 0 [_lab_analyzer_screen_prototype] 2D 3
//   SetTexture 1 [_lab_analyzer_screen_prototype_bw_mask] 2D 4
//   SetTexture 2 [_lab_analyzer_screen_prototype_base] 2D 5
//   SetTexture 3 [_ShadowMapTexture] 2D 2
//   SetTexture 4 [unity_SpecCube0] CUBE 0
//   SetTexture 5 [unity_SpecCube1] CUBE -1
//   SetTexture 6 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityReflectionProbes" 5
//   BindCB "UnityProbeVolume" 6
//   BindCB "Amplifylab_analyzer_screen" 7
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:19:13 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float
// TEXCOORD                 5   xyzw        5     NONE   float   xy w
// TEXCOORD                 6   xyzw        6     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_constantbuffer cb7[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v5.xyw
dcl_output o0.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6e19d7fb64bc1af4-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r12.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
mad r2.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
sample r2.xyzw, r2.xyxx, t0.xyzw, s3
mul r2.yzw, r2.xxxx, cb7[0].xxyz
mad r3.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r3.xyzw, r3.xyxx, t1.xyzw, s4
mul r1.w, r2.x, r3.y
mad r3.zw, v1.xxxy, cb7[1].xxxy, cb7[1].zzzw
dp2 r4.x, r3.zwzz, r3.zwzz
sqrt r4.x, r4.x
min r4.y, |r3.w|, |r3.z|
max r4.z, |r3.w|, |r3.z|
div r4.z, l(1.000000, 1.000000, 1.000000, 1.000000), r4.z
mul r4.y, r4.z, r4.y
mul r4.z, r4.y, r4.y
mad r4.w, r4.z, l(0.0208350997), l(-0.085133)
mad r4.w, r4.z, r4.w, l(0.180141)
mad r4.w, r4.z, r4.w, l(-0.330299497)
mad r4.z, r4.z, r4.w, l(0.999866)
mul r4.w, r4.z, r4.y
lt r5.x, |r3.w|, |r3.z|
mad r4.w, r4.w, l(-2.000000), l(1.57079637)
and r4.w, r5.x, r4.w
mad r4.y, r4.y, r4.z, r4.w
lt r4.z, r3.w, -r3.w
and r4.z, r4.z, l(0xc0490fdb)
add r4.y, r4.z, r4.y
min r4.z, r3.w, r3.z
max r3.z, r3.w, r3.z
lt r3.w, r4.z, -r4.z
ge r3.z, r3.z, -r3.z
and r3.z, r3.z, r3.w
movc r3.z, r3.z, -r4.y, r4.y
mad r3.z, r3.z, l(0.159154937), l(0.500000)
add r3.z, r3.z, -cb7[2].x
round_pi r3.z, r3.z
add r3.z, -r3.z, l(1.000000)
add r3.w, r4.x, cb7[2].y
round_ni r3.w, r3.w
mul r3.z, r3.w, r3.z
round_ni r3.w, r4.x
add r3.w, -r3.w, l(1.000000)
mul_sat r3.z, r3.w, r3.z
mad_sat r1.w, r1.w, l(0.300000), r3.z
mul r2.x, r2.x, l(0.900000)
lt r3.z, cb7[2].z, r3.x
and r3.x, r3.x, r3.z
round_pi r3.x, r3.x
mad r2.x, r3.x, -r2.x, r2.x
mad_sat r2.x, r3.y, -r2.x, r2.x
mad r3.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
mad r2.xyz, r1.wwww, r2.yzwy, r2.xxxx
sample r3.xyzw, r3.xyxx, t2.xyzw, s5
add r2.xyz, r2.xyzx, r3.xyzx
mov r3.x, cb4[9].z
mov r3.y, cb4[10].z
mov r3.z, cb4[11].z
dp3 r1.w, r0.xyzx, r3.xyzx
add r3.xyz, v3.xyzx, -cb3[25].xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
sqrt r2.w, r2.w
add r2.w, -r1.w, r2.w
mad r1.w, cb3[25].w, r2.w, r1.w
mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
eq r2.w, cb6[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb6[0].y, l(1.000000)
  mul r3.xyz, v3.yyyy, cb6[2].xyzx
  mad r3.xyz, cb6[1].xyzx, v3.xxxx, r3.xyzx
  mad r3.xyz, cb6[3].xyzx, v3.zzzz, r3.xyzx
  add r3.xyz, r3.xyzx, cb6[4].xyzx
  movc r3.xyz, r2.wwww, r3.xyzx, v3.xyzx
  add r3.xyz, r3.xyzx, -cb6[6].xyzx
  mul r3.yzw, r3.xxyz, cb6[5].xxyz
  mad r2.w, r3.y, l(0.250000), l(0.750000)
  mad r3.y, cb6[0].z, l(0.500000), l(0.750000)
  max r3.x, r2.w, r3.y
  sample r3.xyzw, r3.xzwx, t6.xyzw, s1
else
  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r3.xyzw, cb2[46].xyzw
div r3.xy, v5.xyxx, v5.wwww
sample r3.xyzw, r3.xyxx, t3.xyzw, s2
add r2.w, r2.w, -r3.x
mad r1.w, r1.w, r2.w, r3.x
dp3 r2.w, -r1.xyzx, v2.xyzx
add r2.w, r2.w, r2.w
mad r3.xyz, v2.xyzx, -r2.wwww, -r1.xyzx
mul r4.xyz, r1.wwww, cb0[2].xyzx
lt r1.w, l(0.000000), cb5[2].w
if_nz r1.w
  dp3 r1.w, r3.xyzx, r3.xyzx
  rsq r1.w, r1.w
  mul r5.xyz, r1.wwww, r3.xyzx
  add r6.xyz, -v3.xyzx, cb5[0].xyzx
  div r6.xyz, r6.xyzx, r5.xyzx
  add r7.xyz, -v3.xyzx, cb5[1].xyzx
  div r7.xyz, r7.xyzx, r5.xyzx
  lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
  movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
  min r1.w, r6.y, r6.x
  min r1.w, r6.z, r1.w
  add r6.xyz, v3.xyzx, -cb5[2].xyzx
  mad r5.xyz, r5.xyzx, r1.wwww, r6.xyzx
else
  mov r5.xyz, r3.xyzx
endif
sample_l r5.xyzw, r5.xyzx, t4.xyzw, s0, l(6.000000)
add r1.w, r5.w, l(-1.000000)
mad r1.w, cb5[3].w, r1.w, l(1.000000)
log r1.w, r1.w
mul r1.w, r1.w, cb5[3].y
exp r1.w, r1.w
mul r1.w, r1.w, cb5[3].x
mul r6.xyz, r5.xyzx, r1.wwww
lt r2.w, cb5[1].w, l(0.999990)
if_nz r2.w
  lt r2.w, l(0.000000), cb5[6].w
  if_nz r2.w
    dp3 r2.w, r3.xyzx, r3.xyzx
    rsq r2.w, r2.w
    mul r7.xyz, r2.wwww, r3.xyzx
    add r8.xyz, -v3.xyzx, cb5[4].xyzx
    div r8.xyz, r8.xyzx, r7.xyzx
    add r9.xyz, -v3.xyzx, cb5[5].xyzx
    div r9.xyz, r9.xyzx, r7.xyzx
    lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
    movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
    min r2.w, r8.y, r8.x
    min r2.w, r8.z, r2.w
    add r8.xyz, v3.xyzx, -cb5[6].xyzx
    mad r3.xyz, r7.xyzx, r2.wwww, r8.xyzx
  endif
  sample_l r3.xyzw, r3.xyzx, t5.xyzw, s0, l(6.000000)
  add r2.w, r3.w, l(-1.000000)
  mad r2.w, cb5[7].w, r2.w, l(1.000000)
  log r2.w, r2.w
  mul r2.w, r2.w, cb5[7].y
  exp r2.w, r2.w
  mul r2.w, r2.w, cb5[7].x
  mul r3.xyz, r3.xyzx, r2.wwww
  mad r5.xyz, r1.wwww, r5.xyzx, -r3.xyzx
  mad r6.xyz, cb5[1].wwww, r5.xyzx, r3.xyzx
endif
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v2.xyzx
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.xyzx, r1.xyzx
dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
add r0.y, |r0.w|, r1.x
add r0.y, r0.y, l(0.000010)
div r0.y, l(0.500000), r0.y
mul r0.y, r0.y, l(0.999999881)
mul r0.y, r1.x, r0.y
mul r1.xyz, r4.xyzx, r0.yyyy
add r0.x, -r0.x, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
mad r0.x, r0.x, l(0.960000), l(0.040000)
mul r3.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
add r0.y, -|r0.w|, l(1.000000)
mul r0.z, r0.y, r0.y
mul r0.z, r0.z, r0.z
mul r0.y, r0.y, r0.z
mad r0.y, r0.y, l(2.235174179E-008), l(0.040000)
mul r0.yzw, r0.yyyy, r3.xxyz
mad r0.xyz, r1.xyzx, r0.xxxx, r0.yzwy
add o0.xyz, r2.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used