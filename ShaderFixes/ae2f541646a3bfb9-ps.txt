// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed ae2f541646a3bfb9-ps.txt
// 3DMigoto: ae2f541646a3bfb9 |    Unity headers extracted from Amplify_standard_rain
//    Shader "Amplify/standard_rain" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_standard_rain:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 201802150 221 11 2
//   undeciphered1a: 9
//   Keywords { "SPOT" "SHADOWS_DEPTH" "_INVERTMASK_ON" "_USE_TRANSMISSION_ON" }
//   undeciphered2: 1 12 7 12 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 96 [_LightColor0]
//   Float 128 [_Tilingdetail]
//   Float 132 [_Tilingdetail2]
//   Float 136 [_masktilling]
//   Float 140 [_MaskContrast]
//   Float 144 [_nrm_detail_power]
//   Float 148 [_nrm_detail_tiling]
//   Float 152 [TERRAIN_RainIntensity]
//   Float 156 [_splaszczenienrm]
//   Float 160 [_RorAwetmaskchanneluse]
//   Float 164 [TERRAIN_GlobalWetness]
//   Vector 176 [_AlbedoColor]
//   Matrix 32 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   Matrix 128 [unity_WorldToShadow0]
//   Matrix 192 [unity_WorldToShadow1]
//   Matrix 256 [unity_WorldToShadow2]
//   Matrix 320 [unity_WorldToShadow3]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   ConstBuffer "Amplifystandard_rain" 64
//   Float 8 [_rain_power]
//   Float 12 [_raindrops_wetmask_size]
//   Float 16 [_wetmask_object_space_tiling]
//   Float 20 [_wetmask_contrast]
//   Float 24 [_rain_top_size]
//   Float 28 [_darken_albedo_mask_size]
//   Float 32 [_darken_albedo_power]
//   Float 36 [_wet_smoothness_size]
//   Float 40 [_dry_smoothness]
//   Float 44 [_wet_smoothness]
//   Float 52 [_Transmission]
//   SetTexture 0 [_mask] 2D 6
//   SetTexture 1 [_nrm1] 2D 4
//   SetTexture 2 [_nrm2] 2D 5
//   SetTexture 3 [_nrm_detail] 2D 7
//   SetTexture 4 [_wetmask] 2D 9
//   SetTexture 5 [_rain_texture] 2D 8
//   SetTexture 6 [_albedo1] 2D 10
//   SetTexture 7 [_albedo2] 2D 11
//   SetTexture 8 [_LightTexture0] 2D 2
//   SetTexture 9 [_LightTextureB0] 2D 3
//   SetTexture 10 [unity_ProbeVolumeSH] 3D 0
//   SetTexture 11 [_ShadowMapTexture] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityProbeVolume" 5
//   BindCB "Amplifystandard_rain" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:57:02 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float
// TEXCOORD                 6   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_constantbuffer cb6[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_sampler s11, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed ae2f541646a3bfb9-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v5.xyzx, r10.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r2.xyzx
mul r4.xyzw, v1.xyxy, cb0[8].xxyy
mul r5.xy, v1.xyxx, cb0[8].zzzz
sample_indexable(texture2d)(float,float,float,float) r1.w, r5.xyxx, t0.yzwx, s6
mul_sat r1.w, r1.w, cb0[8].w
add r1.w, -r1.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r4.xyxx, t1.xywz, s4
mul r5.x, r5.z, r5.x
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r5.xyxx, r5.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r5.z, r2.w
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r4.zwzz, t2.xywz, s5
mul r6.x, r6.z, r6.x
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r6.xyxx, r6.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r6.z, r2.w
add r6.xyz, -r5.xyzx, r6.xyzx
mad r5.xyz, r1.wwww, r6.xyzx, r5.xyzx
mul r6.xy, v1.xyxx, cb0[9].yyyy
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t3.xywz, s7
mul r6.x, r6.z, r6.x
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.zw, r6.xxxy, cb0[9].xxxx
dp2 r2.w, r6.zwzz, r6.zwzz
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r2.w, r2.w
mad r6.xy, r6.xyxx, cb0[9].xxxx, r5.xyxx
mul r6.z, r2.w, r5.z
dp3 r2.w, r6.xyzx, r6.xyzx
rsq r2.w, r2.w
mul r5.xyz, r2.wwww, r6.xyzx
mul r7.xy, v5.xzxx, l(1.800000, 1.800000, 0.000000, 0.000000)
frc r7.xy, r7.xyxx
mul r3.w, cb1[0].y, l(0.625000)
ge r5.w, r3.w, -r3.w
frc r3.w, |r3.w|
movc r3.w, r5.w, r3.w, -r3.w
mul r3.w, r3.w, l(64.000000)
round_ne r3.w, r3.w
lt r5.w, r3.w, l(0.000000)
and r5.w, r5.w, l(0x42800000)
add r3.w, r3.w, r5.w
mul r5.w, r3.w, l(0.125000)
ge r6.w, r5.w, -r5.w
frc r5.w, |r5.w|
movc r5.w, r6.w, r5.w, -r5.w
mul r5.w, r5.w, l(8.000000)
round_ne r5.w, r5.w
mul r8.x, r5.w, l(0.125000)
add r3.w, r3.w, -r5.w
mul r3.w, r3.w, l(0.015625)
ge r5.w, r3.w, -r3.w
frc r3.w, |r3.w|
movc r3.w, r5.w, r3.w, -r3.w
mul r3.w, r3.w, l(8.000000)
round_ne r3.w, r3.w
add r3.w, -r3.w, l(7.000000)
mul r8.y, r3.w, l(0.125000)
mad r7.xy, r7.xyxx, l(0.125000, 0.125000, 0.000000, 0.000000), r8.xyxx
mad r6.xyz, -r6.xyzx, r2.wwww, l(0.490196109, 0.490196109, 1.000000, 0.000000)
mad r6.xyz, cb0[9].wwww, r6.xyzx, r5.xyzx
mul r7.zw, v1.xxxy, cb6[1].xxxx
sample_indexable(texture2d)(float,float,float,float) r7.zw, r7.zwzz, t4.yzxw, s9
add r2.w, -r7.z, r7.w
mad r2.w, cb0[10].x, r2.w, r7.z
mul_sat r2.w, r2.w, cb6[1].y
mad_sat r3.w, r2.w, l(-2.000000), cb6[0].w
mov_sat r5.w, v3.z
add r6.w, -r5.w, l(1.000000)
mul r7.z, r6.w, l(-2.000000)
mad_sat r6.w, r6.w, l(-2.000000), cb6[1].z
add_sat r7.w, cb0[10].y, cb0[10].y
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r7.xyxx, t5.xywz, s8
mul r7.x, cb0[9].z, cb6[0].z
mul r8.x, r8.z, r8.x
mad r8.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r8.zw, r7.xxxx, r8.xxxy
dp2 r7.y, r8.zwzz, r8.zwzz
min r7.y, r7.y, l(1.000000)
add r7.y, -r7.y, l(1.000000)
sqrt r7.y, r7.y
mad r8.xy, r8.xyxx, r7.xxxx, r6.xyxx
mul r8.z, r6.z, r7.y
dp3 r6.x, r8.xyzx, r8.xyzx
rsq r6.x, r6.x
mul r6.y, r6.w, r7.w
mul r3.w, r3.w, r6.y
mad r6.xyz, r8.xyzx, r6.xxxx, -r5.xyzx
mad r5.xyz, r3.wwww, r6.xyzx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r4.xyxx, t6.xyzw, s10
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.zwzz, t7.xyzw, s11
add r4.xyz, -r6.xyzx, r4.xyzx
mad r4.xyz, r1.wwww, r4.xyzx, r6.xyzx
mul r4.xyz, r4.xyzx, cb0[11].xyzx
add r1.w, -r2.w, l(1.000000)
mul r2.w, r5.w, r1.w
mul r2.w, r7.w, r2.w
mul r3.w, r2.w, cb6[1].w
mad r2.w, r2.w, l(-2.000000), r3.w
max r2.w, r2.w, l(0.000000)
min r2.w, r2.w, cb6[2].x
mad r4.xyz, r2.wwww, -r4.xyzx, r4.xyzx
mul r1.w, r7.w, r1.w
min r2.w, r1.w, l(0.200000)
add r3.w, cb0[10].y, cb6[2].z
max r3.w, r3.w, l(0.000000)
min r3.w, r3.w, cb6[2].w
mad r1.w, r1.w, cb6[2].y, r7.z
max r1.w, r3.w, r1.w
min r1.w, r1.w, l(0.800000)
mul r6.xyzw, v5.yyyy, cb0[3].xyzw
mad r6.xyzw, cb0[2].xyzw, v5.xxxx, r6.xyzw
mad r6.xyzw, cb0[4].xyzw, v5.zzzz, r6.xyzw
add r6.xyzw, r6.xyzw, cb0[5].xyzw
mov r7.x, cb4[9].z
mov r7.y, cb4[10].z
mov r7.z, cb4[11].z
dp3 r2.x, r2.xyzx, r7.xyzx
add r7.xyz, v5.xyzx, -cb3[25].xyzx
dp3 r2.y, r7.xyzx, r7.xyzx
sqrt r2.y, r2.y
add r2.y, -r2.x, r2.y
mad r2.x, cb3[25].w, r2.y, r2.x
mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
eq r2.y, cb5[0].x, l(1.000000)
if_nz r2.y
  eq r2.y, cb5[0].y, l(1.000000)
  mul r7.xyz, v5.yyyy, cb5[2].xyzx
  mad r7.xyz, cb5[1].xyzx, v5.xxxx, r7.xyzx
  mad r7.xyz, cb5[3].xyzx, v5.zzzz, r7.xyzx
  add r7.xyz, r7.xyzx, cb5[4].xyzx
  movc r7.xyz, r2.yyyy, r7.xyzx, v5.xyzx
  add r7.xyz, r7.xyzx, -cb5[6].xyzx
  mul r7.yzw, r7.xxyz, cb5[5].xxyz
  mad r2.y, r7.y, l(0.250000), l(0.750000)
  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  max r7.x, r2.z, r2.y
  sample_indexable(texture3d)(float,float,float,float) r7.xyzw, r7.xzwx, t10.xyzw, s0
else
  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
mul r7.xyzw, v5.yyyy, cb3[9].xyzw
mad r7.xyzw, cb3[8].xyzw, v5.xxxx, r7.xyzw
mad r7.xyzw, cb3[10].xyzw, v5.zzzz, r7.xyzw
add r7.xyzw, r7.xyzw, cb3[11].xyzw
div r7.xyz, r7.xyzx, r7.wwww
sample_c_lz_indexable(texture2d)(float,float,float,float) r2.z, r7.xyxx, t11.xxxx, s1, r7.z
add r3.w, -cb3[24].x, l(1.000000)
mad r2.z, r2.z, r3.w, cb3[24].x
add r2.y, -r2.z, r2.y
mad r2.x, r2.x, r2.y, r2.z
lt r2.y, l(0.000000), r6.z
and r2.y, r2.y, l(0x3f800000)
div r7.xy, r6.xyxx, r6.wwww
add r7.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.z, r7.xyxx, t8.xywz, s2
mul r2.y, r2.z, r2.y
dp3 r2.z, r6.xyzx, r6.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.z, r2.zzzz, t9.yzxw, s3
mul r2.y, r2.z, r2.y
mul r2.x, r2.x, r2.y
dp3 r6.x, v2.xyzx, r5.xyzx
dp3 r6.y, v3.xyzx, r5.xyzx
dp3 r6.z, v4.xyzx, r5.xyzx
dp3 r2.y, r6.xyzx, r6.xyzx
rsq r2.y, r2.y
mul r5.xyz, r2.yyyy, r6.xyzx
mul r2.xyz, r2.xxxx, cb0[6].xyzx
dp3 r3.w, r5.xyzx, r1.xyzx
max r4.w, -r3.w, l(0.000000)
mul r6.xyz, r2.xyzx, r4.wwww
mul r6.xyz, r6.xyzx, cb6[3].yyyy
add r7.xyz, r4.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r7.xyz, r2.wwww, r7.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r2.w, -r2.w, l(0.960000), l(0.960000)
mul r8.xyz, r2.wwww, r4.xyzx
add r1.w, -r1.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r5.xyzx, r3.xyzx
mov_sat r3.w, r3.w
dp3_sat r2.w, r5.xyzx, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r3.w, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
mad r1.x, -r1.w, r1.w, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r3.w, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r3.w, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r2.w, r0.z, -r2.w
mad r1.x, r1.x, r2.w, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r3.wwww, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r7.xyzx, r7.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r2.xyzx
mul r0.yzw, r2.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r2.xyz, -r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r7.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad r0.xyz, r8.xyzx, r1.xyzx, r0.xyzx
mad o0.xyz, r4.xyzx, r6.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used