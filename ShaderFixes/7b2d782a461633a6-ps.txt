// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7b2d782a461633a6-ps.txt
// 3DMigoto: 7b2d782a461633a6 |    Unity headers extracted from Autodesk Interactive
//    Shader "Autodesk Interactive" {
//      CustomEditor "AutodeskInteractiveShaderGUI"
//      Fallback "VertexLit"
//      SubShader 1/2 {
//        LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//        Pass 2/5 {
//          Name "FORWARD_DELTA"
//          Tags { "LIGHTMODE"="FORWARDADD" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Autodesk Interactive:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 179 9 4
//   undeciphered1a: 11
//   Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "FOG_LINEAR" "_NORMALMAP" "_ALPHAPREMULTIPLY_ON" "_SPECGLOSSMAP" "_DETAIL_MULX2" }
//   undeciphered2: 1 10 7 10 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 320
//   Vector 32 [_LightColor0]
//   Vector 128 [_ShadowMapTexture_TexelSize]
//   Vector 144 [_Color]
//   Float 208 [_BumpScale]
//   Float 212 [_DetailNormalMapScale]
//   Float 216 [_Metallic]
//   Matrix 256 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   Matrix 128 [unity_WorldToShadow0]
//   Matrix 192 [unity_WorldToShadow1]
//   Matrix 256 [unity_WorldToShadow2]
//   Matrix 320 [unity_WorldToShadow3]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_SpecGlossMap] 2D 7
//   SetTexture 2 [_DetailMask] 2D 5
//   SetTexture 3 [_DetailAlbedoMap] 2D 3
//   SetTexture 4 [_BumpMap] 2D 4
//   SetTexture 5 [_DetailNormalMap] 2D 6
//   SetTexture 6 [_LightTexture0] 2D 8
//   SetTexture 7 [_LightTextureB0] 2D 9
//   SetTexture 8 [unity_ProbeVolumeSH] 3D 0
//   SetTexture 9 [_ShadowMapTexture] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:26:47 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 6   xyzw        7     NONE   float
// TEXCOORD                 7   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[20], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7b2d782a461633a6-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s2
sample r1.xyzw, v1.xyxx, t1.xyzw, s7
mul r0.xyzw, r0.wxyz, cb0[9].wxyz
sample r2.xyzw, v1.xyxx, t2.xyzw, s5
sample r3.xyzw, v1.zwzz, t3.xyzw, s3
mul r1.yzw, r2.wwww, r3.xxyz
add r2.x, -r2.w, l(1.000000)
mad r1.yzw, r1.yyzw, l(0.000000, 4.594794, 4.594794, 4.594794), r2.xxxx
mul r2.xyz, r0.yzwy, r1.yzwy
mad r0.yzw, r0.yyzw, r1.yyzw, l(0.000000, -0.040000, -0.040000, -0.040000)
mad r0.yzw, cb0[13].zzzz, r0.yyzw, l(0.000000, 0.040000, 0.040000, 0.040000)
mad r1.y, -cb0[13].z, l(0.960000), l(0.960000)
mul r2.xyz, r1.yyyy, r2.xyzx
sample r3.xyzw, v1.xyxx, t4.xyzw, s4
mul r3.x, r3.w, r3.x
mad r1.zw, r3.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r3.xy, r1.zwzz, cb0[13].xxxx
dp2 r3.w, r3.xyxx, r3.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r3.z, r3.w
sample r4.xyzw, v1.zwzz, t5.xyzw, s6
mul r4.x, r4.w, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, cb0[13].yyyy
dp2 r3.w, r4.xyxx, r4.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r3.w, r3.w
mad r4.xy, r1.zwzz, cb0[13].xxxx, r4.xyxx
mul r4.z, r3.w, r3.z
dp3 r1.z, r4.xyzx, r4.xyzx
rsq r1.z, r1.z
mad r4.xyz, r4.xyzx, r1.zzzz, -r3.xyzx
mad r3.xyz, r2.wwww, r4.xyzx, r3.xyzx
mul r4.xyz, r3.yyyy, v4.xyzx
mad r3.xyw, v3.xyxz, r3.xxxx, r4.xyxz
mad r3.xyz, v5.xyzx, r3.zzzz, r3.xywx
dp3 r1.z, r3.xyzx, r3.xyzx
rsq r1.z, r1.z
mul r3.xyz, r1.zzzz, r3.xyzx
dp3 r1.z, v2.xyzx, v2.xyzx
rsq r1.z, r1.z
mul r4.xyz, r1.zzzz, v2.xyzx
mul r2.xyz, r0.xxxx, r2.xyzx
add r1.xz, -r1.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
mad o0.w, r0.x, r1.y, r1.z
mul r5.xyzw, v6.yyyy, cb0[17].xyzw
mad r5.xyzw, cb0[16].xyzw, v6.xxxx, r5.xyzw
mad r5.xyzw, cb0[18].xyzw, v6.zzzz, r5.xyzw
add r5.xyzw, r5.xyzw, cb0[19].xyzw
add r1.yzw, -v6.xxyz, r12.xxyz
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r0.x, r1.yzwy, r6.xyzx
add r1.yzw, v6.xxyz, -cb3[25].xxyz
dp3 r1.y, r1.yzwy, r1.yzwy
sqrt r1.y, r1.y
add r1.y, -r0.x, r1.y
mad r0.x, cb3[25].w, r1.y, r0.x
mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
eq r1.y, cb6[0].x, l(1.000000)
if_nz r1.y
  eq r1.y, cb6[0].y, l(1.000000)
  mul r6.xyz, v6.yyyy, cb6[2].xyzx
  mad r6.xyz, cb6[1].xyzx, v6.xxxx, r6.xyzx
  mad r6.xyz, cb6[3].xyzx, v6.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb6[4].xyzx
  movc r1.yzw, r1.yyyy, r6.xxyz, v6.xxyz
  add r1.yzw, r1.yyzw, -cb6[6].xxyz
  mul r6.yzw, r1.yyzw, cb6[5].xxyz
  mad r1.y, r6.y, l(0.250000), l(0.750000)
  mad r1.z, cb6[0].z, l(0.500000), l(0.750000)
  max r6.x, r1.z, r1.y
  sample r6.xyzw, r6.xzwx, t8.xyzw, s0
else
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r1.y, r6.xyzw, cb2[46].xyzw
lt r1.z, r0.x, l(0.990000)
if_nz r1.z
  mul r6.xyzw, v6.yyyy, cb3[9].xyzw
  mad r6.xyzw, cb3[8].xyzw, v6.xxxx, r6.xyzw
  mad r6.xyzw, cb3[10].xyzw, v6.zzzz, r6.xyzw
  add r6.xyzw, r6.xyzw, cb3[11].xyzw
  div r6.xyz, r6.xyzx, r6.wwww
  mad r1.zw, r6.xxxy, cb0[8].zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  round_ni r1.zw, r1.zzzw
  mad r6.xy, r6.xyxx, cb0[8].zwzz, -r1.zwzz
  add r7.xyzw, r6.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  mul r8.xw, r7.xxxz, r7.xxxz
  mad r7.xz, r8.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000), -r6.xxyx
  add r9.xy, -r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  min r9.zw, r6.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r9.xy, -r9.zwzz, r9.zwzz, r9.xyxx
  max r6.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r6.xy, -r6.xyxx, r6.xyxx, r7.ywyy
  mov r10.x, r7.x
  mov r10.y, r9.x
  mov r10.z, r6.x
  mov r10.w, r8.x
  mul r10.xyzw, r10.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  mov r8.x, r7.z
  mov r8.y, r9.y
  mov r8.z, r6.y
  mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  add r8.xyzw, r10.ywyw, r10.xzxz
  add r9.xyzw, r7.yyww, r7.xxzz
  div r6.xy, r10.ywyy, r8.zwzz
  add r6.xy, r6.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  div r7.xy, r7.ywyy, r9.ywyy
  add r7.xy, r7.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  mul r10.xy, r6.xyxx, cb0[8].xxxx
  mul r10.zw, r7.xxxy, cb0[8].yyyy
  mul r7.xyzw, r8.xyzw, r9.xyzw
  mad r8.xyzw, r1.zwzw, cb0[8].xyxy, r10.xzyz
  sample_c_lz r2.w, r8.xyxx, t9.xxxx, s1, r6.z
  sample_c_lz r3.w, r8.zwzz, t9.xxxx, s1, r6.z
  mul r3.w, r3.w, r7.y
  mad r2.w, r7.x, r2.w, r3.w
  mad r8.xyzw, r1.zwzw, cb0[8].xyxy, r10.xwyw
  sample_c_lz r1.z, r8.xyxx, t9.xxxx, s1, r6.z
  mad r1.z, r7.z, r1.z, r2.w
  sample_c_lz r1.w, r8.zwzz, t9.xxxx, s1, r6.z
  mad r1.z, r7.w, r1.w, r1.z
  add r1.w, -cb3[24].x, l(1.000000)
  mad r1.z, r1.z, r1.w, cb3[24].x
else
  mov r1.z, l(1.000000)
endif
add r1.y, -r1.z, r1.y
mad r0.x, r0.x, r1.y, r1.z
lt r1.y, l(0.000000), r5.z
and r1.y, r1.y, l(0x3f800000)
div r1.zw, r5.xxxy, r5.wwww
add r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
sample r6.xyzw, r1.zwzz, t6.xyzw, s8
mul r1.y, r1.y, r6.w
dp3 r1.z, r5.xyzx, r5.xyzx
sample r5.xyzw, r1.zzzz, t7.xyzw, s9
mul r1.y, r1.y, r5.x
mul r0.x, r0.x, r1.y
mov r5.x, v3.w
mov r5.y, v4.w
mov r5.z, v5.w
dp3 r1.y, r5.xyzx, r5.xyzx
rsq r1.y, r1.y
mul r6.xyz, r1.yyyy, r5.xyzx
mul r7.xyz, r0.xxxx, cb0[2].xyzx
add r0.x, -r1.x, l(1.000000)
mad r1.xyz, r5.xyzx, r1.yyyy, -r4.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
max r1.w, r1.w, l(0.001000)
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp3 r1.w, r3.xyzx, -r4.xyzx
dp3_sat r2.w, r3.xyzx, r6.xyzx
dp3_sat r3.x, r3.xyzx, r1.xyzx
dp3_sat r1.x, r6.xyzx, r1.xyzx
mul r1.y, r1.x, r1.x
dp2 r1.y, r1.yyyy, r0.xxxx
add r1.y, r1.y, l(-0.500000)
add r1.z, -r2.w, l(1.000000)
mul r3.y, r1.z, r1.z
mul r3.y, r3.y, r3.y
mul r1.z, r1.z, r3.y
mad r1.z, r1.y, r1.z, l(1.000000)
add r3.y, -|r1.w|, l(1.000000)
mul r3.z, r3.y, r3.y
mul r3.z, r3.z, r3.z
mul r3.y, r3.y, r3.z
mad r1.y, r1.y, r3.y, l(1.000000)
mul r1.y, r1.y, r1.z
mul r1.y, r2.w, r1.y
mul r0.x, r0.x, r0.x
max r0.x, r0.x, l(0.002000)
add r1.z, -r0.x, l(1.000000)
mad r3.y, |r1.w|, r1.z, r0.x
mad r1.z, r2.w, r1.z, r0.x
mul r1.z, r1.z, |r1.w|
mad r1.z, r2.w, r3.y, r1.z
add r1.z, r1.z, l(0.000010)
div r1.z, l(0.500000), r1.z
mul r0.x, r0.x, r0.x
mad r1.w, r3.x, r0.x, -r3.x
mad r1.w, r1.w, r3.x, l(1.000000)
mul r0.x, r0.x, l(0.318309873)
mad r1.w, r1.w, r1.w, l(1.000000012E-007)
div r0.x, r0.x, r1.w
mul r0.x, r0.x, r1.z
mul r0.x, r0.x, l(3.14159274)
mul r0.x, r2.w, r0.x
max r0.x, r0.x, l(0.000000)
dp3 r1.z, r0.yzwy, r0.yzwy
ne r1.z, r1.z, l(0.000000)
and r1.z, r1.z, l(0x3f800000)
mul r0.x, r0.x, r1.z
mul r1.yzw, r1.yyyy, r7.xxyz
mul r3.xyz, r7.xyzx, r0.xxxx
add r0.x, -r1.x, l(1.000000)
mul r1.x, r0.x, r0.x
mul r1.x, r1.x, r1.x
mul r0.x, r0.x, r1.x
add r4.xyz, -r0.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r4.xyzx, r0.xxxx, r0.yzwy
mul r0.xyz, r0.xyzx, r3.xyzx
mad r0.xyz, r2.xyzx, r1.yzwy, r0.xyzx
div r0.w, v2.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
mul o0.xyz, r0.xyzx, r0.wwww
ret
// Approximately 0 instruction slots used