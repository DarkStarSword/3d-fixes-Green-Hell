// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e5c6cf464b1e45d5-ps.txt
// 3DMigoto: e5c6cf464b1e45d5 | Matched 2 variants of 2 shaders: Custom/WindLeavesC2Standard, Custom/WindLeavesC2Standard_not_moving
//
// 2:    Unity headers extracted from Custom_WindLeavesC2Standard
// 1:    Unity headers extracted from Custom_WindLeavesC2Standard_not_moving
// 2:    Shader "Custom/WindLeavesC2Standard" {
// 1:    Shader "Custom/WindLeavesC2Standard_not_moving" {
//         SubShader 1/2 {
//           LOD 200
//           Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Geometry+200" "RenderType"="Grass" }
//           Pass 1/5 {
//             Name "FORWARD"
//             Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+200" "RenderType"="Grass" "SHADOWSUPPORT"="true" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
// 2: Unity 5.3 headers extracted from Custom_WindLeavesC2Standard:
// 1: Unity 5.3 headers extracted from Custom_WindLeavesC2Standard_not_moving:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 155 4 6
//      undeciphered1a: 14
//      Keywords { "DIRECTIONAL" "INSTANCING_ON" }
//      undeciphered2: 1 6 5 5 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 192
//      Vector 32 [_LightColor0]
//      Float 80 [_Cutoff]
//      Float 132 [_Wetness]
//      Float 176 [_Cutoff2]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 736 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityReflectionProbes" 128
//      Vector 0 [unity_SpecCube0_BoxMax]
//      Vector 16 [unity_SpecCube0_BoxMin]
//      Vector 32 [unity_SpecCube0_ProbePosition]
//      Vector 48 [unity_SpecCube0_HDR]
//      Vector 64 [unity_SpecCube1_BoxMax]
//      Vector 80 [unity_SpecCube1_BoxMin]
//      Vector 96 [unity_SpecCube1_ProbePosition]
//      Vector 112 [unity_SpecCube1_HDR]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 2
//      SetTexture 1 [_RoughTex] 2D 3
//      SetTexture 2 [_BumpMap] 2D 4
//      SetTexture 3 [unity_SpecCube0] CUBE 0
//      SetTexture 4 [unity_SpecCube1] CUBE -1
//      SetTexture 5 [unity_ProbeVolumeSH] 3D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityReflectionProbes" 3
//      BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:23:36 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyz
// TEXCOORD                 6   xyzw        6     NONE   float
// TEXCOORD                 7   xyzw        7     NONE   float
// SV_InstanceID            0   x           8     NONE    uint
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e5c6cf464b1e45d5-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s2
mul r4.xyz, r3.xyzx, v5.xyzx
sample r5.xyzw, v1.xyxx, t1.xyzw, s3
add r1.w, r3.w, -cb0[5].x
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
mul r1.w, cb0[8].y, l(0.085000)
mad r2.w, cb0[8].y, l(0.610000), l(1.000000)
sample r6.xyzw, v1.zwzz, t2.xyzw, s4
mul r6.x, r6.w, r6.x
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r6.xyxx, r6.xyxx
min r4.w, r4.w, l(1.000000)
add r4.w, -r4.w, l(1.000000)
sqrt r6.z, r4.w
add r4.w, r3.w, -cb0[11].x
lt r4.w, r4.w, l(0.000000)
discard_nz r4.w
eq r4.w, cb4[0].x, l(1.000000)
if_nz r4.w
  eq r4.w, cb4[0].y, l(1.000000)
  mul r5.yzw, v3.wwww, cb4[2].xxyz
  mad r5.yzw, cb4[1].xxyz, v2.wwww, r5.yyzw
  mad r5.yzw, cb4[3].xxyz, v4.wwww, r5.yyzw
  add r5.yzw, r5.yyzw, cb4[4].xxyz
  movc r5.yzw, r4.wwww, r5.yyzw, r0.xxyz
  add r5.yzw, r5.yyzw, -cb4[6].xxyz
  mul r7.yzw, r5.yyzw, cb4[5].xxyz
  mad r4.w, r7.y, l(0.250000), l(0.750000)
  mad r5.y, cb4[0].z, l(0.500000), l(0.750000)
  max r7.x, r4.w, r5.y
  sample r7.xyzw, r7.xzwx, t5.xyzw, s1
else
  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r4.w, r7.xyzw, cb2[46].xyzw
dp3 r7.x, v2.xyzx, r6.xyzx
dp3 r7.y, v3.xyzx, r6.xyzx
dp3 r7.z, v4.xyzx, r6.xyzx
dp3 r5.y, r7.xyzx, r7.xyzx
rsq r5.y, r5.y
mul r5.yzw, r5.yyyy, r7.xxyz
mad r6.x, -r5.x, r2.w, l(1.000000)
dp3 r6.y, -r2.xyzx, r5.yzwy
add r6.y, r6.y, r6.y
mad r6.yzw, r5.yyzw, -r6.yyyy, -r2.xxyz
mul r7.xyz, r4.wwww, cb0[2].xyzx
lt r4.w, l(0.000000), cb3[2].w
if_nz r4.w
  dp3 r4.w, r6.yzwy, r6.yzwy
  rsq r4.w, r4.w
  mul r8.xyz, r4.wwww, r6.yzwy
  add r9.xyz, -r0.xyzx, cb3[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r0.xyzx, cb3[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r4.w, r9.y, r9.x
  min r4.w, r9.z, r4.w
  add r9.xyz, r0.xyzx, -cb3[2].xyzx
  mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
else
  mov r8.xyz, r6.yzwy
endif
mad r4.w, -r6.x, l(0.700000), l(1.700000)
mul r4.w, r4.w, r6.x
mul r4.w, r4.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t3.xyzw, s0, r4.w
add r7.w, r8.w, l(-1.000000)
mad r7.w, cb3[3].w, r7.w, l(1.000000)
log r7.w, r7.w
mul r7.w, r7.w, cb3[3].y
exp r7.w, r7.w
mul r7.w, r7.w, cb3[3].x
mul r9.xyz, r8.xyzx, r7.wwww
lt r8.w, cb3[1].w, l(0.999990)
if_nz r8.w
  lt r8.w, l(0.000000), cb3[6].w
  if_nz r8.w
    dp3 r8.w, r6.yzwy, r6.yzwy
    rsq r8.w, r8.w
    mul r10.xyz, r6.yzwy, r8.wwww
    add r11.xyz, -r0.xyzx, cb3[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r0.xyzx, cb3[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r8.w, r11.y, r11.x
    min r8.w, r11.z, r8.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r6.yzw, r10.xxyz, r8.wwww, r0.xxyz
  endif
  sample_l r10.xyzw, r6.yzwy, t4.xyzw, s0, r4.w
  add r0.x, r10.w, l(-1.000000)
  mad r0.x, cb3[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb3[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r10.xyzx, r0.xxxx
  mad r6.yzw, r7.wwww, r8.xxyz, -r0.xxyz
  mad r9.xyz, cb3[1].wwww, r6.yzwy, r0.xyzx
endif
mad r0.xyz, r3.xyzx, v5.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r0.xyz, r1.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -cb0[8].y, l(0.0815999955), l(0.960000)
mul r3.xyz, r1.wwww, r4.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r5.yzwy, r2.xyzx
dp3_sat r2.x, r5.yzwy, cb2[0].xyzx
dp3_sat r2.y, r5.yzwy, r1.xyzx
dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
mul r1.y, r1.x, r1.x
dp2 r1.y, r1.yyyy, r6.xxxx
add r1.y, r1.y, l(-0.500000)
add r1.z, -r2.x, l(1.000000)
mul r2.z, r1.z, r1.z
mul r2.z, r2.z, r2.z
mul r1.z, r1.z, r2.z
mad r1.z, r1.y, r1.z, l(1.000000)
add r2.z, -|r0.w|, l(1.000000)
mul r4.x, r2.z, r2.z
mul r4.x, r4.x, r4.x
mul r2.z, r2.z, r4.x
mad r1.y, r1.y, r2.z, l(1.000000)
mul r1.y, r1.y, r1.z
mul r1.y, r2.x, r1.y
mul r1.z, r6.x, r6.x
max r1.z, r1.z, l(0.002000)
add r4.x, -r1.z, l(1.000000)
mad r4.y, |r0.w|, r4.x, r1.z
mad r4.x, r2.x, r4.x, r1.z
mul r0.w, |r0.w|, r4.x
mad r0.w, r2.x, r4.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r4.x, r1.z, r1.z
mad r4.y, r2.y, r4.x, -r2.y
mad r2.y, r4.y, r2.y, l(1.000000)
mul r4.x, r4.x, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r4.x, r2.y
mul r0.w, r0.w, r2.y
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.x, r0.w
max r0.w, r0.w, l(0.000000)
mad r1.z, r1.z, r1.z, l(1.000000)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
dp3 r2.x, r0.xyzx, r0.xyzx
ne r2.x, r2.x, l(0.000000)
and r2.x, r2.x, l(0x3f800000)
mul r0.w, r0.w, r2.x
mad r1.w, r5.x, r2.w, -r1.w
add_sat r1.w, r1.w, l(1.000000)
mul r2.xyw, r1.yyyy, r7.xyxz
mul r4.xyz, r7.xyzx, r0.wwww
add r0.w, -r1.x, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.w, r0.w, r1.x
add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r5.xyz, r5.xyzx, r0.wwww, r0.xyzx
mul r4.xyz, r4.xyzx, r5.xyzx
mad r2.xyw, r3.xyxz, r2.xyxw, r4.xyxz
mul r1.xyz, r9.xyzx, r1.zzzz
add r3.xyz, -r0.xyzx, r1.wwww
mad r0.xyz, r2.zzzz, r3.xyzx, r0.xyzx
mad o0.xyz, r1.xyzx, r0.xyzx, r2.xywx
mov o0.w, r3.w
ret
// Approximately 0 instruction slots used