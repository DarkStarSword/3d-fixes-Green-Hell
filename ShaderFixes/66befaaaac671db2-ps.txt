// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 66befaaaac671db2-ps.txt
// 3DMigoto: 66befaaaac671db2 |    Unity headers extracted from Amplify_player_skin_material_Translucency
//    Shader "Amplify/player_skin_material/Translucency" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_player_skin_material_Translucency:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 133 6 2
//   undeciphered1a: 8
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 6 4 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 176
//   Vector 32 [_LightColor0]
//   Float 64 [_NrmPower]
//   Float 68 [_DetailNrmPower]
//   Float 72 [_Detailnrmtiling]
//   Vector 80 [_Albedo_ST]
//   Vector 96 [_TextureMask_ST]
//   Float 112 [_AlbedoMaskPower]
//   Float 116 [_RGHPower]
//   Float 120 [_Translucency]
//   Float 124 [_TransNormalDistortion]
//   Float 128 [_TransScattering]
//   Float 132 [_TransDirect]
//   Float 140 [_TransShadow]
//   Vector 144 [_Color0]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_Normal] 2D 1
//   SetTexture 1 [_DetailNrm] 2D 2
//   SetTexture 2 [_DetailMask] 2D 3
//   SetTexture 3 [_Albedo] 2D 4
//   SetTexture 4 [_TextureMask] 2D 5
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:14:30 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 5     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 7   xyzw        6     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 66befaaaac671db2-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, r9.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
sample r2.xyzw, v1.xyxx, t0.xyzw, s1
mul r2.x, r2.w, r2.x
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xy, r2.xyxx, cb0[4].xxxx
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r3.z, r1.w
mul r2.zw, v1.xxxy, cb0[4].zzzz
sample r4.xyzw, r2.zwzz, t1.xyzw, s2
mul r4.x, r4.w, r4.x
mad r2.zw, r4.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r4.xy, r2.zwzz, cb0[4].yyyy
dp2 r1.w, r4.xyxx, r4.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r4.z, r1.w
sample r5.xyzw, v1.xyxx, t2.xyzw, s3
add r4.xyz, -r3.xyzx, r4.xyzx
mad r3.xyw, r5.xxxx, r4.xyxz, r3.xyxz
mad r2.xy, r2.xyxx, cb0[4].xxxx, r3.xyxx
mul r2.z, r3.z, r3.w
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mad r3.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r3.xyzw, r3.xyxx, t3.xyzw, s4
mad r4.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
sample r4.xyzw, r4.xyxx, t4.xyzw, s5
max r4.yz, cb0[7].xxxx, l(0.000000, 0.000000, 0.100000, 0.000000)
min r4.yz, r4.yyzy, l(0.000000, 0.800000, 0.600000, 0.000000)
log r1.w, r4.x
mul r1.w, r1.w, l(1.500000)
exp r1.w, r1.w
mul r5.xyz, r1.wwww, r3.xyzx
mad r3.xyz, -r3.xyzx, r1.wwww, r3.xyzx
mad r3.xyz, r4.yyyy, r3.xyzx, r5.xyzx
max r1.w, r3.w, l(0.000000)
min r1.w, r1.w, l(0.500000)
add r2.w, -r4.x, l(1.000000)
add r3.w, r4.z, l(-0.408621)
mad r3.w, r2.w, r3.w, l(0.408621)
add r3.w, -r1.w, r3.w
mad r1.w, r2.w, r3.w, r1.w
add r2.w, -r1.w, l(0.700000)
mad r1.w, cb0[7].y, r2.w, r1.w
mad r4.xy, cb0[7].xxxx, l(-0.549999952, 0.274999976, 0.000000, 0.000000), l(1.400000, -0.199999988, 0.000000, 0.000000)
dp2 r1.w, r4.xyxx, r1.wwww
mul r4.xyz, r3.xyzx, cb0[9].xyzx
mul r4.xyz, r4.xyzx, v1.zzzz
eq r2.w, cb3[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb3[0].y, l(1.000000)
  mul r5.xyz, v5.yyyy, cb3[2].xyzx
  mad r5.xyz, cb3[1].xyzx, v5.xxxx, r5.xyzx
  mad r5.xyz, cb3[3].xyzx, v5.zzzz, r5.xyzx
  add r5.xyz, r5.xyzx, cb3[4].xyzx
  movc r5.xyz, r2.wwww, r5.xyzx, v5.xyzx
  add r5.xyz, r5.xyzx, -cb3[6].xyzx
  mul r5.yzw, r5.xxyz, cb3[5].xxyz
  mad r2.w, r5.y, l(0.250000), l(0.750000)
  mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
  max r5.x, r2.w, r3.w
  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
dp3 r5.x, v2.xyzx, r2.xyzx
dp3 r5.y, v3.xyzx, r2.xyzx
dp3 r5.z, v4.xyzx, r2.xyzx
dp3 r2.x, r5.xyzx, r5.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, r5.xyzx
mul r5.xyz, r2.wwww, cb0[2].xyzx
mad r6.xyz, cb0[2].xyzx, r2.wwww, -cb0[2].xyzx
mad r6.xyz, cb0[8].wwww, r6.xyzx, cb0[2].xyzx
mad r7.xyz, r2.xyzx, cb0[7].wwww, cb2[0].xyzx
dp3_sat r2.w, r1.xyzx, -r7.xyzx
log r2.w, r2.w
mul r2.w, r2.w, cb0[8].x
exp r2.w, r2.w
mul r2.w, r2.w, cb0[8].y
mul r6.xyz, r2.wwww, r6.xyzx
mul r4.xyz, r4.xyzx, r6.xyzx
mul r4.xyz, r3.xyzx, r4.xyzx
mul r3.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
add r1.w, -r1.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r2.xyzx, r1.xyzx
dp3_sat r1.x, r2.xyzx, cb2[0].xyzx
dp3_sat r1.y, r2.xyzx, r0.xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.x, l(1.000000)
mul r1.z, r0.z, r0.z
mul r1.z, r1.z, r1.z
mul r0.z, r0.z, r1.z
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.z, -|r0.w|, l(1.000000)
mul r2.x, r1.z, r1.z
mul r2.x, r2.x, r2.x
mul r1.z, r1.z, r2.x
mad r0.y, r0.y, r1.z, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
max r0.z, r0.z, l(0.002000)
add r1.z, -r0.z, l(1.000000)
mad r1.w, |r0.w|, r1.z, r0.z
mad r1.z, r1.x, r1.z, r0.z
mul r0.w, |r0.w|, r1.z
mad r0.w, r1.x, r1.w, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.z, r1.y, r0.z, -r1.y
mad r1.y, r1.z, r1.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.y, r1.y, r1.y, l(1.000000012E-007)
div r0.z, r0.z, r1.y
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r1.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
mul r1.xyz, r0.yyyy, r5.xyzx
mul r0.yzw, r5.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
mad r0.x, r0.x, l(0.960000), l(0.040000)
mul r0.xyz, r0.xxxx, r0.yzwy
mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
mad o0.xyz, r4.xyzx, cb0[7].zzzz, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used