// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a1a550c95e777afd-ps.txt
// 3DMigoto: a1a550c95e777afd | Matched 3 variants of 1 shaders: Shader Forge/resin
//
//       Unity headers extracted from Shader Forge_resin
//       Shader "Shader Forge/resin" {
//         CustomEditor "ShaderForgeMaterialInspector"
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           Tags { "QUEUE"="Transparent" "RenderType"="Transparent" }
//           Pass 2/4 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" "RenderType"="Transparent" "SHADOWSUPPORT"="true" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Shader Forge_resin:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 111 7 2
//      undeciphered1a: 9
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 4:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//      undeciphered2: 1 5 4 5 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 128
//      Vector 32 [_LightColor0]
//      Float 64 [_RefractionIntensity]
//      Vector 80 [_Refraction_ST]
//      Vector 96 [_color]
//      Float 112 [_power]
//      Float 116 [_color_opacity]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      Vector 112 [_ZBufferParams]
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 624 [unity_SHAr]
//      Vector 640 [unity_SHAg]
//      Vector 656 [unity_SHAb]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_Refraction] 2D 4
//      SetTexture 1 [_CameraDepthTexture] 2D 3
//      SetTexture 2 [_GrabTexture] 2D 2
//      SetTexture 3 [_ShadowMapTexture] 2D 1
//      SetTexture 4 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:49:47 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float
// TEXCOORD                 2   xy          2     NONE   float
// TEXCOORD                 3   xyzw        3     NONE   float   xyz
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// TEXCOORD                 5   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyz         6     NONE   float   xyz
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// TEXCOORD                 9   xyzw        8     NONE   float   xy w
// TEXCOORD                10   xyzw        9     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[42], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.xyw
dcl_input_ps linear v9.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a1a550c95e777afd-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r10.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
mad r2.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r2.xyzw, r2.xyxx, t0.xyzw, s4
mul r2.x, r2.w, r2.x
add r3.xy, r2.xyxx, r2.xyxx
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r2.xyxx, r2.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r3.z, r1.w
add r3.xyz, r3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r3.xyz, cb0[4].xxxx, r3.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mul r4.xyz, r3.yyyy, v6.xyzx
mad r3.xyw, r3.xxxx, v5.xyxz, r4.xyxz
mad r3.xyz, r3.zzzz, v4.xyzx, r3.xywx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
div r2.zw, v7.xxxy, v7.wwww
sample r4.xyzw, r2.zwzz, t1.xyzw, s3
mad r1.w, cb1[7].z, r4.x, cb1[7].w
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
add r1.w, r1.w, -cb1[5].y
max r1.w, r1.w, l(0.000000)
add r4.x, v7.z, -cb1[5].y
max r4.x, r4.x, l(0.000000)
mul r4.y, cb0[4].x, l(0.300000)
mad r2.xy, r2.xyxx, r4.yyyy, r2.zwzz
sample r2.xyzw, r2.xyxx, t2.xyzw, s2
dp3 r2.w, cb2[0].xyzx, cb2[0].xyzx
rsq r2.w, r2.w
mul r4.yzw, r2.wwww, cb2[0].xxyz
mad r0.xyz, r0.xyzx, r0.wwww, r4.yzwy
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
div r5.xy, v8.xyxx, v8.wwww
sample r5.xyzw, r5.xyxx, t3.xyzw, s1
mul r5.xyz, r5.xxxx, cb0[2].xyzx
eq r0.w, cb3[0].x, l(1.000000)
if_nz r0.w
  eq r0.w, cb3[0].y, l(1.000000)
  mul r6.xyz, v3.yyyy, cb3[2].xyzx
  mad r6.xyz, cb3[1].xyzx, v3.xxxx, r6.xyzx
  mad r6.xyz, cb3[3].xyzx, v3.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb3[4].xyzx
  movc r6.xyz, r0.wwww, r6.xyzx, v3.xyzx
  add r6.xyz, r6.xyzx, -cb3[6].xyzx
  mul r6.yzw, r6.xxyz, cb3[5].xxyz
  mul r0.w, r6.y, l(0.250000)
  mul r2.w, cb3[0].z, l(0.500000)
  mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.w, r0.w, r2.w
  min r6.x, r5.w, r0.w
  sample r7.xyzw, r6.xzwx, t4.xyzw, s0
  add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r8.xyzw, r8.xyzx, t4.xyzw, s0
  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r6.xyzw, r6.xyzx, t4.xyzw, s0
  mov r3.w, l(1.000000)
  dp4 r7.x, r7.xyzw, r3.xyzw
  dp4 r7.y, r8.xyzw, r3.xyzw
  dp4 r7.z, r6.xyzw, r3.xyzw
else
  mov r3.w, l(1.000000)
  dp4 r7.x, cb2[39].xyzw, r3.xyzw
  dp4 r7.y, cb2[40].xyzw, r3.xyzw
  dp4 r7.z, cb2[41].xyzw, r3.xyzw
endif
add r6.xyz, r7.xyzx, v9.xyzx
max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r0.w, r3.xyzx, r4.yzwy
max r2.w, r0.w, l(0.000000)
min r3.w, r2.w, l(1.000000)
dp3_sat r4.y, r4.yzwy, r0.xyzx
mul r7.xyz, cb0[2].xyzx, cb0[6].xyzx
add r1.w, r1.w, -r4.x
div_sat r1.w, r1.w, cb0[7].x
mul r4.xzw, r1.wwww, r7.xxyz
mul r4.xzw, r4.xxzw, cb0[7].xxxx
mul r4.xzw, r4.xxzw, l(0.960000, 0.000000, 0.960000, 0.960000)
dp3 r1.x, r3.xyzx, r1.xyzx
dp3_sat r0.x, r3.xyzx, r0.xyzx
mad r0.y, |r1.x|, l(0.960000), l(0.0400000028)
mad r0.z, r3.w, l(0.960000), l(0.0400000028)
mul r0.z, r0.z, |r1.x|
mad r0.y, r3.w, r0.y, r0.z
add r0.y, r0.y, l(0.000010)
mul r0.x, r0.x, r0.x
mad r0.x, r0.x, l(-0.998400), l(1.000000)
mad r0.x, r0.x, r0.x, l(1.000000012E-007)
div r0.xy, l(0.000509295845, 0.500000, 0.000000, 0.000000), r0.xyxx
mul r0.x, r0.x, r0.y
mul r0.x, r3.w, r0.x
mul r0.x, r0.x, l(3.14159274)
mul r0.xyz, r0.xxxx, r5.xyzx
add r1.y, -r4.y, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
mad r1.y, r1.y, l(0.960000), l(0.040000)
mul r0.xyz, r0.xyzx, r1.yyyy
add r1.y, r4.y, r4.y
mul r1.y, r4.y, r1.y
mad r0.w, -r0.w, l(0.500000), l(1.000000)
mul r1.z, r0.w, r0.w
mul r1.z, r1.z, r1.z
mul r0.w, r0.w, r1.z
add r1.x, -|r1.x|, l(1.000000)
mul r1.z, r1.x, r1.x
mul r1.z, r1.z, r1.z
mul r1.x, r1.x, r1.z
mad r1.y, r1.y, l(0.199999988), l(-0.500000)
mad r0.w, r1.y, r0.w, l(1.000000)
mad r1.x, r1.y, r1.x, l(1.000000)
mul r0.w, r0.w, r1.x
mad r0.w, r0.w, r2.w, l(1.000000)
mad r1.xyz, r0.wwww, r5.xyzx, r6.xyzx
mad r0.xyz, r1.xyzx, r4.xzwx, r0.xyzx
add r0.xyz, -r2.xyzx, r0.xyzx
mad o0.xyz, cb0[7].yyyy, r0.xyzx, r2.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used