// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d0d4eb0c0a149e51-ps.txt
// 3DMigoto: d0d4eb0c0a149e51 |    Unity headers extracted from NatureManufacture Shaders_Water_Water River Tesseled Vertex Color
//    Shader "NatureManufacture Shaders/Water/Water River Tesseled Vertex Color" {
//      SubShader 1/1 {
//        Tags { "IsEmissive"="true" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "IsEmissive"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from NatureManufacture Shaders_Water_Water River Tesseled Vertex Color:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 201802150 384 15 6
//   undeciphered1a: 15
//   Keywords { "DIRECTIONAL" "FOG_LINEAR" }
//   undeciphered2: 1 12 6 11 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 512
//   Vector 32 [_LightColor0]
//   ScalarInt 68 [_UVVDirection1UDirection0]
//   Vector 72 [_WaterMixSpeed] 2
//   Vector 80 [_WaterNormal_ST]
//   Float 96 [_GlobalTiling]
//   Vector 100 [_WaterMainSpeed] 2
//   Vector 112 [_SmallCascadeMixSpeed] 2
//   Vector 128 [_SmallCascadeNormal_ST]
//   Vector 148 [_SmallCascadeMainSpeed] 2
//   Float 156 [_SmallCascadeAngle]
//   Float 160 [_SmallCascadeAngleFalloff]
//   Float 164 [_BigCascadeAngle]
//   Float 168 [_BigCascadeAngleFalloff]
//   Vector 176 [_BigCascadeMixSpeed] 2
//   Vector 192 [_BigCascadeNormal_ST]
//   Vector 208 [_BigCascadeMainSpeed] 2
//   Float 216 [_NormalScale]
//   Float 220 [_SmallCascadeNormalScale]
//   Float 224 [_BigCascadeNormalScale]
//   Float 228 [_Distortion]
//   Vector 240 [_DeepColor]
//   Vector 256 [_ShalowColor]
//   Float 272 [_ShalowDepth]
//   Float 276 [_ShalowFalloff]
//   Float 280 [_BigCascadeTransparency]
//   Vector 288 [_FoamColor] 3
//   Float 300 [_FoamDepth]
//   Float 304 [_FoamFalloff]
//   Vector 308 [_FoamSpeed] 2
//   Vector 320 [_Foam_ST]
//   Vector 336 [_NoiseSpeed] 2
//   Vector 352 [_Noise_ST]
//   Float 368 [_SmallCascadeNoisePower]
//   Vector 372 [_SmallCascadeColor] 3
//   Float 384 [_SmallCascadeFoamFalloff]
//   Float 388 [_BigCascadeNoisePower]
//   Vector 400 [_BigCascadeColor] 3
//   Float 412 [_BigCascadeFoamFalloff]
//   Float 416 [_WaterDeepTranslucencyPower]
//   Float 420 [_WaterShalowTranslucencyPower]
//   Float 424 [_WaterSpecularFar]
//   Float 428 [_WaterSpecularClose]
//   Float 432 [_WaterSpecularThreshold]
//   Float 436 [_FoamSpecular]
//   Float 440 [_SmallCascadeSpecular]
//   Float 444 [_BigCascadeSpecular]
//   Float 448 [_WaterSmoothness]
//   Float 452 [_FoamSmoothness]
//   Float 456 [_SmallCascadeSmoothness]
//   Float 460 [_BigCascadeSmoothness]
//   Float 464 [_AOPower]
//   Float 468 [_WaterDepth]
//   Float 472 [_WaterFalloffBorder]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 16 [_SinTime]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_WaterNormal] 2D 2
//   SetTexture 1 [_SmallCascadeNormal] 2D 3
//   SetTexture 2 [_BigCascadeNormal] 2D 4
//   SetTexture 3 [_WaterGrab] 2D 5
//   SetTexture 4 [_CameraDepthTexture] 2D 6
//   SetTexture 5 [_Foam] 2D 7
//   SetTexture 6 [_SmallCascade] 2D 8
//   SetTexture 7 [_Noise] 2D 9
//   SetTexture 8 [_BigCascade] 2D 10
//   SetTexture 9 [unity_SpecCube0] CUBE 0
//   SetTexture 10 [unity_SpecCube1] CUBE -1
//   SetTexture 11 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityReflectionProbes" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:13:39 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 6     z         1     NONE   float     z
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
// COLOR                    0   xyzw        6     NONE   float   xyzw
// TEXCOORD                 8   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[30], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texturecube (float,float,float,float) t9
dcl_resource_texturecube (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t11
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyw
dcl_input_ps linear v6.xyzw
dcl_output o0.xyzw
dcl_temps 17
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r15.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d0d4eb0c0a149e51-ps.txt

mul r15.w, -r15.x, r15.y
mad r16.xyz, -r15.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r16.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r3.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[6].x
mul r3.xy, r1.wwww, r3.xyxx
itof r2.w, cb0[4].y
eq r2.w, r2.w, l(1.000000)
movc r3.zw, r2.wwww, cb0[4].zzzw, cb0[4].wwwz
mad r3.zw, cb1[0].yyyy, r3.zzzw, r3.xxxy
movc r4.xy, r2.wwww, cb0[6].yzyy, cb0[6].zyzz
mad r3.xy, cb1[0].yyyy, r4.xyxx, r3.xyxx
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.zwzz, t0.xywz, s2
mul r3.z, cb0[13].z, l(1.200000)
mul r4.x, r4.z, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.zw, r3.zzzz, r4.xxxy
dp2 r3.w, r4.zwzz, r4.zwzz
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r3.w, r3.w
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r3.xyxx, t0.xywz, s2
mul r5.x, r5.z, r5.x
mad r3.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, cb0[13].zzzz
dp2 r4.z, r3.xyxx, r3.xyxx
min r4.z, r4.z, l(1.000000)
add r4.z, -r4.z, l(1.000000)
sqrt r4.z, r4.z
mad r3.xy, r4.xyxx, r3.zzzz, r3.xyxx
mul r3.z, r3.w, r4.z
dp3 r3.w, r3.xyzx, r3.xyzx
rsq r3.w, r3.w
mul r4.xyz, r3.wwww, r3.xyzx
mad r5.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
mul r5.xy, r1.wwww, r5.xyxx
movc r5.zw, r2.wwww, cb0[7].xxxy, cb0[7].yyyx
mad r5.zw, cb1[0].yyyy, r5.zzzw, r5.xxxy
movc r6.xy, r2.wwww, cb0[9].yzyy, cb0[9].zyzz
mad r5.xy, cb1[0].yyyy, r6.xyxx, r5.xyxx
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r5.zwzz, t1.xywz, s3
mul r6.x, r6.z, r6.x
mad r5.zw, r6.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r6.xy, r5.zwzz, cb0[13].wwww
dp2 r4.w, r6.xyxx, r6.xyxx
min r4.w, r4.w, l(1.000000)
add r4.w, -r4.w, l(1.000000)
sqrt r4.w, r4.w
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyxx, t1.xywz, s3
mul r6.x, r6.z, r6.x
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xy, r6.xyxx, cb0[13].wwww
dp2 r6.z, r6.xyxx, r6.xyxx
min r6.z, r6.z, l(1.000000)
add r6.z, -r6.z, l(1.000000)
sqrt r6.z, r6.z
mad r7.xy, r5.zwzz, cb0[13].wwww, r6.xyxx
mul r7.z, r4.w, r6.z
dp3 r4.w, r7.xyzx, r7.xyzx
rsq r4.w, r4.w
mov_sat r5.z, v3.z
mul r5.w, cb0[9].w, l(0.0222222228)
mad r6.x, -cb0[9].w, l(0.0222222228), l(1.000000)
add r6.x, r5.z, -r6.x
max r6.x, r6.x, l(0.000000)
min r6.x, r6.x, l(2.000000)
div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
mul_sat r5.w, r5.w, r6.x
add r5.w, -r5.w, l(1.000000)
log r5.w, r5.w
mul r5.w, r5.w, cb0[10].x
exp r5.w, r5.w
mul r6.x, cb0[10].y, l(0.0222222228)
mad r6.y, -cb0[10].y, l(0.0222222228), l(1.000000)
add r5.z, r5.z, -r6.y
max r5.z, r5.z, l(0.000000)
min r5.z, r5.z, l(2.000000)
div r6.x, l(1.000000, 1.000000, 1.000000, 1.000000), r6.x
mul_sat r5.z, r5.z, r6.x
add r5.z, -r5.z, l(1.000000)
log r5.z, r5.z
mul r5.z, r5.z, cb0[10].z
exp r5.z, r5.z
min r5.z, r5.z, l(1.000000)
add_sat r5.w, -r5.z, r5.w
mad r6.xyz, r7.xyzx, r4.wwww, -r4.xyzx
mad r4.xyz, r5.wwww, r6.xyzx, r4.xyzx
mad r6.xy, v1.xyxx, cb0[12].xyxx, cb0[12].zwzz
mul r6.xy, r1.wwww, r6.xyxx
movc r6.zw, r2.wwww, cb0[11].xxxy, cb0[11].yyyx
mad r6.zw, cb1[0].yyyy, r6.zzzw, r6.xxxy
movc r8.xy, r2.wwww, cb0[13].xyxx, cb0[13].yxyy
mad r6.xy, cb1[0].yyyy, r8.xyxx, r6.xyxx
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r6.zwzz, t2.xywz, s4
mul r8.x, r8.z, r8.x
mad r6.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r8.xy, r6.zwzz, cb0[14].xxxx
dp2 r7.w, r8.xyxx, r8.xyxx
min r7.w, r7.w, l(1.000000)
add r7.w, -r7.w, l(1.000000)
sqrt r7.w, r7.w
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r6.xyxx, t2.xywz, s4
mul r8.x, r8.z, r8.x
mad r8.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r8.xy, r8.xyxx, cb0[14].xxxx
dp2 r8.z, r8.xyxx, r8.xyxx
min r8.z, r8.z, l(1.000000)
add r8.z, -r8.z, l(1.000000)
sqrt r8.z, r8.z
mad r9.xy, r6.zwzz, cb0[14].xxxx, r8.xyxx
mul r9.z, r7.w, r8.z
dp3 r6.z, r9.xyzx, r9.xyzx
rsq r6.z, r6.z
mad r8.xyz, r9.xyzx, r6.zzzz, -r4.xyzx
mad r4.xyz, r5.zzzz, r8.xyzx, r4.xyzx
mad r3.xyz, r3.xyzx, r3.wwww, -r4.xyzx
mad r3.xyz, v6.xxxx, r3.xyzx, r4.xyzx
mad r7.xyz, r7.xyzx, r4.wwww, -r3.xyzx
mad r3.xyz, v6.yyyy, r7.xyzx, r3.xyzx
mad r7.xyz, r9.xyzx, r6.zzzz, -r3.xyzx
mad r3.xyz, v6.zzzz, r7.xyzx, r3.xyzx
add r7.xyw, v5.wxww, l(9.999999960E-012, 0.000000, 0.000000, 9.999999960E-012)
mul r3.w, r7.x, l(0.500000)
mad r4.z, -r7.x, l(0.500000), v5.y
mad r7.z, -r4.z, cb1[5].x, r3.w
div r7.yzw, r7.yyzw, r7.xxxx
div r4.zw, r7.yyyz, r7.wwww
mad r4.zw, r4.xxxy, cb0[14].yyyy, r4.zzzw
sample_indexable(texture2d)(float,float,float,float) r7.yzw, r4.zwzz, t3.wxyz, s5
div r4.zw, v5.xxxy, r7.xxxx
sample_indexable(texture2d)(float,float,float,float) r3.w, r4.zwzz, t4.yzwx, s6
mad r3.w, cb1[7].z, r3.w, cb1[7].w
div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
add r3.w, -r7.x, r3.w
add r4.z, |r3.w|, cb0[17].x
log r4.z, r4.z
mul r4.z, r4.z, cb0[17].y
exp r4.z, r4.z
mul r4.w, r5.z, cb0[17].z
add r6.z, -r4.z, l(100.000000)
mad_sat r4.z, r4.w, r6.z, r4.z
add r8.xyz, -cb0[15].xyzx, cb0[16].xyzx
mad r8.xyz, r4.zzzz, r8.xyzx, cb0[15].xyzx
add r4.w, |r3.w|, cb0[18].w
log r4.w, r4.w
mul r4.w, r4.w, cb0[19].x
exp r4.w, r4.w
min r4.w, r4.w, l(1.000000)
mad r6.zw, v1.xxxy, cb0[20].xxxy, cb0[20].zzzw
movc r9.xy, r2.wwww, cb0[19].yzyy, cb0[19].zyzz
mul r6.zw, r1.wwww, r6.zzzw
mad r6.zw, cb1[0].yyyy, r9.xxxy, r6.zzzw
sample_indexable(texture2d)(float,float,float,float) r6.z, r6.zwzz, t5.xywz, s7
mul r6.z, r4.w, r6.z
add r9.xyz, -r8.xyzx, cb0[18].xyzx
mad r9.xyz, r6.zzzz, r9.xyzx, r8.xyzx
add r9.xyz, -r7.yzwy, r9.xyzx
mad r9.xyz, r4.wwww, r9.xyzx, r7.yzwy
add r4.w, -r4.z, l(1.000000)
add r10.xyz, r8.xyzx, -r9.xyzx
mad r9.xyz, r4.wwww, r10.xyzx, r9.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t6.wxyz, s8
movc r10.xy, r2.wwww, cb0[21].xyxx, cb0[21].yxyy
mad r10.zw, v1.xxxy, cb0[22].xxxy, cb0[22].zzzw
mul r10.zw, r1.wwww, r10.zzzw
mul r11.xy, r10.xyxx, cb1[1].xxxx
mad r11.xy, r11.xyxx, l(-1.200000, -0.900000, 0.000000, 0.000000), r10.zwzz
sample_indexable(texture2d)(float,float,float,float) r1.w, r11.xyxx, t7.xyzw, s9
mad r10.xy, r10.xyxx, cb1[1].xxxx, r10.zwzz
sample_indexable(texture2d)(float,float,float,float) r2.w, r10.xyxx, t7.xyzw, s9
min r2.w, r1.w, r2.w
log r2.w, r2.w
mul r2.w, r2.w, cb0[23].x
exp r2.w, r2.w
mul r2.w, r2.w, l(20.000000)
min r2.w, r2.w, l(1.000000)
mul r2.w, r5.x, r2.w
log r5.x, r5.x
mul r5.x, r5.x, cb0[24].x
exp r5.x, r5.x
min r5.x, r5.x, l(1.000000)
mul r5.y, r5.x, r5.w
mad r11.xyz, r2.wwww, cb0[23].yzwy, -r9.xyzx
mad r9.xyz, r5.yyyy, r11.xyzx, r9.xyzx
sample_indexable(texture2d)(float,float,float,float) r6.x, r6.xyxx, t8.wxyz, s10
add r6.yw, r10.xxxy, l(0.000000, -0.470000, 0.000000, 0.370000)
sample_indexable(texture2d)(float,float,float,float) r6.y, r6.ywyy, t7.xwyz, s9
min r1.w, r1.w, r6.y
log r1.w, r1.w
mul r1.w, r1.w, cb0[24].y
exp r1.w, r1.w
mul r1.w, r1.w, l(20.000000)
min r1.w, r1.w, l(1.000000)
mul r6.y, r6.x, l(0.500000)
mad r1.w, r1.w, r6.y, r6.y
log r6.x, r6.x
mul r6.x, r6.x, cb0[25].w
exp r6.x, r6.x
min r6.x, r6.x, l(1.000000)
mul r6.y, r5.z, r6.x
mad r10.xyz, r1.wwww, cb0[25].xyzx, -r9.xyzx
mad r9.xyz, r6.yyyy, r10.xyzx, r9.xyzx
add r8.xyz, -r7.yzwy, r8.xyzx
mad r7.xyz, r4.wwww, r8.xyzx, r7.yzwy
add r8.xyz, -r9.xyzx, r7.xyzx
mad r8.xyz, v6.xxxx, r8.xyzx, r9.xyzx
mad r9.xyz, r2.wwww, cb0[23].yzwy, -r7.xyzx
mad r9.xyz, r5.xxxx, r9.xyzx, r7.xyzx
add r9.xyz, -r8.xyzx, r9.xyzx
mad r8.xyz, v6.yyyy, r9.xyzx, r8.xyzx
mad r9.xyz, r1.wwww, cb0[25].xyzx, -r7.xyzx
mad r7.xyz, r6.xxxx, r9.xyzx, r7.xyzx
add r7.xyz, -r8.xyzx, r7.xyzx
mad r7.xyz, v6.zzzz, r7.xyzx, r8.xyzx
max_sat r1.w, r4.y, r4.x
mul r8.xyz, r1.wwww, cb0[16].xyzx
add r4.xy, -cb0[26].xzxx, cb0[26].ywyy
mad r1.w, r4.z, r4.x, cb0[26].x
mul r8.xyz, r1.wwww, r8.xyzx
log r1.w, r4.z
mul r1.w, r1.w, cb0[27].x
exp r1.w, r1.w
mad r1.w, r1.w, r4.y, cb0[26].z
add r2.w, -r1.w, cb0[27].y
mad r1.w, r6.z, r2.w, r1.w
mul r2.w, r5.w, r5.y
add r4.xy, -r1.wwww, cb0[27].zwzz
mad r4.z, r2.w, r4.x, r1.w
mul r5.x, r5.z, r6.y
add r5.z, -r4.z, cb0[27].w
mad r4.z, r5.x, r5.z, r4.z
add r5.z, r1.w, -r4.z
mad r4.z, v6.x, r5.z, r4.z
mad r4.x, r5.y, r4.x, r1.w
add r4.x, -r4.z, r4.x
mad r4.x, v6.y, r4.x, r4.z
mad r1.w, r6.y, r4.y, r1.w
add r1.w, -r4.x, r1.w
mad r1.w, v6.z, r1.w, r4.x
add r4.x, -cb0[28].x, cb0[28].y
mad r4.x, r6.z, r4.x, cb0[28].x
add r4.yz, -r4.xxxx, cb0[28].zzwz
mad r2.w, r2.w, r4.y, r4.x
add r5.z, -r2.w, cb0[28].w
mad r2.w, r5.x, r5.z, r2.w
add r5.x, -r2.w, r4.x
mad r2.w, v6.x, r5.x, r2.w
mad r4.y, r5.y, r4.y, r4.x
add r4.y, -r2.w, r4.y
mad r2.w, v6.y, r4.y, r2.w
mad r4.x, r6.y, r4.z, r4.x
add r4.x, -r2.w, r4.x
mad r2.w, v6.z, r4.x, r2.w
log r3.w, |r3.w|
mul r3.w, r3.w, cb0[29].y
exp r3.w, r3.w
min r3.w, r3.w, l(1.000000)
log r3.w, r3.w
mul r3.w, r3.w, cb0[29].z
exp r3.w, r3.w
mul o0.w, r3.w, v6.w
eq r3.w, cb5[0].x, l(1.000000)
if_nz r3.w
  eq r3.w, cb5[0].y, l(1.000000)
  mul r4.xyz, v3.wwww, cb5[2].xyzx
  mad r4.xyz, cb5[1].xyzx, v2.wwww, r4.xyzx
  mad r4.xyz, cb5[3].xyzx, v4.wwww, r4.xyzx
  add r4.xyz, r4.xyzx, cb5[4].xyzx
  movc r4.xyz, r3.wwww, r4.xyzx, r0.xyzx
  add r4.xyz, r4.xyzx, -cb5[6].xyzx
  mul r5.yzw, r4.xxyz, cb5[5].xxyz
  mad r3.w, r5.y, l(0.250000), l(0.750000)
  mad r4.x, cb5[0].z, l(0.500000), l(0.750000)
  max r5.x, r3.w, r4.x
  sample_indexable(texture3d)(float,float,float,float) r5.xyzw, r5.xzwx, t11.xyzw, s1
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
dp3 r4.x, v2.xyzx, r3.xyzx
dp3 r4.y, v3.xyzx, r3.xyzx
dp3 r4.z, v4.xyzx, r3.xyzx
dp3 r3.x, r4.xyzx, r4.xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, r4.xyzx
add r4.x, -r2.w, l(1.000000)
dp3 r4.y, -r2.xyzx, r3.xyzx
add r4.y, r4.y, r4.y
mad r5.xyz, r3.xyzx, -r4.yyyy, -r2.xyzx
mul r6.xyz, r3.wwww, cb0[2].xyzx
lt r3.w, l(0.000000), cb4[2].w
if_nz r3.w
  dp3 r3.w, r5.xyzx, r5.xyzx
  rsq r3.w, r3.w
  mul r9.xyz, r3.wwww, r5.xyzx
  add r10.xyz, -r0.xyzx, cb4[0].xyzx
  div r10.xyz, r10.xyzx, r9.xyzx
  add r11.xyz, -r0.xyzx, cb4[1].xyzx
  div r11.xyz, r11.xyzx, r9.xyzx
  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  min r3.w, r10.y, r10.x
  min r3.w, r10.z, r3.w
  add r10.xyz, r0.xyzx, -cb4[2].xyzx
  mad r9.xyz, r9.xyzx, r3.wwww, r10.xyzx
else
  mov r9.xyz, r5.xyzx
endif
mad r3.w, -r4.x, l(0.700000), l(1.700000)
mul r3.w, r3.w, r4.x
mul r3.w, r3.w, l(6.000000)
sample_l_indexable(texturecube)(float,float,float,float) r9.xyzw, r9.xyzx, t9.xyzw, s0, r3.w
add r4.y, r9.w, l(-1.000000)
mad r4.y, cb4[3].w, r4.y, l(1.000000)
log r4.y, r4.y
mul r4.y, r4.y, cb4[3].y
exp r4.y, r4.y
mul r4.y, r4.y, cb4[3].x
mul r10.xyz, r9.xyzx, r4.yyyy
lt r4.z, cb4[1].w, l(0.999990)
if_nz r4.z
  lt r4.z, l(0.000000), cb4[6].w
  if_nz r4.z
    dp3 r4.z, r5.xyzx, r5.xyzx
    rsq r4.z, r4.z
    mul r11.xyz, r4.zzzz, r5.xyzx
    add r12.xyz, -r0.xyzx, cb4[4].xyzx
    div r12.xyz, r12.xyzx, r11.xyzx
    add r13.xyz, -r0.xyzx, cb4[5].xyzx
    div r13.xyz, r13.xyzx, r11.xyzx
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
    min r4.z, r12.y, r12.x
    min r4.z, r12.z, r4.z
    add r0.xyz, r0.xyzx, -cb4[6].xyzx
    mad r5.xyz, r11.xyzx, r4.zzzz, r0.xyzx
  endif
  sample_l_indexable(texturecube)(float,float,float,float) r5.xyzw, r5.xyzx, t10.xyzw, s0, r3.w
  add r0.x, r5.w, l(-1.000000)
  mad r0.x, cb4[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb4[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r5.xyzx, r0.xxxx
  mad r5.xyz, r4.yyyy, r9.xyzx, -r0.xyzx
  mad r10.xyz, cb4[1].wwww, r5.xyzx, r0.xyzx
endif
mul r0.xyz, r10.xyzx, cb0[29].xxxx
max r3.w, r1.w, r1.w
max r3.w, r1.w, r3.w
add r3.w, -r3.w, l(1.000000)
mul r5.xyz, r3.wwww, r7.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r3.xyzx, r2.xyzx
dp3_sat r2.x, r3.xyzx, cb2[0].xyzx
dp3_sat r2.y, r3.xyzx, r1.xyzx
dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
mul r1.y, r1.x, r1.x
dp2 r1.y, r1.yyyy, r4.xxxx
add r1.y, r1.y, l(-0.500000)
add r1.z, -r2.x, l(1.000000)
mul r2.z, r1.z, r1.z
mul r2.z, r2.z, r2.z
mul r1.z, r1.z, r2.z
mad r1.z, r1.y, r1.z, l(1.000000)
add r2.z, -|r0.w|, l(1.000000)
mul r3.x, r2.z, r2.z
mul r3.x, r3.x, r3.x
mul r2.z, r2.z, r3.x
mad r1.y, r1.y, r2.z, l(1.000000)
mul r1.y, r1.y, r1.z
mul r1.y, r2.x, r1.y
mul r1.z, r4.x, r4.x
max r1.z, r1.z, l(0.002000)
add r3.x, -r1.z, l(1.000000)
mad r3.y, |r0.w|, r3.x, r1.z
mad r3.x, r2.x, r3.x, r1.z
mul r0.w, |r0.w|, r3.x
mad r0.w, r2.x, r3.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r3.x, r1.z, r1.z
mad r3.y, r2.y, r3.x, -r2.y
mad r2.y, r3.y, r2.y, l(1.000000)
mul r3.x, r3.x, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r3.x, r2.y
mul r0.w, r0.w, r2.y
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.x, r0.w
max r0.w, r0.w, l(0.000000)
mad r1.z, r1.z, r1.z, l(1.000000)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
dp3 r2.x, r1.wwww, r1.wwww
ne r2.x, r2.x, l(0.000000)
and r2.x, r2.x, l(0x3f800000)
mul r0.w, r0.w, r2.x
add r2.x, -r3.w, l(1.000000)
add_sat r2.x, r2.x, r2.w
mul r3.xyz, r1.yyyy, r6.xyzx
mul r4.xyz, r6.xyzx, r0.wwww
add r0.w, -r1.x, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.xyzw, r0.xyzw, r1.zzzx
add r1.x, -r1.w, l(1.000000)
mad r0.w, r1.x, r0.w, r1.w
mul r4.xyz, r0.wwww, r4.xyzx
mad r3.xyz, r5.xyzx, r3.xyzx, r4.xyzx
add r0.w, -r1.w, r2.x
mad r0.w, r2.z, r0.w, r1.w
mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
mad r0.xyz, r4.wwww, r8.xyzx, r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
ret
// Approximately 0 instruction slots used