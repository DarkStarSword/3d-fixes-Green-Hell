// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 807d43adc3927aa3-ps.txt
// 3DMigoto: 807d43adc3927aa3 |    Unity headers extracted from Amplify_item_selection
//    Shader "Amplify/item_selection" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IsEmissive"="true" "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "IsEmissive"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_item_selection:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 196 6 6
//   undeciphered1a: 14
//   Keywords { "DIRECTIONAL" "FOG_LINEAR" }
//   undeciphered2: 1 8 6 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 256
//   Vector 32 [_LightColor0]
//   Vector 64 [_Normals_ST]
//   Float 80 [_DetailNormalPower]
//   Vector 96 [_Detail_Normal_ST]
//   Vector 112 [_Albedo_ST]
//   Float 128 [_Select_Emission]
//   Float 132 [_EmissionONOFF]
//   Vector 144 [_EmissionColor]
//   Vector 160 [_EmissionMask_ST]
//   Float 176 [_RimPower]
//   Vector 192 [_RimColor]
//   Vector 208 [_Metallic_ST]
//   Float 224 [_SmoothnessfromMetalic]
//   Float 228 [_SmthPower]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_Normals] 2D 2
//   SetTexture 1 [_Detail_Normal] 2D 3
//   SetTexture 2 [_Albedo] 2D 4
//   SetTexture 3 [_EmissionMask] 2D 5
//   SetTexture 4 [_Metallic] 2D 6
//   SetTexture 5 [unity_SpecCube0] CUBE 0
//   SetTexture 6 [unity_SpecCube1] CUBE -1
//   SetTexture 7 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityReflectionProbes" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:29:51 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 5     z         1     NONE   float     z
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 6   xyzw        5     NONE   float
// TEXCOORD                 7   xyzw        6     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 807d43adc3927aa3-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mul r3.xyz, r2.yyyy, v3.xyzx
mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
mad r4.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
sample r4.xyzw, r4.xyxx, t0.xyzw, s2
mul r4.x, r4.w, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r4.xyxx, r4.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r4.z, r1.w
mad r5.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
sample r5.xyzw, r5.xyxx, t1.xyzw, s3
mul r5.x, r5.w, r5.x
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r5.zw, r5.xxxy, cb0[5].xxxx
dp2 r1.w, r5.zwzz, r5.zwzz
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.w, r1.w
mad r5.xy, r5.xyxx, cb0[5].xxxx, r4.xyxx
mul r5.z, r1.w, r4.z
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r5.xyzx
mad r6.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
sample r6.xyzw, r6.xyxx, t2.xyzw, s4
mad r7.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
sample r7.xyzw, r7.xyxx, t3.xyzw, s5
mul r7.x, r7.w, r7.x
mad r7.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r7.xyxx, r7.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r7.z, r1.w
mad r7.xyz, r7.xyzx, -cb0[9].xyzx, cb0[9].xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
dp3_sat r1.w, r4.xyzx, r3.xyzx
mul r3.xyz, r7.xyzx, cb0[8].yyyy
add r1.w, -r1.w, l(1.000000)
log r1.w, r1.w
mul r1.w, r1.w, cb0[11].x
exp r1.w, r1.w
mad r4.xyz, r1.wwww, cb0[12].xyzx, -r3.xyzx
mad r3.xyz, cb0[8].xxxx, r4.xyzx, r3.xyzx
mad r4.xy, v1.xyxx, cb0[13].xyxx, cb0[13].zwzz
sample r4.xyzw, r4.xyxx, t4.xyzw, s6
add r1.w, -r6.w, r4.w
mad r1.w, cb0[14].x, r1.w, r6.w
eq r2.w, cb5[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb5[0].y, l(1.000000)
  mul r4.yzw, v3.wwww, cb5[2].xxyz
  mad r4.yzw, cb5[1].xxyz, v2.wwww, r4.yyzw
  mad r4.yzw, cb5[3].xxyz, v4.wwww, r4.yyzw
  add r4.yzw, r4.yyzw, cb5[4].xxyz
  movc r4.yzw, r2.wwww, r4.yyzw, r0.xxyz
  add r4.yzw, r4.yyzw, -cb5[6].xxyz
  mul r7.yzw, r4.yyzw, cb5[5].xxyz
  mad r2.w, r7.y, l(0.250000), l(0.750000)
  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  max r7.x, r2.w, r3.w
  sample r7.xyzw, r7.xzwx, t7.xyzw, s1
else
  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r7.xyzw, cb2[46].xyzw
dp3 r7.x, v2.xyzx, r5.xyzx
dp3 r7.y, v3.xyzx, r5.xyzx
dp3 r7.z, v4.xyzx, r5.xyzx
dp3 r3.w, r7.xyzx, r7.xyzx
rsq r3.w, r3.w
mul r4.yzw, r3.wwww, r7.xxyz
mad r3.w, -r1.w, cb0[14].y, l(1.000000)
dp3 r5.x, -r2.xyzx, r4.yzwy
add r5.x, r5.x, r5.x
mad r5.xyz, r4.yzwy, -r5.xxxx, -r2.xyzx
mul r7.xyz, r2.wwww, cb0[2].xyzx
lt r2.w, l(0.000000), cb4[2].w
if_nz r2.w
  dp3 r2.w, r5.xyzx, r5.xyzx
  rsq r2.w, r2.w
  mul r8.xyz, r2.wwww, r5.xyzx
  add r9.xyz, -r0.xyzx, cb4[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r0.xyzx, cb4[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r2.w, r9.y, r9.x
  min r2.w, r9.z, r2.w
  add r9.xyz, r0.xyzx, -cb4[2].xyzx
  mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
else
  mov r8.xyz, r5.xyzx
endif
mad r2.w, -r3.w, l(0.700000), l(1.700000)
mul r2.w, r2.w, r3.w
mul r2.w, r2.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t5.xyzw, s0, r2.w
add r5.w, r8.w, l(-1.000000)
mad r5.w, cb4[3].w, r5.w, l(1.000000)
log r5.w, r5.w
mul r5.w, r5.w, cb4[3].y
exp r5.w, r5.w
mul r5.w, r5.w, cb4[3].x
mul r9.xyz, r8.xyzx, r5.wwww
lt r6.w, cb4[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb4[6].w
  if_nz r6.w
    dp3 r6.w, r5.xyzx, r5.xyzx
    rsq r6.w, r6.w
    mul r10.xyz, r5.xyzx, r6.wwww
    add r11.xyz, -r0.xyzx, cb4[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r0.xyzx, cb4[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r6.w, r11.y, r11.x
    min r6.w, r11.z, r6.w
    add r0.xyz, r0.xyzx, -cb4[6].xyzx
    mad r5.xyz, r10.xyzx, r6.wwww, r0.xyzx
  endif
  sample_l r10.xyzw, r5.xyzx, t6.xyzw, s0, r2.w
  add r0.x, r10.w, l(-1.000000)
  mad r0.x, cb4[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb4[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r10.xyzx, r0.xxxx
  mad r5.xyz, r5.wwww, r8.xyzx, -r0.xyzx
  mad r9.xyz, cb4[1].wwww, r5.xyzx, r0.xyzx
endif
add r0.xyz, r6.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r0.xyz, r4.xxxx, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r2.w, -r4.x, l(0.960000), l(0.960000)
mul r5.xyz, r2.wwww, r6.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r4.yzwy, r2.xyzx
dp3_sat r2.x, r4.yzwy, cb2[0].xyzx
dp3_sat r2.y, r4.yzwy, r1.xyzx
dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
mul r1.y, r1.x, r1.x
dp2 r1.y, r1.yyyy, r3.wwww
add r1.y, r1.y, l(-0.500000)
add r1.z, -r2.x, l(1.000000)
mul r2.z, r1.z, r1.z
mul r2.z, r2.z, r2.z
mul r1.z, r1.z, r2.z
mad r1.z, r1.y, r1.z, l(1.000000)
add r2.z, -|r0.w|, l(1.000000)
mul r4.x, r2.z, r2.z
mul r4.x, r4.x, r4.x
mul r2.z, r2.z, r4.x
mad r1.y, r1.y, r2.z, l(1.000000)
mul r1.y, r1.y, r1.z
mul r1.y, r2.x, r1.y
mul r1.z, r3.w, r3.w
max r1.z, r1.z, l(0.002000)
add r3.w, -r1.z, l(1.000000)
mad r4.x, |r0.w|, r3.w, r1.z
mad r3.w, r2.x, r3.w, r1.z
mul r0.w, |r0.w|, r3.w
mad r0.w, r2.x, r4.x, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r3.w, r1.z, r1.z
mad r4.x, r2.y, r3.w, -r2.y
mad r2.y, r4.x, r2.y, l(1.000000)
mul r3.w, r3.w, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r3.w, r2.y
mul r0.w, r0.w, r2.y
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.x, r0.w
max r0.w, r0.w, l(0.000000)
mad r1.z, r1.z, r1.z, l(1.000000)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
dp3 r2.x, r0.xyzx, r0.xyzx
ne r2.x, r2.x, l(0.000000)
and r2.x, r2.x, l(0x3f800000)
mul r0.w, r0.w, r2.x
mad r1.w, r1.w, cb0[14].y, -r2.w
add_sat r1.w, r1.w, l(1.000000)
mul r2.xyw, r1.yyyy, r7.xyxz
mul r4.xyz, r7.xyzx, r0.wwww
add r0.w, -r1.x, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.w, r0.w, r1.x
add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r6.xyz, r6.xyzx, r0.wwww, r0.xyzx
mul r4.xyz, r4.xyzx, r6.xyzx
mad r2.xyw, r5.xyxz, r2.xyxw, r4.xyxz
mul r1.xyz, r9.xyzx, r1.zzzz
add r4.xyz, -r0.xyzx, r1.wwww
mad r0.xyz, r2.zzzz, r4.xyzx, r0.xyzx
mad r0.xyz, r1.xyzx, r0.xyzx, r2.xywx
add r0.xyz, r3.xyzx, r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used