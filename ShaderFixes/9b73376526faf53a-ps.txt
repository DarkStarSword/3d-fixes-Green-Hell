// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9b73376526faf53a-ps.txt
// 3DMigoto: 9b73376526faf53a |    Unity headers extracted from DynamicFog_Opaque_Unlit Solid Color
//    Shader "DynamicFog/Opaque/Unlit Solid Color" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/1 {
//          Tags { "RenderType"="Opaque" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from DynamicFog_Opaque_Unlit Solid Color:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 74 0 4
//   undeciphered1a: 5
//   undeciphered2: 1 0 2 0 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 96
//   Vector 32 [_Color]
//   Vector 48 [_FogData]
//   Vector 64 [_FogColor]
//   Float 80 [_FogData2]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:45:55 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_input_ps linear v1.xyz
dcl_output o0.xyzw
dcl_temps 7
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 9b73376526faf53a-ps.txt

mul r5.w, -r5.x, r5.y
mad r6.xyz, -r5.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.x, cb0[3].y, l(0.000100)
add r0.y, -r0.x, r6.y
ge r0.w, cb0[3].x, r0.y
ge r1.x, cb0[3].x, v1.y
or r0.w, r0.w, r1.x
if_nz r0.w
  mov r0.xz, r6.xxzx
  add r1.xyz, -r0.xyzx, v1.xyzx
  dp2 r0.w, r1.xzxx, r1.xzxx
  sqrt r0.w, r0.w
  div r2.xy, r1.xzxx, r0.wwww
  div r0.w, r0.w, r1.y
  min r3.y, r0.y, cb0[3].x
  add r1.w, r0.y, -r3.y
  mul r1.w, r0.w, r1.w
  mad r3.xz, -r2.xxyx, r1.wwww, r6.xxzx
  dp3 r1.x, r1.xyzx, r1.xyzx
  sqrt r1.x, r1.x
  add r4.xyz, -r0.xyzx, r3.xyzx
  dp3 r0.x, r4.xyzx, r4.xyzx
  sqrt r0.x, r0.x
  lt r0.z, r0.x, r1.x
  if_nz r0.z
    lt r0.z, l(0.000000), r0.w
    lt r1.z, l(-0.500000), v1.y
    and r0.z, r0.z, r1.z
    lt r1.z, r0.w, l(0.000000)
    lt r1.w, v1.y, l(0.500000)
    and r1.z, r1.w, r1.z
    and r1.z, r1.z, v1.y
    movc r4.y, r0.z, cb0[3].x, r1.z
    add r0.y, -r0.y, r4.y
    mul r0.y, r0.y, r0.w
    mad r4.xz, -r2.xxyx, r0.yyyy, r6.xxzx
    add r0.yzw, r3.xxyz, -r4.xxyz
    dp3 r0.y, r0.yzwy, r0.yzwy
    sqrt r0.y, r0.y
    add r0.z, -r0.x, r1.x
    min r0.y, r0.z, r0.y
    lt r0.z, l(0.000000), r0.y
    div r0.w, r1.y, r1.x
    mul r0.w, r0.y, r0.w
    add r1.x, -r3.y, cb0[3].x
    mul r1.y, cb0[3].w, cb0[3].x
    div r1.x, r1.x, r1.y
    add r1.x, r1.x, l(-0.100000)
    add r1.z, r0.x, -cb0[3].z
    div r1.z, r1.z, cb0[5].x
    min_sat r1.x, r1.z, r1.x
    mul r2.w, r1.x, cb0[4].w
    mul r2.xyz, r2.wwww, cb0[4].xyzx
    mad r1.z, r0.w, l(0.500000), r3.y
    mad r0.x, r0.y, l(0.500000), r0.x
    add r1.w, -r1.z, cb0[3].x
    div r1.w, r1.w, r1.y
    add r1.w, r1.w, l(-0.100000)
    add r3.x, r0.x, -cb0[3].z
    div r3.x, r3.x, cb0[5].x
    min_sat r1.w, r1.w, r3.x
    mul r3.w, r1.w, cb0[4].w
    mul r3.xyz, r3.wwww, cb0[4].xyzx
    mad r1.x, -cb0[4].w, r1.x, l(1.000000)
    mad r2.xyzw, r3.xyzw, r1.xxxx, r2.xyzw
    mad r0.w, r0.w, l(0.500000), r1.z
    mad r0.x, r0.y, l(0.500000), r0.x
    add r0.y, -r0.w, cb0[3].x
    div r0.y, r0.y, r1.y
    add r0.y, r0.y, l(-0.100000)
    add r0.x, r0.x, -cb0[3].z
    div r0.x, r0.x, cb0[5].x
    min_sat r0.x, r0.x, r0.y
    mul r1.w, r0.x, cb0[4].w
    mul r1.xyz, r1.wwww, cb0[4].xyzx
    add r0.x, -r2.w, l(1.000000)
    mad r1.xyzw, r1.xyzw, r0.xxxx, r2.xyzw
    mul r2.xyzw, r1.xyzw, cb0[4].wwww
    mad r0.x, -r1.w, cb0[4].w, l(1.000000)
    mad r1.xyzw, cb0[2].xyzw, r0.xxxx, r2.xyzw
    movc o0.xyzw, r0.zzzz, r1.xyzw, cb0[2].xyzw
  else
    mov o0.xyzw, cb0[2].xyzw
  endif
else
  mov o0.xyzw, cb0[2].xyzw
endif
ret
// Approximately 0 instruction slots used