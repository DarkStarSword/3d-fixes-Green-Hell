// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 99ddc3cb16484970-ps.txt
// 3DMigoto: 99ddc3cb16484970 |    Unity headers extracted from VolumetricFogAndMist_VolumetricFog
//    Shader "VolumetricFogAndMist/VolumetricFog" {
//      SubShader 1/1 {
//        Pass 4/5 {
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from VolumetricFogAndMist_VolumetricFog:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 180 2 10
//   undeciphered1a: 27
//   Keywords { "FOG_AREA_BOX" "FOG_VOID_SPHERE" "FOG_USE_XY_PLANE" "FOG_POINT_LIGHT5" "FOG_SUN_SHADOWS_ON" }
//   undeciphered2: 1 3 2 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 768
//   Vector 64 [_CameraDepthTexture_TexelSize]
//   Float 172 [_FogAlpha]
//   Vector 176 [_Color] 3
//   Vector 192 [_FogDistance]
//   Vector 208 [_FogData]
//   Vector 224 [_FogWindDir] 3
//   Vector 240 [_FogStepping]
//   Vector 272 [_FogVoidPosition] 3
//   Vector 288 [_FogVoidData]
//   Vector 304 [_FogAreaPosition] 3
//   Vector 320 [_FogAreaData]
//   Vector 336 [_FogPointLightPosition0] 3
//   Vector 352 [_FogPointLightColor0] 3
//   Vector 368 [_FogPointLightPosition1] 3
//   Vector 384 [_FogPointLightColor1] 3
//   Vector 400 [_FogPointLightPosition2] 3
//   Vector 416 [_FogPointLightColor2] 3
//   Vector 432 [_FogPointLightPosition3] 3
//   Vector 448 [_FogPointLightColor3] 3
//   Vector 464 [_FogPointLightPosition4] 3
//   Vector 480 [_FogPointLightColor4] 3
//   Vector 496 [_FogPointLightPosition5] 3
//   Vector 512 [_FogPointLightColor5] 3
//   Vector 544 [_SunDir] 3
//   Vector 560 [_SunColor] 3
//   Vector 592 [_FogScatteringData2]
//   Vector 688 [_VolumetricFogSunWorldPos]
//   Vector 704 [_VolumetricFogSunShadowsData]
//   Float 720 [_Jitter]
//   Matrix 624 [_VolumetricFogSunProj]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 96 [_ScreenParams]
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 1
//   SetTexture 1 [_NoiseTex] 2D 0
//   SetTexture 2 [_VolumetricFogSunDepthTexture] 2D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:44:51 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[46], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 29
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r27.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 99ddc3cb16484970-ps.txt

mul r27.w, -r27.x, r27.y
mad r28.xyz, -r27.wwww, cb10[0].xyzw, cb1[4].xyzw

mad r0.xyzw, cb0[4].xyxy, l(0.000000, -0.750000, 0.000000, 0.750000), v1.zwzw
sample r1.xyzw, r0.xyxx, t0.xyzw, s1
sample r0.xyzw, r0.zwzz, t0.xyzw, s1
max r0.x, r0.x, r1.x
mad r0.x, cb1[7].x, r0.x, cb1[7].y
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r1.z, -cb0[13].x, r28.z
mov r1.xy, r28.xyxx
mad r0.xyz, v2.xyzx, r0.xxxx, r1.xyzx
add r1.w, r0.z, l(0.000010)
lt r2.xy, cb0[13].yyyy, r1.zwzz
and r2.x, r2.y, r2.x
lt r2.y, r1.z, -cb0[13].y
lt r1.w, r1.w, -cb0[13].y
and r1.w, r1.w, r2.y
or r1.w, r1.w, r2.x
if_z r1.w
  add r0.w, r0.z, l(0.000010)
  add r0.xyz, -r1.xyzx, r0.xywx
  dp3 r0.w, r0.xyzx, r0.xyzx
  sqrt r0.w, r0.w
  add r2.xyz, r1.xyzx, -cb0[19].xyzx
  div r3.xyz, r0.wwww, r0.xyzx
  div r4.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[20].xyzx
  add r5.xyz, -r2.xyzx, -r4.xyzx
  mul r5.xyz, r3.xyzx, r5.xyzx
  add r2.xyz, -r2.xyzx, r4.xyzx
  mul r2.xyz, r2.xyzx, r3.xyzx
  min r4.xyz, r5.xyzx, r2.xyzx
  max r4.xy, r4.yzyy, r4.xxxx
  max r1.w, r4.y, r4.x
  max r1.w, r1.w, l(0.000000)
  max r2.xyz, r5.xyzx, r2.xyzx
  min r2.xy, r2.yzyy, r2.xxxx
  min r2.x, r2.y, r2.x
  min r2.y, r0.w, cb0[12].z
  min r2.x, r2.y, r2.x
  add r2.x, -r1.w, r2.x
  lt r2.z, l(0.000000), r2.x
  if_nz r2.z
    div r3.xyz, r1.wwww, r3.xyzx
    add r3.xyz, r1.xyzx, r3.xyzx
    mul r1.xyz, r0.xyzx, r2.xxxx
    div r1.xyz, r1.xyzx, r0.wwww
    add r1.xyz, r1.xyzx, r3.xyzx
    add r1.xyz, -r1.xyzx, cb0[17].xyzx
    dp3 r1.x, r1.xyzx, r1.xyzx
    sqrt r1.x, r1.x
    mad r1.x, r1.x, cb0[18].x, l(-1.000000)
    mad_sat r1.x, cb0[18].w, r1.x, l(1.000000)
    lt r1.y, l(0.000000), r1.x
    if_nz r1.y
      mul r1.yz, v1.xxyx, cb1[6].xxyx
      dp2 r1.y, l(2.40845060, 3.25352120, 0.000000, 0.000000), r1.yzyy
      frc r1.y, r1.y
      add r1.y, r1.y, l(-0.500000)
      div r2.zw, cb0[20].xxxy, cb0[13].wwww
      log r1.z, r2.x
      mul r1.z, r1.z, l(0.693147182)
      max r1.z, r1.z, l(0.000000)
      mad r1.z, r1.z, cb0[15].x, l(0.100000)
      mul r1.z, r1.z, cb0[13].z
      mul_sat r4.x, r2.y, cb0[15].y
      mul r1.z, r1.z, r4.x
      add r2.y, -r1.w, r2.y
      max r1.z, r1.z, l(0.010000)
      mul r4.xyz, r0.xyzx, r1.zzzz
      div r4.xyz, r4.xyzx, r0.wwww
      div r1.z, r2.x, r1.z
      add r5.xyz, r3.xyzx, -cb0[21].xyzx
      add r6.xyz, r3.xyzx, -cb0[23].xyzx
      add r7.xyz, r3.xyzx, -cb0[25].xyzx
      add r8.xyz, r3.xyzx, -cb0[27].xyzx
      add r9.xyz, r3.xyzx, -cb0[29].xyzx
      add r10.xyz, r3.xyzx, -cb0[31].xyzx
      mul r11.xy, r4.xyxx, cb0[13].wwww
      mul r4.w, cb0[13].z, cb0[13].y
      div r11.z, r4.z, r4.w
      add r12.xy, r3.xyxx, cb0[14].xzxx
      mul r12.xy, r12.xyxx, cb0[13].wwww
      div r4.w, r3.z, r4.w
      add r12.zw, cb0[14].xxxy, cb0[19].xxxy
      frc r5.w, r1.y
      mad r1.z, r5.w, cb0[45].x, r1.z
      add r3.w, r3.z, cb0[13].x
      mul r13.xyz, r3.yyyy, cb0[40].xywx
      mad r13.xyz, cb0[39].xywx, r3.xxxx, r13.xyzx
      mad r13.xyz, cb0[41].xywx, r3.wwww, r13.xyzx
      add r13.xyz, r13.xyzx, cb0[42].xywx
      div r13.xy, r13.xyxx, r13.zzzz
      mad r13.xy, r13.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mad r1.y, r1.y, cb0[44].y, l(1.000000)
      mul r1.y, r1.y, r2.x
      mul r14.xyz, r0.xyzx, r1.yyyy
      div r14.xyz, r14.xyzx, r0.wwww
      add r14.xyz, r3.xywx, r14.xyzx
      mul r15.xyz, r14.yyyy, cb0[40].xywx
      mad r15.xyz, cb0[39].xywx, r14.xxxx, r15.xyzx
      mad r15.xyz, cb0[41].xywx, r14.zzzz, r15.xyzx
      add r15.xyz, r15.xyzx, cb0[42].xywx
      div r13.zw, r15.xxxy, r15.zzzz
      mad r13.zw, r13.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r1.y, -r1.w, cb0[43].w
      mul_sat r1.y, r1.y, l(0.0285714287)
      mul r1.y, r1.y, cb0[44].x
      div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
      ge r2.x, r2.x, r2.y
      and r2.x, r2.x, l(0x3f800000)
      add r13.xy, -r13.zwzz, r13.xyxx
      add r3.xyz, r3.xywx, -r14.xyzx
      mov r15.xyzw, l(0,0,0,0)
      mov r16.xyz, r5.xyzx
      mov r17.xyz, r6.xyzx
      mov r18.xyz, r7.xyzx
      mov r19.xyz, r8.xyzx
      mov r20.xyz, r9.xyzx
      mov r21.xyz, r10.xyzx
      mov r23.xy, r12.xyxx
      mov r2.y, r1.z
      mov r23.z, r4.w
      mov r22.xyzw, l(0,0,0,0)
      loop
        ge r3.w, l(1.000000), r2.y
        breakc_nz r3.w
        mad r24.xy, r12.zwzz, cb0[13].wwww, -r23.xyxx
        mul r24.xy, r2.zwzz, |r24.xyxx|
        max r3.w, r24.y, r24.x
        sample_l r24.xyzw, r23.xyxx, t1.xyzw, s0, l(0.000000)
        mad r3.w, r3.w, cb0[20].w, |r23.z|
        add r3.w, -r3.w, r24.w
        lt r5.w, l(0.000000), r3.w
        if_nz r5.w
          add r5.w, -r3.w, l(1.000000)
          mul r25.xyz, r5.wwww, cb0[11].xyzx
          mul r25.w, r3.w, l(0.400000)
          mul r3.w, r1.w, r2.y
          mad r26.xy, r3.wwww, r13.xyxx, r13.zwzz
          sample_l r26.xyzw, r26.xyxx, t2.xyzw, s2, l(0.000000)
          dp4 r5.w, r26.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
          div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
          mad r26.xyz, r3.wwww, r3.xyzx, r14.xyzx
          add r26.xyz, r26.xyzx, -cb0[43].xyzx
          dp3 r3.w, r26.xyzx, r26.xyzx
          sqrt r3.w, r3.w
          add_sat r3.w, -r3.w, r5.w
          mul r5.w, r1.y, r22.w
          add r3.w, r3.w, l(-1.000000)
          mad r5.w, r5.w, r3.w, l(1.000000)
          mad r3.w, cb0[44].z, r3.w, l(1.000000)
          mul r25.xyzw, r3.wwww, r25.xyzw
          dp3 r3.w, r16.xyzx, r16.xyzx
          div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
          dp3 r6.w, r17.xyzx, r17.xyzx
          div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
          dp3 r7.w, r18.xyzx, r18.xyzx
          div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
          dp3 r8.w, r19.xyzx, r19.xyzx
          div r8.w, l(1.000000, 1.000000, 1.000000, 1.000000), r8.w
          dp3 r9.w, r20.xyzx, r20.xyzx
          div r9.w, l(1.000000, 1.000000, 1.000000, 1.000000), r9.w
          dp3 r10.w, r21.xyzx, r21.xyzx
          div r10.w, l(1.000000, 1.000000, 1.000000, 1.000000), r10.w
          mul r26.xyz, r9.wwww, cb0[30].xyzx
          mad r26.xyz, cb0[32].xyzx, r10.wwww, r26.xyzx
          mad r26.xyz, cb0[28].xyzx, r8.wwww, r26.xyzx
          mad r26.xyz, cb0[26].xyzx, r7.wwww, r26.xyzx
          mad r26.xyz, cb0[24].xyzx, r6.wwww, r26.xyzx
          mad r26.xyz, cb0[22].xyzx, r3.wwww, r26.xyzx
          mul r26.xyz, r25.wwww, r26.xyzx
          mad r24.xyz, r24.xyzx, r5.wwww, r26.xyzx
          mul r24.xyz, r25.wwww, r24.xyzx
          mul r25.xyz, r24.xyzx, r25.xyzx
          add r3.w, -r22.w, l(1.000000)
          mad r24.xyzw, r25.xyzw, r3.wwww, r22.xyzw
          lt r3.w, l(0.990000), r24.w
          if_nz r3.w
            mov r15.xyzw, r25.xyzw
            mov r22.xyzw, r24.xyzw
            break
          endif
          mov r15.xyzw, r25.xyzw
          mov r22.xyzw, r24.xyzw
        endif
        add r16.xyz, r4.xyzx, r16.xyzx
        add r17.xyz, r4.xyzx, r17.xyzx
        add r18.xyz, r4.xyzx, r18.xyzx
        add r19.xyz, r4.xyzx, r19.xyzx
        add r20.xyz, r4.xyzx, r20.xyzx
        add r21.xyz, r4.xyzx, r21.xyzx
        add r2.y, r2.y, l(-1.000000)
        add r23.xyz, r11.xyzx, r23.xyzx
      endloop
      lt r1.y, r22.w, l(0.990000)
      and r1.y, r1.y, l(0x3f800000)
      add r1.z, -r22.w, l(1.000000)
      mul r1.w, r2.y, r2.x
      mul r1.y, r1.z, r1.y
      mul r1.y, r1.w, r1.y
      mad r2.xyzw, r15.xyzw, r1.yyyy, r22.xyzw
      div r0.xyz, r0.xyzx, r0.wwww
      dp3 r0.x, r0.xyzx, cb0[34].xyzx
      mul r0.x, r0.x, cb0[37].w
      max r0.x, r0.x, l(0.000000)
      mul r0.x, r0.x, r0.x
      mul r0.x, r0.x, r0.x
      mul r0.x, r0.x, r0.x
      mul r0.x, r2.w, r0.x
      add r0.yzw, -r2.xxyz, cb0[35].xxyz
      mad r2.xyz, r0.xxxx, r0.yzwy, r2.xyzx
      mul r0.xyzw, r2.xyzw, cb0[10].wwww
      mul o0.xyzw, r1.xxxx, r0.xyzw
    else
      mov o0.xyzw, l(0,0,0,0)
    endif
  else
    mov o0.xyzw, l(0,0,0,0)
  endif
else
  mov o0.xyzw, l(0,0,0,0)
endif
ret
// Approximately 0 instruction slots used