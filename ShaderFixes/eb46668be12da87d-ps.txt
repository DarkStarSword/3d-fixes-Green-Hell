// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed eb46668be12da87d-ps.txt
// 3DMigoto: eb46668be12da87d |    Unity headers extracted from Custom_Hair
//    Shader "Custom/Hair" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest+0" "RenderType"="TreeTransparentCutout" }
//        Pass 3/5 {
//          Name "DEFERRED"
//          Tags { "LIGHTMODE"="DEFERRED" "QUEUE"="AlphaTest+0" "RenderType"="TreeTransparentCutout" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_Hair:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 98 5 2
//   undeciphered1a: 8
//   Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" }
//   undeciphered2: 1 3 4 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 192
//   Float 64 [_NormalIntensity]
//   Vector 80 [_TillingOffset]
//   Vector 96 [_AlbedoTint]
//   Vector 112 [_AdditionalTint]
//   Vector 128 [_SpecularTint]
//   Float 144 [_AnisotropyX]
//   Float 148 [_AnisotropyY]
//   Float 152 [_SpacularIntensity]
//   Float 156 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_NormalMap] 2D 1
//   SetTexture 1 [_PackRAlbedoGAdditionalMaskBSpecular] 2D 2
//   SetTexture 2 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:26:09 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   x
// TEXCOORD                 4   xyzw        6     NONE   float   xy w
// TEXCOORD                 6   xyzw        7     NONE   float
// TEXCOORD                 7   xyz         8     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 9.000000, 0, 0, 0},
                              { 3.000000, 0, 0, 0},
                              { 11.000000, 0, 0, 0},
                              { 13.000000, 0, 0, 0},
                              { 5.000000, 0, 0, 0},
                              { 15.000000, 0, 0, 0},
                              { 7.000000, 0, 0, 0},
                              { 4.000000, 0, 0, 0},
                              { 12.000000, 0, 0, 0},
                              { 2.000000, 0, 0, 0},
                              { 10.000000, 0, 0, 0},
                              { 16.000000, 0, 0, 0},
                              { 8.000000, 0, 0, 0},
                              { 14.000000, 0, 0, 0},
                              { 6.000000, 0, 0, 0} }
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[42], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.x
dcl_input_ps linear v6.xyw
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed eb46668be12da87d-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

mad r0.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r1.xyzw, r0.xyxx, t0.xyzw, s1
mul r1.x, r1.w, r1.x
mad r0.zw, r1.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r1.xy, r0.zwzz, cb0[4].xxxx
dp2 r0.z, r1.xyxx, r1.xyxx
min r0.z, r0.z, l(1.000000)
add r0.z, -r0.z, l(1.000000)
sqrt r1.z, r0.z
sample r0.xyzw, r0.xyxx, t1.xyzw, s2
mul r2.xyz, r0.xxxx, cb0[6].xyzx
mad r3.xyz, r0.xxxx, cb0[7].xyzx, -r2.xyzx
mad r2.xyz, r0.yyyy, r3.xyzx, r2.xyzx
mov r3.y, v2.w
mov r3.z, v3.w
mov r3.w, v4.w
mad r4.xyz, -r3.yzwy, cb2[0].wwww, cb2[0].xyzx
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mul r4.xyz, r0.xxxx, r4.xyzx
add r5.xyz, -r3.yzwy, r9.xyzx
dp3 r0.x, r5.xyzx, r5.xyzx
rsq r0.x, r0.x
mad r5.xyz, r5.xyzx, r0.xxxx, r4.xyzx
dp3 r0.x, r5.xyzx, r5.xyzx
rsq r0.x, r0.x
mul r5.xyz, r0.xxxx, r5.xyzx
dp3 r6.x, v2.xyzx, r1.xyzx
dp3 r6.y, v3.xyzx, r1.xyzx
dp3 r6.z, v4.xyzx, r1.xyzx
dp3 r0.x, r6.xyzx, r6.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r6.xyzx
mov r6.y, v4.y
mov r6.z, v2.y
mov r6.x, v3.y
mul r7.xyz, r1.zxyz, r6.xyzx
mad r6.xyz, r1.yzxy, r6.yzxy, -r7.xyzx
dp3 r0.x, r6.xyzx, r6.xyzx
rsq r0.x, r0.x
mul r6.xyz, r0.xxxx, r6.xyzx
dp3 r0.x, r5.xyzx, r6.xyzx
mov r6.y, v4.x
mov r6.z, v2.x
mov r6.x, v3.x
mul r7.xyz, r1.zxyz, r6.xyzx
mad r6.xyz, r1.yzxy, r6.yzxy, -r7.xyzx
dp3 r0.y, r6.xyzx, r6.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, r6.xyzx
dp3 r0.y, r5.xyzx, r6.xyzx
div r0.xy, r0.xyxx, cb0[9].xyxx
dp3 r2.w, r1.xyzx, r5.xyzx
dp3 r3.x, r1.xyzx, r4.xyzx
mul r4.xyz, r0.zzzz, cb0[8].xyzx
mul r0.y, r0.y, r0.y
mad r0.x, r0.x, r0.x, r0.y
add r0.y, r2.w, l(1.000000)
div r0.x, r0.x, r0.y
mul r0.x, r0.x, l(-2.885390)
exp r0.x, r0.x
max r0.y, r3.x, l(0.000000)
mul r0.x, r0.y, r0.x
mul r0.xyz, r0.xxxx, r4.xyzx
mul r0.xyz, r0.xyzx, v5.xxxx
mul r0.xyz, r0.xyzx, cb0[9].zzzz
div r4.xy, v6.xyxx, v6.wwww
mul r4.xy, r4.xyxx, cb1[6].xyxx
mul r4.xy, r4.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
ge r4.zw, r4.xxxy, -r4.xxxy
frc r4.xy, |r4.xyxx|
movc r4.xy, r4.zwzz, r4.xyxx, -r4.xyxx
mul r4.xy, r4.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000)
ftoi r4.xy, r4.xyxx
ishl r2.w, r4.y, l(2)
iadd r2.w, r4.x, r2.w
mul r2.w, l(0.062500), icb[r2.w + 0].x
ge r2.w, r0.w, r2.w
and r3.x, r2.w, l(0x3f800000)
movc r2.w, r2.w, l(0), l(1.000000)
mad r0.w, r0.w, r2.w, r3.x
add r0.w, r0.w, -cb0[9].w
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
eq r0.w, cb3[0].x, l(1.000000)
if_nz r0.w
  eq r0.w, cb3[0].y, l(1.000000)
  mul r4.xyz, v3.wwww, cb3[2].xyzx
  mad r4.xyz, cb3[1].xyzx, v2.wwww, r4.xyzx
  mad r4.xyz, cb3[3].xyzx, v4.wwww, r4.xyzx
  add r4.xyz, r4.xyzx, cb3[4].xyzx
  movc r3.xyz, r0.wwww, r4.xyzx, r3.yzwy
  add r3.xyz, r3.xyzx, -cb3[6].xyzx
  mul r3.yzw, r3.xxyz, cb3[5].xxyz
  mul r0.w, r3.y, l(0.250000)
  mul r2.w, cb3[0].z, l(0.500000)
  mad r3.y, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.w, r0.w, r2.w
  min r3.x, r3.y, r0.w
  sample r4.xyzw, r3.xzwx, t2.xyzw, s0
  add r5.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r5.xyzw, r5.xyzx, t2.xyzw, s0
  add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r3.xyzw, r3.xyzx, t2.xyzw, s0
  mov r1.w, l(1.000000)
  dp4 r4.x, r4.xyzw, r1.xyzw
  dp4 r4.y, r5.xyzw, r1.xyzw
  dp4 r4.z, r3.xyzw, r1.xyzw
else
  mov r1.w, l(1.000000)
  dp4 r4.x, cb2[39].xyzw, r1.xyzw
  dp4 r4.y, cb2[40].xyzw, r1.xyzw
  dp4 r4.z, cb2[41].xyzw, r1.xyzw
endif
add r3.xyz, r4.xyzx, v8.xyzx
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
max r0.w, r0.y, r0.x
max r0.w, r0.z, r0.w
add r0.w, -r0.w, l(1.000000)
mul r2.xyz, r0.wwww, r2.xyzx
mul o3.xyz, r3.xyzx, r2.xyzx
mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o0.xyz, r2.xyzx
mov o0.w, l(1.000000)
mov o1.xyz, r0.xyzx
mov o1.w, l(0)
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret
// Approximately 0 instruction slots used