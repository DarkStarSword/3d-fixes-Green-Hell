// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 67be2f325cb349dc-ps.txt
// 3DMigoto: 67be2f325cb349dc |    Unity headers extracted from Relief Pack - GeometryBlend_ Basic
//    Shader "Relief Pack - GeometryBlend/ Basic" {
//      SubShader 1/1 {
//        LOD 700
//        Tags { "QUEUE"="Geometry+12" "RenderType"="Opaque" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+12" "RenderType"="Opaque" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Relief Pack - GeometryBlend_ Basic:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 130 5 2
//   undeciphered1a: 6
//   Keywords { "DIRECTIONAL" "FOG_LINEAR" "RTP_SIMPLE_SHADING" }
//   undeciphered2: 1 5 5 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 32 [_LightColor0]
//   Vector 80 [_Color] 3
//   Float 92 [_GlossMin]
//   Float 96 [_GlossMax]
//   Float 100 [_Metalness]
//   Float 108 [_BumpMapGlobalScale]
//   Float 112 [_BumpMapPerlinBlend]
//   Float 116 [rtp_perlin_start_val]
//   Float 120 [_TERRAIN_distance_start]
//   Float 124 [_TERRAIN_distance_transition]
//   Float 128 [_TERRAIN_distance_start_bumpglobal]
//   Float 132 [_TERRAIN_distance_transition_bumpglobal]
//   Vector 176 [_GlobalColorMapBlendValues]
//   Float 192 [_GlobalColorMapSaturation]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_ColorMapGlobal] 2D 3
//   SetTexture 1 [_MainTex] 2D 1
//   SetTexture 2 [_BumpMap] 2D 2
//   SetTexture 3 [_BumpMapPerlin] 2D 4
//   SetTexture 4 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:15:03 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 8      w        1     NONE   float      w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// COLOR                    0   xyzw        5     NONE   float      w
// TEXCOORD                 4   xyzw        6     NONE   float   xyzw
// TEXCOORD                 5   xyz         7     NONE   float     z
// TEXCOORD                 7   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.w
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.z
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 67be2f325cb349dc-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v4.xyzx, r7.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r1.w, v7.z, -cb0[7].z
div_sat r1.w, r1.w, cb0[7].w
add r1.w, -r1.w, l(1.000000)
add r2.x, v7.z, -cb0[8].x
div_sat r2.x, r2.x, cb0[8].y
mul r1.w, r1.w, r1.w
add r2.y, -cb0[11].y, cb0[11].x
mad r1.w, r1.w, r2.y, cb0[11].y
add r2.y, -r1.w, cb0[11].z
mad r1.w, r2.x, r2.y, r1.w
sample r3.xyzw, v6.zwzz, t0.xyzw, s3
dp3 r2.y, r3.xyzx, l(0.350000, 0.350000, 0.350000, 0.000000)
add r3.xyz, -r2.yyyy, r3.xyzx
mad r2.yzw, cb0[12].xxxx, r3.xxyz, r2.yyyy
sample r3.xyzw, v6.xyxx, t1.xyzw, s1
mul r3.xyz, r3.xyzx, cb0[5].xyzx
add r3.xyz, r3.xyzx, r3.xyzx
add r4.x, -cb0[5].w, cb0[6].x
mad r3.w, r3.w, r4.x, cb0[5].w
mul r2.yzw, r2.yyzw, r3.xxyz
mad r2.yzw, r2.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), -r3.xxyz
mad r2.yzw, r1.wwww, r2.yyzw, r3.xxyz
sample r4.xyzw, v6.xyxx, t2.xyzw, s2
mul r4.x, r4.w, r4.x
mad r3.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r3.z, r1.w
mul r4.xy, v6.xyxx, cb0[6].wwww
sample r4.xyzw, r4.xyxx, t3.xyzw, s4
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r4.xyxx, r4.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r4.z, r1.w
add r1.w, -cb0[7].y, l(1.000000)
mad r1.w, r2.x, r1.w, cb0[7].y
mul r4.xyz, r1.wwww, r4.xyzx
mad r3.xyz, r4.xyzx, cb0[7].xxxx, r3.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
add o0.w, -v5.w, l(1.000000)
eq r1.w, cb4[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb4[0].y, l(1.000000)
  mul r4.xyz, v4.yyyy, cb4[2].xyzx
  mad r4.xyz, cb4[1].xyzx, v4.xxxx, r4.xyzx
  mad r4.xyz, cb4[3].xyzx, v4.zzzz, r4.xyzx
  add r4.xyz, r4.xyzx, cb4[4].xyzx
  movc r4.xyz, r1.wwww, r4.xyzx, v4.xyzx
  add r4.xyz, r4.xyzx, -cb4[6].xyzx
  mul r4.yzw, r4.xxyz, cb4[5].xxyz
  mad r1.w, r4.y, l(0.250000), l(0.750000)
  mad r2.x, cb4[0].z, l(0.500000), l(0.750000)
  max r4.x, r1.w, r2.x
  sample r4.xyzw, r4.xzwx, t4.xyzw, s0
else
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
dp3 r4.x, v1.xyzx, r3.xyzx
dp3 r4.y, v2.xyzx, r3.xyzx
dp3 r4.z, v3.xyzx, r3.xyzx
dp3 r2.x, r4.xyzx, r4.xyzx
rsq r2.x, r2.x
mul r3.xyz, r2.xxxx, r4.xyzx
mul r4.xyz, r1.wwww, cb0[2].xyzx
add r5.xyz, r2.yzwy, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r5.xyz, cb0[6].yyyy, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -cb0[6].y, l(0.960000), l(0.960000)
mul r2.xyz, r1.wwww, r2.yzwy
add r1.w, -r3.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.xyzx, r1.xyzx
dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
dp3_sat r1.y, r3.xyzx, r0.xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
add r0.y, r0.x, r0.x
mul r0.y, r0.x, r0.y
mad r0.y, r0.y, r1.w, l(-0.500000)
add r0.z, -r1.x, l(1.000000)
mul r1.z, r0.z, r0.z
mul r1.z, r1.z, r1.z
mul r0.z, r0.z, r1.z
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.z, -|r0.w|, l(1.000000)
mul r2.w, r1.z, r1.z
mul r2.w, r2.w, r2.w
mul r1.z, r1.z, r2.w
mad r0.y, r0.y, r1.z, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
max r0.z, r0.z, l(0.002000)
add r1.z, -r0.z, l(1.000000)
mad r1.w, |r0.w|, r1.z, r0.z
mad r1.z, r1.x, r1.z, r0.z
mul r0.w, |r0.w|, r1.z
mad r0.w, r1.x, r1.w, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.z, r1.y, r0.z, -r1.y
mad r1.y, r1.z, r1.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.y, r1.y, r1.y, l(1.000000012E-007)
div r0.z, r0.z, r1.y
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r1.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r5.xyzx, r5.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r4.xyzx
mul r0.yzw, r4.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r3.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r3.xyzx, r0.xxxx, r5.xyzx
mul r0.xyz, r0.yzwy, r3.xyzx
mad r0.xyz, r2.xyzx, r1.xyzx, r0.xyzx
div r0.w, v1.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
mul o0.xyz, r0.xyzx, r0.wwww
ret
// Approximately 0 instruction slots used