// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 21e513afbac5f78b-ps.txt
// 3DMigoto: 21e513afbac5f78b |    Unity headers extracted from AdvancedTerrainGrass_Foliage Shader
//    Shader "AdvancedTerrainGrass/Foliage Shader" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "QUEUE"="Geometry+200" "RenderType"="ATGFoliage" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+200" "RenderType"="ATGFoliage" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from AdvancedTerrainGrass_Foliage Shader:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 201802150 127 3 2
//   undeciphered1a: 9
//   Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" "PROCEDURAL_INSTANCING_ON" "_SPECULARHIGHLIGHTS_OFF" }
//   undeciphered2: 1 4 5 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 288
//   Vector 32 [_LightColor0]
//   Float 244 [_Cutoff]
//   Float 248 [_TransPower]
//   Float 252 [_TransStrength]
//   Vector 256 [_SpecularReflectivity] 3
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 16 [_LightPositionRange]
//   Vector 32 [_LightProjectionParams]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_SpecTex] 2D 3
//   SetTexture 2 [_LightTexture0] 2D 1
//   SetTexture 3 [_ShadowMapTexture] CUBE 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:39:20 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 6   xyz         7     NONE   float
// TEXCOORD                 7   xyzw        8     NONE   float
// SV_InstanceID            0   x           9     NONE    uint
// SV_IsFrontFace           0    y          9    FFACE    uint    y
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[3], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_sampler s0, mode_comparison
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv v9.y, is_front_face
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 21e513afbac5f78b-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

movc r0.z, v9.y, l(1.000000), l(-1.000000)
add r1.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
add r3.xyz, -v5.xyzx, r10.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r3.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, v1.xyxx, t0.xyzw, s2
mul r5.xyz, r5.xyzx, v6.xyzx
add r1.w, r5.w, -cb0[15].y
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
sample_indexable(texture2d)(float,float,float,float) r6.xyzw, v1.xyxx, t1.xyzw, s3
mad r7.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r7.xyxx, r7.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r7.z, r1.w
mov r0.xy, l(1.000000,1.000000,0,0)
mul r0.xyz, r0.xyzx, r7.xyzx
mul r1.w, r6.x, cb0[15].w
mul r6.xyw, v5.yyyy, cb0[5].xyxz
mad r6.xyw, cb0[4].xyxz, v5.xxxx, r6.xyxw
mad r6.xyw, cb0[6].xyxz, v5.zzzz, r6.xyxw
add r6.xyw, r6.xyxw, cb0[7].xyxz
mov r7.x, cb4[9].z
mov r7.y, cb4[10].z
mov r7.z, cb4[11].z
dp3 r2.w, r3.xyzx, r7.xyzx
add r3.xyz, v5.xyzx, -cb3[25].xyzx
dp3 r3.x, r3.xyzx, r3.xyzx
sqrt r3.x, r3.x
add r3.x, -r2.w, r3.x
mad r2.w, cb3[25].w, r3.x, r2.w
mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
lt r3.x, r2.w, l(0.990000)
if_nz r3.x
  add r3.xyz, v5.xyzx, -cb2[1].xyzx
  max r3.w, |r3.y|, |r3.x|
  max r3.w, |r3.z|, r3.w
  add r3.w, r3.w, -cb2[2].z
  max r3.w, r3.w, l(0.000010)
  mul r3.w, r3.w, cb2[2].w
  div r3.w, cb2[2].y, r3.w
  add r3.w, r3.w, -cb2[2].x
  add r3.w, -r3.w, l(1.000000)
  add r7.xyz, r3.xyzx, l(0.00781250000, 0.00781250000, 0.00781250000, 0.000000)
  sample_c_lz_indexable(texturecube)(float,float,float,float) r7.x, r7.xyzx, t3.xxxx, s0, r3.w
  add r8.xyz, r3.xyzx, l(-0.00781250000, -0.00781250000, 0.00781250000, 0.000000)
  sample_c_lz_indexable(texturecube)(float,float,float,float) r7.y, r8.xyzx, t3.xxxx, s0, r3.w
  add r8.xyz, r3.xyzx, l(-0.00781250000, 0.00781250000, -0.00781250000, 0.000000)
  sample_c_lz_indexable(texturecube)(float,float,float,float) r7.z, r8.xyzx, t3.xxxx, s0, r3.w
  add r3.xyz, r3.xyzx, l(0.00781250000, -0.00781250000, -0.00781250000, 0.000000)
  sample_c_lz_indexable(texturecube)(float,float,float,float) r7.w, r3.xyzx, t3.xxxx, s0, r3.w
  dp4 r3.x, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  add r3.y, -cb3[24].x, l(1.000000)
  mad r3.x, r3.x, r3.y, cb3[24].x
else
  mov r3.x, l(1.000000)
endif
add r3.y, -r3.x, l(1.000000)
mad r2.w, r2.w, r3.y, r3.x
dp3 r3.x, r6.xywx, r6.xywx
sample_indexable(texture2d)(float,float,float,float) r3.x, r3.xxxx, t2.xyzw, s1
mul r2.w, r2.w, r3.x
dp3 r3.x, v2.xyzx, r0.xyzx
dp3 r3.y, v3.xyzx, r0.xyzx
dp3 r3.z, v4.xyzx, r0.xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r3.xyzx
mul r3.xyz, r2.wwww, cb0[2].xyzx
add r7.xyzw, -cb0[16].xxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r5.xyz, r5.xyzx, r7.xxxx
dp3_sat r2.w, r0.xyzx, r2.xyzx
mul r3.w, cb0[15].z, l(10.000000)
add r4.w, -r6.z, l(1.000000)
mad r1.xyz, r1.xyzx, r0.wwww, r4.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, r4.xyzx
dp3_sat r5.w, r0.xyzx, r1.xyzx
dp3_sat r1.x, r2.xyzx, r1.xyzx
mul r1.y, r1.x, r1.x
dp2 r1.y, r1.yyyy, r4.wwww
add r1.y, r1.y, l(-0.500000)
add r1.z, -r2.w, l(1.000000)
mul r6.x, r1.z, r1.z
mul r6.x, r6.x, r6.x
mul r6.x, r1.z, r6.x
mad r6.x, r1.y, r6.x, l(1.000000)
add r6.y, -|r0.w|, l(1.000000)
mul r6.z, r6.y, r6.y
mul r6.z, r6.z, r6.z
mul r6.y, r6.y, r6.z
mad r1.y, r1.y, r6.y, l(1.000000)
mul r1.y, r1.y, r6.x
mul r1.y, r2.w, r1.y
mul r6.x, r4.w, r4.w
mad r4.w, -r4.w, r4.w, l(1.000000)
mad r6.y, |r0.w|, r4.w, r6.x
mad r4.w, r2.w, r4.w, r6.x
mul r0.w, |r0.w|, r4.w
mad r0.w, r2.w, r6.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r4.w, r6.x, r6.x
mad r6.x, r5.w, r4.w, -r5.w
mad r5.w, r6.x, r5.w, l(1.000000)
mul r4.w, r4.w, l(0.318309873)
mad r5.w, r5.w, r5.w, l(1.000000012E-007)
div r4.w, r4.w, r5.w
mul r0.w, r0.w, r4.w
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.w, r0.w
max r0.w, r0.w, l(0.000000)
dp3 r2.w, cb0[16].xyzx, cb0[16].xyzx
ne r2.w, r2.w, l(0.000000)
and r2.w, r2.w, l(0x3f800000)
mul r0.w, r0.w, r2.w
add r1.x, -r1.x, l(1.000000)
mul r2.w, r1.x, r1.x
mul r2.w, r2.w, r2.w
mul r1.x, r1.x, r2.w
mad r6.xyz, r7.yzwy, r1.xxxx, cb0[16].xyzx
mul r6.xyz, r0.wwww, r6.xyzx
mul r7.xyz, r1.yyyy, r3.xyzx
mul r6.yzw, r3.xxyz, r6.xxyz
mad r6.yzw, r5.xxyz, r7.xxyz, r6.yyzw
mad r0.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000), r2.xyzx
dp3_sat r0.x, -r0.xyzx, r4.xyzx
mad r0.x, r0.x, r3.w, -r3.w
exp r0.x, r0.x
mul r0.xyz, r3.xyzx, r0.xxxx
mul r0.xyz, r1.zzzz, r0.xyzx
mul r1.xyz, r1.wwww, r5.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mul r0.xyz, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
mov_sat r6.x, r6.x
add r0.w, -r6.x, l(1.000000)
mad o0.xyz, r0.xyzx, r0.wwww, r6.yzwy
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used