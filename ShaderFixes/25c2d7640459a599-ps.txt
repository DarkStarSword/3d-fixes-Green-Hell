// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 25c2d7640459a599-ps.txt
// 3DMigoto: 25c2d7640459a599 |    Unity headers extracted from AdvancedTerrainGrass_Foliage Shader
//    Shader "AdvancedTerrainGrass/Foliage Shader" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "QUEUE"="Geometry+200" "RenderType"="ATGFoliage" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+200" "RenderType"="ATGFoliage" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from AdvancedTerrainGrass_Foliage Shader:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 135 2 4
//   undeciphered1a: 16
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "INSTANCING_ON" }
//   undeciphered2: 1 4 9 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 224
//   Vector 32 [_LightColor0]
//   Float 68 [_HorizonFade]
//   Float 176 [_Glossiness]
//   Float 180 [_Cutoff]
//   Float 184 [_TransPower]
//   Float 188 [_TransStrength]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityDrawCallInfo" 16
//   ScalarInt 0 [unity_BaseInstanceID]
//   ConstBuffer "UnityInstancing_PerDraw2" 224
//   Struct 0 [unity_Builtins2Array] 2 112
//   Vector 0 [unity_SHArArray]
//   Vector 16 [unity_SHAgArray]
//   Vector 32 [unity_SHAbArray]
//   Vector 48 [unity_SHBrArray]
//   Vector 64 [unity_SHBgArray]
//   Vector 80 [unity_SHBbArray]
//   Vector 96 [unity_SHCArray]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_ShadowMapTexture] 2D 1
//   SetTexture 2 [unity_SpecCube0] CUBE 0
//   SetTexture 3 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityReflectionProbes" 6
//   BindCB "UnityDrawCallInfo" 7
//   BindCB "UnityInstancing_PerDraw2" 8
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:41:06 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 6     z         1     NONE   float     z
// TEXCOORD                 1   xyzw        2     NONE   float     zw
// TEXCOORD                 2   xyzw        3     NONE   float     zw
// TEXCOORD                 3   xyzw        4     NONE   float     zw
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
// SV_InstanceID            0   x           8     NONE    uint   x
// SV_IsFrontFace           0    y          8    FFACE    uint    y
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[8], immediateIndexed
dcl_constantbuffer cb7[1], immediateIndexed
dcl_constantbuffer cb8[14], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.zw
dcl_input_ps linear v3.zw
dcl_input_ps linear v4.zw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyw
dcl_input_ps constant v8.x
dcl_input_ps_sgv v8.y, is_front_face
dcl_output o0.xyzw
dcl_temps 18
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r16.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 25c2d7640459a599-ps.txt

mul r16.w, -r16.x, r16.y
mad r17.xyz, -r16.wwww, cb10[0].xyzw, cb1[4].xyzw

movc r0.x, v8.y, l(1.000000), l(-1.000000)
iadd r0.y, v8.x, cb7[0].x
mov r1.x, v2.w
mov r1.y, v3.w
mov r1.z, v4.w
add r2.xyz, -r1.xyzx, r17.xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r3.xyz, r0.zzzz, r2.xyzx
sample r4.xyzw, v1.xyxx, t0.xyzw, s2
mul r4.xyz, r4.xyzx, v5.xyzx
add r0.w, r4.w, -cb0[11].y
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
mul r5.x, r0.x, v2.z
mul r5.y, r0.x, v3.z
mul r5.z, r0.x, v4.z
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r0.x, r2.xyzx, r6.xyzx
add r6.xyz, r1.xyzx, -cb3[25].xyzx
dp3 r0.w, r6.xyzx, r6.xyzx
sqrt r0.w, r0.w
add r0.w, -r0.x, r0.w
mad r0.x, cb3[25].w, r0.w, r0.x
mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
imul null, r0.y, r0.y, l(7)
div r6.xy, v7.xyxx, v7.wwww
sample r6.xyzw, r6.xyxx, t1.xyzw, s1
add r0.w, -r6.x, cb8[r0.y + 6].w
mad r0.x, r0.x, r0.w, r6.x
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mul r6.xyz, r0.wwww, r5.xyzx
add r0.w, -cb0[11].x, l(1.000000)
dp3 r1.w, -r3.xyzx, r6.xyzx
add r1.w, r1.w, r1.w
mad r7.xyz, r6.xyzx, -r1.wwww, -r3.xyzx
mul r8.xyz, r0.xxxx, cb0[2].xyzx
mov r6.w, l(1.000000)
dp4 r9.x, cb8[r0.y + 0].xyzw, r6.xyzw
dp4 r9.y, cb8[r0.y + 1].xyzw, r6.xyzw
dp4 r9.z, cb8[r0.y + 2].xyzw, r6.xyzw
add r9.xyz, r9.xyzx, v6.xyzx
max r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.x, l(0.000000), cb6[2].w
if_nz r0.x
  dp3 r0.x, r7.xyzx, r7.xyzx
  rsq r0.x, r0.x
  mul r10.xyz, r0.xxxx, r7.xyzx
  add r11.xyz, -r1.xyzx, cb6[0].xyzx
  div r11.xyz, r11.xyzx, r10.xyzx
  add r12.xyz, -r1.xyzx, cb6[1].xyzx
  div r12.xyz, r12.xyzx, r10.xyzx
  lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  min r0.x, r11.y, r11.x
  min r0.x, r11.z, r0.x
  add r11.xyz, r1.xyzx, -cb6[2].xyzx
  mad r10.xyz, r10.xyzx, r0.xxxx, r11.xyzx
else
  mov r10.xyz, r7.xyzx
endif
mad r0.x, -r0.w, l(0.700000), l(1.700000)
mul r0.x, r0.x, r0.w
mul r0.x, r0.x, l(6.000000)
sample_l r10.xyzw, r10.xyzx, t2.xyzw, s0, r0.x
add r0.y, r10.w, l(-1.000000)
mad r0.y, cb6[3].w, r0.y, l(1.000000)
log r0.y, r0.y
mul r0.y, r0.y, cb6[3].y
exp r0.y, r0.y
mul r0.y, r0.y, cb6[3].x
mul r11.xyz, r10.xyzx, r0.yyyy
lt r1.w, cb6[1].w, l(0.999990)
if_nz r1.w
  lt r1.w, l(0.000000), cb6[6].w
  if_nz r1.w
    dp3 r1.w, r7.xyzx, r7.xyzx
    rsq r1.w, r1.w
    mul r12.xyz, r1.wwww, r7.xyzx
    add r13.xyz, -r1.xyzx, cb6[4].xyzx
    div r13.xyz, r13.xyzx, r12.xyzx
    add r14.xyz, -r1.xyzx, cb6[5].xyzx
    div r14.xyz, r14.xyzx, r12.xyzx
    lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
    movc r13.xyz, r15.xyzx, r13.xyzx, r14.xyzx
    min r1.w, r13.y, r13.x
    min r1.w, r13.z, r1.w
    add r1.xyz, r1.xyzx, -cb6[6].xyzx
    mad r7.xyz, r12.xyzx, r1.wwww, r1.xyzx
  endif
  sample_l r1.xyzw, r7.xyzx, t3.xyzw, s0, r0.x
  add r0.x, r1.w, l(-1.000000)
  mad r0.x, cb6[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb6[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb6[7].x
  mul r1.xyz, r1.xyzx, r0.xxxx
  mad r7.xyz, r0.yyyy, r10.xyzx, -r1.xyzx
  mad r11.xyz, cb6[1].wwww, r7.xyzx, r1.xyzx
endif
dp3_sat r0.x, r6.xyzx, cb2[0].xyzx
dp3 r0.y, r3.xyzx, r6.xyzx
add r1.x, r0.y, r0.y
mad r1.xyz, r6.xyzx, -r1.xxxx, r3.xyzx
dp3 r1.x, r1.xyzx, r5.xyzx
mad_sat r1.x, cb0[4].y, r1.x, l(1.000000)
mul r1.x, r1.x, r1.x
mul r1.xyz, r1.xxxx, r11.xyzx
mul r1.w, cb0[11].z, l(10.000000)
mad r2.xyz, r2.xyzx, r0.zzzz, cb2[0].xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
max r0.z, r0.z, l(0.001000)
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
dp3_sat r0.z, cb2[0].xyzx, r2.xyzx
mul r0.z, r0.z, r0.z
dp2 r0.z, r0.zzzz, r0.wwww
add r0.z, r0.z, l(-0.500000)
add r2.x, -r0.x, l(1.000000)
mul r2.y, r2.x, r2.x
mul r2.y, r2.y, r2.y
mul r2.y, r2.x, r2.y
mad r2.y, r0.z, r2.y, l(1.000000)
add r0.y, -|r0.y|, l(1.000000)
mul r2.z, r0.y, r0.y
mul r2.z, r2.z, r2.z
mul r0.y, r0.y, r2.z
mad r0.z, r0.z, r0.y, l(1.000000)
mul r0.z, r0.z, r2.y
mul r0.x, r0.x, r0.z
mul r0.z, r0.w, r0.w
mad r0.z, r0.z, r0.z, l(1.000000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
mov_sat r0.w, cb0[11].x
mad r2.yzw, r8.xxyz, r0.xxxx, r9.xxyz
mul r1.xyz, r1.xyzx, r0.zzzz
mul r0.x, r0.w, r0.y
mul r0.xyz, r0.xxxx, r1.xyzx
mad r0.xyz, r4.xyzx, r2.yzwy, r0.xyzx
mad r1.xyz, r6.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000), cb2[0].xyzx
dp3_sat r0.w, -r1.xyzx, r3.xyzx
mad r0.w, r0.w, r1.w, -r1.w
exp r0.w, r0.w
mul r1.xyz, r8.xyzx, r0.wwww
mul r1.xyz, r2.xxxx, r1.xyzx
mul r2.xyz, r4.xyzx, cb0[11].wwww
mul r1.xyz, r1.xyzx, r2.xyzx
mad r0.xyz, r1.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
add r0.xyz, r0.xyzx, -cb5[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used