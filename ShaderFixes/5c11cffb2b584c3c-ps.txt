// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5c11cffb2b584c3c-ps.txt
// 3DMigoto: 5c11cffb2b584c3c |    Unity headers extracted from NatureManufacture Shaders_Water_Water River Tesseled Vertex Color Flow
//    Shader "NatureManufacture Shaders/Water/Water River Tesseled Vertex Color Flow" {
//      SubShader 1/1 {
//        Tags { "IsEmissive"="true" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "IsEmissive"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from NatureManufacture Shaders_Water_Water River Tesseled Vertex Color Flow:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 201802150 422 21 6
//   undeciphered1a: 15
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 12 5 11 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 528
//   Vector 32 [_LightColor0]
//   ScalarInt 68 [_UVVDirection1UDirection0]
//   Vector 72 [_WaterMixSpeed] 2
//   Vector 80 [_WaterNormal_ST]
//   Float 96 [_GlobalTiling]
//   Vector 100 [_WaterMainSpeed] 2
//   Vector 112 [_SmallCascadeMixSpeed] 2
//   Vector 128 [_SmallCascadeNormal_ST]
//   Vector 148 [_SmallCascadeMainSpeed] 2
//   Float 156 [_SmallCascadeAngle]
//   Float 160 [_SmallCascadeAngleFalloff]
//   Float 164 [_BigCascadeAngle]
//   Float 168 [_BigCascadeAngleFalloff]
//   Vector 176 [_BigCascadeMixSpeed] 2
//   Vector 192 [_BigCascadeNormal_ST]
//   Vector 208 [_BigCascadeMainSpeed] 2
//   Float 216 [_NormalScale]
//   Float 220 [_SmallCascadeNormalScale]
//   Float 224 [_BigCascadeNormalScale]
//   Float 228 [_Distortion]
//   Vector 240 [_DeepColor]
//   Vector 256 [_ShalowColor]
//   Float 272 [_ShalowDepth]
//   Float 276 [_ShalowFalloff]
//   Float 280 [_BigCascadeTransparency]
//   Vector 288 [_FoamColor] 3
//   Float 300 [_FoamDepth]
//   Float 304 [_FoamFalloff]
//   Vector 320 [_Foam_ST]
//   Vector 336 [_FoamSpeed] 2
//   Vector 344 [_NoiseSpeed] 2
//   Vector 352 [_Noise_ST]
//   Float 368 [_SmallCascadeNoisePower]
//   Vector 372 [_SmallCascadeColor] 3
//   Float 384 [_SmallCascadeFoamFalloff]
//   Float 388 [_BigCascadeNoisePower]
//   Vector 400 [_BigCascadeColor] 3
//   Float 412 [_BigCascadeFoamFalloff]
//   Float 416 [_WaterDeepTranslucencyPower]
//   Float 420 [_WaterShalowTranslucencyPower]
//   Float 424 [_WaterSpecularFar]
//   Float 428 [_WaterSpecularClose]
//   Float 432 [_WaterSpecularThreshold]
//   Float 436 [_FoamSpecular]
//   Float 440 [_SmallCascadeSpecular]
//   Float 444 [_BigCascadeSpecular]
//   Float 448 [_WaterSmoothness]
//   Float 452 [_FoamSmoothness]
//   Float 456 [_SmallCascadeSmoothness]
//   Float 460 [_BigCascadeSmoothness]
//   Float 464 [_AOPower]
//   Float 468 [_WaterDepth]
//   Float 472 [_WaterFalloffBorder]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 16 [_SinTime]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_WaterNormal] 2D 2
//   SetTexture 1 [_SmallCascadeNormal] 2D 3
//   SetTexture 2 [_BigCascadeNormal] 2D 4
//   SetTexture 3 [_WaterGrab] 2D 5
//   SetTexture 4 [_CameraDepthTexture] 2D 6
//   SetTexture 5 [_Foam] 2D 7
//   SetTexture 6 [_SmallCascade] 2D 8
//   SetTexture 7 [_Noise] 2D 9
//   SetTexture 8 [_BigCascade] 2D 10
//   SetTexture 9 [unity_SpecCube0] CUBE 0
//   SetTexture 10 [unity_SpecCube1] CUBE -1
//   SetTexture 11 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityReflectionProbes" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:08:00 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
// COLOR                    0   xyzw        6     NONE   float   xyzw
// TEXCOORD                 8   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[30], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texturecube (float,float,float,float) t9
dcl_resource_texturecube (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t11
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyw
dcl_input_ps linear v6.xyzw
dcl_output o0.xyzw
dcl_temps 17
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r15.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 5c11cffb2b584c3c-ps.txt

mul r15.w, -r15.x, r15.y
mad r16.xyz, -r15.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r16.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r3.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[6].x
mul r3.xy, r1.wwww, r3.xyxx
itof r2.w, cb0[4].y
eq r2.w, r2.w, l(1.000000)
movc r3.zw, r2.wwww, cb0[4].zzzw, cb0[4].wwwz
mad r3.zw, cb1[0].yyyy, r3.zzzw, r3.xxxy
movc r4.xy, r2.wwww, cb0[6].yzyy, cb0[6].zyzz
mul r4.xy, r4.xyxx, v1.zwzz
mul r5.xyz, cb1[0].yyyy, l(0.150000, 0.250000, 0.600000, 0.000000)
frc r5.xyz, r5.xyzx
mad r4.zw, r4.xxxy, r5.xxxx, r3.xxxy
mad r6.xyz, cb1[0].yyyy, l(0.150000, 0.250000, 0.600000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
frc r6.xyz, r6.xyzx
mad r3.xy, r4.xyxx, r6.xxxx, r3.xyxx
add r7.xyz, r5.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r7.xyz, r7.xyzx, r7.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.zwzz, t0.xywz, s2
mul r4.x, r4.z, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, cb0[13].zzzz
dp2 r4.w, r4.xyxx, r4.xyxx
min r4.w, r4.w, l(1.000000)
add r4.w, -r4.w, l(1.000000)
sqrt r4.z, r4.w
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r3.xyxx, t0.xywz, s2
mul r8.x, r8.z, r8.x
mad r3.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r8.xy, r3.xyxx, cb0[13].zzzz
dp2 r3.x, r8.xyxx, r8.xyxx
min r3.x, r3.x, l(1.000000)
add r3.x, -r3.x, l(1.000000)
sqrt r8.z, r3.x
add r8.xyz, -r4.xyzx, r8.xyzx
mad r4.xyz, |r7.xxxx|, r8.xyzx, r4.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t0.xywz, s2
mul r3.w, cb0[13].z, l(1.200000)
mul r3.x, r3.z, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r8.xy, r3.wwww, r3.xyxx
dp2 r3.z, r8.xyxx, r8.xyxx
min r3.z, r3.z, l(1.000000)
add r3.z, -r3.z, l(1.000000)
sqrt r3.z, r3.z
mad r8.xy, r3.xyxx, r3.wwww, r4.xyxx
mul r8.z, r4.z, r3.z
dp3 r3.x, r8.xyzx, r8.xyzx
rsq r3.x, r3.x
mul r3.yzw, r3.xxxx, r8.xxyz
mad r4.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
mul r4.xy, r1.wwww, r4.xyxx
movc r4.zw, r2.wwww, cb0[7].xxxy, cb0[7].yyyx
mad r4.zw, cb1[0].yyyy, r4.zzzw, r4.xxxy
movc r9.xy, r2.wwww, cb0[9].yzyy, cb0[9].zyzz
mul r9.xy, r9.xyxx, v1.zwzz
mad r5.yw, r9.xxxy, r5.yyyy, r4.xxxy
mad r4.xy, r9.xyxx, r6.yyyy, r4.xyxx
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r5.ywyy, t1.xywz, s3
mul r9.x, r9.z, r9.x
mad r9.xy, r9.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r6.y, r9.xyxx, r9.xyxx
min r6.y, r6.y, l(1.000000)
add r6.y, -r6.y, l(1.000000)
sqrt r9.z, r6.y
sample_indexable(texture2d)(float,float,float,float) r10.xyz, r4.xyxx, t1.xywz, s3
mul r10.x, r10.z, r10.x
mad r6.yw, r10.xxxy, l(0.000000, 2.000000, 0.000000, 2.000000), l(0.000000, -1.000000, 0.000000, -1.000000)
mul r10.xy, r6.ywyy, cb0[13].wwww
dp2 r6.y, r10.xyxx, r10.xyxx
min r6.y, r6.y, l(1.000000)
add r6.y, -r6.y, l(1.000000)
sqrt r10.z, r6.y
add r10.xyz, -r9.xyzx, r10.xyzx
mad r9.xyz, |r7.yyyy|, r10.xyzx, r9.xyzx
sample_indexable(texture2d)(float,float,float,float) r10.xyz, r4.zwzz, t1.xywz, s3
mul r10.x, r10.z, r10.x
mad r4.zw, r10.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r6.yw, r4.zzzw, cb0[13].wwww
dp2 r6.y, r6.ywyy, r6.ywyy
min r6.y, r6.y, l(1.000000)
add r6.y, -r6.y, l(1.000000)
sqrt r6.y, r6.y
mad r10.xy, r4.zwzz, cb0[13].wwww, r9.xyxx
mul r10.z, r9.z, r6.y
dp3 r4.z, r10.xyzx, r10.xyzx
rsq r4.z, r4.z
mov_sat r4.w, v3.z
mul r6.y, cb0[9].w, l(0.0222222228)
mad r6.w, -cb0[9].w, l(0.0222222228), l(1.000000)
add r6.w, r4.w, -r6.w
max r6.w, r6.w, l(0.000000)
min r6.w, r6.w, l(2.000000)
div r6.y, l(1.000000, 1.000000, 1.000000, 1.000000), r6.y
mul_sat r6.y, r6.y, r6.w
add r6.y, -r6.y, l(1.000000)
log r6.y, r6.y
mul r6.y, r6.y, cb0[10].x
exp r6.y, r6.y
mul r6.w, cb0[10].y, l(0.0222222228)
mad r7.w, -cb0[10].y, l(0.0222222228), l(1.000000)
add r4.w, r4.w, -r7.w
max r4.w, r4.w, l(0.000000)
min r4.w, r4.w, l(2.000000)
div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
mul_sat r4.w, r4.w, r6.w
add r4.w, -r4.w, l(1.000000)
log r4.w, r4.w
mul r4.w, r4.w, cb0[10].z
exp r4.w, r4.w
min r4.w, r4.w, l(1.000000)
add_sat r6.y, -r4.w, r6.y
mad r9.xyz, r10.xyzx, r4.zzzz, -r3.yzwy
mad r3.yzw, r6.yyyy, r9.xxyz, r3.yyzw
mad r9.xy, v1.xyxx, cb0[12].xyxx, cb0[12].zwzz
mul r9.xy, r1.wwww, r9.xyxx
movc r9.zw, r2.wwww, cb0[11].xxxy, cb0[11].yyyx
mad r9.zw, cb1[0].yyyy, r9.zzzw, r9.xxxy
movc r11.xy, r2.wwww, cb0[13].xyxx, cb0[13].yxyy
mul r11.xy, r11.xyxx, v1.zwzz
mad r11.zw, r11.xxxy, r5.zzzz, r9.xxxy
mad r6.zw, r11.xxxy, r6.zzzz, r9.xxxy
sample_indexable(texture2d)(float,float,float,float) r12.xyz, r11.zwzz, t2.xywz, s4
mul r12.x, r12.z, r12.x
mad r9.xy, r12.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r12.xy, r9.xyxx, cb0[14].xxxx
dp2 r5.z, r12.xyxx, r12.xyxx
min r5.z, r5.z, l(1.000000)
add r5.z, -r5.z, l(1.000000)
sqrt r12.z, r5.z
sample_indexable(texture2d)(float,float,float,float) r13.xyz, r6.zwzz, t2.xywz, s4
mul r13.x, r13.z, r13.x
mad r9.xy, r13.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r13.xy, r9.xyxx, cb0[14].xxxx
dp2 r5.z, r13.xyxx, r13.xyxx
min r5.z, r5.z, l(1.000000)
add r5.z, -r5.z, l(1.000000)
sqrt r13.z, r5.z
add r13.xyz, -r12.xyzx, r13.xyzx
mad r12.xyz, |r7.zzzz|, r13.xyzx, r12.xyzx
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r9.zwzz, t2.xywz, s4
mul r9.x, r9.z, r9.x
mad r9.xy, r9.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r9.zw, r9.xxxy, cb0[14].xxxx
dp2 r5.z, r9.zwzz, r9.zwzz
min r5.z, r5.z, l(1.000000)
add r5.z, -r5.z, l(1.000000)
sqrt r5.z, r5.z
mad r9.xy, r9.xyxx, cb0[14].xxxx, r12.xyxx
mul r9.z, r12.z, r5.z
dp3 r5.z, r9.xyzx, r9.xyzx
rsq r5.z, r5.z
mad r12.xyz, r9.xyzx, r5.zzzz, -r3.yzwy
mad r3.yzw, r4.wwww, r12.xxyz, r3.yyzw
mad r8.xyz, r8.xyzx, r3.xxxx, -r3.yzwy
mad r8.xyz, v6.xxxx, r8.xyzx, r3.yzwy
mad r10.xyz, r10.xyzx, r4.zzzz, -r8.xyzx
mad r8.xyz, v6.yyyy, r10.xyzx, r8.xyzx
mad r9.xyz, r9.xyzx, r5.zzzz, -r8.xyzx
mad r8.xyz, v6.zzzz, r9.xyzx, r8.xyzx
add r9.xyw, v5.wxww, l(9.999999960E-012, 0.000000, 0.000000, 9.999999960E-012)
mul r3.x, r9.x, l(0.500000)
mad r3.w, -r9.x, l(0.500000), v5.y
mad r9.z, -r3.w, cb1[5].x, r3.x
div r9.yzw, r9.yyzw, r9.xxxx
div r3.xw, r9.yyyz, r9.wwww
mad r3.xw, r3.yyyz, cb0[14].yyyy, r3.xxxw
sample_indexable(texture2d)(float,float,float,float) r9.yzw, r3.xwxx, t3.wxyz, s5
div r3.xw, v5.xxxy, r9.xxxx
sample_indexable(texture2d)(float,float,float,float) r3.x, r3.xwxx, t4.xyzw, s6
mad r3.x, cb1[7].z, r3.x, cb1[7].w
div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
add r3.x, -r9.x, r3.x
add r3.w, |r3.x|, cb0[17].x
log r3.w, r3.w
mul r3.w, r3.w, cb0[17].y
exp r3.w, r3.w
mul r4.z, r4.w, cb0[17].z
add r5.z, -r3.w, l(100.000000)
mad_sat r3.w, r4.z, r5.z, r3.w
add r10.xyz, -cb0[15].xyzx, cb0[16].xyzx
mad r10.xyz, r3.wwww, r10.xyzx, cb0[15].xyzx
add r4.z, |r3.x|, cb0[18].w
log r4.z, r4.z
mul r4.z, r4.z, cb0[19].x
exp r4.z, r4.z
min r4.z, r4.z, l(1.000000)
mad r11.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
mul r11.xy, r1.wwww, r11.xyxx
movc r12.xyzw, r2.wwww, cb0[21].xyzw, cb0[21].yxwz
mul r12.xy, r12.xyxx, v1.zwzz
mad r5.xz, r12.xxyx, r5.xxxx, r11.xxyx
mad r11.xy, r12.xyxx, r6.xxxx, r11.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.w, r5.xzxx, t5.xyzw, s7
sample_indexable(texture2d)(float,float,float,float) r5.x, r11.xyxx, t5.wxyz, s7
add r5.x, -r2.w, r5.x
mad r2.w, |r7.x|, r5.x, r2.w
mul r2.w, r2.w, r4.z
add r13.xyz, -r10.xyzx, cb0[18].xyzx
mad r13.xyz, r2.wwww, r13.xyzx, r10.xyzx
add r13.xyz, -r9.yzwy, r13.xyzx
mad r13.xyz, r4.zzzz, r13.xyzx, r9.yzwy
add r4.z, -r3.w, l(1.000000)
add r14.xyz, r10.xyzx, -r13.xyzx
mad r13.xyz, r4.zzzz, r14.xyzx, r13.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.x, r5.ywyy, t6.wxyz, s8
sample_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t6.wxyz, s8
add r4.x, -r5.x, r4.x
mad r4.x, |r7.y|, r4.x, r5.x
mad r5.xy, v1.xyxx, cb0[22].xyxx, cb0[22].zwzz
mul r5.xy, r1.wwww, r5.xyxx
mad r5.xy, cb1[1].xxxx, r12.zwzz, r5.xyxx
mov r5.zw, -r5.xxxy
sample_indexable(texture2d)(float,float,float,float) r1.w, r5.zwzz, t7.xyzw, s9
sample_indexable(texture2d)(float,float,float,float) r4.y, r5.xyxx, t7.xwyz, s9
min r4.y, r1.w, r4.y
log r4.y, r4.y
mul r4.y, r4.y, cb0[23].x
exp r4.y, r4.y
mul r4.y, r4.y, l(20.000000)
min r4.y, r4.y, l(1.000000)
mul r4.y, r4.x, r4.y
log r4.x, r4.x
mul r4.x, r4.x, cb0[24].x
exp r4.x, r4.x
min r4.x, r4.x, l(1.000000)
mul r5.z, r4.x, r6.y
mad r7.xyw, r4.yyyy, cb0[23].yzyw, -r13.xyxz
mad r7.xyw, r5.zzzz, r7.xyxw, r13.xyxz
sample_indexable(texture2d)(float,float,float,float) r5.w, r11.zwzz, t8.xyzw, s10
sample_indexable(texture2d)(float,float,float,float) r6.x, r6.zwzz, t8.wxyz, s10
add r6.x, -r5.w, r6.x
mad r5.w, |r7.z|, r6.x, r5.w
add r5.xy, r5.xyxx, l(-0.470000, 0.370000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t7.wxyz, s9
min r1.w, r1.w, r5.x
log r1.w, r1.w
mul r1.w, r1.w, cb0[24].y
exp r1.w, r1.w
mul r1.w, r1.w, l(20.000000)
min r1.w, r1.w, l(1.000000)
mul r5.x, r5.w, l(0.500000)
mad r1.w, r1.w, r5.x, r5.x
log r5.x, r5.w
mul r5.x, r5.x, cb0[25].w
exp r5.x, r5.x
min r5.x, r5.x, l(1.000000)
mul r5.y, r4.w, r5.x
mad r6.xzw, r1.wwww, cb0[25].xxyz, -r7.xxyw
mad r6.xzw, r5.yyyy, r6.xxzw, r7.xxyw
add r7.xyz, -r9.yzwy, r10.xyzx
mad r7.xyz, r4.zzzz, r7.xyzx, r9.yzwy
add r9.xyz, -r6.xzwx, r7.xyzx
mad r6.xzw, v6.xxxx, r9.xxyz, r6.xxzw
mad r9.xyz, r4.yyyy, cb0[23].yzwy, -r7.xyzx
mad r9.xyz, r4.xxxx, r9.xyzx, r7.xyzx
add r9.xyz, -r6.xzwx, r9.xyzx
mad r6.xzw, v6.yyyy, r9.xxyz, r6.xxzw
mad r9.xyz, r1.wwww, cb0[25].xyzx, -r7.xyzx
mad r7.xyz, r5.xxxx, r9.xyzx, r7.xyzx
add r7.xyz, -r6.xzwx, r7.xyzx
mad r6.xzw, v6.zzzz, r7.xxyz, r6.xxzw
max_sat r1.w, r3.z, r3.y
mul r7.xyz, r1.wwww, cb0[16].xyzx
add r3.yz, -cb0[26].xxzx, cb0[26].yywy
mad r1.w, r3.w, r3.y, cb0[26].x
mul r7.xyz, r1.wwww, r7.xyzx
log r1.w, r3.w
mul r1.w, r1.w, cb0[27].x
exp r1.w, r1.w
mad r1.w, r1.w, r3.z, cb0[26].z
add r3.y, -r1.w, cb0[27].y
mad r1.w, r2.w, r3.y, r1.w
mul r3.y, r6.y, r5.z
add r3.zw, -r1.wwww, cb0[27].zzzw
mad r4.x, r3.y, r3.z, r1.w
mul r4.y, r4.w, r5.y
add r4.w, -r4.x, cb0[27].w
mad r4.x, r4.y, r4.w, r4.x
add r4.w, r1.w, -r4.x
mad r4.x, v6.x, r4.w, r4.x
mad r3.z, r5.z, r3.z, r1.w
add r3.z, -r4.x, r3.z
mad r3.z, v6.y, r3.z, r4.x
mad r1.w, r5.y, r3.w, r1.w
add r1.w, -r3.z, r1.w
mad r1.w, v6.z, r1.w, r3.z
add r3.z, -cb0[28].x, cb0[28].y
mad r2.w, r2.w, r3.z, cb0[28].x
add r3.zw, -r2.wwww, cb0[28].zzzw
mad r3.y, r3.y, r3.z, r2.w
add r4.x, -r3.y, cb0[28].w
mad r3.y, r4.y, r4.x, r3.y
add r4.x, r2.w, -r3.y
mad r3.y, v6.x, r4.x, r3.y
mad r3.z, r5.z, r3.z, r2.w
add r3.z, -r3.y, r3.z
mad r3.y, v6.y, r3.z, r3.y
mad r2.w, r5.y, r3.w, r2.w
add r2.w, -r3.y, r2.w
mad r2.w, v6.z, r2.w, r3.y
log r3.x, |r3.x|
mul r3.x, r3.x, cb0[29].y
exp r3.x, r3.x
min r3.x, r3.x, l(1.000000)
log r3.x, r3.x
mul r3.x, r3.x, cb0[29].z
exp r3.x, r3.x
mul o0.w, r3.x, v6.w
eq r3.x, cb4[0].x, l(1.000000)
if_nz r3.x
  eq r3.x, cb4[0].y, l(1.000000)
  mul r3.yzw, v3.wwww, cb4[2].xxyz
  mad r3.yzw, cb4[1].xxyz, v2.wwww, r3.yyzw
  mad r3.yzw, cb4[3].xxyz, v4.wwww, r3.yyzw
  add r3.yzw, r3.yyzw, cb4[4].xxyz
  movc r3.xyz, r3.xxxx, r3.yzwy, r0.xyzx
  add r3.xyz, r3.xyzx, -cb4[6].xyzx
  mul r3.yzw, r3.xxyz, cb4[5].xxyz
  mad r3.y, r3.y, l(0.250000), l(0.750000)
  mad r4.x, cb4[0].z, l(0.500000), l(0.750000)
  max r3.x, r3.y, r4.x
  sample_indexable(texture3d)(float,float,float,float) r3.xyzw, r3.xzwx, t11.xyzw, s1
else
  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r3.x, r3.xyzw, cb2[46].xyzw
dp3 r5.x, v2.xyzx, r8.xyzx
dp3 r5.y, v3.xyzx, r8.xyzx
dp3 r5.z, v4.xyzx, r8.xyzx
dp3 r3.y, r5.xyzx, r5.xyzx
rsq r3.y, r3.y
mul r3.yzw, r3.yyyy, r5.xxyz
add r4.x, -r2.w, l(1.000000)
dp3 r4.y, -r2.xyzx, r3.yzwy
add r4.y, r4.y, r4.y
mad r5.xyz, r3.yzwy, -r4.yyyy, -r2.xyzx
mul r8.xyz, r3.xxxx, cb0[2].xyzx
lt r3.x, l(0.000000), cb3[2].w
if_nz r3.x
  dp3 r3.x, r5.xyzx, r5.xyzx
  rsq r3.x, r3.x
  mul r9.xyz, r3.xxxx, r5.xyzx
  add r10.xyz, -r0.xyzx, cb3[0].xyzx
  div r10.xyz, r10.xyzx, r9.xyzx
  add r11.xyz, -r0.xyzx, cb3[1].xyzx
  div r11.xyz, r11.xyzx, r9.xyzx
  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  min r3.x, r10.y, r10.x
  min r3.x, r10.z, r3.x
  add r10.xyz, r0.xyzx, -cb3[2].xyzx
  mad r9.xyz, r9.xyzx, r3.xxxx, r10.xyzx
else
  mov r9.xyz, r5.xyzx
endif
mad r3.x, -r4.x, l(0.700000), l(1.700000)
mul r3.x, r3.x, r4.x
mul r3.x, r3.x, l(6.000000)
sample_l_indexable(texturecube)(float,float,float,float) r9.xyzw, r9.xyzx, t9.xyzw, s0, r3.x
add r4.y, r9.w, l(-1.000000)
mad r4.y, cb3[3].w, r4.y, l(1.000000)
log r4.y, r4.y
mul r4.y, r4.y, cb3[3].y
exp r4.y, r4.y
mul r4.y, r4.y, cb3[3].x
mul r10.xyz, r9.xyzx, r4.yyyy
lt r4.w, cb3[1].w, l(0.999990)
if_nz r4.w
  lt r4.w, l(0.000000), cb3[6].w
  if_nz r4.w
    dp3 r4.w, r5.xyzx, r5.xyzx
    rsq r4.w, r4.w
    mul r11.xyz, r4.wwww, r5.xyzx
    add r12.xyz, -r0.xyzx, cb3[4].xyzx
    div r12.xyz, r12.xyzx, r11.xyzx
    add r13.xyz, -r0.xyzx, cb3[5].xyzx
    div r13.xyz, r13.xyzx, r11.xyzx
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
    min r4.w, r12.y, r12.x
    min r4.w, r12.z, r4.w
    add r0.xyz, r0.xyzx, -cb3[6].xyzx
    mad r5.xyz, r11.xyzx, r4.wwww, r0.xyzx
  endif
  sample_l_indexable(texturecube)(float,float,float,float) r5.xyzw, r5.xyzx, t10.xyzw, s0, r3.x
  add r0.x, r5.w, l(-1.000000)
  mad r0.x, cb3[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb3[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r5.xyzx, r0.xxxx
  mad r5.xyz, r4.yyyy, r9.xyzx, -r0.xyzx
  mad r10.xyz, cb3[1].wwww, r5.xyzx, r0.xyzx
endif
mul r0.xyz, r10.xyzx, cb0[29].xxxx
max r3.x, r1.w, r1.w
max r3.x, r1.w, r3.x
add r3.x, -r3.x, l(1.000000)
mul r5.xyz, r3.xxxx, r6.xzwx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r3.yzwy, r2.xyzx
dp3_sat r2.x, r3.yzwy, cb2[0].xyzx
dp3_sat r2.y, r3.yzwy, r1.xyzx
dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
add r1.y, r1.x, r1.x
mul r1.y, r1.x, r1.y
mad r1.y, r1.y, r4.x, l(-0.500000)
add r1.z, -r2.x, l(1.000000)
mul r2.z, r1.z, r1.z
mul r2.z, r2.z, r2.z
mul r1.z, r1.z, r2.z
mad r1.z, r1.y, r1.z, l(1.000000)
add r2.z, -|r0.w|, l(1.000000)
mul r3.y, r2.z, r2.z
mul r3.y, r3.y, r3.y
mul r2.z, r2.z, r3.y
mad r1.y, r1.y, r2.z, l(1.000000)
mul r1.y, r1.y, r1.z
mul r1.y, r2.x, r1.y
mul r1.z, r4.x, r4.x
max r1.z, r1.z, l(0.002000)
add r3.y, -r1.z, l(1.000000)
mad r3.z, |r0.w|, r3.y, r1.z
mad r3.y, r2.x, r3.y, r1.z
mul r0.w, |r0.w|, r3.y
mad r0.w, r2.x, r3.z, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r3.y, r1.z, r1.z
mad r3.z, r2.y, r3.y, -r2.y
mad r2.y, r3.z, r2.y, l(1.000000)
mul r3.y, r3.y, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r3.y, r2.y
mul r0.w, r0.w, r2.y
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.x, r0.w
max r0.w, r0.w, l(0.000000)
mad r1.z, r1.z, r1.z, l(1.000000)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
dp3 r2.x, r1.wwww, r1.wwww
ne r2.x, r2.x, l(0.000000)
and r2.x, r2.x, l(0x3f800000)
mul r0.w, r0.w, r2.x
add r2.x, r2.w, -r3.x
add_sat r2.x, r2.x, l(1.000000)
mul r3.xyz, r1.yyyy, r8.xyzx
mul r4.xyw, r8.xyxz, r0.wwww
add r0.w, -r1.x, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.xyzw, r0.xyzw, r1.zzzx
add r1.x, -r1.w, l(1.000000)
mad r0.w, r1.x, r0.w, r1.w
mul r4.xyw, r0.wwww, r4.xyxw
mad r3.xyz, r5.xyzx, r3.xyzx, r4.xywx
add r0.w, -r1.w, r2.x
mad r0.w, r2.z, r0.w, r1.w
mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
mad o0.xyz, r4.zzzz, r7.xyzx, r0.xyzx
ret
// Approximately 0 instruction slots used