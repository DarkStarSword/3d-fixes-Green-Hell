// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f01bcb05c6178107-ps.txt
// 3DMigoto: f01bcb05c6178107 |    Unity headers extracted from AVP_Velvet
//    Shader "AVP/Velvet" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IsEmissive"="true" "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "IsEmissive"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from AVP_Velvet:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 212 11 8
//   undeciphered1a: 16
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
//   undeciphered2: 1 10 8 9 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 272
//   Vector 32 [_LightColor0]
//   Float 64 [_NormalPower]
//   Vector 80 [_Normals_ST]
//   Vector 96 [_Albedo_ST]
//   Vector 112 [_AlbedoColor]
//   Float 128 [_RimPower]
//   Vector 144 [_RimColor]
//   Vector 160 [_Noise_ST]
//   Vector 176 [_Emission_ST]
//   Float 192 [_Emission_Power]
//   Vector 208 [_Metallic_ST]
//   Vector 224 [_Occlusion_ST]
//   Float 240 [_OcclusionPower]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_Normals] 2D 3
//   SetTexture 1 [_Albedo] 2D 4
//   SetTexture 2 [_Noise] 2D 5
//   SetTexture 3 [_Emission] 2D 6
//   SetTexture 4 [_Metallic] 2D 7
//   SetTexture 5 [_Occlusion] 2D 8
//   SetTexture 6 [_ShadowMapTexture] 2D 2
//   SetTexture 7 [unity_SpecCube0] CUBE 0
//   SetTexture 8 [unity_SpecCube1] CUBE -1
//   SetTexture 9 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityReflectionProbes" 6
//   BindCB "UnityProbeVolume" 7
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:28:13 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 5     z         1     NONE   float     z
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyzw        6     NONE   float   xy w
// TEXCOORD                 7   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[8], immediateIndexed
dcl_constantbuffer cb7[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyw
dcl_output o0.xyzw
dcl_temps 18
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r16.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f01bcb05c6178107-ps.txt

mul r16.w, -r16.x, r16.y
mad r17.xyz, -r16.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r17.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mul r3.xyz, r2.yyyy, v3.xyzx
mad r3.xyz, v2.xyzx, r2.xxxx, r3.xyzx
mad r3.xyz, v4.xyzx, r2.zzzz, r3.xyzx
mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r4.xyzw, r4.xyxx, t0.xyzw, s3
mul r4.x, r4.w, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, cb0[4].xxxx
dp2 r1.w, r4.xyxx, r4.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r4.z, r1.w
mad r5.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
mad r5.zw, v1.xxxy, cb0[10].xxxy, cb0[10].zzzw
sample r6.xyzw, r5.xyxx, t1.xyzw, s4
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
dp3_sat r1.w, r4.xyzx, r3.xyzx
add r1.w, -r1.w, l(1.000000)
log r1.w, r1.w
mul r1.w, r1.w, cb0[8].x
exp r1.w, r1.w
mul r3.xyz, r1.wwww, cb0[9].xyzx
sample r5.xyzw, r5.zwzz, t2.xyzw, s5
mul r3.xyz, r3.xyzx, r5.xyzx
mad r3.xyz, r6.xyzx, cb0[7].xyzx, r3.xyzx
mad r5.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
sample r5.xyzw, r5.xyxx, t3.xyzw, s6
mad r6.xy, v1.xyxx, cb0[13].xyxx, cb0[13].zwzz
sample r6.xyzw, r6.xyxx, t4.xyzw, s7
mad r6.yz, v1.xxyx, cb0[14].xxyx, cb0[14].zzwz
sample r7.xyzw, r6.yzyy, t5.xyzw, s8
add r1.w, r7.x, l(-1.000000)
mad r1.w, cb0[15].x, r1.w, l(1.000000)
mov r7.x, cb4[9].z
mov r7.y, cb4[10].z
mov r7.z, cb4[11].z
dp3 r2.w, r1.xyzx, r7.xyzx
add r7.xyz, r0.xyzx, -cb3[25].xyzx
dp3 r3.w, r7.xyzx, r7.xyzx
sqrt r3.w, r3.w
add r3.w, -r2.w, r3.w
mad r2.w, cb3[25].w, r3.w, r2.w
mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
eq r3.w, cb7[0].x, l(1.000000)
if_nz r3.w
  eq r4.w, cb7[0].y, l(1.000000)
  mul r7.xyz, v3.wwww, cb7[2].xyzx
  mad r7.xyz, cb7[1].xyzx, v2.wwww, r7.xyzx
  mad r7.xyz, cb7[3].xyzx, v4.wwww, r7.xyzx
  add r7.xyz, r7.xyzx, cb7[4].xyzx
  movc r7.xyz, r4.wwww, r7.xyzx, r0.xyzx
  add r7.xyz, r7.xyzx, -cb7[6].xyzx
  mul r7.yzw, r7.xxyz, cb7[5].xxyz
  mad r4.w, r7.y, l(0.250000), l(0.750000)
  mad r5.w, cb7[0].z, l(0.500000), l(0.750000)
  max r7.x, r4.w, r5.w
  sample r7.xyzw, r7.xzwx, t9.xyzw, s1
else
  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r4.w, r7.xyzw, cb2[46].xyzw
div r6.yz, v6.xxyx, v6.wwww
sample r7.xyzw, r6.yzyy, t6.xyzw, s2
add r4.w, r4.w, -r7.x
mad r2.w, r2.w, r4.w, r7.x
dp3 r7.x, v2.xyzx, r4.xyzx
dp3 r7.y, v3.xyzx, r4.xyzx
dp3 r7.z, v4.xyzx, r4.xyzx
dp3 r4.x, r7.xyzx, r7.xyzx
rsq r4.x, r4.x
mul r4.xyz, r4.xxxx, r7.xyzx
add r5.w, -r6.w, l(1.000000)
dp3 r6.y, -r2.xyzx, r4.xyzx
add r6.y, r6.y, r6.y
mad r7.xyz, r4.xyzx, -r6.yyyy, -r2.xyzx
mul r8.xyz, r2.wwww, cb0[2].xyzx
if_nz r3.w
  eq r2.w, cb7[0].y, l(1.000000)
  mul r9.xyz, v3.wwww, cb7[2].xyzx
  mad r9.xyz, cb7[1].xyzx, v2.wwww, r9.xyzx
  mad r9.xyz, cb7[3].xyzx, v4.wwww, r9.xyzx
  add r9.xyz, r9.xyzx, cb7[4].xyzx
  movc r9.xyz, r2.wwww, r9.xyzx, r0.xyzx
  add r9.xyz, r9.xyzx, -cb7[6].xyzx
  mul r9.yzw, r9.xxyz, cb7[5].xxyz
  mul r2.w, r9.y, l(0.250000)
  mul r3.w, cb7[0].z, l(0.500000)
  mad r6.y, -cb7[0].z, l(0.500000), l(0.250000)
  max r2.w, r2.w, r3.w
  min r9.x, r6.y, r2.w
  sample r10.xyzw, r9.xzwx, t9.xyzw, s1
  add r11.xyz, r9.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r11.xyzw, r11.xyzx, t9.xyzw, s1
  add r9.xyz, r9.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r9.xyzw, r9.xyzx, t9.xyzw, s1
  mov r4.w, l(1.000000)
  dp4 r10.x, r10.xyzw, r4.xyzw
  dp4 r10.y, r11.xyzw, r4.xyzw
  dp4 r10.z, r9.xyzw, r4.xyzw
else
  mov r4.w, l(1.000000)
  dp4 r10.x, cb2[39].xyzw, r4.xyzw
  dp4 r10.y, cb2[40].xyzw, r4.xyzw
  dp4 r10.z, cb2[41].xyzw, r4.xyzw
endif
add r9.xyz, r10.xyzx, v5.xyzx
max r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.w, l(0.000000), cb6[2].w
if_nz r2.w
  dp3 r2.w, r7.xyzx, r7.xyzx
  rsq r2.w, r2.w
  mul r10.xyz, r2.wwww, r7.xyzx
  add r11.xyz, -r0.xyzx, cb6[0].xyzx
  div r11.xyz, r11.xyzx, r10.xyzx
  add r12.xyz, -r0.xyzx, cb6[1].xyzx
  div r12.xyz, r12.xyzx, r10.xyzx
  lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  min r2.w, r11.y, r11.x
  min r2.w, r11.z, r2.w
  add r11.xyz, r0.xyzx, -cb6[2].xyzx
  mad r10.xyz, r10.xyzx, r2.wwww, r11.xyzx
else
  mov r10.xyz, r7.xyzx
endif
mad r2.w, -r5.w, l(0.700000), l(1.700000)
mul r2.w, r2.w, r5.w
mul r2.w, r2.w, l(6.000000)
sample_l r10.xyzw, r10.xyzx, t7.xyzw, s0, r2.w
add r3.w, r10.w, l(-1.000000)
mad r3.w, cb6[3].w, r3.w, l(1.000000)
log r3.w, r3.w
mul r3.w, r3.w, cb6[3].y
exp r3.w, r3.w
mul r3.w, r3.w, cb6[3].x
mul r11.xyz, r10.xyzx, r3.wwww
lt r4.w, cb6[1].w, l(0.999990)
if_nz r4.w
  lt r4.w, l(0.000000), cb6[6].w
  if_nz r4.w
    dp3 r4.w, r7.xyzx, r7.xyzx
    rsq r4.w, r4.w
    mul r12.xyz, r4.wwww, r7.xyzx
    add r13.xyz, -r0.xyzx, cb6[4].xyzx
    div r13.xyz, r13.xyzx, r12.xyzx
    add r14.xyz, -r0.xyzx, cb6[5].xyzx
    div r14.xyz, r14.xyzx, r12.xyzx
    lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
    movc r13.xyz, r15.xyzx, r13.xyzx, r14.xyzx
    min r4.w, r13.y, r13.x
    min r4.w, r13.z, r4.w
    add r0.xyz, r0.xyzx, -cb6[6].xyzx
    mad r7.xyz, r12.xyzx, r4.wwww, r0.xyzx
  endif
  sample_l r7.xyzw, r7.xyzx, t8.xyzw, s0, r2.w
  add r0.x, r7.w, l(-1.000000)
  mad r0.x, cb6[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb6[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb6[7].x
  mul r0.xyz, r7.xyzx, r0.xxxx
  mad r7.xyz, r3.wwww, r10.xyzx, -r0.xyzx
  mad r11.xyz, cb6[1].wwww, r7.xyzx, r0.xyzx
endif
mul r0.xyz, r1.wwww, r11.xyzx
add r7.xyz, r3.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r7.xyz, r6.xxxx, r7.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r2.w, -r6.x, l(0.960000), l(0.960000)
mul r3.xyz, r2.wwww, r3.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r4.xyzx, r2.xyzx
dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
dp3_sat r2.y, r4.xyzx, r1.xyzx
dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
mul r1.y, r1.x, r1.x
dp2 r1.y, r1.yyyy, r5.wwww
add r1.y, r1.y, l(-0.500000)
add r1.z, -r2.x, l(1.000000)
mul r2.z, r1.z, r1.z
mul r2.z, r2.z, r2.z
mul r1.z, r1.z, r2.z
mad r1.z, r1.y, r1.z, l(1.000000)
add r2.z, -|r0.w|, l(1.000000)
mul r3.w, r2.z, r2.z
mul r3.w, r3.w, r3.w
mul r2.z, r2.z, r3.w
mad r1.y, r1.y, r2.z, l(1.000000)
mul r1.y, r1.y, r1.z
mul r1.y, r2.x, r1.y
mul r1.z, r5.w, r5.w
max r1.z, r1.z, l(0.002000)
add r3.w, -r1.z, l(1.000000)
mad r4.x, |r0.w|, r3.w, r1.z
mad r3.w, r2.x, r3.w, r1.z
mul r0.w, |r0.w|, r3.w
mad r0.w, r2.x, r4.x, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r3.w, r1.z, r1.z
mad r4.x, r2.y, r3.w, -r2.y
mad r2.y, r4.x, r2.y, l(1.000000)
mul r3.w, r3.w, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r3.w, r2.y
mul r0.w, r0.w, r2.y
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.x, r0.w
max r0.w, r0.w, l(0.000000)
mad r1.z, r1.z, r1.z, l(1.000000)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
dp3 r2.x, r7.xyzx, r7.xyzx
ne r2.x, r2.x, l(0.000000)
and r2.x, r2.x, l(0x3f800000)
mul r0.w, r0.w, r2.x
add r2.x, -r2.w, r6.w
add_sat r2.x, r2.x, l(1.000000)
mul r4.xyz, r1.yyyy, r8.xyzx
mad r4.xyz, r9.xyzx, r1.wwww, r4.xyzx
mul r6.xyz, r8.xyzx, r0.wwww
add r0.w, -r1.x, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.xyzw, r0.xyzw, r1.zzzx
add r1.xyw, -r7.xyxz, l(1.000000, 1.000000, 0.000000, 1.000000)
mad r1.xyw, r1.xyxw, r0.wwww, r7.xyxz
mul r1.xyw, r1.xyxw, r6.xyxz
mad r1.xyw, r3.xyxz, r4.xyxz, r1.xyxw
add r2.xyw, -r7.xyxz, r2.xxxx
mad r2.xyz, r2.zzzz, r2.xywx, r7.xyzx
mad r0.xyz, r0.xyzx, r2.xyzx, r1.xywx
mad r0.xyz, cb0[12].xxxx, r5.xyzx, r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
add r0.xyz, r0.xyzx, -cb5[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used