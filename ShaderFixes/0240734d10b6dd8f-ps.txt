// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0240734d10b6dd8f-ps.txt
// 3DMigoto: 0240734d10b6dd8f |    Unity headers extracted from DynamicFog_Opaque_Standard Shader Solid Color
//    Shader "DynamicFog/Opaque/Standard Shader Solid Color" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from DynamicFog_Opaque_Standard Shader Solid Color:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 244 5 10
//   undeciphered1a: 11
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
//   undeciphered2: 1 4 7 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 144
//   Vector 32 [_LightColor0]
//   Float 64 [_Glossiness]
//   Float 68 [_Metallic]
//   Vector 80 [_Color]
//   Vector 96 [_FogData]
//   Vector 112 [_FogColor]
//   Float 128 [_FogData2]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_ShadowMapTexture] 2D 2
//   SetTexture 1 [unity_SpecCube0] CUBE 0
//   SetTexture 2 [unity_SpecCube1] CUBE -1
//   SetTexture 3 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityReflectionProbes" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:24:21 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 4   xyzw        5     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyw
dcl_output o0.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0240734d10b6dd8f-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v2.xyzx, r12.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
mov r2.x, cb4[9].z
mov r2.y, cb4[10].z
mov r2.z, cb4[11].z
dp3 r1.w, r0.xyzx, r2.xyzx
add r2.xyz, v2.xyzx, -cb3[25].xyzx
dp3 r2.x, r2.xyzx, r2.xyzx
sqrt r2.x, r2.x
add r2.x, -r1.w, r2.x
mad r1.w, cb3[25].w, r2.x, r1.w
mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
eq r2.x, cb6[0].x, l(1.000000)
if_nz r2.x
  eq r2.y, cb6[0].y, l(1.000000)
  mul r3.xyz, v2.yyyy, cb6[2].xyzx
  mad r3.xyz, cb6[1].xyzx, v2.xxxx, r3.xyzx
  mad r3.xyz, cb6[3].xyzx, v2.zzzz, r3.xyzx
  add r3.xyz, r3.xyzx, cb6[4].xyzx
  movc r2.yzw, r2.yyyy, r3.xxyz, v2.xxyz
  add r2.yzw, r2.yyzw, -cb6[6].xxyz
  mul r3.yzw, r2.yyzw, cb6[5].xxyz
  mad r2.y, r3.y, l(0.250000), l(0.750000)
  mad r2.z, cb6[0].z, l(0.500000), l(0.750000)
  max r3.x, r2.z, r2.y
  sample r3.xyzw, r3.xzwx, t3.xyzw, s1
else
  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.y, r3.xyzw, cb2[46].xyzw
div r2.zw, v4.xxxy, v4.wwww
sample r3.xyzw, r2.zwzz, t0.xyzw, s2
add r2.y, r2.y, -r3.x
mad r1.w, r1.w, r2.y, r3.x
add r2.y, -cb0[4].x, l(1.000000)
dp3 r2.z, -r1.xyzx, v1.xyzx
add r2.z, r2.z, r2.z
mad r3.xyz, v1.xyzx, -r2.zzzz, -r1.xyzx
mul r4.xyz, r1.wwww, cb0[2].xyzx
if_nz r2.x
  eq r1.w, cb6[0].y, l(1.000000)
  mul r2.xzw, v2.yyyy, cb6[2].xxyz
  mad r2.xzw, cb6[1].xxyz, v2.xxxx, r2.xxzw
  mad r2.xzw, cb6[3].xxyz, v2.zzzz, r2.xxzw
  add r2.xzw, r2.xxzw, cb6[4].xxyz
  movc r2.xzw, r1.wwww, r2.xxzw, v2.xxyz
  add r2.xzw, r2.xxzw, -cb6[6].xxyz
  mul r5.yzw, r2.xxzw, cb6[5].xxyz
  mul r1.w, r5.y, l(0.250000)
  mul r2.x, cb6[0].z, l(0.500000)
  mad r2.z, -cb6[0].z, l(0.500000), l(0.250000)
  max r1.w, r1.w, r2.x
  min r5.x, r2.z, r1.w
  sample r6.xyzw, r5.xzwx, t3.xyzw, s1
  add r2.xzw, r5.xxzw, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r7.xyzw, r2.xzwx, t3.xyzw, s1
  add r2.xzw, r5.xxzw, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r5.xyzw, r2.xzwx, t3.xyzw, s1
  mov r8.xyz, v1.xyzx
  mov r8.w, l(1.000000)
  dp4 r6.x, r6.xyzw, r8.xyzw
  dp4 r6.y, r7.xyzw, r8.xyzw
  dp4 r6.z, r5.xyzw, r8.xyzw
else
  mov r5.xyz, v1.xyzx
  mov r5.w, l(1.000000)
  dp4 r6.x, cb2[39].xyzw, r5.xyzw
  dp4 r6.y, cb2[40].xyzw, r5.xyzw
  dp4 r6.z, cb2[41].xyzw, r5.xyzw
endif
add r2.xzw, r6.xxyz, v3.xxyz
max r2.xzw, r2.xxzw, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.w, l(0.000000), cb5[2].w
if_nz r1.w
  dp3 r1.w, r3.xyzx, r3.xyzx
  rsq r1.w, r1.w
  mul r5.xyz, r1.wwww, r3.xyzx
  add r6.xyz, -v2.xyzx, cb5[0].xyzx
  div r6.xyz, r6.xyzx, r5.xyzx
  add r7.xyz, -v2.xyzx, cb5[1].xyzx
  div r7.xyz, r7.xyzx, r5.xyzx
  lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
  movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
  min r1.w, r6.y, r6.x
  min r1.w, r6.z, r1.w
  add r6.xyz, v2.xyzx, -cb5[2].xyzx
  mad r5.xyz, r5.xyzx, r1.wwww, r6.xyzx
else
  mov r5.xyz, r3.xyzx
endif
mad r1.w, -r2.y, l(0.700000), l(1.700000)
mul r1.w, r1.w, r2.y
mul r1.w, r1.w, l(6.000000)
sample_l r5.xyzw, r5.xyzx, t1.xyzw, s0, r1.w
add r3.w, r5.w, l(-1.000000)
mad r3.w, cb5[3].w, r3.w, l(1.000000)
log r3.w, r3.w
mul r3.w, r3.w, cb5[3].y
exp r3.w, r3.w
mul r3.w, r3.w, cb5[3].x
mul r6.xyz, r5.xyzx, r3.wwww
lt r4.w, cb5[1].w, l(0.999990)
if_nz r4.w
  lt r4.w, l(0.000000), cb5[6].w
  if_nz r4.w
    dp3 r4.w, r3.xyzx, r3.xyzx
    rsq r4.w, r4.w
    mul r7.xyz, r3.xyzx, r4.wwww
    add r8.xyz, -v2.xyzx, cb5[4].xyzx
    div r8.xyz, r8.xyzx, r7.xyzx
    add r9.xyz, -v2.xyzx, cb5[5].xyzx
    div r9.xyz, r9.xyzx, r7.xyzx
    lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
    movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
    min r4.w, r8.y, r8.x
    min r4.w, r8.z, r4.w
    add r8.xyz, v2.xyzx, -cb5[6].xyzx
    mad r3.xyz, r7.xyzx, r4.wwww, r8.xyzx
  endif
  sample_l r7.xyzw, r3.xyzx, t2.xyzw, s0, r1.w
  add r1.w, r7.w, l(-1.000000)
  mad r1.w, cb5[7].w, r1.w, l(1.000000)
  log r1.w, r1.w
  mul r1.w, r1.w, cb5[7].y
  exp r1.w, r1.w
  mul r1.w, r1.w, cb5[7].x
  mul r3.xyz, r7.xyzx, r1.wwww
  mad r5.xyz, r3.wwww, r5.xyzx, -r3.xyzx
  mad r6.xyz, cb5[1].wwww, r5.xyzx, r3.xyzx
endif
dp3 r1.w, v1.xyzx, v1.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v1.xyzx
add r5.xyz, cb0[5].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r5.xyz, cb0[4].yyyy, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -cb0[4].y, l(0.960000), l(0.960000)
mul r7.xyz, r1.wwww, cb0[5].xyzx
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.xyzx, r1.xyzx
dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
dp3_sat r1.y, r3.xyzx, r0.xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r2.yyyy
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.x, l(1.000000)
mul r1.z, r0.z, r0.z
mul r1.z, r1.z, r1.z
mul r0.z, r0.z, r1.z
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.z, -|r0.w|, l(1.000000)
mul r3.x, r1.z, r1.z
mul r3.x, r3.x, r3.x
mul r1.z, r1.z, r3.x
mad r0.y, r0.y, r1.z, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r2.y, r2.y
max r0.z, r0.z, l(0.002000)
add r2.y, -r0.z, l(1.000000)
mad r3.x, |r0.w|, r2.y, r0.z
mad r2.y, r1.x, r2.y, r0.z
mul r0.w, |r0.w|, r2.y
mad r0.w, r1.x, r3.x, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r2.y, r0.z, r0.z
mad r3.x, r1.y, r2.y, -r1.y
mad r1.y, r3.x, r1.y, l(1.000000)
mul r2.y, r2.y, l(0.318309873)
mad r1.y, r1.y, r1.y, l(1.000000012E-007)
div r1.y, r2.y, r1.y
mul r0.w, r0.w, r1.y
mul r0.w, r0.w, l(3.14159274)
mul r0.yw, r1.xxxx, r0.yyyw
max r0.w, r0.w, l(0.000000)
mad r0.z, r0.z, r0.z, l(1.000000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
dp3 r1.x, r5.xyzx, r5.xyzx
ne r1.x, r1.x, l(0.000000)
and r1.x, r1.x, l(0x3f800000)
mul r0.w, r0.w, r1.x
add r1.x, -r1.w, l(1.000000)
add_sat r1.x, r1.x, cb0[4].x
mad r2.xyz, r4.xyzx, r0.yyyy, r2.xzwx
mul r3.xyz, r4.xyzx, r0.wwww
add r0.x, -r0.x, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.y, r0.y, r0.y
mul r0.x, r0.x, r0.y
add r4.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyw, r4.xyxz, r0.xxxx, r5.xyxz
mul r0.xyw, r0.xyxw, r3.xyxz
mad r0.xyw, r7.xyxz, r2.xyxz, r0.xyxw
mul r2.xyz, r6.xyzx, r0.zzzz
add r1.xyw, -r5.xyxz, r1.xxxx
mad r1.xyz, r1.zzzz, r1.xywx, r5.xyzx
mad r0.xyz, r2.xyzx, r1.xyzx, r0.xywx
add r1.y, v2.y, -cb0[6].y
add r0.w, cb0[6].y, l(0.000100)
add r2.y, -r0.w, r12.y
ge r0.w, cb0[6].x, r2.y
ge r1.w, cb0[6].x, r1.y
or r0.w, r0.w, r1.w
if_nz r0.w
  mov r2.xz, r12.xxzx
  mov r1.xz, v2.xxzx
  add r1.xzw, r1.xxyz, -r2.xxyz
  dp2 r0.w, r1.xwxx, r1.xwxx
  sqrt r0.w, r0.w
  div r3.xy, r1.xwxx, r0.wwww
  div r0.w, r0.w, r1.z
  min r4.y, r2.y, cb0[6].x
  add r2.w, r2.y, -r4.y
  mul r2.w, r0.w, r2.w
  mad r4.xz, -r3.xxyx, r2.wwww, r12.xxzx
  dp3 r1.x, r1.xzwx, r1.xzwx
  add r2.xzw, -r2.xxyz, r4.xxyz
  dp3 r1.w, r2.xzwx, r2.xzwx
  sqrt r1.xw, r1.xxxw
  lt r2.x, r1.w, r1.x
  if_nz r2.x
    lt r2.x, l(0.000000), r0.w
    lt r2.z, l(-0.500000), r1.y
    and r2.x, r2.z, r2.x
    lt r2.z, r0.w, l(0.000000)
    lt r2.w, r1.y, l(0.500000)
    and r2.z, r2.w, r2.z
    and r1.y, r1.y, r2.z
    movc r5.y, r2.x, cb0[6].x, r1.y
    add r1.y, -r2.y, r5.y
    mul r0.w, r0.w, r1.y
    mad r5.xz, -r3.xxyx, r0.wwww, r12.xxzx
    add r2.xyz, r4.xyzx, -r5.xyzx
    dp3 r0.w, r2.xyzx, r2.xyzx
    sqrt r0.w, r0.w
    add r1.y, -r1.w, r1.x
    min r0.w, r0.w, r1.y
    lt r1.y, l(0.000000), r0.w
    div r1.x, r1.z, r1.x
    mul r1.x, r0.w, r1.x
    add r1.z, -r4.y, cb0[6].x
    mul r2.x, cb0[6].w, cb0[6].x
    div r1.z, r1.z, r2.x
    add r1.z, r1.z, l(-0.100000)
    add r2.y, r1.w, -cb0[6].z
    div r2.y, r2.y, cb0[8].x
    min_sat r1.z, r1.z, r2.y
    mul r3.w, r1.z, cb0[7].w
    mul r3.xyz, r3.wwww, cb0[7].xyzx
    mad r2.y, r1.x, l(0.500000), r4.y
    mad r1.w, r0.w, l(0.500000), r1.w
    add r2.z, -r2.y, cb0[6].x
    div r2.z, r2.z, r2.x
    add r2.z, r2.z, l(-0.100000)
    add r2.w, r1.w, -cb0[6].z
    div r2.w, r2.w, cb0[8].x
    min_sat r2.z, r2.w, r2.z
    mul r4.w, r2.z, cb0[7].w
    mul r4.xyz, r4.wwww, cb0[7].xyzx
    mad r1.z, -cb0[7].w, r1.z, l(1.000000)
    mad r3.xyzw, r4.xyzw, r1.zzzz, r3.xyzw
    mad r1.x, r1.x, l(0.500000), r2.y
    mad r0.w, r0.w, l(0.500000), r1.w
    add r1.x, -r1.x, cb0[6].x
    div r1.x, r1.x, r2.x
    add r1.x, r1.x, l(-0.100000)
    add r0.w, r0.w, -cb0[6].z
    div r0.w, r0.w, cb0[8].x
    min_sat r0.w, r0.w, r1.x
    mul r2.w, r0.w, cb0[7].w
    mul r2.xyz, r2.wwww, cb0[7].xyzx
    add r0.w, -r3.w, l(1.000000)
    mad r2.xyzw, r2.xyzw, r0.wwww, r3.xyzw
    mul r1.xzw, r2.xxyz, cb0[7].wwww
    mad r0.w, -r2.w, cb0[7].w, l(1.000000)
    mad r1.xzw, r0.xxyz, r0.wwww, r1.xxzw
    movc r0.xyz, r1.yyyy, r1.xzwx, r0.xyzx
  endif
endif
mov o0.xyz, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used