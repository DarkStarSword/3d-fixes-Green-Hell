// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a5d735ee764673cf-ps.txt
// 3DMigoto: a5d735ee764673cf | Matched 2 variants of 1 shaders: Lux Water/WaterSurface
//
//       Unity headers extracted from Lux Water_WaterSurface
//       Shader "Lux Water/WaterSurface" {
//         CustomEditor "LuxWaterMaterialEditor"
//         SubShader 1/1 {
//           LOD 200
//           Tags { "FORCENOSHADOWCASTING"="true" "QUEUE"="Transparent-1" "RenderType"="Opaque" }
//           Pass 2/4 {
//             Name "FORWARD"
//             Tags { "FORCENOSHADOWCASTING"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent-1" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             ZWrite [_ZWrite]
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Lux Water_WaterSurface:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 215 8 2
//      undeciphered1a: 13
// 1:   Keywords { "DIRECTIONAL" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 2:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
//      undeciphered2: 1 6 6 6 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 544
//      Vector 32 [_LightColor0]
//      Vector 48 [_SpecColor]
//      Float 64 [_FresnelPower]
//      Vector 80 [_Lux_UnderWaterAmbientSkyLight]
//      Float 96 [_ReflectionStrength]
//      Float 100 [_WaterIOR]
//      Vector 112 [_UnderWaterReflCol]
//      Float 128 [_ScatteringPower]
//      Vector 132 [_TranslucencyColor] 3
//      Vector 144 [_FarBumpSampleParams] 2
//      Vector 160 [_BumpTiling]
//      Vector 176 [_BumpScale]
//      Vector 192 [_FinalBumpSpeed01]
//      Vector 208 [_FinalBumpSpeed23] 2
//      Float 216 [_WaterSurfaceYPos]
//      Float 340 [_Glossiness]
//      Float 344 [_InvFade]
//      Float 348 [_ReflectionBumpScale]
//      Vector 384 [_Color]
//      Vector 400 [_DepthAtten] 3
//      Float 412 [_Density]
//      Float 420 [_FogAbsorptionCancellation]
//      Float 424 [_AbsorptionHeight]
//      Float 428 [_AbsorptionMaxHeight]
//      Float 432 [_AbsorptionDepth]
//      Float 436 [_AbsorptionColorStrength]
//      Float 440 [_AbsorptionStrength]
//      Float 444 [_Refraction]
//      Vector 512 [_GrabTexture_TexelSize]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      Vector 112 [_ZBufferParams]
//      ConstBuffer "UnityPerCameraRare" 352
//      Matrix 288 [unity_CameraToWorld]
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 736 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityFog" 32
//      Vector 0 [unity_FogColor]
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_BumpMap] 2D 2
//      SetTexture 1 [_LuxWater_NormalOverlay] 2D 3
//      SetTexture 2 [_CameraDepthTexture] 2D 5
//      SetTexture 3 [_GrabTexture] 2D 4
//      SetTexture 4 [_LuxWater_ReflectionTex] 2D 1
//      SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerCameraRare" 2
//      BindCB "UnityLighting" 3
//      BindCB "UnityFog" 4
//      BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:52:07 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xy
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz
// TEXCOORD                 6   xyzw        7     NONE   float
// TEXCOORD                 7   xyz         8     NONE   float
// TEXCOORD                 8   xyzw        9     NONE   float
// SV_IsFrontFace           0   x          10    FFACE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[33], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[47], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xy
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv v10.x, is_front_face
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a5d735ee764673cf-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

movc r0.z, v10.x, l(1.000000), l(-1.000000)
mov r1.y, v1.w
mov r1.z, v2.w
mov r1.w, v3.w
add r2.xyz, -r1.yzwy, r14.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r2.xyzx
div r4.xy, v5.xyxx, v5.wwww
mul r5.xyzw, cb0[12].xyzw, cb1[0].xxxx
mad r6.xyzw, v4.xyxy, cb0[10].xxyy, r5.xyzw
mul r5.zw, cb0[13].xxxy, cb1[0].xxxx
mad r5.zw, v4.xxxy, cb0[10].zzzz, r5.zzzw
mul r5.xy, r5.xyxx, cb0[9].xxxx
mad r5.xy, r6.xyxx, cb0[9].xxxx, r5.xyxx
sample r7.xyzw, r5.xyxx, t0.xyzw, s2
mad r5.xy, r7.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r5.xy, r5.xyxx, l(0.050000, 0.050000, 0.000000, 0.000000), r6.xyxx
sample r8.xyzw, r5.xyxx, t0.xyzw, s2
mul_sat r1.x, v5.w, cb0[9].y
add r5.xy, r7.wyww, -r8.wyww
mad r5.xy, r1.xxxx, r5.xyxx, r8.wyww
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r5.xy, r5.xyxx, cb0[11].xxxx
mad r6.xy, r5.xyxx, l(0.050000, 0.050000, 0.000000, 0.000000), r6.zwzz
sample r6.xyzw, r6.xyxx, t0.xyzw, s2
sample r7.xyzw, r5.zwzz, t0.xyzw, s2
mad r5.zw, r6.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mad r5.xy, r5.zwzz, cb0[11].yyyy, r5.xyxx
mad r5.zw, r7.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mad r5.xy, r5.zwzz, cb0[11].zzzz, r5.xyxx
dp2 r1.x, r5.xyxx, r5.xyxx
min r1.x, r1.x, l(1.000000)
add r1.x, -r1.x, l(1.000000)
sqrt r5.z, r1.x
dp3 r1.x, r5.xyzx, r5.xyzx
rsq r1.x, r1.x
mul r2.w, r1.x, r5.z
sample r6.xyzw, r4.xyxx, t1.xyzw, s3
add r6.xyz, r6.xyzx, l(-0.000000, -0.000000, -1.000000, 0.000000)
mad r6.xyz, r6.wwww, r6.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mad r5.xy, r5.xyxx, r1.xxxx, r6.xyxx
mul r5.z, r2.w, r6.z
dp3 r1.x, r5.xyzx, r5.xyzx
rsq r1.x, r1.x
mul r5.xyz, r1.xxxx, r5.xyzx
mul r6.xyz, r0.zzzz, r5.xyzx
dp3 r7.x, v1.xyzx, r6.xyzx
dp3 r7.z, v3.xyzx, r6.xyzx
sample r8.xyzw, r4.xyxx, t2.xyzw, s5
mad r1.x, cb1[7].z, r8.x, cb1[7].w
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
add r1.x, r1.x, -v5.w
mul_sat r1.x, r1.x, cb0[21].z
add r2.w, -v5.z, l(1.000000)
mul r8.yz, cb0[27].wwww, cb0[32].xxyx
mul r8.yz, r2.wwww, r8.yyzy
mul r8.yz, r1.xxxx, r8.yyzy
mad r9.xy, r7.xzxx, r8.yzyy, v5.xyxx
div r9.xy, r9.xyxx, v5.wwww
sample_l r10.xyzw, r9.xyxx, t2.xyzw, s5, l(0.000000)
mad r2.w, cb1[7].z, r10.x, cb1[7].w
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
lt r2.w, r2.w, v5.w
mov r4.z, r8.x
mov r9.z, r10.x
movc r9.xyz, r2.wwww, r4.xyzx, r9.xyzx
mad r4.zw, cb1[7].zzzx, r9.zzzz, cb1[7].wwwy
div r4.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r4.zzzw
add r2.w, r4.z, -v5.w
mul_sat r3.w, r2.w, cb0[21].z
div r4.z, cb1[5].z, v6.z
mul r10.xyz, r4.zzzz, v6.xyzx
mul r10.xyz, r4.wwww, r10.xyzx
mul r4.z, r10.y, cb2[19].y
mad r4.z, cb2[18].y, r10.x, r4.z
mad r4.z, cb2[20].y, r10.z, r4.z
add r4.z, r4.z, cb2[21].y
add r4.z, -r4.z, cb0[13].z
add r4.w, r4.z, -cb0[25].x
div_sat r4.w, r4.w, cb0[25].y
mul r4.w, r4.w, l(-11.541560)
exp r4.w, r4.w
add r4.w, -r4.w, l(1.000000)
mov_sat r5.w, cb0[25].z
mul r4.w, r4.w, r5.w
movc r2.w, v10.x, r2.w, v5.w
mul r5.w, -r2.w, cb0[25].w
mul r5.w, r5.w, l(1.442695)
exp r5.w, r5.w
add r5.w, -r5.w, l(1.000000)
max r5.w, r5.w, l(0.000000)
max r4.w, r4.w, r5.w
div_sat r4.z, r4.z, cb0[26].w
mul r4.z, r4.z, -r4.z
mul r4.z, r4.z, cb0[26].z
exp r4.z, r4.z
mul r2.w, -r2.w, cb0[27].x
mul r2.w, r2.w, l(1.442695)
exp r2.w, r2.w
mul r2.w, r4.z, r2.w
min r2.w, r2.w, l(1.000000)
add r2.w, r2.w, l(-1.000000)
mad r2.w, cb0[27].z, r2.w, l(1.000000)
mad_sat r2.w, r4.w, cb0[26].y, r2.w
add r10.xyzw, -r2.wwww, l(1.000000, -0.450000, -0.029000, -0.018000)
mul r4.z, r10.x, cb0[27].y
mad_sat r10.xyz, r4.zzzz, r10.yzwy, r2.wwww
sample_l r9.xyzw, r9.xyxx, t3.xyzw, s4, l(0.000000)
mov r0.xy, l(0,0,0,0)
mad r5.xyz, r5.xyzx, r0.zzzz, -r0.yyzy
mad r0.xyz, cb0[21].wwww, r5.xyzx, r0.xyzx
dp3 r5.x, v1.xyzx, r0.xyzx
dp3 r5.y, v3.xyzx, r0.xyzx
mad r0.xy, r5.xyxx, r8.yzyy, r4.xyxx
sample r5.xyzw, r0.xyxx, t4.xyzw, s1
div r0.x, v5.z, cb1[5].y
add r0.x, -r0.x, l(1.000000)
mul r0.x, r0.x, cb1[5].z
max r0.x, r0.x, l(0.000000)
eq r0.y, cb5[0].x, l(1.000000)
if_nz r0.y
  eq r0.y, cb5[0].y, l(1.000000)
  mul r4.xyz, v2.wwww, cb5[2].xyzx
  mad r4.xyz, cb5[1].xyzx, v1.wwww, r4.xyzx
  mad r4.xyz, cb5[3].xyzx, v3.wwww, r4.xyzx
  add r4.xyz, r4.xyzx, cb5[4].xyzx
  movc r1.yzw, r0.yyyy, r4.xxyz, r1.yyzw
  add r1.yzw, r1.yyzw, -cb5[6].xxyz
  mul r8.yzw, r1.yyzw, cb5[5].xxyz
  mad r0.y, r8.y, l(0.250000), l(0.750000)
  mad r0.z, cb5[0].z, l(0.500000), l(0.750000)
  max r8.x, r0.z, r0.y
  sample r8.xyzw, r8.xzwx, t5.xyzw, s0
else
  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r0.y, r8.xyzw, cb3[46].xyzw
dp3 r7.y, v2.xyzx, r6.xyzx
dp3 r0.z, r7.xyzx, r7.xyzx
rsq r0.z, r0.z
mul r1.yzw, r0.zzzz, r7.xxyz
mul r4.xyz, r0.yyyy, cb0[2].xyzx
max r0.y, cb0[3].y, cb0[3].x
max r0.y, r0.y, cb0[3].z
add r0.y, -r0.y, l(1.000000)
add r0.z, -cb0[21].y, l(1.000000)
mad r2.xyz, r2.xyzx, r0.wwww, cb3[0].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, r1.yzwy, r3.xyzx
dp3_sat r2.w, r1.yzwy, cb3[0].xyzx
dp3_sat r5.w, r1.yzwy, r2.xyzx
dp3_sat r2.x, cb3[0].xyzx, r2.xyzx
mul r2.y, r0.z, r0.z
mad r0.z, -r0.z, r0.z, l(1.000000)
mad r2.z, |r0.w|, r0.z, r2.y
mad r0.z, r2.w, r0.z, r2.y
mul r0.z, r0.z, |r0.w|
mad r0.z, r2.w, r2.z, r0.z
add r0.z, r0.z, l(0.000010)
div r0.z, l(0.500000), r0.z
mul r2.z, r2.y, r2.y
mad r6.x, r5.w, r2.z, -r5.w
mad r5.w, r6.x, r5.w, l(1.000000)
mul r2.z, r2.z, l(0.318309873)
mad r5.w, r5.w, r5.w, l(1.000000012E-007)
div r2.z, r2.z, r5.w
mul r0.z, r0.z, r2.z
mul r0.z, r0.z, l(3.14159274)
mul r0.z, r2.w, r0.z
max r0.z, r0.z, l(0.000000)
mul r6.xyz, r4.xyzx, r0.zzzz
add r0.z, -r2.x, l(1.000000)
mul r2.x, r0.z, r0.z
mul r2.x, r2.x, r2.x
mul r0.z, r0.z, r2.x
add r2.xzw, -cb0[3].xxyz, l(1.000000, 0.000000, 1.000000, 1.000000)
mad r2.xzw, r2.xxzw, r0.zzzz, cb0[3].xxyz
mad r0.z, r2.y, r2.y, l(1.000000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
add r0.y, -r0.y, cb0[21].y
add_sat r0.y, r0.y, l(1.000000)
mul r2.y, cb0[6].y, l(0.999707043)
mul r2.y, r2.y, r2.y
mad r5.w, -|r0.w|, |r0.w|, l(1.000000)
mul r6.w, r2.y, r5.w
ge r6.w, l(1.000000), r6.w
mad r2.y, -r2.y, r5.w, l(1.000000)
sqrt r2.y, r2.y
add r2.y, -r2.y, l(1.000000)
mul r5.w, r2.y, r2.y
mul r5.w, r5.w, r5.w
mul r2.y, r2.y, r5.w
add r5.w, r0.y, l(-0.020370)
mad r2.y, r2.y, r5.w, l(0.020370)
movc r2.y, r6.w, r2.y, l(1.000000)
add r0.w, -|r0.w|, l(1.000000)
log r0.w, r0.w
mul r0.w, r0.w, cb0[4].x
exp r0.w, r0.w
add r7.xyz, r0.yyyy, -cb0[3].xyzx
mad r7.xyz, r0.wwww, r7.xyzx, cb0[3].xyzx
movc r7.xyz, v10.xxxx, r7.xyzx, r2.yyyy
mov_sat r0.y, cb3[0].y
mul r8.xyz, r0.yyyy, r4.xyzx
dp3 r0.y, cb3[0].xyzx, r3.xyzx
add_sat r0.y, r0.y, l(1.750000)
add r0.y, -r0.y, l(1.000000)
mad r0.y, r0.y, l(2.000000), l(1.000000)
mad r8.xyz, r8.xyzx, r0.yyyy, cb0[5].xyzx
add r11.xyz, -r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r12.xyz, r9.xyzx, r11.xyzx
movc r12.xyz, v10.xxxx, r9.xyzx, r12.xyzx
mad r8.xyz, cb0[24].xyzx, r8.xyzx, -r12.xyzx
mad r8.xyz, r4.wwww, r8.xyzx, r12.xyzx
mul r8.xyz, r10.xyzx, r8.xyzx
mul r0.yzw, r5.xxyz, r0.zzzz
mul r0.yzw, r7.xxyz, r0.yyzw
mul r0.yzw, r0.yyzw, cb0[6].xxxx
movc r5.xyz, v10.xxxx, l(1.000000,1.000000,1.000000,0), cb0[7].xyzx
mul r0.yzw, r0.yyzw, r5.xxyz
mad r0.yzw, r6.xxyz, r2.xxzw, r0.yyzw
add r2.x, -r4.w, l(1.000000)
mul r2.xyz, r0.yzwy, r2.xxxx
mul r5.xyz, r11.xyzx, r8.xyzx
movc r5.xyz, v10.xxxx, r5.xyzx, r8.xyzx
movc r0.yzw, v10.xxxx, r0.yyzw, r2.xxyz
add r0.yzw, r0.yyzw, r5.xxyz
mad r2.xyz, -r1.yzwy, l(0.100000, 0.100000, 0.100000, 0.000000), cb3[0].xyzx
dp3_sat r1.y, -r2.xyzx, r3.xyzx
mad r1.y, r1.y, cb0[8].x, -cb0[8].x
exp r1.y, r1.y
add r1.z, -|r1.z|, l(1.000000)
add_sat r1.z, r1.z, r1.z
mul r1.y, r1.z, r1.y
mul r1.yzw, r4.xxyz, r1.yyyy
mul r1.yzw, r1.yyzw, cb0[8].yyzw
mul_sat r1.yzw, r1.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000)
add r0.yzw, r0.yyzw, r1.yyzw
add r0.yzw, -r9.xxyz, r0.yyzw
mad r0.yzw, r3.wwww, r0.yyzw, r9.xxyz
mad_sat r0.x, r0.x, cb4[1].z, cb4[1].w
add r1.yzw, r0.yyzw, -cb4[0].xxyz
mad r1.yzw, r0.xxxx, r1.yyzw, cb4[0].xxyz
movc o0.xyz, v10.xxxx, r1.yzwy, r0.yzwy
mov o0.w, r1.x
ret
// Approximately 0 instruction slots used