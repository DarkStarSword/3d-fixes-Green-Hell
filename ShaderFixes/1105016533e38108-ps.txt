// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1105016533e38108-ps.txt
// 3DMigoto: 1105016533e38108 |    Unity headers extracted from AVP_Glass_Refraction
//    Shader "AVP/Glass_Refraction" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent+0" "RenderType"="Opaque" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from AVP_Glass_Refraction:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 199 9 8
//   undeciphered1a: 16
//   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "_ALPHAPREMULTIPLY_ON" }
//   undeciphered2: 1 6 6 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 160
//   Vector 32 [_LightColor0]
//   Float 64 [_NormalScale]
//   Vector 80 [_NormalMap_ST]
//   Vector 96 [_Color]
//   Vector 112 [_Albedo_ST]
//   Float 128 [_Metallic]
//   Float 132 [_Smoothness]
//   Float 136 [_ChromaticAberration]
//   Float 140 [_IndexofRefraction]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_NormalMap] 2D 2
//   SetTexture 1 [_Albedo] 2D 3
//   SetTexture 2 [RefractionGrab0] 2D 4
//   SetTexture 3 [unity_SpecCube0] CUBE 0
//   SetTexture 4 [unity_SpecCube1] CUBE -1
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerFrame" 3
//   BindCB "UnityReflectionProbes" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:31:28 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 6   xyzw        7     NONE   float
// TEXCOORD                 7   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[12], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 18
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r16.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1105016533e38108-ps.txt

mul r16.w, -r16.x, r16.y
mad r17.xyz, -r16.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r17.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r3.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r3.xyzw, r3.xyxx, t0.xyzw, s2
mul r3.x, r3.w, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, cb0[4].xxxx
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r3.z, r1.w
mad r4.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
sample r4.xyzw, r4.xyxx, t1.xyzw, s3
mul r5.xyzw, r4.xyzw, cb0[6].xyzw
mul r6.xyz, r0.xyzx, v5.xyzx
mad r3.xyz, r6.xyzx, l(0.000010, 0.000010, 0.000010, 0.000000), r3.xyzx
eq r1.w, cb5[0].x, l(1.000000)
if_nz r1.w
  eq r2.w, cb5[0].y, l(1.000000)
  mul r6.xyz, v3.wwww, cb5[2].xyzx
  mad r6.xyz, cb5[1].xyzx, v2.wwww, r6.xyzx
  mad r6.xyz, cb5[3].xyzx, v4.wwww, r6.xyzx
  add r6.xyz, r6.xyzx, cb5[4].xyzx
  movc r6.xyz, r2.wwww, r6.xyzx, r0.xyzx
  add r6.xyz, r6.xyzx, -cb5[6].xyzx
  mul r6.yzw, r6.xxyz, cb5[5].xxyz
  mad r2.w, r6.y, l(0.250000), l(0.750000)
  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  max r6.x, r2.w, r3.w
  sample r6.xyzw, r6.xzwx, t5.xyzw, s1
else
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r6.xyzw, cb2[46].xyzw
dp3 r6.x, v2.xyzx, r3.xyzx
dp3 r6.y, v3.xyzx, r3.xyzx
dp3 r6.z, v4.xyzx, r3.xyzx
dp3 r3.x, r6.xyzx, r6.xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, r6.xyzx
add r6.xy, -cb0[8].yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
dp3 r4.w, -r2.xyzx, r3.xyzx
add r4.w, r4.w, r4.w
mad r7.xyz, r3.xyzx, -r4.wwww, -r2.xyzx
mul r8.xyz, r2.wwww, cb0[2].xyzx
if_nz r1.w
  eq r1.w, cb5[0].y, l(1.000000)
  mul r9.xyz, v3.wwww, cb5[2].xyzx
  mad r9.xyz, cb5[1].xyzx, v2.wwww, r9.xyzx
  mad r9.xyz, cb5[3].xyzx, v4.wwww, r9.xyzx
  add r9.xyz, r9.xyzx, cb5[4].xyzx
  movc r9.xyz, r1.wwww, r9.xyzx, r0.xyzx
  add r9.xyz, r9.xyzx, -cb5[6].xyzx
  mul r9.yzw, r9.xxyz, cb5[5].xxyz
  mul r1.w, r9.y, l(0.250000)
  mul r2.w, cb5[0].z, l(0.500000)
  mad r4.w, -cb5[0].z, l(0.500000), l(0.250000)
  max r1.w, r1.w, r2.w
  min r9.x, r4.w, r1.w
  sample r10.xyzw, r9.xzwx, t5.xyzw, s1
  add r11.xyz, r9.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r11.xyzw, r11.xyzx, t5.xyzw, s1
  add r9.xyz, r9.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r9.xyzw, r9.xyzx, t5.xyzw, s1
  mov r3.w, l(1.000000)
  dp4 r10.x, r10.xyzw, r3.xyzw
  dp4 r10.y, r11.xyzw, r3.xyzw
  dp4 r10.z, r9.xyzw, r3.xyzw
else
  mov r3.w, l(1.000000)
  dp4 r10.x, cb2[39].xyzw, r3.xyzw
  dp4 r10.y, cb2[40].xyzw, r3.xyzw
  dp4 r10.z, cb2[41].xyzw, r3.xyzw
endif
add r9.xyz, r10.xyzx, v6.xyzx
max r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.w, l(0.000000), cb4[2].w
if_nz r1.w
  dp3 r1.w, r7.xyzx, r7.xyzx
  rsq r1.w, r1.w
  mul r10.xyz, r1.wwww, r7.xyzx
  add r11.xyz, -r0.xyzx, cb4[0].xyzx
  div r11.xyz, r11.xyzx, r10.xyzx
  add r12.xyz, -r0.xyzx, cb4[1].xyzx
  div r12.xyz, r12.xyzx, r10.xyzx
  lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  min r1.w, r11.y, r11.x
  min r1.w, r11.z, r1.w
  add r11.xyz, r0.xyzx, -cb4[2].xyzx
  mad r10.xyz, r10.xyzx, r1.wwww, r11.xyzx
else
  mov r10.xyz, r7.xyzx
endif
mad r1.w, -r6.x, l(0.700000), l(1.700000)
mul r1.w, r1.w, r6.x
mul r1.w, r1.w, l(6.000000)
sample_l r10.xyzw, r10.xyzx, t3.xyzw, s0, r1.w
add r2.w, r10.w, l(-1.000000)
mad r2.w, cb4[3].w, r2.w, l(1.000000)
log r2.w, r2.w
mul r2.w, r2.w, cb4[3].y
exp r2.w, r2.w
mul r2.w, r2.w, cb4[3].x
mul r11.xyz, r10.xyzx, r2.wwww
lt r3.w, cb4[1].w, l(0.999990)
if_nz r3.w
  lt r3.w, l(0.000000), cb4[6].w
  if_nz r3.w
    dp3 r3.w, r7.xyzx, r7.xyzx
    rsq r3.w, r3.w
    mul r12.xyz, r3.wwww, r7.xyzx
    add r13.xyz, -r0.xyzx, cb4[4].xyzx
    div r13.xyz, r13.xyzx, r12.xyzx
    add r14.xyz, -r0.xyzx, cb4[5].xyzx
    div r14.xyz, r14.xyzx, r12.xyzx
    lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
    movc r13.xyz, r15.xyzx, r13.xyzx, r14.xyzx
    min r3.w, r13.y, r13.x
    min r3.w, r13.z, r3.w
    add r0.xyz, r0.xyzx, -cb4[6].xyzx
    mad r7.xyz, r12.xyzx, r3.wwww, r0.xyzx
  endif
  sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r1.w
  add r0.x, r7.w, l(-1.000000)
  mad r0.x, cb4[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb4[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r7.xyzx, r0.xxxx
  mad r7.xyz, r2.wwww, r10.xyzx, -r0.xyzx
  mad r11.xyz, cb4[1].wwww, r7.xyzx, r0.xyzx
endif
mad r0.xyz, cb0[6].xyzx, r4.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r0.xyz, cb0[8].xxxx, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -cb0[8].x, l(0.960000), l(0.960000)
mul r4.xyz, r1.wwww, r5.xyzx
mul r4.xyz, r5.wwww, r4.xyzx
add r2.w, -r1.w, l(1.000000)
mad r1.w, r5.w, r1.w, r2.w
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r3.xyzx, r2.xyzx
dp3_sat r2.x, r3.xyzx, cb2[0].xyzx
dp3_sat r2.y, r3.xyzx, r1.xyzx
dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
mul r1.y, r1.x, r1.x
dp2 r1.y, r1.yyyy, r6.xxxx
add r1.y, r1.y, l(-0.500000)
add r1.z, -r2.x, l(1.000000)
mul r2.z, r1.z, r1.z
mul r2.z, r2.z, r2.z
mul r1.z, r1.z, r2.z
mad r1.z, r1.y, r1.z, l(1.000000)
add r2.z, -|r0.w|, l(1.000000)
mul r3.w, r2.z, r2.z
mul r3.w, r3.w, r3.w
mul r2.z, r2.z, r3.w
mad r1.y, r1.y, r2.z, l(1.000000)
mul r1.y, r1.y, r1.z
mul r1.y, r2.x, r1.y
mul r1.z, r6.x, r6.x
max r1.z, r1.z, l(0.002000)
add r3.w, -r1.z, l(1.000000)
mad r4.w, |r0.w|, r3.w, r1.z
mad r3.w, r2.x, r3.w, r1.z
mul r3.w, |r0.w|, r3.w
mad r3.w, r2.x, r4.w, r3.w
add r3.w, r3.w, l(0.000010)
div r3.w, l(0.500000), r3.w
mul r4.w, r1.z, r1.z
mad r5.x, r2.y, r4.w, -r2.y
mad r2.y, r5.x, r2.y, l(1.000000)
mul r4.w, r4.w, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r4.w, r2.y
mul r2.y, r2.y, r3.w
mul r2.y, r2.y, l(3.14159274)
mul r2.x, r2.x, r2.y
max r2.x, r2.x, l(0.000000)
mad r1.z, r1.z, r1.z, l(1.000000)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
dp3 r2.y, r0.xyzx, r0.xyzx
ne r2.y, r2.y, l(0.000000)
and r2.y, r2.y, l(0x3f800000)
mul r2.x, r2.y, r2.x
add_sat r2.y, r2.w, cb0[8].y
mad r5.xyz, r8.xyzx, r1.yyyy, r9.xyzx
mul r6.xzw, r8.xxyz, r2.xxxx
add r1.x, -r1.x, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
add r7.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r7.xyz, r7.xyzx, r1.xxxx, r0.xyzx
mul r6.xzw, r6.xxzw, r7.xxyz
mad r4.xyz, r4.xyzx, r5.xyzx, r6.xzwx
mul r1.xyz, r11.xyzx, r1.zzzz
add r2.xyw, -r0.xyxz, r2.yyyy
mad r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
mad r0.xyz, r1.xyzx, r0.xyzx, r4.xyzx
mul r1.x, v5.w, l(0.500000)
mad r1.y, -v5.w, l(0.500000), v5.y
mad r1.y, -r1.y, cb1[5].x, r1.x
add r2.xy, v5.wzww, l(1.000000012E-007, 1.000000, 0.000000, 0.000000)
mov r1.x, v5.x
div r1.xy, r1.xyxx, r2.xxxx
add r2.xz, cb0[8].wwzw, l(-1.000000, 0.000000, 1.000000, 0.000000)
mul r3.yw, r3.yyyy, cb3[10].xxxy
mad r3.xy, cb3[9].xyxx, r3.xxxx, r3.ywyy
mad r3.xy, cb3[11].xyxx, r3.zzzz, r3.xyxx
mul r2.xw, r2.xxxx, r3.xxxy
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
mul r2.xy, r1.zzzz, r2.xwxx
add r0.w, -r0.w, l(1.000000)
mul r3.xy, r0.wwww, r2.xyxx
mul r0.w, r3.y, cb1[5].x
mov r3.z, -r0.w
add r2.xy, r1.xyxx, r3.xzxx
sample r4.xyzw, r2.xyxx, t2.xyzw, s4
mad r2.xy, r3.xzxx, r6.yyyy, r1.xyxx
sample r5.xyzw, r2.xyxx, t2.xyzw, s4
mad r1.xy, r3.xzxx, r2.zzzz, r1.xyxx
sample r2.xyzw, r1.xyxx, t2.xyzw, s4
add r0.w, -r1.w, l(1.000000)
mov r2.x, r4.x
mov r2.y, r5.y
mad o0.xyz, r2.xyzx, r0.wwww, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used