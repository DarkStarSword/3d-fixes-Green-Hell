// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b595284eab71355d-ps.txt
// 3DMigoto: b595284eab71355d |    Unity headers extracted from ASESampleShaders_Transmission
//    Shader "ASESampleShaders/Transmission" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from ASESampleShaders_Transmission:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 162 3 6
//   undeciphered1a: 14
//   Keywords { "DIRECTIONAL" "FOG_LINEAR" }
//   undeciphered2: 1 5 6 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 160
//   Vector 32 [_LightColor0]
//   Vector 64 [_NormalMap_ST]
//   Vector 80 [_BaseColor_ST]
//   Vector 96 [_Color]
//   Float 112 [_Metallic]
//   Float 116 [_Gloss]
//   Vector 128 [_Transmission]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_NormalMap] 2D 2
//   SetTexture 1 [_BaseColor] 2D 3
//   SetTexture 2 [unity_SpecCube0] CUBE 0
//   SetTexture 3 [unity_SpecCube1] CUBE -1
//   SetTexture 4 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityReflectionProbes" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:01:07 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 5     z         1     NONE   float     z
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 6   xyzw        5     NONE   float
// TEXCOORD                 7   xyzw        6     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b595284eab71355d-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r3.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
sample r3.xyzw, r3.xyxx, t0.xyzw, s2
mul r3.x, r3.w, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r3.z, r1.w
mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r4.xyzw, r4.xyxx, t1.xyzw, s3
mul r5.xyz, r4.xyzx, cb0[6].xyzx
eq r1.w, cb5[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb5[0].y, l(1.000000)
  mul r6.xyz, v3.wwww, cb5[2].xyzx
  mad r6.xyz, cb5[1].xyzx, v2.wwww, r6.xyzx
  mad r6.xyz, cb5[3].xyzx, v4.wwww, r6.xyzx
  add r6.xyz, r6.xyzx, cb5[4].xyzx
  movc r6.xyz, r1.wwww, r6.xyzx, r0.xyzx
  add r6.xyz, r6.xyzx, -cb5[6].xyzx
  mul r6.yzw, r6.xxyz, cb5[5].xxyz
  mad r1.w, r6.y, l(0.250000), l(0.750000)
  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  max r6.x, r1.w, r2.w
  sample r6.xyzw, r6.xzwx, t4.xyzw, s1
else
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
dp3 r6.x, v2.xyzx, r3.xyzx
dp3 r6.y, v3.xyzx, r3.xyzx
dp3 r6.z, v4.xyzx, r3.xyzx
dp3 r2.w, r6.xyzx, r6.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r6.xyzx
add r2.w, -cb0[7].y, l(1.000000)
dp3 r3.w, -r2.xyzx, r3.xyzx
add r3.w, r3.w, r3.w
mad r6.xyz, r3.xyzx, -r3.wwww, -r2.xyzx
mul r7.xyz, r1.wwww, cb0[2].xyzx
lt r1.w, l(0.000000), cb4[2].w
if_nz r1.w
  dp3 r1.w, r6.xyzx, r6.xyzx
  rsq r1.w, r1.w
  mul r8.xyz, r1.wwww, r6.xyzx
  add r9.xyz, -r0.xyzx, cb4[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r0.xyzx, cb4[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r1.w, r9.y, r9.x
  min r1.w, r9.z, r1.w
  add r9.xyz, r0.xyzx, -cb4[2].xyzx
  mad r8.xyz, r8.xyzx, r1.wwww, r9.xyzx
else
  mov r8.xyz, r6.xyzx
endif
mad r1.w, -r2.w, l(0.700000), l(1.700000)
mul r1.w, r1.w, r2.w
mul r1.w, r1.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t2.xyzw, s0, r1.w
add r3.w, r8.w, l(-1.000000)
mad r3.w, cb4[3].w, r3.w, l(1.000000)
log r3.w, r3.w
mul r3.w, r3.w, cb4[3].y
exp r3.w, r3.w
mul r3.w, r3.w, cb4[3].x
mul r9.xyz, r8.xyzx, r3.wwww
lt r4.w, cb4[1].w, l(0.999990)
if_nz r4.w
  lt r4.w, l(0.000000), cb4[6].w
  if_nz r4.w
    dp3 r4.w, r6.xyzx, r6.xyzx
    rsq r4.w, r4.w
    mul r10.xyz, r4.wwww, r6.xyzx
    add r11.xyz, -r0.xyzx, cb4[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r0.xyzx, cb4[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r4.w, r11.y, r11.x
    min r4.w, r11.z, r4.w
    add r0.xyz, r0.xyzx, -cb4[6].xyzx
    mad r6.xyz, r10.xyzx, r4.wwww, r0.xyzx
  endif
  sample_l r6.xyzw, r6.xyzx, t3.xyzw, s0, r1.w
  add r0.x, r6.w, l(-1.000000)
  mad r0.x, cb4[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb4[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r6.xyzx, r0.xxxx
  mad r6.xyz, r3.wwww, r8.xyzx, -r0.xyzx
  mad r9.xyz, cb4[1].wwww, r6.xyzx, r0.xyzx
endif
dp3 r0.x, r3.xyzx, cb2[0].xyzx
max r0.y, -r0.x, l(0.000000)
mul r6.xyz, r7.xyzx, r0.yyyy
mul r6.xyz, r6.xyzx, cb0[8].xyzx
mad r4.xyz, r4.xyzx, cb0[6].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r4.xyz, cb0[7].xxxx, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r0.y, -cb0[7].x, l(0.960000), l(0.960000)
mul r8.xyz, r0.yyyy, r5.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
max r0.z, r0.z, l(0.001000)
rsq r0.z, r0.z
mul r1.xyz, r0.zzzz, r1.xyzx
dp3 r0.z, r3.xyzx, r2.xyzx
mov_sat r0.x, r0.x
dp3_sat r0.w, r3.xyzx, r1.xyzx
dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
mul r1.y, r1.x, r1.x
dp2 r1.y, r1.yyyy, r2.wwww
add r1.y, r1.y, l(-0.500000)
add r1.z, -r0.x, l(1.000000)
mul r1.w, r1.z, r1.z
mul r1.w, r1.w, r1.w
mul r1.z, r1.z, r1.w
mad r1.z, r1.y, r1.z, l(1.000000)
add r1.w, -|r0.z|, l(1.000000)
mul r2.x, r1.w, r1.w
mul r2.x, r2.x, r2.x
mul r1.w, r1.w, r2.x
mad r1.y, r1.y, r1.w, l(1.000000)
mul r1.y, r1.y, r1.z
mul r1.y, r0.x, r1.y
mul r1.z, r2.w, r2.w
max r1.z, r1.z, l(0.002000)
add r2.x, -r1.z, l(1.000000)
mad r2.y, |r0.z|, r2.x, r1.z
mad r2.x, r0.x, r2.x, r1.z
mul r0.z, |r0.z|, r2.x
mad r0.z, r0.x, r2.y, r0.z
add r0.z, r0.z, l(0.000010)
div r0.z, l(0.500000), r0.z
mul r2.x, r1.z, r1.z
mad r2.y, r0.w, r2.x, -r0.w
mad r0.w, r2.y, r0.w, l(1.000000)
mul r2.x, r2.x, l(0.318309873)
mad r0.w, r0.w, r0.w, l(1.000000012E-007)
div r0.w, r2.x, r0.w
mul r0.z, r0.w, r0.z
mul r0.z, r0.z, l(3.14159274)
mul r0.x, r0.x, r0.z
max r0.x, r0.x, l(0.000000)
mad r0.z, r1.z, r1.z, l(1.000000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
dp3 r0.w, r4.xyzx, r4.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.x, r0.w, r0.x
add r0.y, -r0.y, cb0[7].y
add_sat r0.y, r0.y, l(1.000000)
mul r2.xyz, r1.yyyy, r7.xyzx
mul r3.xyz, r7.xyzx, r0.xxxx
add r0.x, -r1.x, l(1.000000)
mul r0.w, r0.x, r0.x
mul r0.w, r0.w, r0.w
mul r0.x, r0.x, r0.w
add r1.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r1.xyz, r1.xyzx, r0.xxxx, r4.xyzx
mul r1.xyz, r1.xyzx, r3.xyzx
mad r1.xyz, r8.xyzx, r2.xyzx, r1.xyzx
mul r0.xzw, r9.xxyz, r0.zzzz
add r2.xyz, -r4.xyzx, r0.yyyy
mad r2.xyz, r1.wwww, r2.xyzx, r4.xyzx
mad r0.xyz, r0.xzwx, r2.xyzx, r1.xyzx
mad r0.xyz, r5.xyzx, r6.xyzx, r0.xyzx
mov o0.w, l(1.000000)
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
ret
// Approximately 0 instruction slots used