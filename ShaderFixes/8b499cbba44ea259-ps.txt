// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8b499cbba44ea259-ps.txt
// 3DMigoto: 8b499cbba44ea259 |    Unity headers extracted from Amplify_d1_tent
//    Shader "Amplify/d1_tent" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_d1_tent:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 139 5 4
//   undeciphered1a: 8
//   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" }
//   undeciphered2: 1 6 6 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 192
//   Vector 32 [_LightColor0]
//   Float 128 [_DetailTiling]
//   Float 132 [_Float0]
//   Vector 144 [_Color0]
//   Float 160 [_Metallic]
//   Float 164 [_Smth]
//   Float 168 [_Translucency]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 16 [_LightPositionRange]
//   Vector 32 [_LightProjectionParams]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_TextureSample0] 2D 4
//   SetTexture 1 [_TextureSample1] 2D 5
//   SetTexture 2 [_LightTextureB0] 2D 3
//   SetTexture 3 [_LightTexture0] CUBE 2
//   SetTexture 4 [unity_ProbeVolumeSH] 3D 0
//   SetTexture 5 [_ShadowMapTexture] CUBE 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:36:26 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyz         6     NONE   float
// TEXCOORD                 6   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8b499cbba44ea259-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v5.xyzx, r9.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r2.xyzx
mul r4.xyzw, v1.xyxy, cb0[8].xxyy
sample r5.xyzw, r4.xyxx, t0.xyzw, s4
mul r5.x, r5.w, r5.x
mad r4.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r4.xyxx, r4.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.w, r1.w
sample r5.xyzw, r4.zwzz, t1.xyzw, s5
mul r5.x, r5.w, r5.x
mad r4.zw, r5.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r2.w, r4.zwzz, r4.zwzz
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r2.w, r2.w
add r4.xy, r4.zwzz, r4.xyxx
mul r4.z, r1.w, r2.w
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx
mul r5.xyz, v5.yyyy, cb0[5].xyzx
mad r5.xyz, cb0[4].xyzx, v5.xxxx, r5.xyzx
mad r5.xyz, cb0[6].xyzx, v5.zzzz, r5.xyzx
add r5.xyz, r5.xyzx, cb0[7].xyzx
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r1.w, r2.xyzx, r6.xyzx
add r2.xyz, v5.xyzx, -cb3[25].xyzx
dp3 r2.x, r2.xyzx, r2.xyzx
sqrt r2.x, r2.x
add r2.x, -r1.w, r2.x
mad r1.w, cb3[25].w, r2.x, r1.w
mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
eq r2.x, cb5[0].x, l(1.000000)
if_nz r2.x
  eq r2.x, cb5[0].y, l(1.000000)
  mul r2.yzw, v5.yyyy, cb5[2].xxyz
  mad r2.yzw, cb5[1].xxyz, v5.xxxx, r2.yyzw
  mad r2.yzw, cb5[3].xxyz, v5.zzzz, r2.yyzw
  add r2.yzw, r2.yyzw, cb5[4].xxyz
  movc r2.xyz, r2.xxxx, r2.yzwy, v5.xyzx
  add r2.xyz, r2.xyzx, -cb5[6].xyzx
  mul r2.yzw, r2.xxyz, cb5[5].xxyz
  mad r2.y, r2.y, l(0.250000), l(0.750000)
  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  max r2.x, r2.y, r3.w
  sample r2.xyzw, r2.xzwx, t4.xyzw, s0
else
  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
lt r2.y, r1.w, l(0.990000)
if_nz r2.y
  add r2.yzw, v5.xxyz, -cb2[1].xxyz
  max r3.w, |r2.z|, |r2.y|
  max r3.w, |r2.w|, r3.w
  add r3.w, r3.w, -cb2[2].z
  max r3.w, r3.w, l(0.000010)
  mul r3.w, r3.w, cb2[2].w
  div r3.w, cb2[2].y, r3.w
  add r3.w, r3.w, -cb2[2].x
  add r3.w, -r3.w, l(1.000000)
  add r6.xyz, r2.yzwy, l(0.00781250000, 0.00781250000, 0.00781250000, 0.000000)
  sample_c_lz r6.x, r6.xyzx, t5.xxxx, s1, r3.w
  add r7.xyz, r2.yzwy, l(-0.00781250000, -0.00781250000, 0.00781250000, 0.000000)
  sample_c_lz r6.y, r7.xyzx, t5.xxxx, s1, r3.w
  add r7.xyz, r2.yzwy, l(-0.00781250000, 0.00781250000, -0.00781250000, 0.000000)
  sample_c_lz r6.z, r7.xyzx, t5.xxxx, s1, r3.w
  add r2.yzw, r2.yyzw, l(0.000000, 0.00781250000, -0.00781250000, -0.00781250000)
  sample_c_lz r6.w, r2.yzwy, t5.xxxx, s1, r3.w
  dp4 r2.y, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  add r2.z, -cb3[24].x, l(1.000000)
  mad r2.y, r2.y, r2.z, cb3[24].x
else
  mov r2.y, l(1.000000)
endif
add r2.x, -r2.y, r2.x
mad r1.w, r1.w, r2.x, r2.y
dp3 r2.x, r5.xyzx, r5.xyzx
sample r2.xyzw, r2.xxxx, t2.xyzw, s3
sample r5.xyzw, r5.xyzx, t3.xyzw, s2
mul r2.x, r2.x, r5.w
mul r1.w, r1.w, r2.x
dp3 r2.x, v2.xyzx, r4.xyzx
dp3 r2.y, v3.xyzx, r4.xyzx
dp3 r2.z, v4.xyzx, r4.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mul r4.xyz, r1.wwww, cb0[2].xyzx
dp3 r1.w, r2.xyzx, r1.xyzx
max r2.w, -r1.w, l(0.000000)
mul r5.xyz, r4.xyzx, r2.wwww
mul r5.xyz, r5.xyzx, cb0[10].zzzz
add r6.xy, -cb0[10].xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r7.xyz, r6.xxxx, cb0[9].xyzx
mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r2.xyzx, r3.xyzx
mov_sat r1.w, r1.w
dp3_sat r2.x, r2.xyzx, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r6.yyyy
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.w, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r6.y, r6.y
max r0.z, r0.z, l(0.002000)
add r1.x, -r0.z, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r1.w, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r1.w, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r2.x, r0.z, -r2.x
mad r1.x, r1.x, r2.x, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r1.wwww, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, cb0[10].xxxx, cb0[10].xxxx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r4.xyzx
mul r0.yzw, r4.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
mad r0.x, r6.x, r0.x, cb0[10].x
mul r0.xyz, r0.xxxx, r0.yzwy
mad r0.xyz, r7.xyzx, r1.xyzx, r0.xyzx
mad o0.xyz, cb0[9].xyzx, r5.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used