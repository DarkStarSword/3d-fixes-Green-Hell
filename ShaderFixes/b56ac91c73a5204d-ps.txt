// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b56ac91c73a5204d-ps.txt
// 3DMigoto: b56ac91c73a5204d |    Unity headers extracted from Custom_Hair
//    Shader "Custom/Hair" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest+0" "RenderType"="TreeTransparentCutout" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="AlphaTest+0" "RenderType"="TreeTransparentCutout" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_Hair:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 152 4 2
//   undeciphered1a: 10
//   Keywords { "POINT" "SHADOWS_CUBE" }
//   undeciphered2: 1 5 6 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 240
//   Vector 96 [_LightColor0]
//   Float 128 [_NormalIntensity]
//   Vector 144 [_TillingOffset]
//   Vector 160 [_AlbedoTint]
//   Vector 176 [_AdditionalTint]
//   Vector 192 [_SpecularTint]
//   Float 208 [_AnisotropyX]
//   Float 212 [_AnisotropyY]
//   Float 216 [_SpacularIntensity]
//   Float 220 [_Cutoff]
//   Matrix 32 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 16 [_LightPositionRange]
//   Vector 32 [_LightProjectionParams]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_NormalMap] 2D 3
//   SetTexture 1 [_PackRAlbedoGAdditionalMaskBSpecular] 2D 4
//   SetTexture 2 [_LightTexture0] 2D 2
//   SetTexture 3 [unity_ProbeVolumeSH] 3D 0
//   SetTexture 4 [_ShadowMapTexture] CUBE 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:01:02 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// COLOR                    0   xyzw        6     NONE   float   x
// TEXCOORD                 5   xyzw        7     NONE   float   xy w
// TEXCOORD                 6   xyz         8     NONE   float
// TEXCOORD                 7   xyzw        9     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 9.000000, 0, 0, 0},
                              { 3.000000, 0, 0, 0},
                              { 11.000000, 0, 0, 0},
                              { 13.000000, 0, 0, 0},
                              { 5.000000, 0, 0, 0},
                              { 15.000000, 0, 0, 0},
                              { 7.000000, 0, 0, 0},
                              { 4.000000, 0, 0, 0},
                              { 12.000000, 0, 0, 0},
                              { 2.000000, 0, 0, 0},
                              { 10.000000, 0, 0, 0},
                              { 16.000000, 0, 0, 0},
                              { 8.000000, 0, 0, 0},
                              { 14.000000, 0, 0, 0},
                              { 6.000000, 0, 0, 0} }
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.x
dcl_input_ps linear v7.xyw
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b56ac91c73a5204d-ps.txt

mul r10.w, -r10.x, r10.y
mad r11.xyz, -r10.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v5.xyzx, r11.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r2.xyzx
mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
sample r5.xyzw, r4.xyxx, t0.xyzw, s3
mul r5.x, r5.w, r5.x
mad r4.zw, r5.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r5.xy, r4.zwzz, cb0[8].xxxx
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
sample r4.xyzw, r4.xyxx, t1.xyzw, s4
mul r6.xyz, r4.xxxx, cb0[10].xyzx
mad r7.xyz, r4.xxxx, cb0[11].xyzx, -r6.xyzx
mad r6.xyz, r4.yyyy, r7.xyzx, r6.xyzx
mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r1.w, r0.w
mul r7.xyz, r0.xyzx, r1.wwww
dp3 r8.x, v2.xyzx, r5.xyzx
dp3 r8.y, v3.xyzx, r5.xyzx
dp3 r8.z, v4.xyzx, r5.xyzx
dp3 r1.w, r8.xyzx, r8.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, r8.xyzx
mov r8.y, v4.y
mov r8.z, v2.y
mov r8.x, v3.y
mul r9.xyz, r5.zxyz, r8.xyzx
mad r8.xyz, r5.yzxy, r8.yzxy, -r9.xyzx
dp3 r1.w, r8.xyzx, r8.xyzx
rsq r1.w, r1.w
mul r8.xyz, r1.wwww, r8.xyzx
dp3 r1.w, r7.xyzx, r8.xyzx
div r1.w, r1.w, cb0[13].x
mov r8.y, v4.x
mov r8.z, v2.x
mov r8.x, v3.x
mul r9.xyz, r5.zxyz, r8.xyzx
mad r8.xyz, r5.yzxy, r8.yzxy, -r9.xyzx
dp3 r2.w, r8.xyzx, r8.xyzx
rsq r2.w, r2.w
mul r8.xyz, r2.wwww, r8.xyzx
dp3 r2.w, r7.xyzx, r8.xyzx
div r2.w, r2.w, cb0[13].y
dp3 r3.w, r5.xyzx, r7.xyzx
dp3 r4.x, r5.xyzx, r1.xyzx
mul r7.xyz, r4.zzzz, cb0[12].xyzx
mul r2.w, r2.w, r2.w
mad r1.w, r1.w, r1.w, r2.w
add r2.w, r3.w, l(1.000000)
div r1.w, r1.w, r2.w
mul r1.w, r1.w, l(-2.885390)
exp r1.w, r1.w
max r2.w, r4.x, l(0.000000)
mul r1.w, r1.w, r2.w
mul r4.xyz, r1.wwww, r7.xyzx
mul r4.xyz, r4.xyzx, v6.xxxx
mul r7.xyz, r4.xyzx, cb0[13].zzzz
div r8.xy, v7.xyxx, v7.wwww
mul r8.xy, r8.xyxx, cb1[6].xyxx
mul r8.xy, r8.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
ge r8.zw, r8.xxxy, -r8.xxxy
frc r8.xy, |r8.xyxx|
movc r8.xy, r8.zwzz, r8.xyxx, -r8.xyxx
mul r8.xy, r8.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000)
ftoi r8.xy, r8.xyxx
ishl r1.w, r8.y, l(2)
iadd r1.w, r8.x, r1.w
mul r1.w, l(0.062500), icb[r1.w + 0].x
ge r1.w, r4.w, r1.w
and r3.w, r1.w, l(0x3f800000)
movc r1.w, r1.w, l(0), l(1.000000)
mad r1.w, r4.w, r1.w, r3.w
add r1.w, r1.w, -cb0[13].w
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
mul r8.xyz, v5.yyyy, cb0[3].xyzx
mad r8.xyz, cb0[2].xyzx, v5.xxxx, r8.xyzx
mad r8.xyz, cb0[4].xyzx, v5.zzzz, r8.xyzx
add r8.xyz, r8.xyzx, cb0[5].xyzx
mov r9.x, cb4[9].z
mov r9.y, cb4[10].z
mov r9.z, cb4[11].z
dp3 r1.w, r2.xyzx, r9.xyzx
add r2.xyz, v5.xyzx, -cb3[25].xyzx
dp3 r2.x, r2.xyzx, r2.xyzx
sqrt r2.x, r2.x
add r2.x, -r1.w, r2.x
mad r1.w, cb3[25].w, r2.x, r1.w
mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
eq r2.x, cb5[0].x, l(1.000000)
if_nz r2.x
  eq r2.x, cb5[0].y, l(1.000000)
  mul r9.xyz, v5.yyyy, cb5[2].xyzx
  mad r9.xyz, cb5[1].xyzx, v5.xxxx, r9.xyzx
  mad r9.xyz, cb5[3].xyzx, v5.zzzz, r9.xyzx
  add r9.xyz, r9.xyzx, cb5[4].xyzx
  movc r2.xyz, r2.xxxx, r9.xyzx, v5.xyzx
  add r2.xyz, r2.xyzx, -cb5[6].xyzx
  mul r9.yzw, r2.xxyz, cb5[5].xxyz
  mad r2.x, r9.y, l(0.250000), l(0.750000)
  mad r2.y, cb5[0].z, l(0.500000), l(0.750000)
  max r9.x, r2.y, r2.x
  sample r9.xyzw, r9.xzwx, t3.xyzw, s0
else
  mov r9.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.x, r9.xyzw, cb2[46].xyzw
add r9.xyz, v5.xyzx, -cb2[1].xyzx
max r2.y, |r9.y|, |r9.x|
max r2.y, |r9.z|, r2.y
add r2.y, r2.y, -cb2[2].z
max r2.y, r2.y, l(0.000010)
mul r2.y, r2.y, cb2[2].w
div r2.y, cb2[2].y, r2.y
add r2.y, r2.y, -cb2[2].x
add r2.y, -r2.y, l(1.000000)
sample_c_lz r2.y, r9.xyzx, t4.xxxx, s1, r2.y
add r2.z, -cb3[24].x, l(1.000000)
mad r2.y, r2.y, r2.z, cb3[24].x
add r2.x, -r2.y, r2.x
mad r1.w, r1.w, r2.x, r2.y
dp3 r2.x, r8.xyzx, r8.xyzx
sample r8.xyzw, r2.xxxx, t2.xyzw, s2
mul r1.w, r1.w, r8.x
mul r2.xyz, r1.wwww, cb0[6].xyzx
max r1.w, r7.y, r7.x
max r1.w, r7.z, r1.w
add r1.w, -r1.w, l(1.000000)
mul r6.xyz, r1.wwww, r6.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r5.xyzx, r3.xyzx
min r1.w, r2.w, l(1.000000)
dp3_sat r0.x, r1.xyzx, r0.xyzx
dp2 r0.y, r0.xxxx, r0.xxxx
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.w, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
add r0.z, |r0.w|, r1.w
add r0.z, r0.z, l(0.000010)
div r0.z, l(0.500000), r0.z
mul r0.z, r0.z, l(0.999999881)
mul r0.yz, r1.wwww, r0.yyzy
dp3 r0.w, r7.xyzx, r7.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r2.xyzx
mul r0.yzw, r2.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
mad r2.xyz, -r4.xyzx, cb0[13].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r7.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad o0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used