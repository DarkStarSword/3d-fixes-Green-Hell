// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 493549fd483fde3e-ps.txt
// 3DMigoto: 493549fd483fde3e | Matched 2 variants of 2 shaders: Custom/WindLeavesC2Standard, Custom/WindLeavesC2Standard_not_moving
//
// 2:    Unity headers extracted from Custom_WindLeavesC2Standard
// 1:    Unity headers extracted from Custom_WindLeavesC2Standard_not_moving
// 2:    Shader "Custom/WindLeavesC2Standard" {
// 1:    Shader "Custom/WindLeavesC2Standard_not_moving" {
//         SubShader 1/2 {
//           LOD 200
//           Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Geometry+200" "RenderType"="Grass" }
//           Pass 2/5 {
//             Name "FORWARD"
//             Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+200" "RenderType"="Grass" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
// 2: Unity 5.3 headers extracted from Custom_WindLeavesC2Standard:
// 1: Unity 5.3 headers extracted from Custom_WindLeavesC2Standard_not_moving:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 103 4 2
//      undeciphered1a: 7
//      Keywords { "DIRECTIONAL" "FOG_LINEAR" }
//      undeciphered2: 1 4 5 4 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 192
//      Vector 32 [_LightColor0]
//      Float 80 [_Cutoff]
//      Float 132 [_Wetness]
//      Float 176 [_Cutoff2]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 736 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityFog" 32
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 1
//      SetTexture 1 [_RoughTex] 2D 2
//      SetTexture 2 [_BumpMap] 2D 3
//      SetTexture 3 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityFog" 3
//      BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:58:17 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// COLOR                    0   xyzw        6     NONE   float   xyz
// TEXCOORD                 6   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 493549fd483fde3e-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, r8.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
sample r2.xyzw, v1.xyxx, t0.xyzw, s1
mul r3.xyz, r2.xyzx, v6.xyzx
sample r4.xyzw, v1.xyxx, t1.xyzw, s2
add r1.w, r2.w, -cb0[5].x
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
mul r1.w, cb0[8].y, l(0.085000)
mad r3.w, cb0[8].y, l(0.610000), l(1.000000)
sample r5.xyzw, v1.zwzz, t2.xyzw, s3
mul r5.x, r5.w, r5.x
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.y, r5.xyxx, r5.xyxx
min r4.y, r4.y, l(1.000000)
add r4.y, -r4.y, l(1.000000)
sqrt r5.z, r4.y
add r4.y, r2.w, -cb0[11].x
lt r4.y, r4.y, l(0.000000)
discard_nz r4.y
eq r4.y, cb4[0].x, l(1.000000)
if_nz r4.y
  eq r4.y, cb4[0].y, l(1.000000)
  mul r6.xyz, v5.yyyy, cb4[2].xyzx
  mad r6.xyz, cb4[1].xyzx, v5.xxxx, r6.xyzx
  mad r6.xyz, cb4[3].xyzx, v5.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb4[4].xyzx
  movc r4.yzw, r4.yyyy, r6.xxyz, v5.xxyz
  add r4.yzw, r4.yyzw, -cb4[6].xxyz
  mul r6.yzw, r4.yyzw, cb4[5].xxyz
  mad r4.y, r6.y, l(0.250000), l(0.750000)
  mad r4.z, cb4[0].z, l(0.500000), l(0.750000)
  max r6.x, r4.z, r4.y
  sample r6.xyzw, r6.xzwx, t3.xyzw, s0
else
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r4.y, r6.xyzw, cb2[46].xyzw
dp3 r6.x, v2.xyzx, r5.xyzx
dp3 r6.y, v3.xyzx, r5.xyzx
dp3 r6.z, v4.xyzx, r5.xyzx
dp3 r4.z, r6.xyzx, r6.xyzx
rsq r4.z, r4.z
mul r5.xyz, r4.zzzz, r6.xyzx
mul r4.yzw, r4.yyyy, cb0[2].xxyz
mad r2.xyz, r2.xyzx, v6.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r2.xyz, r1.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -cb0[8].y, l(0.0815999955), l(0.960000)
mul r3.xyz, r1.wwww, r3.xyzx
mad r1.w, -r4.x, r3.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r5.xyzx, r1.xyzx
dp3_sat r1.x, r5.xyzx, cb2[0].xyzx
dp3_sat r1.y, r5.xyzx, r0.xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.x, l(1.000000)
mul r1.z, r0.z, r0.z
mul r1.z, r1.z, r1.z
mul r0.z, r0.z, r1.z
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.z, -|r0.w|, l(1.000000)
mul r3.w, r1.z, r1.z
mul r3.w, r3.w, r3.w
mul r1.z, r1.z, r3.w
mad r0.y, r0.y, r1.z, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
max r0.z, r0.z, l(0.002000)
add r1.z, -r0.z, l(1.000000)
mad r1.w, |r0.w|, r1.z, r0.z
mad r1.z, r1.x, r1.z, r0.z
mul r0.w, |r0.w|, r1.z
mad r0.w, r1.x, r1.w, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.z, r1.y, r0.z, -r1.y
mad r1.y, r1.z, r1.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.y, r1.y, r1.y, l(1.000000012E-007)
div r0.z, r0.z, r1.y
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r1.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r2.xyzx, r2.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r4.yzwy
mul r0.yzw, r4.yyzw, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r4.xyzx, r0.xxxx, r2.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
div r0.w, v2.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, r2.w
ret
// Approximately 0 instruction slots used