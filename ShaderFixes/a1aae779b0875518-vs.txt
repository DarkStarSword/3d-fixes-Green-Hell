// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed a1aae779b0875518-vs.txt
// 3DMigoto: a1aae779b0875518 |    Unity headers extracted from AdvancedTerrainGrass_VertexLit Shader
//    Shader "AdvancedTerrainGrass/VertexLit Shader" {
//      SubShader 1/1 {
//        LOD 200
//        Tags { "IGNOREPROJECTOR"="true" "RenderType"="ATGVertexLit" }
//        Pass 4/4 {
//          Name "ShadowCaster"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="SHADOWCASTER" "RenderType"="ATGVertexLit" "SHADOWSUPPORT"="true" }
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from AdvancedTerrainGrass_VertexLit Shader:
//   API d3d11
//   Shader model vs_5_0
//   undeciphered1: 201802150 32 0 0
//   undeciphered1a: 6
//   Keywords { "SHADOWS_CUBE" "PROCEDURAL_INSTANCING_ON" }
//   undeciphered2: 1 1 5 0 0 0
//   undeciphered3: 23 2 0 0 1 1
//   ConstBuffer "$Globals" 144
//   Vector 80 [_HealthyColor]
//   Vector 96 [_DryColor]
//   Vector 112 [_MinMaxScales] 2
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityShadows" 416
//   Vector 80 [unity_LightShadowBias]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 272 [unity_MatrixVP]
//   ConstBuffer "UnityDrawCallInfo" 16
//   ScalarInt 0 [unity_BaseInstanceID]
//   BindCB "$Globals" 0
//   BindCB "UnityLighting" 1
//   BindCB "UnityShadows" 2
//   BindCB "UnityPerFrame" 3
//   BindCB "UnityDrawCallInfo" 4
//   SetBuffer 0 [GrassMatrixBuffer]
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:49:48 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float
// SV_InstanceID            0   x           4   INSTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 2   xyz         2     NONE   float   xyz
// SV_InstanceID            0   x           3     NONE    uint   x
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_constantbuffer cb2[6], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_resource_structured t0, 64
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input_sgv v4.x, instance_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.x
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

iadd r0.x, v4.x, cb4[0].x
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r1.xyz, r0.x, l(0), t0.yxzx
mov r2.x, r1.y
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r3.xyz, r0.x, l(16), t0.xzyx
mov r2.y, r3.x
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r0.yzw, r0.x, l(32), t0.xxyz
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r4.xyzw, r0.x, l(48), t0.xyzw
mov r2.z, r0.y
dp3 r5.x, r2.xyzx, v2.xyzx
mov r3.x, r1.z
mov r1.y, r3.z
mov r1.z, r0.z
mov r3.z, r0.w
dp3 r5.y, r1.xyzx, v2.xyzx
dp3 r5.z, r3.xyzx, v2.xyzx
dp3 r0.x, r5.xyzx, r5.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r5.xyzx
mov r2.w, r4.x
dp4 r2.x, r2.xyzw, v0.xyzw
mov r1.w, r4.y
dp4 r2.y, r1.xyzw, v0.xyzw
mov r3.w, r4.z
frc r0.w, r4.w
mad r0.w, r0.w, l(100.000000), -cb0[7].x
mul r0.w, r0.w, cb0[7].y
dp4 r2.z, r3.xyzw, v0.xyzw
mad r1.xyz, -r2.xyzx, cb1[0].wwww, cb1[0].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp3 r1.x, r0.xyzx, r1.xyzx
mad r1.x, -r1.x, r1.x, l(1.000000)
sqrt r1.x, r1.x
mul r1.x, r1.x, cb2[5].z
mad r0.xyz, -r0.xyzx, r1.xxxx, r2.xyzx
ne r1.x, cb2[5].z, l(0.000000)
movc r0.xyz, r1.xxxx, r0.xyzx, r2.xyzx
mov o1.xyz, r2.xyzx
mul r1.xyzw, r0.yyyy, cb3[18].xyzw
mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
mad r1.xyzw, cb3[20].xyzw, v0.wwww, r1.xyzw

// Relocated to here with asmtool.py
mov o0.xyw, r1.xyxw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed a1aae779b0875518-vs.txt
ne r6.w, r1.w, l(1.0)
if_nz r6.w
  add r6.w, r1.w, -r6.y
  mad r1.x, r6.w, r6.x, r1.x
endif

min r0.x, r1.w, r1.z
add r0.x, -r1.z, r0.x
mad o0.z, cb2[5].y, r0.x, r1.z

// mov o0.xyw, r1.xyxw // Relocated from here with asmtool.py

add r0.xyz, -cb0[5].xyzx, cb0[6].xyzx
mad o2.xyz, r0.wwww, r0.xyzx, cb0[5].xyzx
mov o3.x, v4.x
ret
// Approximately 0 instruction slots used