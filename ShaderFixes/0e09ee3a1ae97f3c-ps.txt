// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0e09ee3a1ae97f3c-ps.txt
// 3DMigoto: 0e09ee3a1ae97f3c |    Unity headers extracted from VolumetricFogAndMist_VolumetricFog
//    Shader "VolumetricFogAndMist/VolumetricFog" {
//      SubShader 1/1 {
//        Pass 1/5 {
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from VolumetricFogAndMist_VolumetricFog:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 196 3 11
//   undeciphered1a: 27
//   Keywords { "FOG_USE_XY_PLANE" "FOG_SCATTERING_ON" "FOG_BLUR_ON" "FOG_POINT_LIGHT5" "FOG_SUN_SHADOWS_ON" }
//   undeciphered2: 1 5 2 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 704
//   Vector 32 [_MainTex_TexelSize]
//   Float 172 [_FogAlpha]
//   Vector 176 [_Color] 3
//   Vector 192 [_FogDistance]
//   Vector 208 [_FogData]
//   Vector 224 [_FogWindDir] 3
//   Vector 240 [_FogStepping]
//   Vector 272 [_FogPointLightPosition0] 3
//   Vector 288 [_FogPointLightColor0] 3
//   Vector 304 [_FogPointLightPosition1] 3
//   Vector 320 [_FogPointLightColor1] 3
//   Vector 336 [_FogPointLightPosition2] 3
//   Vector 352 [_FogPointLightColor2] 3
//   Vector 368 [_FogPointLightPosition3] 3
//   Vector 384 [_FogPointLightColor3] 3
//   Vector 400 [_FogPointLightPosition4] 3
//   Vector 416 [_FogPointLightColor4] 3
//   Vector 432 [_FogPointLightPosition5] 3
//   Vector 448 [_FogPointLightColor5] 3
//   Vector 464 [_SunPosition] 3
//   Vector 480 [_SunDir] 3
//   Vector 496 [_SunColor] 3
//   Vector 512 [_FogScatteringData]
//   Vector 528 [_FogScatteringData2]
//   Vector 624 [_VolumetricFogSunWorldPos]
//   Vector 640 [_VolumetricFogSunShadowsData]
//   Float 656 [_Jitter]
//   Matrix 560 [_VolumetricFogSunProj]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 96 [_ScreenParams]
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 2
//   SetTexture 1 [_NoiseTex] 2D 1
//   SetTexture 2 [_VolumetricFogSunDepthTexture] 2D 4
//   SetTexture 3 [_MainTex] 2D 0
//   SetTexture 4 [_BlurTex] 2D 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:30:08 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[42], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 29
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r27.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0e09ee3a1ae97f3c-ps.txt

mul r27.w, -r27.x, r27.y
mad r28.xyz, -r27.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.zwzz, t0.xyzw, s2
mad r0.x, cb1[7].x, r0.x, cb1[7].y
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
mov r0.yz, -cb0[13].xxyx
add r1.z, r0.y, r28.z
mov r1.xy, r28.xyxx
mad r2.xyz, v2.xyzx, r0.xxxx, r1.xyzx
add r0.x, r2.z, l(0.000010)
mul r0.yw, v1.xxxy, cb1[6].xxxy
dp2 r0.y, l(2.40845060, 3.25352120, 0.000000, 0.000000), r0.ywyy
frc r0.y, r0.y
add r0.y, r0.y, l(-0.500000)
lt r0.w, cb0[13].y, r1.z
lt r1.w, cb0[13].y, r0.x
and r0.w, r0.w, r1.w
lt r1.w, r1.z, r0.z
lt r3.x, r0.x, r0.z
and r1.w, r1.w, r3.x
or r0.w, r0.w, r1.w
if_z r0.w
  add r2.w, r2.z, l(0.000010)
  add r2.xyz, -r1.xyzx, r2.xywx
  dp3 r0.w, r2.xyzx, r2.xyzx
  sqrt r0.w, r0.w
  dp2 r1.w, r2.xyxx, r2.xyxx
  sqrt r1.w, r1.w
  div r3.xy, r2.xyxx, r1.wwww
  div r1.w, r1.w, r2.z
  max r2.w, r0.z, r1.z
  min r4.z, r2.w, cb0[13].y
  add r2.w, r1.z, -r4.z
  mul r2.w, r1.w, r2.w
  mad r4.xy, -r3.xyxx, r2.wwww, r28.xyxx
  min r2.w, r0.w, cb0[12].z
  add r5.xyz, -r1.xyzx, r4.xyzx
  dp3 r1.x, r5.xyzx, r5.xyzx
  sqrt r1.x, r1.x
  lt r1.y, r1.x, r2.w
  if_nz r1.y
    lt r1.y, l(0.000000), r1.w
    lt r3.z, l(-0.500000), r0.x
    and r1.y, r1.y, r3.z
    lt r3.z, r1.w, l(0.000000)
    lt r0.x, r0.x, l(0.500000)
    and r0.x, r0.x, r3.z
    and r0.x, r0.z, r0.x
    movc r5.z, r1.y, cb0[13].y, r0.x
    add r0.x, -r1.z, r5.z
    mul r0.x, r0.x, r1.w
    mad r5.xy, -r3.xyxx, r0.xxxx, r28.xyxx
    add r1.yzw, r4.xxyz, -r5.xxyz
    dp3 r0.x, r1.yzwy, r1.yzwy
    sqrt r0.x, r0.x
    add r0.z, -r1.x, r2.w
    min r0.x, r0.z, r0.x
    lt r1.y, l(0.000000), r0.x
    if_nz r1.y
      log r1.y, r0.x
      mul r1.y, r1.y, l(0.693147182)
      max r1.y, r1.y, l(0.000000)
      mad r1.y, r1.y, cb0[15].x, l(0.100000)
      mul r1.y, r1.y, cb0[13].z
      mul_sat r1.z, r2.w, cb0[15].y
      mul r1.y, r1.z, r1.y
      max r1.y, r1.y, l(0.010000)
      mul r3.xyz, r1.yyyy, r2.xyzx
      div r3.xyz, r3.xyzx, r0.wwww
      div r1.y, r0.x, r1.y
      add r5.xyz, r4.xyzx, -cb0[17].xyzx
      add r6.xyz, r4.xyzx, -cb0[19].xyzx
      add r7.xyz, r4.xyzx, -cb0[21].xyzx
      add r8.xyz, r4.xyzx, -cb0[23].xyzx
      add r9.xyz, r4.xyzx, -cb0[25].xyzx
      add r10.xyz, r4.xyzx, -cb0[27].xyzx
      mul r11.xy, r3.xyxx, cb0[13].wwww
      mul r1.z, cb0[13].z, cb0[13].y
      div r11.z, r3.z, r1.z
      add r12.xy, r4.xyxx, cb0[14].xzxx
      mul r12.xy, r12.xyxx, cb0[13].wwww
      div r1.z, r4.z, r1.z
      frc r1.w, r0.y
      mad r1.y, r1.w, cb0[41].x, r1.y
      add r4.w, r4.z, cb0[13].x
      mul r13.xyz, r4.yyyy, cb0[36].xywx
      mad r13.xyz, cb0[35].xywx, r4.xxxx, r13.xyzx
      mad r13.xyz, cb0[37].xywx, r4.wwww, r13.xyzx
      add r13.xyz, r13.xyzx, cb0[38].xywx
      div r12.zw, r13.xxxy, r13.zzzz
      mad r12.zw, r12.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      mad r1.w, r0.y, cb0[40].y, l(1.000000)
      mul r1.w, r0.x, r1.w
      mul r13.xyz, r2.xyzx, r1.wwww
      div r13.xyz, r13.xyzx, r0.wwww
      add r13.xyz, r4.xywx, r13.xyzx
      mul r14.xyz, r13.yyyy, cb0[36].xywx
      mad r14.xyz, cb0[35].xywx, r13.xxxx, r14.xyzx
      mad r14.xyz, cb0[37].xywx, r13.zzzz, r14.xyzx
      add r14.xyz, r14.xyzx, cb0[38].xywx
      div r14.xy, r14.xyxx, r14.zzzz
      mad r14.xy, r14.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r1.w, -r1.x, cb0[39].w
      mul_sat r1.w, r1.w, l(0.0285714287)
      mul r1.w, r1.w, cb0[40].x
      div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
      ge r0.x, r0.x, r0.z
      and r0.x, r0.x, l(0x3f800000)
      add r12.zw, r12.zzzw, -r14.xxxy
      add r4.xyz, r4.xywx, -r13.xyzx
      mov r15.xyzw, l(0,0,0,0)
      mov r16.xyz, r5.xyzx
      mov r17.xyz, r6.xyzx
      mov r18.xyz, r7.xyzx
      mov r19.xyz, r8.xyzx
      mov r20.xyz, r9.xyzx
      mov r21.xyz, r10.xyzx
      mov r23.xy, r12.xyxx
      mov r0.z, r1.y
      mov r23.z, r1.z
      mov r22.xyzw, l(0,0,0,0)
      loop
        ge r3.w, l(1.000000), r0.z
        breakc_nz r3.w
        sample_l r24.xyzw, r23.xyxx, t1.xyzw, s1, l(0.000000)
        add r3.w, -|r23.z|, r24.w
        lt r4.w, l(0.000000), r3.w
        if_nz r4.w
          add r4.w, -r3.w, l(1.000000)
          mul r25.xyz, r4.wwww, cb0[11].xyzx
          mul r25.w, r3.w, l(0.400000)
          mul r3.w, r2.w, r0.z
          mad r14.zw, r3.wwww, r12.zzzw, r14.xxxy
          sample_l r26.xyzw, r14.zwzz, t2.xyzw, s4, l(0.000000)
          dp4 r4.w, r26.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
          div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
          mad r26.xyz, r3.wwww, r4.xyzx, r13.xyzx
          add r26.xyz, r26.xyzx, -cb0[39].xyzx
          dp3 r3.w, r26.xyzx, r26.xyzx
          sqrt r3.w, r3.w
          add_sat r3.w, -r3.w, r4.w
          mul r4.w, r1.w, r22.w
          add r3.w, r3.w, l(-1.000000)
          mad r4.w, r4.w, r3.w, l(1.000000)
          mad r3.w, cb0[40].z, r3.w, l(1.000000)
          mul r25.xyzw, r3.wwww, r25.xyzw
          dp3 r3.w, r16.xyzx, r16.xyzx
          div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
          dp3 r5.w, r17.xyzx, r17.xyzx
          div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
          dp3 r6.w, r18.xyzx, r18.xyzx
          div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
          dp3 r7.w, r19.xyzx, r19.xyzx
          div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
          dp3 r8.w, r20.xyzx, r20.xyzx
          div r8.w, l(1.000000, 1.000000, 1.000000, 1.000000), r8.w
          dp3 r9.w, r21.xyzx, r21.xyzx
          div r9.w, l(1.000000, 1.000000, 1.000000, 1.000000), r9.w
          mul r26.xyz, r8.wwww, cb0[26].xyzx
          mad r26.xyz, cb0[28].xyzx, r9.wwww, r26.xyzx
          mad r26.xyz, cb0[24].xyzx, r7.wwww, r26.xyzx
          mad r26.xyz, cb0[22].xyzx, r6.wwww, r26.xyzx
          mad r26.xyz, cb0[20].xyzx, r5.wwww, r26.xyzx
          mad r26.xyz, cb0[18].xyzx, r3.wwww, r26.xyzx
          mul r26.xyz, r25.wwww, r26.xyzx
          mad r24.xyz, r24.xyzx, r4.wwww, r26.xyzx
          mul r24.xyz, r25.wwww, r24.xyzx
          mul r25.xyz, r24.xyzx, r25.xyzx
          add r3.w, -r22.w, l(1.000000)
          mad r24.xyzw, r25.xyzw, r3.wwww, r22.xyzw
          lt r3.w, l(0.990000), r24.w
          if_nz r3.w
            mov r15.xyzw, r25.xyzw
            mov r22.xyzw, r24.xyzw
            break
          endif
          mov r15.xyzw, r25.xyzw
          mov r22.xyzw, r24.xyzw
        endif
        add r16.xyz, r3.xyzx, r16.xyzx
        add r17.xyz, r3.xyzx, r17.xyzx
        add r18.xyz, r3.xyzx, r18.xyzx
        add r19.xyz, r3.xyzx, r19.xyzx
        add r20.xyz, r3.xyzx, r20.xyzx
        add r21.xyz, r3.xyzx, r21.xyzx
        add r0.z, r0.z, l(-1.000000)
        add r23.xyz, r11.xyzx, r23.xyzx
      endloop
      lt r1.y, r22.w, l(0.990000)
      and r1.y, r1.y, l(0x3f800000)
      add r1.z, -r22.w, l(1.000000)
      mul r0.x, r0.z, r0.x
      mul r0.z, r1.z, r1.y
      mul r0.x, r0.x, r0.z
      mad r3.xyzw, r15.xyzw, r0.xxxx, r22.xyzw
      div r0.xzw, r2.xxyz, r0.wwww
      dp3 r0.x, r0.xzwx, cb0[30].xyzx
      mul r0.x, r0.x, cb0[33].w
      max r0.x, r0.x, l(0.000000)
      mul r0.x, r0.x, r0.x
      mul r0.x, r0.x, r0.x
      mul r0.x, r0.x, r0.x
      mul r0.x, r3.w, r0.x
      add r1.yzw, -r3.xxyz, cb0[31].xxyz
      mad r3.xyz, r0.xxxx, r1.yzwy, r3.xyzx
      mul r2.xyzw, r3.xyzw, cb0[10].wwww
      add r0.x, -r1.x, cb0[12].z
      div_sat r0.x, r0.x, cb0[12].w
      mul r0.x, r0.x, r0.x
      mul r1.xyzw, r0.xxxx, r2.xyzw
    else
      mov r1.xyzw, l(0,0,0,0)
    endif
  else
    mov r1.xyzw, l(0,0,0,0)
  endif
else
  mov r1.xyzw, l(0,0,0,0)
endif
mad r0.x, r0.y, cb0[15].w, l(1.000000)
mul r2.xyzw, r0.xxxx, r1.xyzw
sample r3.xyzw, v1.xyxx, t3.xyzw, s0
sample r4.xyzw, v1.zwzz, t4.xyzw, s3
add r1.xyz, -r3.xyzx, r4.xyzx
mad r1.xyz, r2.wwww, r1.xyzx, r3.xyzx
mad_sat r0.x, -r1.w, r0.x, l(1.000000)
mad r0.xzw, r1.xxyz, r0.xxxx, r2.xxyz
lt r1.x, cb0[2].y, l(0.000000)
add r1.y, -cb0[29].y, l(1.000000)
movc r1.x, r1.x, r1.y, cb0[29].y
add r2.x, -v1.x, cb0[29].x
add r2.y, r1.x, -v1.y
mad r0.y, r0.y, cb0[33].z, l(1.000000)
mul r0.y, r0.y, cb0[32].x
mov r1.xyz, l(0,0,0,0)
mov r3.xy, v1.xyxx
mov r1.w, cb0[33].x
mov r2.z, cb0[32].y
loop
  ge r3.z, l(0.000000), r2.z
  breakc_nz r3.z
  mad r3.xy, r2.xyxx, r0.yyyy, r3.xyxx
  sample_l r4.xyzw, r3.xyxx, t3.xyzw, s0, l(0.000000)
  mul r4.xyz, r1.wwww, r4.xyzx
  mad r1.xyz, r4.xyzx, cb0[32].wwww, r1.xyzx
  mul r1.w, r1.w, cb0[33].y
  add r2.z, r2.z, l(-1.000000)
endloop
mad o0.xyz, r1.xyzx, cb0[32].zzzz, r0.xzwx
mov o0.w, r2.w
ret
// Approximately 0 instruction slots used