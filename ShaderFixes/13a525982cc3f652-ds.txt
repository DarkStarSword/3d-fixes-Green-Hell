// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 13a525982cc3f652-ds.txt
// 3DMigoto: 13a525982cc3f652 |    Unity headers extracted from NatureManufacture Shaders_Water_Water River Tesseled
//    Shader "NatureManufacture Shaders/Water/Water River Tesseled" {
//      SubShader 1/1 {
//        Tags { "IsEmissive"="true" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//        Pass 3/5 {
//          Name "FORWARD"
//          Tags { "IsEmissive"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "dp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from NatureManufacture Shaders_Water_Water River Tesseled:
//   API d3d11
//   Shader model ds_5_0
//   undeciphered1: 201802150 109 0 0
//   undeciphered1a: 6
//   Keywords { "DIRECTIONAL" "FOG_LINEAR" }
//   undeciphered2: 1 3 4 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 512
//   Float 64 [_WaterTessScale]
//   ScalarInt 68 [_UVVDirection1UDirection0]
//   Vector 72 [_WaterMixSpeed] 2
//   Vector 80 [_WaterNormal_ST]
//   Float 96 [_GlobalTiling]
//   Vector 100 [_WaterMainSpeed] 2
//   Vector 112 [_SmallCascadeMixSpeed] 2
//   Vector 128 [_SmallCascadeNormal_ST]
//   Float 144 [_SmallCascadeWaterTessScale]
//   Vector 148 [_SmallCascadeMainSpeed] 2
//   Float 156 [_SmallCascadeAngle]
//   Float 160 [_SmallCascadeAngleFalloff]
//   Float 164 [_BigCascadeAngle]
//   Float 168 [_BigCascadeAngleFalloff]
//   Float 172 [_BigCascadeWaterTessScale]
//   Vector 176 [_BigCascadeMixSpeed] 2
//   Vector 192 [_BigCascadeNormal_ST]
//   Vector 208 [_BigCascadeMainSpeed] 2
//   Float 484 [_TessPhongStrength]
//   Vector 496 [_texcoord_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityPerDraw" 176
//   Vector 144 [unity_WorldTransformParams]
//   Matrix 0 [unity_ObjectToWorld]
//   Matrix 64 [unity_WorldToObject]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 272 [unity_MatrixVP]
//   SetTexture 0 [_WaterTesselation] 2D 0
//   SetTexture 1 [_SmallCascadeWaterTess] 2D 1
//   SetTexture 2 [_BigCascadeWaterTess] 2D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:32:46 2019
//
//
// Patch Constant signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TessFactor            0   x           0  TRIEDGE   float
// SV_TessFactor            1   x           1  TRIEDGE   float
// SV_TessFactor            2   x           2  TRIEDGE   float
// SV_InsideTessFactor      0   x           3   TRIINT   float
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// INTERNALTESSPOS          0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xy
// TEXCOORD                 1   xyzw        4     NONE   float
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float
// COLOR                    0   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 7     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
ds_5_0
dcl_input_control_point_count 3
dcl_tessellator_domain domain_tri
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[10], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input vDomain.xyz
dcl_input vicp[3][0].xyzw
dcl_input vicp[3][1].xyzw
dcl_input vicp[3][2].xyz
dcl_input vicp[3][3].xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

dp3 r0.x, vicp[1][0].xyzx, vicp[1][2].xyzx
mul r1.xyzw, vDomain.yyyy, vicp[1][0].xyzw
mad r1.xyzw, vicp[0][0].xyzw, vDomain.xxxx, r1.xyzw
mad r1.xyzw, vicp[2][0].xyzw, vDomain.zzzz, r1.xyzw
dp3 r0.y, r1.xyzx, vicp[1][2].xyzx
add r0.x, -r0.x, r0.y
mad r0.xyz, -vicp[1][2].xyzx, r0.xxxx, r1.xyzx
mul r0.xyz, r0.xyzx, vDomain.yyyy
dp3 r0.w, vicp[0][0].xyzx, vicp[0][2].xyzx
dp3 r2.x, r1.xyzx, vicp[0][2].xyzx
add r0.w, -r0.w, r2.x
mad r2.xyz, -vicp[0][2].xyzx, r0.wwww, r1.xyzx
mad r0.xyz, r2.xyzx, vDomain.xxxx, r0.xyzx
dp3 r0.w, vicp[2][0].xyzx, vicp[2][2].xyzx
dp3 r2.x, r1.xyzx, vicp[2][2].xyzx
add r0.w, -r0.w, r2.x
mad r2.xyz, -vicp[2][2].xyzx, r0.wwww, r1.xyzx
mad r0.xyz, r2.xyzx, vDomain.zzzz, r0.xyzx
add r0.w, -cb0[30].y, l(1.000000)
mul r1.xyz, r1.xyzx, r0.wwww
mad r0.xyz, cb0[30].yyyy, r0.xyzx, r1.xyzx
mul r0.w, cb0[9].w, l(0.0222222228)
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mad r1.x, -cb0[9].w, l(0.0222222228), l(1.000000)
mul r2.xyz, vDomain.yyyy, vicp[1][2].xyzx
mad r2.xyz, vicp[0][2].xyzx, vDomain.xxxx, r2.xyzx
mad r2.xyz, vicp[2][2].xyzx, vDomain.zzzz, r2.xyzx
dp3 r3.y, r2.xyzx, cb2[4].xyzx
dp3 r3.z, r2.xyzx, cb2[5].xyzx
dp3 r3.x, r2.xyzx, cb2[6].xyzx
dp3 r1.y, r3.xyzx, r3.xyzx
rsq r1.y, r1.y
mul r3.xyzw, r1.yyyy, r3.zxyz
mov_sat r3.x, r3.x
add r1.x, -r1.x, r3.x
max r1.x, r1.x, l(0.000000)
min r1.x, r1.x, l(2.000000)
mul_sat r0.w, r0.w, r1.x
add r0.w, -r0.w, l(1.000000)
log r0.w, r0.w
mul r0.w, r0.w, cb0[10].x
exp r0.w, r0.w
mul r1.x, cb0[10].y, l(0.0222222228)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
mad r1.y, -cb0[10].y, l(0.0222222228), l(1.000000)
add r1.y, -r1.y, r3.x
max r1.y, r1.y, l(0.000000)
min r1.y, r1.y, l(2.000000)
mul_sat r1.x, r1.x, r1.y
add r1.x, -r1.x, l(1.000000)
log r1.x, r1.x
mul r1.x, r1.x, cb0[10].z
exp r1.x, r1.x
min r1.x, r1.x, l(1.000000)
add_sat r0.w, r0.w, -r1.x
mul r1.yz, vDomain.yyyy, vicp[1][3].xxyx
mad r1.yz, vicp[0][3].xxyx, vDomain.xxxx, r1.yyzy
mad r1.yz, vicp[2][3].xxyx, vDomain.zzzz, r1.yyzy
mad r4.xy, r1.yzyy, cb0[8].xyxx, cb0[8].zwzz
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[6].x
mul r4.xy, r2.wwww, r4.xyxx
itof r3.x, cb0[4].y
eq r3.x, r3.x, l(1.000000)
movc r4.zw, r3.xxxx, cb0[9].yyyz, cb0[9].zzzy
mad r4.zw, cb1[0].yyyy, r4.zzzw, r4.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r4.z, r4.zwzz, t1.xywz, s1, l(0.000000)
mul r4.z, r4.z, cb0[9].x
movc r5.xy, r3.xxxx, cb0[7].xyxx, cb0[7].yxyy
mad r4.xy, cb1[0].yyyy, r5.xyxx, r4.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t1.wxyz, s1, l(1.000000)
mad r4.x, r4.x, cb0[9].x, r4.z
mad r4.yz, r1.yyzy, cb0[5].xxyx, cb0[5].zzwz
mul r4.yz, r2.wwww, r4.yyzy
movc r5.xy, r3.xxxx, cb0[6].yzyy, cb0[6].zyzz
mad r5.xy, cb1[0].yyyy, r5.xyxx, r4.yzyy
sample_l_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t0.xyzw, s0, l(1.000000)
mul r4.w, r4.w, cb0[4].x
movc r5.xy, r3.xxxx, cb0[4].zwzz, cb0[4].wzww
mad r4.yz, cb1[0].yyyy, r5.xxyx, r4.yyzy
sample_l_indexable(texture2d)(float,float,float,float) r4.y, r4.yzyy, t0.xwyz, s0, l(1.000000)
mad r4.y, cb0[4].x, r4.y, r4.w
mad r4.x, r4.x, r0.w, -r4.y
mad r0.w, r0.w, r4.x, r4.y
mad r4.xy, r1.yzyy, cb0[12].xyxx, cb0[12].zwzz
mad o1.xy, r1.yzyy, cb0[31].xyxx, cb0[31].zwzz
mul r1.yz, r2.wwww, r4.xxyx
movc r4.xy, r3.xxxx, cb0[13].xyxx, cb0[13].yxyy
movc r4.zw, r3.xxxx, cb0[11].xxxy, cb0[11].yyyx
mad r4.zw, cb1[0].yyyy, r4.zzzw, r1.yyyz
mad r1.yz, cb1[0].yyyy, r4.xxyx, r1.yyzy
sample_l_indexable(texture2d)(float,float,float,float) r1.y, r1.yzyy, t2.xwyz, s2, l(1.000000)
mul r1.y, r1.y, cb0[10].w
sample_l_indexable(texture2d)(float,float,float,float) r1.z, r4.zwzz, t2.xywz, s2, l(1.000000)
mad r1.y, cb0[10].w, r1.z, r1.y
mad r1.y, r1.y, r1.x, -r0.w
mad r0.w, r1.x, r1.y, r0.w
mad r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
mul r2.xyzw, r0.yyyy, cb2[1].xyzw
mad r2.xyzw, cb2[0].xyzw, r0.xxxx, r2.xyzw
mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r2.xyzw
add r2.xyzw, r0.xyzw, cb2[3].xyzw
mad o5.xyz, cb2[3].xyzx, r1.wwww, r0.xyzx
mul r0.xyzw, r2.yyyy, cb3[18].xyzw
mad r0.xyzw, cb3[17].xyzw, r2.xxxx, r0.xyzw
mad r0.xyzw, cb3[19].xyzw, r2.zzzz, r0.xyzw
mad r0.xyzw, cb3[20].xyzw, r2.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 13a525982cc3f652-ds.txt
ne r6.w, r0.w, l(1.0)
if_nz r6.w
  add r6.w, r0.w, -r6.y
  mad r0.x, r6.w, r6.x, r0.x
endif

mov o1.z, r0.z
mov o6.zw, r0.zzzw
mul r1.xyzw, vDomain.yyyy, vicp[1][1].xyzw
mad r1.xyzw, vicp[0][1].xyzw, vDomain.xxxx, r1.xyzw
mad r1.xyzw, vicp[2][1].xyzw, vDomain.zzzz, r1.xyzw
mul r2.xyz, r1.yyyy, cb2[1].yzxy
mad r2.xyz, cb2[0].yzxy, r1.xxxx, r2.xyzx
mad r1.xyz, cb2[2].yzxy, r1.zzzz, r2.xyzx
mul r0.z, r1.w, cb2[9].w
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mul r2.xyz, r1.xyzx, r3.yzwy
mad r2.xyz, r3.wyzw, r1.yzxy, -r2.xyzx
mul r2.xyz, r0.zzzz, r2.xyzx
mov o2.y, r2.x
mov o2.z, r3.z
mov o2.x, r1.z
mov o3.x, r1.x
mov o4.x, r1.y
mov o3.z, r3.w
mov o4.z, r3.y
mov o3.y, r2.y
mov o4.y, r2.z
mul r0.y, r0.y, cb1[5].x
mul r0.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mul r0.w, r0.y, l(0.500000)
add o6.xy, r0.zzzz, r0.xwxx
ret
// Approximately 0 instruction slots used