// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed b08acc201c390f6e-vs.txt
// 3DMigoto: b08acc201c390f6e |    Unity headers extracted from AdvancedTerrainGrass_Grass Array Shader
//    Shader "AdvancedTerrainGrass/Grass Array Shader" {
//      SubShader 1/1 {
//        LOD 200
//        Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "QUEUE"="Geometry+200" "RenderType"="ATGrassArray" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+200" "RenderType"="ATGrassArray" "SHADOWSUPPORT"="true" }
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from AdvancedTerrainGrass_Grass Array Shader:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201802150 105 0 4
//   undeciphered1a: 7
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" "INSTANCING_ON" "_MIXMODE_RANDOM" }
//   undeciphered2: 1 1 9 1 0 0
//   undeciphered3: 27 4 0 0 1 1 4 5 3 3
//   ConstBuffer "$Globals" 256
//   Float 68 [_Clip]
//   Float 72 [_WindLOD]
//   Vector 96 [_HealthyColor]
//   Vector 112 [_DryColor]
//   Float 144 [InstanceScale]
//   Float 148 [_NormalBend]
//   Float 152 [_Layers]
//   Vector 160 [_WindMultiplier] 2
//   Vector 240 [_MainTexArray_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 48 [unity_4LightPosX0]
//   Vector 64 [unity_4LightPosY0]
//   Vector 80 [unity_4LightPosZ0]
//   Vector 96 [unity_4LightAtten0]
//   Vector 112 [unity_LightColor0]
//   Vector 128 [unity_LightColor1]
//   Vector 144 [unity_LightColor2]
//   Vector 160 [unity_LightColor3]
//   Vector 176 [unity_LightColor4]
//   Vector 192 [unity_LightColor5]
//   Vector 208 [unity_LightColor6]
//   Vector 224 [unity_LightColor7]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 272 [unity_MatrixVP]
//   ConstBuffer "UnityDrawCallInfo" 16
//   ScalarInt 0 [unity_BaseInstanceID]
//   ConstBuffer "UnityInstancing_PerDraw0" 128
//   Struct 0 [unity_Builtins0Array] 2 64
//   Matrix 0 [unity_ObjectToWorldArray]
//   ConstBuffer "UnityInstancing_PerDraw1" 128
//   Struct 0 [unity_Builtins1Array] 2 64
//   Matrix 0 [unity_WorldToObjectArray]
//   ConstBuffer "UnityInstancing_PerDraw2" 224
//   Struct 0 [unity_Builtins2Array] 2 112
//   Vector 0 [unity_SHArArray]
//   Vector 16 [unity_SHAgArray]
//   Vector 32 [unity_SHAbArray]
//   Vector 48 [unity_SHBrArray]
//   Vector 64 [unity_SHBgArray]
//   Vector 80 [unity_SHBbArray]
//   Vector 96 [unity_SHCArray]
//   ConstBuffer "AtgGrass" 80
//   Vector 0 [_AtgWindDirSize]
//   Vector 16 [_AtgWindStrengthMultipliers]
//   Vector 32 [_AtgSinTime]
//   Vector 48 [_AtgGrassFadeProps]
//   SetTexture 0 [_AtgWindRT] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerFrame" 3
//   BindCB "UnityDrawCallInfo" 4
//   BindCB "UnityInstancing_PerDraw0" 5
//   BindCB "UnityInstancing_PerDraw1" 6
//   BindCB "UnityInstancing_PerDraw2" 7
//   BindCB "AtgGrass" 8
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:58:28 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz
// TEXCOORD                 0   xy          2     NONE   float   xy
// COLOR                    0   xyzw        3     NONE   float   x  w
// SV_InstanceID            0   x           4   INSTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 6     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x
//
vs_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[11], immediateIndexed
dcl_constantbuffer cb3[23], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_constantbuffer cb5[8], dynamicIndexed
dcl_constantbuffer cb6[7], dynamicIndexed
dcl_constantbuffer cb7[14], dynamicIndexed
dcl_constantbuffer cb8[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xw
dcl_input_sgv v4.x, instance_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyzw
dcl_output o6.xyz
dcl_output o7.xyzw
dcl_output o8.x
dcl_temps 9

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125
dcl_constantbuffer cb10[4], immediateIndexed

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed b08acc201c390f6e-vs.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

iadd r0.x, v4.x, cb4[0].x
ishl r0.y, r0.x, l(2)
mad r1.xyz, cb0[9].xxxx, l(4.000000, 4.000000, 4.000000, 0.000000), cb5[r0.y + 3].xyzx
add r1.xyz, r1.xyzx, -r8.xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
add r0.w, -r0.z, cb8[3].x
mul_sat r0.w, r0.w, cb8[3].y
eq r1.x, r0.w, l(0.000000)
add r1.y, v0.y, l(-10000.000000)
movc r1.y, r1.x, r1.y, v0.y
if_z r1.x
  dp2 r1.x, cb5[r0.y + 3].xzxx, l(12.989800, 78.233002, 0.000000, 0.000000)
  frc r2.y, r1.x
  add r0.z, r0.z, -cb8[3].z
  mul_sat r0.z, r0.z, cb8[3].w
  lt r1.x, r2.y, cb0[4].y
  and r1.x, r1.x, l(0x3f800000)
  mad r0.z, -r0.z, r1.x, l(1.000000)
  eq r1.x, r0.z, l(0.000000)
  add r2.z, r1.y, l(-10000.000000)
  movc r1.y, r1.x, r2.z, r1.y
  if_z r1.x
    dp2 r1.x, cb5[r0.y + 3].zxzz, l(12.989800, 78.233002, 0.000000, 0.000000)
    frc r1.x, r1.x
    add r3.xyzw, -cb0[6].xyzw, cb0[7].xyzw
    mad r3.xyzw, r1.xxxx, r3.xyzw, cb0[6].xyzw
    mul r2.z, r3.w, v3.w
    mad r0.z, -r0.w, r0.z, l(1.000000)
    mov r1.zw, v0.xxxz
    mad r1.yzw, r0.zzzz, -r1.yyzw, r1.yyzw
    mul r0.zw, r1.yyyy, cb5[r0.y + 1].xxxz
    mad r0.zw, cb5[r0.y + 0].xxxz, r1.zzzz, r0.zzzw
    mad r0.zw, cb5[r0.y + 2].xxxz, r1.wwww, r0.zzzw
    mad r0.zw, cb5[r0.y + 3].xxxz, v0.wwww, r0.zzzw
    add r2.w, -v3.x, l(1.000000)
    mad r0.zw, r0.zzzw, cb8[0].wwww, r2.wwww
    mad r0.zw, cb0[9].xxxx, l(0.000000, 0.000000, 0.025000, 0.025000), r0.zzzw
    sample_l r4.xyzw, r0.zwzz, t0.xyzw, s0, cb0[4].z
    mad r0.z, r4.y, l(2.000000), l(-0.243760)
    mul r0.z, r0.z, r4.x
    mul r0.z, r0.z, cb8[1].x
    mul r0.z, r0.z, cb0[10].x
    mul r2.x, r2.z, -r0.z
    mul r4.xyz, cb8[0].yyyy, cb6[r0.y + 1].xyzx
    mad r4.xyz, cb6[r0.y + 0].xyzx, cb8[0].xxxx, r4.xyzx
    mad r4.xyz, cb6[r0.y + 2].xyzx, cb8[0].zzzz, r4.xyzx
    dp3 r0.z, r4.xyzx, r4.xyzx
    rsq r0.z, r0.z
    mul r0.zw, r0.zzzz, r4.xxxz
    mul r2.zw, r2.xxxx, r0.zzzw
    mad r0.zw, -r0.zzzw, r2.xxxx, r1.zzzw
    mov r4.x, cb8[2].x
    mov r4.y, l(0)
    add r1.zw, -r4.xxxy, cb8[2].yyyz
    mad r1.zw, r2.yyyx, r1.zzzw, r4.xxxy
    mad r1.z, r1.w, cb0[10].y, r1.z
    add r1.w, cb8[2].w, l(0.075000)
    mul r1.z, r1.w, r1.z
    mov_sat r2.x, r2.x
    mad r0.zw, r1.zzzz, r2.xxxx, r0.zzzw
    mul r1.zw, r2.zzzw, l(0.000000, 0.000000, 3.14159274, 3.14159274)
    mul r1.zw, r1.zzzw, cb0[9].yyyy
    add_sat o4.y, v3.w, l(0.850000)
    mad r2.x, r1.x, cb0[9].z, l(0.500000)
    round_ni o4.z, r2.x
    mad o4.x, r1.x, l(0.399999976), l(0.600000)
    mov o5.xyz, r3.xyzx
    mov o5.w, v3.w
    mov r1.x, l(1.000000)
    mov r1.zw, -r1.zzzw
  else
    mov o5.xyzw, l(0,0,0,0)
    mov o4.xyz, l(0,0,0,0)
    mov r0.zw, v0.xxxz
    mov r1.xzw, v1.yyxz
  endif
else
  mov o5.xyzw, l(0,0,0,0)
  mov o4.xyz, l(0,0,0,0)
  mov r0.zw, v0.xxxz
  mov r1.xzw, v1.yyxz
endif
mul r2.xyzw, r1.yyyy, cb5[r0.y + 1].xyzw
mad r2.xyzw, cb5[r0.y + 0].xyzw, r0.zzzz, r2.xyzw
mad r2.xyzw, cb5[r0.y + 2].xyzw, r0.wwww, r2.xyzw
add r3.xyzw, r2.xyzw, cb5[r0.y + 3].xyzw
mul r4.xyzw, r3.yyyy, cb3[18].xyzw
mad r4.xyzw, cb3[17].xyzw, r3.xxxx, r4.xyzw
mad r4.xyzw, cb3[19].xyzw, r3.zzzz, r4.xyzw
mad r3.xyzw, cb3[20].xyzw, r3.wwww, r4.xyzw
mad o1.xy, v2.xyxx, cb0[15].xyxx, cb0[15].zwzz
mad r2.xyz, cb5[r0.y + 3].xyzx, v0.wwww, r2.xyzx
mul r4.xyz, r1.xxxx, cb5[r0.y + 1].xyzx
mad r1.xyz, cb5[r0.y + 0].xyzx, r1.zzzz, r4.xyzx
mad r0.yzw, cb5[r0.y + 2].xxyz, r1.wwww, r1.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
add r1.xyzw, -r2.xxxx, cb2[3].xyzw
add r4.xyzw, -r2.yyyy, cb2[4].xyzw
add r5.xyzw, -r2.zzzz, cb2[5].xyzw
mul r6.xyzw, r4.xyzw, r4.xyzw
mad r6.xyzw, r1.xyzw, r1.xyzw, r6.xyzw
mad r6.xyzw, r5.xyzw, r5.xyzw, r6.xyzw
max r6.xyzw, r6.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
mul r4.xyzw, r0.zzzz, r4.xyzw
mad r1.xyzw, r1.xyzw, r0.yyyy, r4.xyzw
mad r1.xyzw, r5.xyzw, r0.wwww, r1.xyzw
rsq r4.xyzw, r6.xyzw
mul r1.xyzw, r1.xyzw, r4.xyzw
max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r4.xyzw, r6.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzw
mul r1.xyzw, r1.xyzw, r4.xyzw
mul r4.xyz, r1.yyyy, cb2[8].xyzx
mad r4.xyz, cb2[7].xyzx, r1.xxxx, r4.xyzx
mad r1.xyz, cb2[9].xyzx, r1.zzzz, r4.xyzx
mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
mul r4.xyzw, r0.zwwy, r0.yzww
imul null, r0.x, r0.x, l(7)
dp4 r5.x, cb7[r0.x + 3].xyzw, r4.xyzw
dp4 r5.y, cb7[r0.x + 4].xyzw, r4.xyzw
dp4 r5.z, cb7[r0.x + 5].xyzw, r4.xyzw
mul r1.w, r0.z, r0.z
mad r1.w, r0.y, r0.y, -r1.w
mad r4.xyz, cb7[r0.x + 6].xyzx, r1.wwww, r5.xyzx
add o6.xyz, r1.xyzx, r4.xyzx

// Relocated to here with asmtool.py
mov o0.xyzw, r3.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed b08acc201c390f6e-vs.txt
ne r7.w, r3.w, l(1.0)
if_nz r7.w
  add r7.w, r3.w, -r7.y
  mad r3.x, r7.w, r7.x, r3.x
endif

mul r1.xyz, r3.xywx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r1.w, r1.y, cb1[5].x
add o7.xy, r1.zzzz, r1.xwxx

// mov o0.xyzw, r3.xyzw // Relocated from here with asmtool.py

mov o7.zw, r3.zzzw
mov o1.z, r3.z
mov o2.xyz, r0.yzwy
mov o3.xyz, r2.xyzx
mov o8.x, v4.x
ret
// Approximately 0 instruction slots used