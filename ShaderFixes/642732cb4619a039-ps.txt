// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 642732cb4619a039-ps.txt
// 3DMigoto: 642732cb4619a039 |    Unity headers extracted from VolumetricFogAndMist_VolumetricFog
//    Shader "VolumetricFogAndMist/VolumetricFog" {
//      SubShader 1/1 {
//        Pass 4/5 {
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from VolumetricFogAndMist_VolumetricFog:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 166 2 10
//   undeciphered1a: 22
//   Keywords { "FOG_DISTANCE_ON" "FOG_AREA_SPHERE" "FOG_VOID_BOX" "FOG_USE_XY_PLANE" "FOG_POINT_LIGHT2" "FOG_SUN_SHADOWS_ON" }
//   undeciphered2: 1 3 2 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 672
//   Vector 64 [_CameraDepthTexture_TexelSize]
//   Float 172 [_FogAlpha]
//   Vector 176 [_Color] 3
//   Vector 192 [_FogDistance]
//   Vector 208 [_FogData]
//   Vector 224 [_FogWindDir] 3
//   Vector 240 [_FogStepping]
//   Vector 272 [_FogVoidPosition] 3
//   Vector 288 [_FogVoidData]
//   Vector 304 [_FogAreaPosition] 3
//   Vector 320 [_FogAreaData]
//   Vector 336 [_FogPointLightPosition0] 3
//   Vector 352 [_FogPointLightColor0] 3
//   Vector 368 [_FogPointLightPosition1] 3
//   Vector 384 [_FogPointLightColor1] 3
//   Vector 400 [_FogPointLightPosition2] 3
//   Vector 416 [_FogPointLightColor2] 3
//   Vector 448 [_SunDir] 3
//   Vector 464 [_SunColor] 3
//   Vector 496 [_FogScatteringData2]
//   Vector 592 [_VolumetricFogSunWorldPos]
//   Vector 608 [_VolumetricFogSunShadowsData]
//   Float 624 [_Jitter]
//   Matrix 528 [_VolumetricFogSunProj]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 96 [_ScreenParams]
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 1
//   SetTexture 1 [_NoiseTex] 2D 0
//   SetTexture 2 [_VolumetricFogSunDepthTexture] 2D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:12:54 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[40], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 24
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r22.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 642732cb4619a039-ps.txt

mul r22.w, -r22.x, r22.y
mad r23.xyz, -r22.wwww, cb10[0].xyzw, cb1[4].xyzw

mad r0.xyzw, cb0[4].xyxy, l(0.000000, -0.750000, 0.000000, 0.750000), v1.zwzw
sample r1.xyzw, r0.xyxx, t0.xyzw, s1
sample r0.xyzw, r0.zwzz, t0.xyzw, s1
max r0.x, r0.x, r1.x
mad r0.x, cb1[7].x, r0.x, cb1[7].y
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r1.z, -cb0[13].x, r23.z
mov r1.xy, r23.xyxx
mad r0.xyz, v2.xyzx, r0.xxxx, r1.xyzx
add r1.w, r0.z, l(0.000010)
lt r2.xy, cb0[13].yyyy, r1.zwzz
and r2.x, r2.y, r2.x
lt r2.y, r1.z, -cb0[13].y
lt r1.w, r1.w, -cb0[13].y
and r1.w, r1.w, r2.y
or r1.w, r1.w, r2.x
if_z r1.w
  add r0.w, r0.z, l(0.000010)
  add r0.xyz, -r1.xyzx, r0.xywx
  dp3 r0.w, r0.xyzx, r0.xyzx
  sqrt r0.w, r0.w
  add r2.xyz, r1.xyzx, -cb0[19].xyzx
  div r3.xyz, r0.xyzx, r0.wwww
  dp3 r1.w, r3.xyzx, r2.xyzx
  dp3 r2.x, r2.xyzx, r2.xyzx
  add r2.x, r2.x, -cb0[20].y
  mad r2.x, r1.w, r1.w, -r2.x
  ge r2.y, r2.x, l(0.000000)
  sqrt r2.z, r2.x
  movc r2.x, r2.y, r2.z, r2.x
  add r2.y, -r1.w, -r2.x
  max r2.y, r2.y, l(0.000000)
  min r2.z, r0.w, cb0[12].z
  add r1.w, -r1.w, r2.x
  min r1.w, r2.z, r1.w
  add r1.w, -r2.y, r1.w
  ge r2.x, r1.w, l(0.000000)
  if_nz r2.x
    mad r4.xyz, r3.xyzx, r2.yyyy, r1.xyzx
    mul r1.xyz, r0.xyzx, r1.wwww
    div r1.xyz, r1.xyzx, r0.wwww
    add r1.xyz, r1.xyzx, r4.xyzx
    add r1.xyz, -r1.xyzx, cb0[17].xyzx
    mul r1.xyz, |r1.xyzx|, cb0[18].xyzx
    max r1.x, r1.y, r1.x
    max r1.x, r1.z, r1.x
    add r1.x, r1.x, l(-1.000000)
    mad_sat r1.x, cb0[18].w, r1.x, l(1.000000)
    lt r1.y, l(0.000000), r1.x
    if_nz r1.y
      mul r1.yz, v1.xxyx, cb1[6].xxyx
      dp2 r1.y, l(2.40845060, 3.25352120, 0.000000, 0.000000), r1.yzyy
      frc r1.y, r1.y
      add r1.y, r1.y, l(-0.500000)
      log r1.z, r1.w
      mul r1.z, r1.z, l(0.693147182)
      max r1.z, r1.z, l(0.000000)
      mad r1.z, r1.z, cb0[15].x, l(0.100000)
      mul r1.z, r1.z, cb0[13].z
      mul_sat r2.x, r2.z, cb0[15].y
      mul r1.z, r1.z, r2.x
      add r2.x, -r2.y, r2.z
      max r1.z, r1.z, l(0.010000)
      mul r5.xyz, r0.xyzx, r1.zzzz
      div r5.xyz, r5.xyzx, r0.wwww
      div r1.z, r1.w, r1.z
      add r6.xyz, r4.xyzx, -cb0[21].xyzx
      add r7.xyz, r4.xyzx, -cb0[23].xyzx
      add r8.xyz, r4.xyzx, -cb0[25].xyzx
      mul r9.xy, r5.xyxx, cb0[13].wwww
      mul r2.z, cb0[13].z, cb0[13].y
      div r9.z, r5.z, r2.z
      add r10.xy, r4.xyxx, cb0[14].xzxx
      mul r10.xy, r10.xyxx, cb0[13].wwww
      div r2.z, r4.z, r2.z
      add r10.zw, cb0[14].xxxy, cb0[19].xxxy
      add r11.xy, cb0[14].xyxx, r23.xyxx
      frc r2.w, r1.y
      mad r1.z, r2.w, cb0[39].x, r1.z
      add r4.w, r4.z, cb0[13].x
      mul r12.xyz, r4.yyyy, cb0[34].xywx
      mad r12.xyz, cb0[33].xywx, r4.xxxx, r12.xyzx
      mad r12.xyz, cb0[35].xywx, r4.wwww, r12.xyzx
      add r12.xyz, r12.xyzx, cb0[36].xywx
      div r11.zw, r12.xxxy, r12.zzzz
      mad r11.zw, r11.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      mad r1.y, r1.y, cb0[38].y, l(1.000000)
      mul r1.y, r1.y, r1.w
      mul r0.xyz, r0.xyzx, r1.yyyy
      div r0.xyz, r0.xyzx, r0.wwww
      add r0.xyz, r0.xyzx, r4.xywx
      mul r12.xyz, r0.yyyy, cb0[34].xywx
      mad r12.xyz, cb0[33].xywx, r0.xxxx, r12.xyzx
      mad r12.xyz, cb0[35].xywx, r0.zzzz, r12.xyzx
      add r12.xyz, r12.xyzx, cb0[36].xywx
      div r12.xy, r12.xyxx, r12.zzzz
      mad r12.xy, r12.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r0.w, -r2.y, cb0[37].w
      mul_sat r0.w, r0.w, l(0.0285714287)
      mul r0.w, r0.w, cb0[38].x
      div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
      ge r1.w, r1.w, r2.x
      and r1.w, r1.w, l(0x3f800000)
      add r2.xy, r11.zwzz, -r12.xyxx
      add r4.xyz, -r0.xyzx, r4.xywx
      mov r13.xyzw, l(0,0,0,0)
      mov r14.xyz, r6.xyzx
      mov r15.xyz, r7.xyzx
      mov r16.xyz, r8.xyzx
      mov r18.xy, r10.xyxx
      mov r2.w, r1.z
      mov r18.z, r2.z
      mov r17.xyzw, l(0,0,0,0)
      loop
        ge r3.w, l(1.000000), r2.w
        breakc_nz r3.w
        mad r11.zw, r10.zzzw, cb0[13].wwww, -r18.xxxy
        mul r11.zw, r11.zzzw, cb0[20].xxxx
        dp2 r3.w, r11.zwzz, r11.zwzz
        sample_l r19.xyzw, r18.xyxx, t1.xyzw, s0, l(0.000000)
        mad r3.w, r3.w, cb0[20].w, |r18.z|
        add r3.w, -r3.w, r19.w
        mad r11.zw, r11.xxxy, cb0[13].wwww, -r18.xxxy
        dp2 r4.w, r11.zwzz, r11.zwzz
        add r4.w, -r4.w, cb0[12].x
        max r4.w, r4.w, l(0.000000)
        mad r3.w, -r4.w, cb0[12].y, r3.w
        lt r4.w, l(0.000000), r3.w
        if_nz r4.w
          add r4.w, -r3.w, l(1.000000)
          mul r20.xyz, r4.wwww, cb0[11].xyzx
          mul r20.w, r3.w, l(0.400000)
          mul r3.w, r1.y, r2.w
          mad r11.zw, r3.wwww, r2.xxxy, r12.xxxy
          sample_l r21.xyzw, r11.zwzz, t2.xyzw, s2, l(0.000000)
          dp4 r4.w, r21.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
          div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
          mad r21.xyz, r3.wwww, r4.xyzx, r0.xyzx
          add r21.xyz, r21.xyzx, -cb0[37].xyzx
          dp3 r3.w, r21.xyzx, r21.xyzx
          sqrt r3.w, r3.w
          add_sat r3.w, -r3.w, r4.w
          mul r4.w, r0.w, r17.w
          add r3.w, r3.w, l(-1.000000)
          mad r4.w, r4.w, r3.w, l(1.000000)
          mad r3.w, cb0[38].z, r3.w, l(1.000000)
          mul r20.xyzw, r3.wwww, r20.xyzw
          dp3 r3.w, r14.xyzx, r14.xyzx
          div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
          dp3 r5.w, r15.xyzx, r15.xyzx
          div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
          dp3 r6.w, r16.xyzx, r16.xyzx
          div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
          mul r21.xyz, r5.wwww, cb0[24].xyzx
          mad r21.xyz, cb0[26].xyzx, r6.wwww, r21.xyzx
          mad r21.xyz, cb0[22].xyzx, r3.wwww, r21.xyzx
          mul r21.xyz, r20.wwww, r21.xyzx
          mad r19.xyz, r19.xyzx, r4.wwww, r21.xyzx
          mul r19.xyz, r20.wwww, r19.xyzx
          mul r20.xyz, r19.xyzx, r20.xyzx
          add r3.w, -r17.w, l(1.000000)
          mad r19.xyzw, r20.xyzw, r3.wwww, r17.xyzw
          lt r3.w, l(0.990000), r19.w
          if_nz r3.w
            mov r13.xyzw, r20.xyzw
            mov r17.xyzw, r19.xyzw
            break
          endif
          mov r13.xyzw, r20.xyzw
          mov r17.xyzw, r19.xyzw
        endif
        add r14.xyz, r5.xyzx, r14.xyzx
        add r15.xyz, r5.xyzx, r15.xyzx
        add r16.xyz, r5.xyzx, r16.xyzx
        add r2.w, r2.w, l(-1.000000)
        add r18.xyz, r9.xyzx, r18.xyzx
      endloop
      lt r0.x, r17.w, l(0.990000)
      and r0.x, r0.x, l(0x3f800000)
      add r0.y, -r17.w, l(1.000000)
      mul r0.z, r1.w, r2.w
      mul r0.x, r0.y, r0.x
      mul r0.x, r0.z, r0.x
      mad r0.xyzw, r13.xyzw, r0.xxxx, r17.xyzw
      dp3 r1.y, r3.xyzx, cb0[28].xyzx
      mul r1.y, r1.y, cb0[31].w
      max r1.y, r1.y, l(0.000000)
      mul r1.y, r1.y, r1.y
      mul r1.y, r1.y, r1.y
      mul r1.y, r1.y, r1.y
      mul r1.y, r0.w, r1.y
      add r2.xyz, -r0.xyzx, cb0[29].xyzx
      mad r0.xyz, r1.yyyy, r2.xyzx, r0.xyzx
      mul r0.xyzw, r0.xyzw, cb0[10].wwww
      mul o0.xyzw, r1.xxxx, r0.xyzw
    else
      mov o0.xyzw, l(0,0,0,0)
    endif
  else
    mov o0.xyzw, l(0,0,0,0)
  endif
else
  mov o0.xyzw, l(0,0,0,0)
endif
ret
// Approximately 0 instruction slots used