// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f122b04bc7a7f320-ps.txt
// 3DMigoto: f122b04bc7a7f320 |    Unity headers extracted from NatureManufacture Shaders_Water_Water Swamp Tesseled Vertex Color Flow
//    Shader "NatureManufacture Shaders/Water/Water Swamp Tesseled Vertex Color Flow" {
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//        Pass 3/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from NatureManufacture Shaders_Water_Water Swamp Tesseled Vertex Color Flow:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 201802150 320 20 2
//   undeciphered1a: 13
//   Keywords { "DIRECTIONAL" "FOG_LINEAR" }
//   undeciphered2: 1 10 5 10 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 384
//   Vector 32 [_LightColor0]
//   ScalarInt 68 [_UVVDirection1UDirection0]
//   Vector 72 [_WaterMixSpeed] 2
//   Vector 80 [_WaterNormal_ST]
//   Float 96 [_GlobalTiling]
//   Vector 100 [_WaterMainSpeed] 2
//   Float 108 [_NormalScale]
//   Float 112 [_DetailNormalScale]
//   Vector 128 [_DetailAlbedo_ST]
//   Vector 144 [_Noise_ST]
//   Float 160 [_DetailNoisePower]
//   Float 164 [_Detail2NormalScale]
//   Vector 176 [_Detail2Albedo_ST]
//   Float 192 [_Detail2NoisePower]
//   Float 196 [_CascadeAngle]
//   Float 200 [_CascadeAngleFalloff]
//   Float 204 [_Distortion]
//   Vector 208 [_DeepColor]
//   Vector 224 [_ShalowColor]
//   Float 240 [_ShalowDepth]
//   Float 244 [_ShalowFalloff]
//   Vector 256 [_DetailAlbedoColor]
//   Vector 272 [_Detail2AlbedoColor]
//   Float 288 [_WaterSpecularFar]
//   Float 292 [_WaterSpecularClose]
//   Float 296 [_WaterSpecularThreshold]
//   Float 300 [_DetailSpecular]
//   Float 304 [_Detail2Specular]
//   Float 308 [_WaterSmoothness]
//   Float 312 [_DetailSmoothness]
//   Float 316 [_Detail2Smoothness]
//   Float 332 [_WaterDepth]
//   Float 336 [_WaterFalloffBorder]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_WaterNormal] 2D 1
//   SetTexture 1 [_DetailNormal] 2D 3
//   SetTexture 2 [_DetailAlbedo] 2D 2
//   SetTexture 3 [_Noise] 2D 4
//   SetTexture 4 [_Detail2Normal] 2D 6
//   SetTexture 5 [_Detail2Albedo] 2D 5
//   SetTexture 6 [_WaterGrab] 2D 7
//   SetTexture 7 [_CameraDepthTexture] 2D 8
//   SetTexture 8 [_Detail1G_Sm_Detail_2_A_Sm] 2D 9
//   SetTexture 9 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:28:42 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 7      w        2     NONE   float      w
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[22], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t9
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyw
dcl_input_ps linear v7.xyzw
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f122b04bc7a7f320-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, r14.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
mad r2.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[6].x
mul r2.zw, r1.wwww, r2.xxxy
itof r3.x, cb0[4].y
eq r3.x, r3.x, l(1.000000)
movc r3.yz, r3.xxxx, cb0[4].zzwz, cb0[4].wwzw
mad r2.zw, cb1[0].yyyy, r3.yyyz, r2.zzzw
movc r3.xy, r3.xxxx, cb0[6].yzyy, cb0[6].zyzz
mul r3.xy, r3.xyxx, v1.zwzz
mul r3.z, cb1[0].y, l(0.045000)
frc r3.z, r3.z
mul r4.xy, r3.zzzz, r3.xyxx
mad r4.zw, r2.xxxy, r1.wwww, r4.xxxy
mad r3.w, cb1[0].y, l(0.045000), l(0.500000)
frc r3.w, r3.w
mul r3.xy, r3.wwww, r3.xyxx
mad r2.xy, r2.xyxx, r1.wwww, r3.xyxx
add r3.z, r3.z, l(-0.500000)
add r3.z, r3.z, r3.z
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r4.zwzz, t0.xywz, s1
mul r5.x, r5.z, r5.x
mad r4.zw, r5.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r5.xy, r4.zwzz, cb0[6].wwww
dp2 r3.w, r5.xyxx, r5.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r5.z, r3.w
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r2.xyxx, t0.xywz, s1
mul r6.x, r6.z, r6.x
mad r2.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xy, r2.xyxx, cb0[6].wwww
dp2 r2.x, r6.xyxx, r6.xyxx
min r2.x, r2.x, l(1.000000)
add r2.x, -r2.x, l(1.000000)
sqrt r6.z, r2.x
add r6.xyz, -r5.xyzx, r6.xyzx
mad r5.xyz, |r3.zzzz|, r6.xyzx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.zwzz, t0.xywz, s1
mul r2.w, cb0[6].w, l(1.200000)
mul r2.x, r2.z, r2.x
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.zw, r2.wwww, r2.xxxy
dp2 r2.z, r4.zwzz, r4.zwzz
min r2.z, r2.z, l(1.000000)
add r2.z, -r2.z, l(1.000000)
sqrt r2.z, r2.z
mad r6.xy, r2.xyxx, r2.wwww, r5.xyxx
mul r6.z, r5.z, r2.z
dp3 r2.x, r6.xyzx, r6.xyzx
rsq r2.x, r2.x
mul r2.yzw, r2.xxxx, r6.xxyz
mad r4.zw, v1.xxxy, cb0[8].xxxy, cb0[8].zzzw
mad r5.xy, r4.zwzz, r1.wwww, r4.xyxx
mad r4.zw, r4.zzzw, r1.wwww, r3.xxxy
sample_indexable(texture2d)(float,float,float,float) r7.xyz, r5.xyxx, t1.xywz, s3
mul r7.x, r7.z, r7.x
mad r5.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r7.xy, r5.zwzz, cb0[7].xxxx
dp2 r3.w, r7.xyxx, r7.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r7.z, r3.w
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r4.zwzz, t1.xywz, s3
mul r8.x, r8.z, r8.x
mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r8.xy, r5.zwzz, cb0[7].xxxx
dp2 r3.w, r8.xyxx, r8.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r8.z, r3.w
add r8.xyz, -r7.xyzx, r8.xyzx
mad r7.xyz, |r3.zzzz|, r8.xyzx, r7.xyzx
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, r5.xyxx, t2.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, r4.zwzz, t2.xyzw, s2
add r9.xyzw, -r8.xyzw, r9.xyzw
mad r8.xyzw, |r3.zzzz|, r9.xyzw, r8.xyzw
mad r5.zw, v1.xxxy, cb0[9].xxxy, cb0[9].zzzw
mad r9.xy, r5.zwzz, r1.wwww, r4.xyxx
mad r5.zw, r5.zzzw, r1.wwww, r3.xxxy
sample_indexable(texture2d)(float,float,float,float) r3.w, r9.xyxx, t3.xyzw, s4
sample_indexable(texture2d)(float,float,float,float) r5.z, r5.zwzz, t3.xywz, s4
add r5.z, -r3.w, r5.z
mad r3.w, |r3.z|, r5.z, r3.w
log r5.z, r3.w
mul r5.z, r5.z, cb0[10].x
exp r5.z, r5.z
mul r5.z, r5.z, l(5.000000)
min r5.z, r5.z, l(1.000000)
mad r5.w, r5.z, l(-2.000000), l(3.000000)
mul r5.z, r5.z, r5.z
mul r5.z, r5.z, r5.w
min r5.z, r5.z, l(1.000000)
mul r5.z, r8.w, r5.z
mad r7.xyz, -r6.xyzx, r2.xxxx, r7.xyzx
mad r9.xyz, r5.zzzz, r7.xyzx, r2.yzwy
mad r10.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
mad r4.xy, r10.xyxx, r1.wwww, r4.xyxx
mad r3.xy, r10.xyxx, r1.wwww, r3.xyxx
sample_indexable(texture2d)(float,float,float,float) r10.xyz, r4.xyxx, t4.xywz, s6
mul r10.x, r10.z, r10.x
mad r10.xy, r10.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r10.xy, r10.xyxx, cb0[10].yyyy
dp2 r1.w, r10.xyxx, r10.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r10.z, r1.w
sample_indexable(texture2d)(float,float,float,float) r11.xyz, r3.xyxx, t4.xywz, s6
mul r11.x, r11.z, r11.x
mad r11.xy, r11.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r11.xy, r11.xyxx, cb0[10].yyyy
dp2 r1.w, r11.xyxx, r11.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r11.z, r1.w
add r11.xyz, -r10.xyzx, r11.xyzx
mad r10.xyz, |r3.zzzz|, r11.xyzx, r10.xyzx
sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r4.xyxx, t5.xyzw, s5
sample_indexable(texture2d)(float,float,float,float) r12.xyzw, r3.xyxx, t5.xyzw, s5
add r12.xyzw, -r11.xyzw, r12.xyzw
mad r11.xyzw, |r3.zzzz|, r12.xyzw, r11.xyzw
max r1.w, r3.w, r3.w
log r1.w, r1.w
mul r1.w, r1.w, cb0[12].x
exp r1.w, r1.w
mul r1.w, r1.w, l(2.12765956)
min r1.w, r1.w, l(1.000000)
mad r3.w, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r3.w
min r1.w, r1.w, l(1.000000)
mul r1.w, r11.w, r1.w
add r12.xyz, -r9.xyzx, r10.xyzx
mad r9.xyz, r1.wwww, r12.xyzx, r9.xyzx
mad r7.xyz, r8.wwww, r7.xyzx, r2.yzwy
add r7.xyz, -r9.xyzx, r7.xyzx
mad r7.xyz, v7.xxxx, r7.xyzx, r9.xyzx
mad r10.xyz, -r6.xyzx, r2.xxxx, r10.xyzx
mad r2.yzw, r11.wwww, r10.xxyz, r2.yyzw
add r2.yzw, -r7.xxyz, r2.yyzw
mad r2.yzw, v7.yyyy, r2.yyzw, r7.xxyz
mad r7.xyz, r6.xyzx, r2.xxxx, -r2.yzwy
mad r2.yzw, v7.zzzz, r7.xxyz, r2.yyzw
mov_sat r3.w, v3.z
mul r5.w, cb0[12].y, l(0.0222222228)
mad r6.w, -cb0[12].y, l(0.0222222228), l(1.000000)
add r3.w, r3.w, -r6.w
max r3.w, r3.w, l(0.000000)
min r3.w, r3.w, l(2.000000)
div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
mul_sat r3.w, r3.w, r5.w
add r3.w, -r3.w, l(1.000000)
log r3.w, r3.w
mul r3.w, r3.w, cb0[12].z
exp r3.w, r3.w
min r3.w, r3.w, l(1.000000)
mad r6.xyz, r6.xyzx, r2.xxxx, -r2.yzwy
mad r2.xyz, r3.wwww, r6.xyzx, r2.yzwy
add r6.xyw, v6.wxww, l(9.999999960E-012, 0.000000, 0.000000, 9.999999960E-012)
mul r2.w, r6.x, l(0.500000)
mad r5.w, -r6.x, l(0.500000), v6.y
mad r6.z, -r5.w, cb1[5].x, r2.w
div r6.yzw, r6.yyzw, r6.xxxx
div r6.yz, r6.yyzy, r6.wwww
mad r6.yz, r9.xxyx, cb0[12].wwww, r6.yyzy
sample_indexable(texture2d)(float,float,float,float) r6.yzw, r6.yzyy, t6.wxyz, s7
div r7.xy, v6.xyxx, r6.xxxx
sample_indexable(texture2d)(float,float,float,float) r2.w, r7.xyxx, t7.yzwx, s8
mad r2.w, cb1[7].z, r2.w, cb1[7].w
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
add r2.w, -r6.x, r2.w
add r5.w, |r2.w|, cb0[15].x
log r5.w, r5.w
mul r5.w, r5.w, cb0[15].y
exp r5.w, r5.w
min r5.w, r5.w, l(1.000000)
add r7.xyz, -cb0[13].xyzx, cb0[14].xyzx
mad r7.xyz, r5.wwww, r7.xyzx, cb0[13].xyzx
add r6.x, -r5.w, l(1.000000)
add r7.xyz, -r6.yzwy, r7.xyzx
mad r6.xyz, r6.xxxx, r7.xyzx, r6.yzwy
mul r7.xyz, r8.xyzx, cb0[16].xyzx
mad r8.xyz, r8.xyzx, cb0[16].xyzx, -r6.xyzx
mad r9.xyz, r5.zzzz, r8.xyzx, r6.xyzx
mad r10.xyz, r11.xyzx, cb0[17].xyzx, -r9.xyzx
mad r9.xyz, r1.wwww, r10.xyzx, r9.xyzx
mad r8.xyz, r8.wwww, r8.xyzx, r6.xyzx
add r8.xyz, -r9.xyzx, r8.xyzx
mad r8.xyz, v7.xxxx, r8.xyzx, r9.xyzx
mad r9.xyz, r11.xyzx, cb0[17].xyzx, -r6.xyzx
mad r9.xyz, r11.wwww, r9.xyzx, r6.xyzx
add r9.xyz, -r8.xyzx, r9.xyzx
mad r8.xyz, v7.yyyy, r9.xyzx, r8.xyzx
add r9.xyz, r6.xyzx, -r8.xyzx
mad r8.xyz, v7.zzzz, r9.xyzx, r8.xyzx
add r6.xyz, r6.xyzx, -r8.xyzx
mad r6.xyz, r3.wwww, r6.xyzx, r8.xyzx
log r5.w, r5.w
mul r5.w, r5.w, cb0[18].z
exp r5.w, r5.w
add r6.w, -cb0[18].x, cb0[18].y
mad r5.w, r5.w, r6.w, cb0[18].x
mul r7.xyz, r7.xyzx, l(0.300000, 0.301960796, 0.301960796, 0.000000)
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r7.xyz, r7.xyzx, l(0.500000, 0.501960814, 0.501960814, 0.000000)
mad r7.xyz, cb0[18].wwww, r7.xyzx, -r5.wwww
mad r8.xyz, r5.zzzz, r7.xyzx, r5.wwww
mul r9.xyz, r11.xyzx, l(0.300000, 0.301960796, 0.301960796, 0.000000)
max r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r9.xyz, r9.xyzx, l(0.500000, 0.501960814, 0.501960814, 0.000000)
mad r10.xyz, cb0[19].xxxx, r9.xyzx, -r8.xyzx
mad r8.xyz, r1.wwww, r10.xyzx, r8.xyzx
mad r7.xyz, r8.wwww, r7.xyzx, r5.wwww
add r7.xyz, -r8.xyzx, r7.xyzx
mad r7.xyz, v7.xxxx, r7.xyzx, r8.xyzx
mad r8.xyz, cb0[19].xxxx, r9.xyzx, -r5.wwww
mad r8.xyz, r11.wwww, r8.xyzx, r5.wwww
add r8.xyz, -r7.xyzx, r8.xyzx
mad r7.xyz, v7.yyyy, r8.xyzx, r7.xyzx
add r8.xyz, r5.wwww, -r7.xyzx
mad r7.xyz, v7.zzzz, r8.xyzx, r7.xyzx
add r8.xyz, r5.wwww, -r7.xyzx
mad r7.xyz, r3.wwww, r8.xyzx, r7.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t8.yxzw, s9
sample_indexable(texture2d)(float,float,float,float) r4.z, r4.zwzz, t8.xzyw, s9
add r4.z, -r5.x, r4.z
mad r4.z, |r3.z|, r4.z, r5.x
mad r4.z, r4.z, cb0[19].z, -cb0[19].y
mad r4.w, r5.z, r4.z, cb0[19].y
sample_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t8.wxyz, s9
sample_indexable(texture2d)(float,float,float,float) r3.x, r3.xyxx, t8.wxyz, s9
add r3.x, -r4.x, r3.x
mad r3.x, |r3.z|, r3.x, r4.x
mad r3.y, r3.x, cb0[19].w, -r4.w
mad r1.w, r1.w, r3.y, r4.w
mad r3.y, r8.w, r4.z, cb0[19].y
add r3.y, -r1.w, r3.y
mad r1.w, v7.x, r3.y, r1.w
mad r3.x, r3.x, cb0[19].w, -cb0[19].y
mad r3.x, r11.w, r3.x, cb0[19].y
add r3.x, -r1.w, r3.x
mad r1.w, v7.y, r3.x, r1.w
add r3.x, -r1.w, cb0[19].y
mad r1.w, v7.z, r3.x, r1.w
add r3.x, -r1.w, cb0[19].y
mad r1.w, r3.w, r3.x, r1.w
log r2.w, |r2.w|
mul r2.w, r2.w, cb0[20].w
exp r2.w, r2.w
min r2.w, r2.w, l(1.000000)
log r2.w, r2.w
mul r2.w, r2.w, cb0[21].x
exp r2.w, r2.w
mul o0.w, r2.w, v7.w
eq r2.w, cb4[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb4[0].y, l(1.000000)
  mul r3.xyz, v5.yyyy, cb4[2].xyzx
  mad r3.xyz, cb4[1].xyzx, v5.xxxx, r3.xyzx
  mad r3.xyz, cb4[3].xyzx, v5.zzzz, r3.xyzx
  add r3.xyz, r3.xyzx, cb4[4].xyzx
  movc r3.xyz, r2.wwww, r3.xyzx, v5.xyzx
  add r3.xyz, r3.xyzx, -cb4[6].xyzx
  mul r3.yzw, r3.xxyz, cb4[5].xxyz
  mad r2.w, r3.y, l(0.250000), l(0.750000)
  mad r3.y, cb4[0].z, l(0.500000), l(0.750000)
  max r3.x, r2.w, r3.y
  sample_indexable(texture3d)(float,float,float,float) r3.xyzw, r3.xzwx, t9.xyzw, s0
else
  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r3.xyzw, cb2[46].xyzw
dp3 r3.x, v2.xyzx, r2.xyzx
dp3 r3.y, v3.xyzx, r2.xyzx
dp3 r3.z, v4.xyzx, r2.xyzx
dp3 r2.x, r3.xyzx, r3.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, r3.xyzx
mul r3.xyz, r2.wwww, cb0[2].xyzx
max r2.w, r7.y, r7.x
max r2.w, r7.z, r2.w
add r2.w, -r2.w, l(1.000000)
mul r4.xyz, r2.wwww, r6.xyzx
add r1.w, -r1.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r2.xyzx, r1.xyzx
dp3_sat r1.x, r2.xyzx, cb2[0].xyzx
dp3_sat r1.y, r2.xyzx, r0.xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
add r0.y, r0.x, r0.x
mul r0.y, r0.x, r0.y
mad r0.y, r0.y, r1.w, l(-0.500000)
add r0.z, -r1.x, l(1.000000)
mul r1.z, r0.z, r0.z
mul r1.z, r1.z, r1.z
mul r0.z, r0.z, r1.z
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.z, -|r0.w|, l(1.000000)
mul r2.x, r1.z, r1.z
mul r2.x, r2.x, r2.x
mul r1.z, r1.z, r2.x
mad r0.y, r0.y, r1.z, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
max r0.z, r0.z, l(0.002000)
add r1.z, -r0.z, l(1.000000)
mad r1.w, |r0.w|, r1.z, r0.z
mad r1.z, r1.x, r1.z, r0.z
mul r0.w, |r0.w|, r1.z
mad r0.w, r1.x, r1.w, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.z, r1.y, r0.z, -r1.y
mad r1.y, r1.z, r1.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.y, r1.y, r1.y, l(1.000000012E-007)
div r0.z, r0.z, r1.y
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r1.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r7.xyzx, r7.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r3.xyzx
mul r0.yzw, r3.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r2.xyz, -r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r7.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
div r0.w, v2.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
mul o0.xyz, r0.xyzx, r0.wwww
ret
// Approximately 0 instruction slots used