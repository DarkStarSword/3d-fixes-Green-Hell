// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 34b6c6df0171290a-ps.txt
// 3DMigoto: 34b6c6df0171290a | Matched 3 variants of 1 shaders: Shader Forge/Basic_2uv
//
//       Unity headers extracted from Shader Forge_Basic_2uv
//       Shader "Shader Forge/Basic_2uv" {
//         CustomEditor "ShaderForgeMaterialInspector"
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           Tags { "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//           Pass 1/4 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" "SHADOWSUPPORT"="true" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Shader Forge_Basic_2uv:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 190 8 6
//      undeciphered1a: 16
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "LIGHTPROBE_SH" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 4:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//      undeciphered2: 1 8 5 7 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 192
//      Vector 32 [_LightColor0]
//      Float 64 [_Smth]
//      Vector 80 [_Diffuse_ST]
//      Vector 96 [_Normal_ST]
//      Vector 112 [_Diffuse_2uv_ST]
//      Float 128 [_InvAlbedoOpacity]
//      Vector 144 [_MetSmth_ST]
//      Float 160 [_MetfromSlider]
//      Float 164 [_Metalic]
//      Float 168 [_Smthfromalbedo]
//      Float 172 [_Smthfromslider]
//      Float 176 [_emissive]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 624 [unity_SHAr]
//      Vector 640 [unity_SHAg]
//      Vector 656 [unity_SHAb]
//      ConstBuffer "UnityReflectionProbes" 128
//      Vector 0 [unity_SpecCube0_BoxMax]
//      Vector 16 [unity_SpecCube0_BoxMin]
//      Vector 32 [unity_SpecCube0_ProbePosition]
//      Vector 48 [unity_SpecCube0_HDR]
//      Vector 64 [unity_SpecCube1_BoxMax]
//      Vector 80 [unity_SpecCube1_BoxMin]
//      Vector 96 [unity_SpecCube1_ProbePosition]
//      Vector 112 [unity_SpecCube1_HDR]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_Normal] 2D 4
//      SetTexture 1 [_Diffuse] 2D 3
//      SetTexture 2 [_Diffuse_2uv] 2D 5
//      SetTexture 3 [_ShadowMapTexture] 2D 2
//      SetTexture 4 [_MetSmth] 2D 6
//      SetTexture 5 [unity_SpecCube0] CUBE 0
//      SetTexture 6 [unity_SpecCube1] CUBE -1
//      SetTexture 7 [unity_ProbeVolumeSH] 3D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityReflectionProbes" 3
//      BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:48:08 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xy          2     NONE   float
// TEXCOORD                 3   xyzw        3     NONE   float   xyz
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// TEXCOORD                 5   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyz         6     NONE   float   xyz
// TEXCOORD                 8   xyzw        7     NONE   float   xy w
// TEXCOORD                 9   xyzw        8     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[42], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyw
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_temps 18
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r16.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 34b6c6df0171290a-ps.txt

mul r16.w, -r16.x, r16.y
mad r17.xyz, -r16.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v4.xyzx, v4.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v4.xyzx
add r1.xyz, -v3.xyzx, r17.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r3.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
sample r3.xyzw, r3.xyxx, t0.xyzw, s4
mul r3.x, r3.w, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.w, r1.w
mul r3.yzw, r3.yyyy, v6.xxyz
mad r3.xyz, r3.xxxx, v5.xyzx, r3.yzwy
mad r0.xyz, r1.wwww, r0.xyzx, r3.xyzx
dp3 r1.w, r0.xyzx, r0.xyzx
rsq r1.w, r1.w
mul r3.xyz, r0.xyzx, r1.wwww
dp3 r0.x, -r2.xyzx, r3.xyzx
add r0.x, r0.x, r0.x
mad r0.xyz, r3.xyzx, -r0.xxxx, -r2.xyzx
mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r4.xyzw, r4.xyxx, t1.xyzw, s3
mad r5.xy, v1.zwzz, cb0[7].xyxx, cb0[7].zwzz
sample r5.xyzw, r5.xyxx, t2.xyzw, s5
add r6.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
mad r5.xyzw, r5.wwww, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r6.xyz, r4.xyzx, r5.xyzx
mad r1.w, -r4.w, r5.w, l(1.000000)
mad r2.w, r4.w, r5.w, -r1.w
mad r1.w, cb0[8].x, r2.w, r1.w
add r1.w, r1.w, l(-0.500000)
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
rsq r1.w, r1.w
mul r7.xyz, r1.wwww, cb2[0].xyzx
mad r1.xyz, r1.xyzx, r0.wwww, r7.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
div r8.xy, v7.xyxx, v7.wwww
sample r8.xyzw, r8.xyxx, t3.xyzw, s2
mul r8.yzw, r8.xxxx, cb0[2].xxyz
mad r9.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
sample r9.xyzw, r9.xyxx, t4.xyzw, s6
mad r0.w, r4.w, r5.w, -r9.w
mad r0.w, cb0[10].z, r0.w, r9.w
add r1.w, -r0.w, cb0[4].x
mad r0.w, cb0[10].w, r1.w, r0.w
add r1.w, -r0.w, l(1.000000)
mul r2.w, r1.w, r1.w
eq r4.w, cb4[0].x, l(1.000000)
if_nz r4.w
  eq r4.w, cb4[0].y, l(1.000000)
  mul r9.yzw, v3.yyyy, cb4[2].xxyz
  mad r9.yzw, cb4[1].xxyz, v3.xxxx, r9.yyzw
  mad r9.yzw, cb4[3].xxyz, v3.zzzz, r9.yyzw
  add r9.yzw, r9.yyzw, cb4[4].xxyz
  movc r9.yzw, r4.wwww, r9.yyzw, v3.xxyz
  add r9.yzw, r9.yyzw, -cb4[6].xxyz
  mul r10.yzw, r9.yyzw, cb4[5].xxyz
  mul r4.w, r10.y, l(0.250000)
  mul r5.w, cb4[0].z, l(0.500000)
  mad r6.w, -cb4[0].z, l(0.500000), l(0.250000)
  max r4.w, r4.w, r5.w
  min r10.x, r6.w, r4.w
  sample r11.xyzw, r10.xzwx, t7.xyzw, s1
  add r9.yzw, r10.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample r12.xyzw, r9.yzwy, t7.xyzw, s1
  add r9.yzw, r10.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample r10.xyzw, r9.yzwy, t7.xyzw, s1
  mov r3.w, l(1.000000)
  dp4 r11.x, r11.xyzw, r3.xyzw
  dp4 r11.y, r12.xyzw, r3.xyzw
  dp4 r11.z, r10.xyzw, r3.xyzw
else
  mov r3.w, l(1.000000)
  dp4 r11.x, cb2[39].xyzw, r3.xyzw
  dp4 r11.y, cb2[40].xyzw, r3.xyzw
  dp4 r11.z, cb2[41].xyzw, r3.xyzw
endif
add r9.yzw, r11.xxyz, v8.xxyz
max r9.yzw, r9.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r3.w, l(0.000000), cb3[2].w
if_nz r3.w
  dp3 r3.w, r0.xyzx, r0.xyzx
  rsq r3.w, r3.w
  mul r10.xyz, r0.xyzx, r3.wwww
  add r11.xyz, -v3.xyzx, cb3[0].xyzx
  div r11.xyz, r11.xyzx, r10.xyzx
  add r12.xyz, -v3.xyzx, cb3[1].xyzx
  div r12.xyz, r12.xyzx, r10.xyzx
  lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  min r3.w, r11.y, r11.x
  min r3.w, r11.z, r3.w
  add r11.xyz, v3.xyzx, -cb3[2].xyzx
  mad r10.xyz, r10.xyzx, r3.wwww, r11.xyzx
else
  mov r10.xyz, r0.xyzx
endif
mad r3.w, -r1.w, l(0.700000), l(1.700000)
mul r3.w, r1.w, r3.w
mul r3.w, r3.w, l(6.000000)
sample_l r10.xyzw, r10.xyzx, t5.xyzw, s0, r3.w
add r4.w, r10.w, l(-1.000000)
mad r4.w, cb3[3].w, r4.w, l(1.000000)
log r4.w, r4.w
mul r4.w, r4.w, cb3[3].y
exp r4.w, r4.w
mul r4.w, r4.w, cb3[3].x
mul r11.xyz, r10.xyzx, r4.wwww
lt r5.w, cb3[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb3[6].w
  if_nz r5.w
    dp3 r5.w, r0.xyzx, r0.xyzx
    rsq r5.w, r5.w
    mul r12.xyz, r0.xyzx, r5.wwww
    add r13.xyz, -v3.xyzx, cb3[4].xyzx
    div r13.xyz, r13.xyzx, r12.xyzx
    add r14.xyz, -v3.xyzx, cb3[5].xyzx
    div r14.xyz, r14.xyzx, r12.xyzx
    lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
    movc r13.xyz, r15.xyzx, r13.xyzx, r14.xyzx
    min r5.w, r13.y, r13.x
    min r5.w, r13.z, r5.w
    add r13.xyz, v3.xyzx, -cb3[6].xyzx
    mad r0.xyz, r12.xyzx, r5.wwww, r13.xyzx
  endif
  sample_l r12.xyzw, r0.xyzx, t6.xyzw, s0, r3.w
  add r0.x, r12.w, l(-1.000000)
  mad r0.x, cb3[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb3[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb3[7].x
  mul r0.xyz, r12.xyzx, r0.xxxx
  mad r10.xyz, r4.wwww, r10.xyzx, -r0.xyzx
  mad r11.xyz, cb3[1].wwww, r10.xyzx, r0.xyzx
endif
dp3 r0.x, r3.xyzx, r7.xyzx
max r0.y, r0.x, l(0.000000)
min r0.z, r0.y, l(1.000000)
dp3_sat r3.w, r7.xyzx, r1.xyzx
add r4.w, -r9.x, cb0[10].y
mad r4.w, cb0[10].x, r4.w, r9.x
mad r4.xyz, r4.xyzx, r5.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r4.xyz, r4.wwww, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r4.w, -r4.w, l(0.960000), l(0.960000)
mul r5.xyz, r4.wwww, r6.xyzx
add r4.w, -r4.w, l(1.000000)
dp3 r2.x, r3.xyzx, r2.xyzx
dp3_sat r1.x, r3.xyzx, r1.xyzx
mad r1.y, -r1.w, r1.w, l(1.000000)
mad r1.z, |r2.x|, r1.y, r2.w
mad r1.y, r0.z, r1.y, r2.w
mul r1.y, r1.y, |r2.x|
mad r1.y, r0.z, r1.z, r1.y
add r1.y, r1.y, l(0.000010)
div r1.y, l(0.500000), r1.y
mul r1.z, r2.w, r2.w
mad r2.y, r1.x, r1.z, -r1.x
mad r1.x, r2.y, r1.x, l(1.000000)
mul r1.z, r1.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r1.x, r1.z, r1.x
mul r1.x, r1.x, r1.y
mul r0.z, r0.z, r1.x
mul r0.z, r0.z, l(3.14159274)
max r0.z, r0.z, l(0.000000)
mad r1.x, r2.w, r2.w, l(1.000000)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
dp3 r1.y, r4.xyzx, r4.xyzx
ne r1.y, r1.y, l(0.000000)
and r1.y, r1.y, l(0x3f800000)
mul r0.z, r0.z, r1.y
round_ni r1.y, r8.x
mul r2.yzw, r1.yyyy, cb0[2].xxyz
mul r2.yzw, r0.zzzz, r2.yyzw
add r0.z, -r3.w, l(1.000000)
mul r1.y, r0.z, r0.z
mul r1.y, r1.y, r1.y
mul r0.z, r0.z, r1.y
add r3.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r3.xyzx, r0.zzzz, r4.xyzx
add_sat r0.z, r0.w, r4.w
add r0.w, -|r2.x|, l(1.000000)
mul r1.y, r0.w, r0.w
mul r1.y, r1.y, r1.y
mul r0.w, r0.w, r1.y
add r6.xyz, -r4.xyzx, r0.zzzz
mad r4.xyz, r0.wwww, r6.xyzx, r4.xyzx
mul r4.xyz, r4.xyzx, r11.xyzx
mul r1.xyz, r1.xxxx, r4.xyzx
mad r1.xyz, r2.yzwy, r3.xyzx, r1.xyzx
mad r0.z, -cb0[11].x, l(0.500000), l(1.000000)
mul r2.x, r0.z, r0.x
mad r2.x, cb0[11].x, l(0.500000), r2.x
max r2.x, r2.x, l(0.000000)
add r2.y, r3.w, r3.w
mul r2.y, r3.w, r2.y
mad r0.x, -r0.x, r0.z, l(1.000000)
mul r0.z, r0.x, r0.x
mul r0.z, r0.z, r0.z
mul r0.x, r0.x, r0.z
mad r0.z, r2.y, r1.w, l(-0.500000)
mad r0.x, r0.z, r0.x, l(1.000000)
mad r0.z, r0.z, r0.w, l(1.000000)
mul r0.x, r0.z, r0.x
mad r0.x, r0.x, r0.y, r2.x
mad r0.xyz, r0.xxxx, r8.yzwy, r9.yzwy
mad o0.xyz, r0.xyzx, r5.xyzx, r1.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used