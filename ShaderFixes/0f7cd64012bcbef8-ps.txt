// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0f7cd64012bcbef8-ps.txt
// 3DMigoto: 0f7cd64012bcbef8 |    Unity headers extracted from Amplify_mia_disappear
//    Shader "Amplify/mia_disappear" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "QUEUE"="Geometry+0" "RenderType"="Transparent" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+0" "RenderType"="Transparent" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_mia_disappear:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 201 6 6
//   undeciphered1a: 15
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "INSTANCING_ON" }
//   undeciphered2: 1 8 11 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 144
//   Vector 32 [_LightColor0]
//   Vector 64 [_Normal_ST]
//   Float 80 [_useRtomultiply]
//   Vector 96 [_Albedo_ST]
//   Float 112 [_use_albedo_alpha]
//   Float 116 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   ConstBuffer "UnityDrawCallInfo" 16
//   ScalarInt 0 [unity_BaseInstanceID]
//   ConstBuffer "UnityInstancing_PerDraw0" 256
//   Struct 0 [unity_Builtins0Array] 2 128
//   Matrix 0 [unity_ObjectToWorldArray]
//   Matrix 64 [unity_WorldToObjectArray]
//   ConstBuffer "UnityInstancing_Amplifymia_disappear" 128
//   Struct 0 [Amplifymia_disappearArray] 2 64
//   Vector 0 [_Albedo_color_multiply]
//   Vector 16 [_emmisive]
//   Float 32 [_main_normal_scale]
//   Float 36 [_detail_normal_scale]
//   Float 40 [_detail_tiling]
//   Float 44 [_metallic]
//   Float 48 [_smooothnes]
//   Float 52 [_disappear_mask_multiply]
//   Float 56 [_disolve_texture_tile]
//   Float 60 [_disappear_mask_size]
//   SetTexture 0 [_Normal] 2D 3
//   SetTexture 1 [_Normal_detail] 2D 4
//   SetTexture 2 [_Albedo] 2D 5
//   SetTexture 3 [_dissolveguide] 2D 6
//   SetTexture 4 [_ShadowMapTexture] 2D 2
//   SetTexture 5 [unity_SpecCube0] CUBE 0
//   SetTexture 6 [unity_SpecCube1] CUBE -1
//   SetTexture 7 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityReflectionProbes" 6
//   BindCB "UnityProbeVolume" 7
//   BindCB "UnityDrawCallInfo" 8
//   BindCB "UnityInstancing_PerDraw0" 9
//   BindCB "UnityInstancing_Amplifymia_disappear" 10
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:30:47 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 5     z         1     NONE   float     z
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 6   xyzw        5     NONE   float   xy w
// TEXCOORD                 7   xyzw        6     NONE   float
// SV_InstanceID            0   x           7     NONE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[8], immediateIndexed
dcl_constantbuffer cb7[7], immediateIndexed
dcl_constantbuffer cb8[1], immediateIndexed
dcl_constantbuffer cb9[16], dynamicIndexed
dcl_constantbuffer cb10[8], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyw
dcl_input_ps constant v7.x
dcl_output o0.xyzw
dcl_temps 17
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r15.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0f7cd64012bcbef8-ps.txt

mul r15.w, -r15.x, r15.y
mad r16.xyz, -r15.wwww, cb10[0].xyzw, cb1[4].xyzw

iadd r0.x, v7.x, cb8[0].x
mov r1.x, v2.w
mov r1.y, v3.w
mov r1.z, v4.w
add r0.yzw, -r1.xxyz, r16.xxyz
dp3 r1.w, r0.yzwy, r0.yzwy
rsq r1.w, r1.w
mul r2.xyz, r0.yzwy, r1.wwww
ishl r2.w, r0.x, l(2)
ishl r0.x, r0.x, l(3)
mad r3.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
mul r3.zw, v1.xxxy, cb10[r2.w + 2].zzzz
sample r4.xyzw, r3.xyxx, t0.xyzw, s3
mul r4.x, r4.w, r4.x
mad r3.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xy, r3.xyxx, cb10[r2.w + 2].xxxx
dp2 r4.x, r4.xyxx, r4.xyxx
min r4.x, r4.x, l(1.000000)
add r4.x, -r4.x, l(1.000000)
sample r5.xyzw, r3.zwzz, t1.xyzw, s4
mul r5.x, r5.w, r5.x
mad r3.zw, r5.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r3.zw, r3.zzzw, cb10[r2.w + 2].yyyy
dp2 r4.y, r3.zwzz, r3.zwzz
min r4.y, r4.y, l(1.000000)
add r4.y, -r4.y, l(1.000000)
sqrt r4.xy, r4.xyxx
mad r3.xy, r3.xyxx, cb10[r2.w + 2].xxxx, r3.zwzz
mul r3.z, r4.y, r4.x
dp3 r3.w, r3.xyzx, r3.xyzx
rsq r3.w, r3.w
mul r3.xyz, r3.wwww, r3.xyzx
mad r4.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
sample r4.xyzw, r4.xyxx, t2.xyzw, s5
add r5.xyz, -r4.xyzx, r4.xxxx
mad r5.xyz, cb0[5].xxxx, r5.xyzx, r4.xyzx
mul r6.xyz, r5.xyzx, cb10[r2.w + 0].xyzx
mul r7.xyz, v3.wwww, cb9[r0.x + 5].xyzx
mad r7.xyz, cb9[r0.x + 4].xyzx, v2.wwww, r7.xyzx
mad r7.xyz, cb9[r0.x + 6].xyzx, v4.wwww, r7.xyzx
add r7.xyz, r7.xyzx, cb9[r0.x + 7].xyzx
mul r3.w, r7.y, cb9[r0.x + 1].y
mad r3.w, cb9[r0.x + 0].y, r7.x, r3.w
mad r0.x, cb9[r0.x + 2].y, r7.z, r3.w
mul r7.xy, v1.xyxx, cb10[r2.w + 3].zzzz
sample r7.xyzw, r7.xyxx, t3.xyzw, s6
mad r0.x, r7.x, cb10[r2.w + 3].w, r0.x
ge r0.x, r0.x, cb10[r2.w + 3].y
movc r7.xy, r0.xxxx, l(0,-0.000000,0,0), l(1.000000,-1.000000,0,0)
mad r0.x, r4.w, r7.x, r7.y
mad r0.x, cb0[7].x, r0.x, r7.x
add r0.x, r0.x, -cb0[7].y
lt r0.x, r0.x, l(0.000000)
discard_nz r0.x
mov r7.x, cb4[9].z
mov r7.y, cb4[10].z
mov r7.z, cb4[11].z
dp3 r0.x, r0.yzwy, r7.xyzx
add r7.xyz, r1.xyzx, -cb3[25].xyzx
dp3 r3.w, r7.xyzx, r7.xyzx
sqrt r3.w, r3.w
add r3.w, -r0.x, r3.w
mad r0.x, cb3[25].w, r3.w, r0.x
mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
eq r3.w, cb7[0].x, l(1.000000)
if_nz r3.w
  eq r3.w, cb7[0].y, l(1.000000)
  mul r7.xyz, v3.wwww, cb7[2].xyzx
  mad r7.xyz, cb7[1].xyzx, v2.wwww, r7.xyzx
  mad r7.xyz, cb7[3].xyzx, v4.wwww, r7.xyzx
  add r7.xyz, r7.xyzx, cb7[4].xyzx
  movc r7.xyz, r3.wwww, r7.xyzx, r1.xyzx
  add r7.xyz, r7.xyzx, -cb7[6].xyzx
  mul r7.yzw, r7.xxyz, cb7[5].xxyz
  mad r3.w, r7.y, l(0.250000), l(0.750000)
  mad r4.w, cb7[0].z, l(0.500000), l(0.750000)
  max r7.x, r3.w, r4.w
  sample r7.xyzw, r7.xzwx, t7.xyzw, s1
else
  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r3.w, r7.xyzw, cb2[46].xyzw
div r7.xy, v5.xyxx, v5.wwww
sample r7.xyzw, r7.xyxx, t4.xyzw, s2
add r3.w, r3.w, -r7.x
mad r0.x, r0.x, r3.w, r7.x
dp3 r7.x, v2.xyzx, r3.xyzx
dp3 r7.y, v3.xyzx, r3.xyzx
dp3 r7.z, v4.xyzx, r3.xyzx
dp3 r3.x, r7.xyzx, r7.xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, r7.xyzx
add r3.w, l(1.000000), -cb10[r2.w + 3].x
dp3 r4.w, -r2.xyzx, r3.xyzx
add r4.w, r4.w, r4.w
mad r7.xyz, r3.xyzx, -r4.wwww, -r2.xyzx
mul r8.xyz, r0.xxxx, cb0[2].xyzx
lt r0.x, l(0.000000), cb6[2].w
if_nz r0.x
  dp3 r0.x, r7.xyzx, r7.xyzx
  rsq r0.x, r0.x
  mul r9.xyz, r0.xxxx, r7.xyzx
  add r10.xyz, -r1.xyzx, cb6[0].xyzx
  div r10.xyz, r10.xyzx, r9.xyzx
  add r11.xyz, -r1.xyzx, cb6[1].xyzx
  div r11.xyz, r11.xyzx, r9.xyzx
  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  min r0.x, r10.y, r10.x
  min r0.x, r10.z, r0.x
  add r10.xyz, r1.xyzx, -cb6[2].xyzx
  mad r9.xyz, r9.xyzx, r0.xxxx, r10.xyzx
else
  mov r9.xyz, r7.xyzx
endif
mad r0.x, -r3.w, l(0.700000), l(1.700000)
mul r0.x, r0.x, r3.w
mul r0.x, r0.x, l(6.000000)
sample_l r9.xyzw, r9.xyzx, t5.xyzw, s0, r0.x
add r4.w, r9.w, l(-1.000000)
mad r4.w, cb6[3].w, r4.w, l(1.000000)
log r4.w, r4.w
mul r4.w, r4.w, cb6[3].y
exp r4.w, r4.w
mul r4.w, r4.w, cb6[3].x
mul r10.xyz, r9.xyzx, r4.wwww
lt r5.w, cb6[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb6[6].w
  if_nz r5.w
    dp3 r5.w, r7.xyzx, r7.xyzx
    rsq r5.w, r5.w
    mul r11.xyz, r5.wwww, r7.xyzx
    add r12.xyz, -r1.xyzx, cb6[4].xyzx
    div r12.xyz, r12.xyzx, r11.xyzx
    add r13.xyz, -r1.xyzx, cb6[5].xyzx
    div r13.xyz, r13.xyzx, r11.xyzx
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
    min r5.w, r12.y, r12.x
    min r5.w, r12.z, r5.w
    add r1.xyz, r1.xyzx, -cb6[6].xyzx
    mad r7.xyz, r11.xyzx, r5.wwww, r1.xyzx
  endif
  sample_l r7.xyzw, r7.xyzx, t6.xyzw, s0, r0.x
  add r0.x, r7.w, l(-1.000000)
  mad r0.x, cb6[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb6[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb6[7].x
  mul r1.xyz, r7.xyzx, r0.xxxx
  mad r7.xyz, r4.wwww, r9.xyzx, -r1.xyzx
  mad r10.xyz, cb6[1].wwww, r7.xyzx, r1.xyzx
endif
mad r1.xyz, cb10[r2.w + 0].xyzx, r5.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r1.xyz, cb10[r2.w + 2].wwww, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r0.x, -cb10[r2.w + 2].w, l(0.960000), l(0.960000)
mul r5.xyz, r0.xxxx, r6.xyzx
mad r0.yzw, r0.yyzw, r1.wwww, cb2[0].xxyz
dp3 r1.w, r0.yzwy, r0.yzwy
max r1.w, r1.w, l(0.001000)
rsq r1.w, r1.w
mul r0.yzw, r0.yyzw, r1.wwww
dp3 r1.w, r3.xyzx, r2.xyzx
dp3_sat r2.x, r3.xyzx, cb2[0].xyzx
dp3_sat r2.y, r3.xyzx, r0.yzwy
dp3_sat r0.y, cb2[0].xyzx, r0.yzwy
mul r0.z, r0.y, r0.y
dp2 r0.z, r0.zzzz, r3.wwww
add r0.z, r0.z, l(-0.500000)
add r0.w, -r2.x, l(1.000000)
mul r2.z, r0.w, r0.w
mul r2.z, r2.z, r2.z
mul r0.w, r0.w, r2.z
mad r0.w, r0.z, r0.w, l(1.000000)
add r2.z, -|r1.w|, l(1.000000)
mul r3.x, r2.z, r2.z
mul r3.x, r3.x, r3.x
mul r2.z, r2.z, r3.x
mad r0.z, r0.z, r2.z, l(1.000000)
mul r0.z, r0.z, r0.w
mul r0.z, r2.x, r0.z
mul r0.w, r3.w, r3.w
max r0.w, r0.w, l(0.002000)
add r3.x, -r0.w, l(1.000000)
mad r3.y, |r1.w|, r3.x, r0.w
mad r3.x, r2.x, r3.x, r0.w
mul r1.w, |r1.w|, r3.x
mad r1.w, r2.x, r3.y, r1.w
add r1.w, r1.w, l(0.000010)
div r1.w, l(0.500000), r1.w
mul r3.x, r0.w, r0.w
mad r3.y, r2.y, r3.x, -r2.y
mad r2.y, r3.y, r2.y, l(1.000000)
mul r3.x, r3.x, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r3.x, r2.y
mul r1.w, r1.w, r2.y
mul r1.w, r1.w, l(3.14159274)
mul r1.w, r2.x, r1.w
max r1.w, r1.w, l(0.000000)
mad r0.w, r0.w, r0.w, l(1.000000)
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
dp3 r2.x, r1.xyzx, r1.xyzx
ne r2.x, r2.x, l(0.000000)
and r2.x, r2.x, l(0x3f800000)
mul r1.w, r1.w, r2.x
add r0.x, -r0.x, l(1.000000)
add_sat r0.x, r0.x, cb10[r2.w + 3].x
mul r3.xyz, r0.zzzz, r8.xyzx
mul r6.xyz, r8.xyzx, r1.wwww
add r0.y, -r0.y, l(1.000000)
mul r0.z, r0.y, r0.y
mul r0.z, r0.z, r0.z
mul r0.y, r0.y, r0.z
add r7.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r7.xyz, r7.xyzx, r0.yyyy, r1.xyzx
mul r6.xyz, r6.xyzx, r7.xyzx
mad r3.xyz, r5.xyzx, r3.xyzx, r6.xyzx
mul r0.yzw, r10.xxyz, r0.wwww
add r5.xyz, -r1.xyzx, r0.xxxx
mad r1.xyz, r2.zzzz, r5.xyzx, r1.xyzx
mad r0.xyz, r0.yzwy, r1.xyzx, r3.xyzx
mad r0.xyz, r4.xyzx, cb10[r2.w + 1].xyzx, r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
add r0.xyz, r0.xyzx, -cb5[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used