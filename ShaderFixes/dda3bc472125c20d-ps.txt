// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dda3bc472125c20d-ps.txt
// 3DMigoto: dda3bc472125c20d |    Unity headers extracted from Amplify_mud_buildings
//    Shader "Amplify/mud_buildings" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_mud_buildings:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 201802150 212 12 8
//   undeciphered1a: 14
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "_INVERTMASK_ON" }
//   undeciphered2: 1 11 8 10 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 144
//   Vector 32 [_LightColor0]
//   Float 64 [_Tilingdetail]
//   Float 68 [_Tilingdetail2]
//   Float 72 [_MaskContrast]
//   Float 76 [_cracknrmpower]
//   Float 80 [_cracktilling]
//   Float 84 [_AlbedoVariabletilling]
//   Float 88 [_variablepower]
//   Vector 96 [_AlbedoColor]
//   Float 112 [_Smth1]
//   Float 116 [_Smth2]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_mask] 2D 5
//   SetTexture 1 [_nrm1] 2D 3
//   SetTexture 2 [_nrm2] 2D 4
//   SetTexture 3 [_cracknrm] 2D 6
//   SetTexture 4 [_Albedovariable] 2D 7
//   SetTexture 5 [_albedo1] 2D 8
//   SetTexture 6 [_albedo2] 2D 9
//   SetTexture 7 [_ShadowMapTexture] 2D 2
//   SetTexture 8 [unity_SpecCube0] CUBE 0
//   SetTexture 9 [unity_SpecCube1] CUBE -1
//   SetTexture 10 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityReflectionProbes" 6
//   BindCB "UnityProbeVolume" 7
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:19:40 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 5     z         1     NONE   float     z
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyzw        6     NONE   float   xy w
// TEXCOORD                 7   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[8], immediateIndexed
dcl_constantbuffer cb7[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_resource_texturecube (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyw
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed dda3bc472125c20d-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mul r3.xyzw, v1.xyxy, cb0[4].xxyy
sample_indexable(texture2d)(float,float,float,float) r1.w, v1.xyxx, t0.yzwx, s5
mad r1.w, -r1.w, cb0[4].z, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xyxx, t1.xywz, s3
mul r4.x, r4.z, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r4.xyxx, r4.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r4.z, r2.w
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r3.zwzz, t2.xywz, s4
mul r5.x, r5.z, r5.x
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r5.xyxx, r5.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r5.z, r2.w
add r5.xyz, -r4.xyzx, r5.xyzx
mad r4.xyz, r1.wwww, r5.xyzx, r4.xyzx
mul r5.xyzw, v1.xyxy, cb0[5].xxyy
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyxx, t3.xywz, s6
mul r6.x, r6.z, r6.x
mad r5.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xy, r5.xyxx, cb0[4].wwww
dp2 r2.w, r6.xyxx, r6.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r2.w, r2.w
mad r6.xy, r5.xyxx, cb0[4].wwww, r4.xyxx
mul r6.z, r2.w, r4.z
dp3 r2.w, r6.xyzx, r6.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, r6.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r5.zwzz, t4.xyzw, s7
add r5.xyz, r5.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r5.xyz, cb0[5].zzzz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r6.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r5.xyz, r1.wwww, r6.xyzx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r6.xyzw, r3.xyxx, t5.xyzw, s8
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r3.zwzz, t6.xyzw, s9
add r3.xyz, -r6.xyzx, r3.xyzx
mad r3.xyz, r1.wwww, r3.xyzx, r6.xyzx
mul r3.xyz, r3.xyzx, cb0[6].xyzx
mul r3.xyz, r3.xyzx, r5.xyzx
mul r2.w, r6.w, cb0[7].x
mad r3.w, r3.w, cb0[7].y, -r2.w
mad r1.w, r1.w, r3.w, r2.w
mov r5.x, cb4[9].z
mov r5.y, cb4[10].z
mov r5.z, cb4[11].z
dp3 r2.w, r1.xyzx, r5.xyzx
add r5.xyz, r0.xyzx, -cb3[25].xyzx
dp3 r3.w, r5.xyzx, r5.xyzx
sqrt r3.w, r3.w
add r3.w, -r2.w, r3.w
mad r2.w, cb3[25].w, r3.w, r2.w
mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
eq r3.w, cb7[0].x, l(1.000000)
if_nz r3.w
  eq r4.w, cb7[0].y, l(1.000000)
  mul r5.xyz, v3.wwww, cb7[2].xyzx
  mad r5.xyz, cb7[1].xyzx, v2.wwww, r5.xyzx
  mad r5.xyz, cb7[3].xyzx, v4.wwww, r5.xyzx
  add r5.xyz, r5.xyzx, cb7[4].xyzx
  movc r5.xyz, r4.wwww, r5.xyzx, r0.xyzx
  add r5.xyz, r5.xyzx, -cb7[6].xyzx
  mul r5.yzw, r5.xxyz, cb7[5].xxyz
  mad r4.w, r5.y, l(0.250000), l(0.750000)
  mad r5.y, cb7[0].z, l(0.500000), l(0.750000)
  max r5.x, r4.w, r5.y
  sample_indexable(texture3d)(float,float,float,float) r5.xyzw, r5.xzwx, t10.xyzw, s1
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
div r5.xy, v6.xyxx, v6.wwww
sample_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t7.xyzw, s2
add r4.w, r4.w, -r5.x
mad r2.w, r2.w, r4.w, r5.x
dp3 r5.x, v2.xyzx, r4.xyzx
dp3 r5.y, v3.xyzx, r4.xyzx
dp3 r5.z, v4.xyzx, r4.xyzx
dp3 r4.x, r5.xyzx, r5.xyzx
rsq r4.x, r4.x
mul r4.xyz, r4.xxxx, r5.xyzx
add r5.x, -r1.w, l(1.000000)
dp3 r5.y, -r2.xyzx, r4.xyzx
add r5.y, r5.y, r5.y
mad r5.yzw, r4.xxyz, -r5.yyyy, -r2.xxyz
mul r6.xyz, r2.wwww, cb0[2].xyzx
if_nz r3.w
  eq r2.w, cb7[0].y, l(1.000000)
  mul r7.xyz, v3.wwww, cb7[2].xyzx
  mad r7.xyz, cb7[1].xyzx, v2.wwww, r7.xyzx
  mad r7.xyz, cb7[3].xyzx, v4.wwww, r7.xyzx
  add r7.xyz, r7.xyzx, cb7[4].xyzx
  movc r7.xyz, r2.wwww, r7.xyzx, r0.xyzx
  add r7.xyz, r7.xyzx, -cb7[6].xyzx
  mul r7.yzw, r7.xxyz, cb7[5].xxyz
  mul r2.w, r7.y, l(0.250000)
  mul r3.w, cb7[0].z, l(0.500000)
  mad r6.w, -cb7[0].z, l(0.500000), l(0.250000)
  max r2.w, r2.w, r3.w
  min r7.x, r6.w, r2.w
  sample_indexable(texture3d)(float,float,float,float) r8.xyzw, r7.xzwx, t10.xyzw, s1
  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample_indexable(texture3d)(float,float,float,float) r9.xyzw, r9.xyzx, t10.xyzw, s1
  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample_indexable(texture3d)(float,float,float,float) r7.xyzw, r7.xyzx, t10.xyzw, s1
  mov r4.w, l(1.000000)
  dp4 r8.x, r8.xyzw, r4.xyzw
  dp4 r8.y, r9.xyzw, r4.xyzw
  dp4 r8.z, r7.xyzw, r4.xyzw
else
  mov r4.w, l(1.000000)
  dp4 r8.x, cb2[39].xyzw, r4.xyzw
  dp4 r8.y, cb2[40].xyzw, r4.xyzw
  dp4 r8.z, cb2[41].xyzw, r4.xyzw
endif
add r7.xyz, r8.xyzx, v5.xyzx
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.w, l(0.000000), cb6[2].w
if_nz r2.w
  dp3 r2.w, r5.yzwy, r5.yzwy
  rsq r2.w, r2.w
  mul r8.xyz, r2.wwww, r5.yzwy
  add r9.xyz, -r0.xyzx, cb6[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r0.xyzx, cb6[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r2.w, r9.y, r9.x
  min r2.w, r9.z, r2.w
  add r9.xyz, r0.xyzx, -cb6[2].xyzx
  mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
else
  mov r8.xyz, r5.yzwy
endif
mad r2.w, -r5.x, l(0.700000), l(1.700000)
mul r2.w, r2.w, r5.x
mul r2.w, r2.w, l(6.000000)
sample_l_indexable(texturecube)(float,float,float,float) r8.xyzw, r8.xyzx, t8.xyzw, s0, r2.w
add r3.w, r8.w, l(-1.000000)
mad r3.w, cb6[3].w, r3.w, l(1.000000)
log r3.w, r3.w
mul r3.w, r3.w, cb6[3].y
exp r3.w, r3.w
mul r3.w, r3.w, cb6[3].x
mul r9.xyz, r8.xyzx, r3.wwww
lt r4.w, cb6[1].w, l(0.999990)
if_nz r4.w
  lt r4.w, l(0.000000), cb6[6].w
  if_nz r4.w
    dp3 r4.w, r5.yzwy, r5.yzwy
    rsq r4.w, r4.w
    mul r10.xyz, r4.wwww, r5.yzwy
    add r11.xyz, -r0.xyzx, cb6[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r0.xyzx, cb6[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r4.w, r11.y, r11.x
    min r4.w, r11.z, r4.w
    add r0.xyz, r0.xyzx, -cb6[6].xyzx
    mad r5.yzw, r10.xxyz, r4.wwww, r0.xxyz
  endif
  sample_l_indexable(texturecube)(float,float,float,float) r10.xyzw, r5.yzwy, t9.xyzw, s0, r2.w
  add r0.x, r10.w, l(-1.000000)
  mad r0.x, cb6[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb6[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb6[7].x
  mul r0.xyz, r10.xyzx, r0.xxxx
  mad r5.yzw, r3.wwww, r8.xxyz, -r0.xxyz
  mad r9.xyz, cb6[1].wwww, r5.yzwy, r0.xyzx
endif
mul r0.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r4.xyzx, r2.xyzx
dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
dp3_sat r2.y, r4.xyzx, r1.xyzx
dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
mul r1.y, r1.x, r1.x
dp2 r1.y, r1.yyyy, r5.xxxx
add r1.y, r1.y, l(-0.500000)
add r1.z, -r2.x, l(1.000000)
mul r2.z, r1.z, r1.z
mul r2.z, r2.z, r2.z
mul r1.z, r1.z, r2.z
mad r1.z, r1.y, r1.z, l(1.000000)
add r2.z, -|r0.w|, l(1.000000)
mul r2.w, r2.z, r2.z
mul r2.w, r2.w, r2.w
mul r2.z, r2.z, r2.w
mad r1.y, r1.y, r2.z, l(1.000000)
mul r1.y, r1.y, r1.z
mul r1.y, r2.x, r1.y
mul r1.z, r5.x, r5.x
max r1.z, r1.z, l(0.002000)
add r2.w, -r1.z, l(1.000000)
mad r3.x, |r0.w|, r2.w, r1.z
mad r2.w, r2.x, r2.w, r1.z
mul r0.w, |r0.w|, r2.w
mad r0.w, r2.x, r3.x, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r2.w, r1.z, r1.z
mad r3.x, r2.y, r2.w, -r2.y
mad r2.y, r3.x, r2.y, l(1.000000)
mul r2.w, r2.w, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r2.w, r2.y
mul r0.w, r0.w, r2.y
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.x, r0.w
max r0.w, r0.w, l(0.000000)
mad r1.z, r1.z, r1.z, l(1.000000)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
add_sat r1.w, r1.w, l(0.0400000215)
mad r2.xyw, r6.xyxz, r1.yyyy, r7.xyxz
mul r3.xyz, r6.xyzx, r0.wwww
add r0.w, -r1.x, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.w, r0.w, r1.x
mad r0.w, r0.w, l(0.960000), l(0.040000)
mul r3.xyz, r0.wwww, r3.xyzx
mad r0.xyz, r0.xyzx, r2.xywx, r3.xyzx
mul r1.xyz, r9.xyzx, r1.zzzz
add r0.w, r1.w, l(-0.040000)
mad r0.w, r2.z, r0.w, l(0.040000)
mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
add r0.xyz, r0.xyzx, -cb5[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used