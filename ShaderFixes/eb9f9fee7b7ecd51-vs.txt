// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed eb9f9fee7b7ecd51-vs.txt
// 3DMigoto: eb9f9fee7b7ecd51 |    Unity headers extracted from Amplify_rock_surface_lod
//    Shader "Amplify/rock_surface_lod" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_rock_surface_lod:
//   API d3d11
//   Shader model vs_5_0
//   undeciphered1: 201802150 39 0 0
//   undeciphered1a: 5
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "INSTANCING_ON" }
//   undeciphered2: 1 0 7 0 0 0
//   undeciphered3: 255 4 0 0 2 2 1 1 4 5
//   ConstBuffer "$Globals" 128
//   Vector 112 [_texcoord_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 672 [unity_SHBr]
//   Vector 688 [unity_SHBg]
//   Vector 704 [unity_SHBb]
//   Vector 720 [unity_SHC]
//   ConstBuffer "UnityPerDraw" 176
//   Vector 144 [unity_WorldTransformParams]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 272 [unity_MatrixVP]
//   ConstBuffer "UnityDrawCallInfo" 16
//   ScalarInt 0 [unity_BaseInstanceID]
//   ConstBuffer "UnityInstancing_PerDraw0" 256
//   Struct 0 [unity_Builtins0Array] 2 128
//   Matrix 0 [unity_ObjectToWorldArray]
//   Matrix 64 [unity_WorldToObjectArray]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityDrawCallInfo" 5
//   BindCB "UnityInstancing_PerDraw0" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:26:17 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xy
// TEXCOORD                 1   xyzw        4     NONE   float
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float
// COLOR                    0   xyzw        7     NONE   float
// SV_InstanceID            0   x           8   INSTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
// SV_InstanceID            0   x           7     NONE    uint   x
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[10], immediateIndexed
dcl_constantbuffer cb4[21], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_constantbuffer cb6[15], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input_sgv v8.x, instance_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output o7.x
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

iadd r0.x, v8.x, cb5[0].x
ishl r0.x, r0.x, l(3)
mul r1.xyzw, v0.yyyy, cb6[r0.x + 1].xyzw
mad r1.xyzw, cb6[r0.x + 0].xyzw, v0.xxxx, r1.xyzw
mad r1.xyzw, cb6[r0.x + 2].xyzw, v0.zzzz, r1.xyzw
add r2.xyzw, r1.xyzw, cb6[r0.x + 3].xyzw
mad r0.yzw, cb6[r0.x + 3].xxyz, v0.wwww, r1.xxyz
mul r1.xyzw, r2.yyyy, cb4[18].xyzw
mad r1.xyzw, cb4[17].xyzw, r2.xxxx, r1.xyzw
mad r1.xyzw, cb4[19].xyzw, r2.zzzz, r1.xyzw
mad r1.xyzw, cb4[20].xyzw, r2.wwww, r1.xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed eb9f9fee7b7ecd51-vs.txt
ne r5.w, r1.w, l(1.0)
if_nz r5.w
  add r5.w, r1.w, -r5.y
  mad r1.x, r5.w, r5.x, r1.x
endif

mad o1.xy, v3.xyxx, cb0[7].xyxx, cb0[7].zwzz
mul r2.xyz, v1.yyyy, cb6[r0.x + 1].yzxy
mad r2.xyz, cb6[r0.x + 0].yzxy, v1.xxxx, r2.xyzx
mad r2.xyz, cb6[r0.x + 2].yzxy, v1.zzzz, r2.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
dp3 r3.x, v2.xyzx, cb6[r0.x + 4].xyzx
dp3 r3.y, v2.xyzx, cb6[r0.x + 5].xyzx
dp3 r3.z, v2.xyzx, cb6[r0.x + 6].xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
rsq r0.x, r0.x
mul r3.xyzw, r0.xxxx, r3.xyzz
mul r4.xyz, r2.xyzx, r3.wxyw
mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
mul r0.x, v1.w, cb3[9].w
mul r4.xyz, r0.xxxx, r4.xyzx
mov o2.y, r4.x
mov o2.x, r2.z
mov o2.z, r3.x
mov o2.w, r0.y
mov o3.x, r2.x
mov o4.x, r2.y
mov o3.w, r0.z
mov o4.w, r0.w
mov o3.y, r4.y
mov o4.y, r4.z
mov o3.z, r3.y
mov o4.z, r3.w
mul r0.x, r3.y, r3.y
mad r0.x, r3.x, r3.x, -r0.x
mul r2.xyzw, r3.ywzx, r3.xyzw
dp4 r3.x, cb2[42].xyzw, r2.xyzw
dp4 r3.y, cb2[43].xyzw, r2.xyzw
dp4 r3.z, cb2[44].xyzw, r2.xyzw
mad o5.xyz, cb2[45].xyzx, r0.xxxx, r3.xyzx
mul r0.x, r1.y, cb1[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o6.zw, r1.zzzw
add o6.xy, r0.zzzz, r0.xwxx
mov o7.x, v8.x
ret
// Approximately 0 instruction slots used