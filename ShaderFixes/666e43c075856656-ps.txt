// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 666e43c075856656-ps.txt
// 3DMigoto: 666e43c075856656 |    Unity headers extracted from DynamicFog_Image Effect_Desktop Plus
//    Shader "DynamicFog/Image Effect/Desktop Plus" {
//      SubShader 1/1 {
//        Pass 1/1 {
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from DynamicFog_Image Effect_Desktop Plus:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 108 3 5
//   undeciphered1a: 11
//   Keywords { "DITHER_ON" }
//   undeciphered2: 1 4 2 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 320
//   Vector 32 [_MainTex_TexelSize]
//   Float 48 [_FogDither]
//   Float 80 [_FogAlpha]
//   Vector 160 [_FogDistance]
//   Vector 176 [_FogHeightData]
//   Vector 192 [_FogNoiseData]
//   Vector 208 [_FogSkyData]
//   Float 224 [_FogSpeed]
//   Vector 240 [_FogColor]
//   Vector 256 [_FogColor2]
//   Vector 288 [_SunColor]
//   Vector 304 [_SunDir] 3
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_CameraDepthTexture] 2D 1
//   SetTexture 2 [_NoiseTex] 2D 2
//   SetTexture 3 [_Noise2Tex] 2D 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:14:18 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[20], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 666e43c075856656-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s0
sample r1.xyzw, v1.zwzz, t1.xyzw, s1
mad r1.x, cb1[7].x, r1.x, cb1[7].y
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
add r2.y, -cb0[11].y, r12.y
mov r2.xz, r12.xxzx
mad r3.xyz, v2.xyzx, r1.xxxx, r2.xyzx
add r1.y, r3.y, l(0.000010)
lt r1.x, l(0.999000), r1.x
if_nz r1.x
  add r1.x, |r1.y|, l(2.000000)
  div r1.zw, r3.xxxz, r1.xxxx
  mul r2.w, cb0[13].y, cb1[0].x
  mad r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.010000, 0.010000), r2.wwww
  sample r4.xyzw, r1.zwzz, t2.xyzw, s2
  div_sat r1.z, r1.x, cb0[11].x
  add r5.xyzw, -cb0[15].xyzw, cb0[16].xyzw
  mad r5.xyzw, r1.zzzz, r5.xyzw, cb0[15].xyzw
  div r1.x, cb0[13].x, r1.x
  mad r1.z, -r4.y, cb0[13].z, l(1.000000)
  mul_sat r1.x, r1.z, r1.x
  mul r1.x, r1.x, cb0[13].w
  add r4.xyzw, -r0.xyzw, r5.xyzw
  mad r0.xyzw, r1.xxxx, r4.xyzw, r0.xyzw
endif
lt r1.x, cb0[11].x, r2.y
lt r1.z, cb0[11].x, r1.y
and r1.x, r1.z, r1.x
if_z r1.x
  add r3.w, r3.y, l(0.000010)
  add r1.xzw, -r2.xxyz, r3.xxwz
  dp2 r2.w, r1.xwxx, r1.xwxx
  sqrt r2.w, r2.w
  div r3.xy, r1.xwxx, r2.wwww
  div r2.w, r2.w, r1.z
  min r4.y, r2.y, cb0[11].x
  add r3.z, r2.y, -r4.y
  mul r3.z, r2.w, r3.z
  mad r4.xz, -r3.xxyx, r3.zzzz, r12.xxzx
  dp3 r3.z, r1.xzwx, r1.xzwx
  sqrt r3.z, r3.z
  min r3.w, r3.z, cb0[10].z
  add r5.xyz, -r2.xyzx, r4.xyzx
  dp3 r2.x, r5.xyzx, r5.xyzx
  sqrt r2.x, r2.x
  lt r2.z, r2.x, r3.w
  if_nz r2.z
    lt r2.z, l(0.000000), r2.w
    lt r4.w, l(-0.500000), r1.y
    and r2.z, r2.z, r4.w
    lt r4.w, r2.w, l(0.000000)
    lt r5.x, r1.y, l(0.500000)
    and r4.w, r4.w, r5.x
    and r1.y, r1.y, r4.w
    movc r5.y, r2.z, cb0[11].x, r1.y
    add r1.y, -r2.y, r5.y
    mul r1.y, r1.y, r2.w
    mad r5.xz, -r3.xxyx, r1.yyyy, r12.xxzx
    add r2.yzw, r4.xxyz, -r5.xxyz
    dp3 r1.y, r2.yzwy, r2.yzwy
    sqrt r1.y, r1.y
    add r2.y, -r2.x, r3.w
    min r1.y, r1.y, r2.y
    lt r2.y, l(0.000000), r1.y
    if_nz r2.y
      div r1.xzw, r1.xxzw, r3.zzzz
      mul r2.yzw, r1.yyyy, r1.xxzw
      mul r3.x, cb0[11].w, cb0[11].x
      mul r3.y, cb0[14].x, cb1[0].w
      add r5.xyzw, -cb0[15].xyzw, cb0[16].xyzw
      mov r3.z, r2.x
      mov r7.xyz, r4.xyzx
      mov r6.xyzw, l(0,0,0,0)
      mov r3.w, l(5)
      loop
        ilt r4.w, r3.w, l(0)
        breakc_nz r4.w
        add r4.w, -r7.y, cb0[11].x
        div r4.w, r4.w, r3.x
        add r4.w, r4.w, l(-0.100000)
        add r7.w, r3.z, -cb0[10].x
        div r7.w, r7.w, cb0[10].y
        min r4.w, r4.w, r7.w
        mad r8.xyz, r7.xyzx, cb0[12].wwww, r3.yyyy
        frc r9.xyz, r8.xyzx
        add r8.xyz, r8.xyzx, -r9.xyzx
        mul r10.xyz, r9.xyzx, r9.xyzx
        mad r9.xyz, -r9.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
        mul r7.w, r9.z, r10.z
        mad r8.xy, r8.zzzz, l(37.000000, 17.000000, 0.000000, 0.000000), r8.xyxx
        mad r8.xy, r10.xyxx, r9.xyxx, r8.xyxx
        add r8.xy, r8.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
        mul r8.xy, r8.xyxx, l(0.00390625000, 0.00390625000, 0.000000, 0.000000)
        sample_l r8.xyzw, r8.xyxx, t3.xyzw, s3, l(0.000000)
        add r8.x, -r8.y, r8.x
        mad r7.w, r7.w, r8.x, r8.y
        div_sat r8.x, r7.y, cb0[11].x
        mad r8.xyzw, r8.xxxx, r5.xyzw, cb0[15].xyzw
        mad r7.w, -r7.w, cb0[12].x, l(1.000000)
        mul_sat r4.w, r4.w, r7.w
        mul r9.w, r4.w, r8.w
        mul r9.xyz, r8.xyzx, r9.wwww
        add r4.w, -r6.w, l(1.000000)
        mad r6.xyzw, r9.xyzw, r4.wwww, r6.xyzw
        iadd r3.w, r3.w, l(-1)
        mad r7.xyz, r2.yzwy, l(0.200000, 0.200000, 0.200000, 0.000000), r7.xyzx
        mad r3.z, r1.y, l(0.200000), r3.z
      endloop
      mul r2.xyzw, r6.xyzw, cb0[5].xxxx
      dp3 r1.x, r1.xzwx, cb0[19].xyzx
      mul r1.x, r1.x, cb0[18].w
      max r1.x, r1.x, l(0.000000)
      mul r1.x, r1.x, r1.x
      mul r1.x, r1.x, r1.x
      mul r1.x, r1.x, r1.x
      mul r1.x, r2.w, r1.x
      mad r1.yzw, -r6.xxyz, cb0[5].xxxx, cb0[18].xxyz
      mad r2.xyz, r1.xxxx, r1.yzwy, r2.xyzx
      mad r1.x, -r6.w, cb0[5].x, l(1.000000)
      mad r0.xyzw, r0.xyzw, r1.xxxx, r2.xyzw
    endif
  endif
endif
mul r1.xy, v1.xyxx, cb0[2].zwzz
dp2 r1.x, l(2.40845060, 3.25352120, 0.000000, 0.000000), r1.xyxx
frc r1.x, r1.x
add r1.x, r1.x, l(-0.400000)
mad r1.x, r1.x, cb0[3].x, l(1.000000)
mul o0.xyzw, r0.xyzw, r1.xxxx
ret
// Approximately 0 instruction slots used