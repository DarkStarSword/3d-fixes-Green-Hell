// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f5ac4bc547b3e6bc-ps.txt
// 3DMigoto: f5ac4bc547b3e6bc |    Unity headers extracted from VolumetricFogAndMist_VolumetricFog
//    Shader "VolumetricFogAndMist/VolumetricFog" {
//      SubShader 1/1 {
//        Pass 2/5 {
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from VolumetricFogAndMist_VolumetricFog:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 188 3 14
//   undeciphered1a: 28
//   Keywords { "FOG_OF_WAR_ON" "FOG_DISTANCE_ON" "FOG_POINT_LIGHT5" "FOG_SUN_SHADOWS_ON" }
//   undeciphered2: 1 4 2 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 752
//   Vector 64 [_CameraDepthTexture_TexelSize]
//   Float 172 [_FogAlpha]
//   Vector 176 [_Color] 3
//   Vector 192 [_FogDistance]
//   Vector 208 [_FogData]
//   Vector 224 [_FogWindDir] 3
//   Vector 240 [_FogStepping]
//   Vector 256 [_FogSkyData]
//   Vector 288 [_FogOfWarSize] 3
//   Vector 304 [_FogOfWarCenterAdjusted] 3
//   Vector 320 [_FogPointLightPosition0] 3
//   Vector 336 [_FogPointLightColor0] 3
//   Vector 352 [_FogPointLightPosition1] 3
//   Vector 368 [_FogPointLightColor1] 3
//   Vector 384 [_FogPointLightPosition2] 3
//   Vector 400 [_FogPointLightColor2] 3
//   Vector 416 [_FogPointLightPosition3] 3
//   Vector 432 [_FogPointLightColor3] 3
//   Vector 448 [_FogPointLightPosition4] 3
//   Vector 464 [_FogPointLightColor4] 3
//   Vector 480 [_FogPointLightPosition5] 3
//   Vector 496 [_FogPointLightColor5] 3
//   Vector 528 [_SunDir] 3
//   Vector 544 [_SunColor] 3
//   Vector 576 [_FogScatteringData2]
//   Vector 672 [_VolumetricFogSunWorldPos]
//   Vector 688 [_VolumetricFogSunShadowsData]
//   Float 704 [_Jitter]
//   Matrix 608 [_VolumetricFogSunProj]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 96 [_ScreenParams]
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 1
//   SetTexture 1 [_FogOfWar] 2D 2
//   SetTexture 2 [_NoiseTex] 2D 0
//   SetTexture 3 [_VolumetricFogSunDepthTexture] 2D 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:30:55 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[45], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 30
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r28.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed f5ac4bc547b3e6bc-ps.txt

mul r28.w, -r28.x, r28.y
mad r29.xyz, -r28.wwww, cb10[0].xyzw, cb1[4].xyzw

mad r0.xyzw, cb0[4].xyxy, l(0.000000, -0.750000, 0.000000, 0.750000), v1.zwzw
sample r1.xyzw, r0.xyxx, t0.xyzw, s1
sample r0.xyzw, r0.zwzz, t0.xyzw, s1
max r0.xyzw, r0.xxxx, r1.xxxx
mad r1.x, cb1[7].x, r0.w, cb1[7].y
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
mov r1.yz, -cb0[13].xxyx
add r2.y, r1.y, r29.y
mov r2.xz, r29.xxzx
mad r3.xyz, v2.xyzx, r1.xxxx, r2.xyzx
add r1.y, r3.y, l(0.000010)
lt r1.w, cb0[13].y, r2.y
lt r2.w, cb0[13].y, r1.y
and r1.w, r1.w, r2.w
lt r2.w, r2.y, r1.z
lt r4.x, r1.y, r1.z
and r2.w, r2.w, r4.x
or r1.w, r1.w, r2.w
if_z r1.w
  lt r1.x, r1.x, cb0[16].w
  if_nz r1.x
    div r1.xw, r3.xxxz, cb0[18].xxxz
    add r1.xw, r1.xxxw, -cb0[19].xxxz
    sample r4.xyzw, r1.xwxx, t1.wxyz, s2
    ge r1.x, l(0.000000), r4.x
  else
    mov r4.x, l(1.000000)
    mov r1.x, l(0)
  endif
  if_z r1.x
    add r3.w, r3.y, l(0.000010)
    add r3.xyz, -r2.xyzx, r3.xwzx
    dp3 r1.x, r3.xyzx, r3.xyzx
    dp2 r1.w, r3.xzxx, r3.xzxx
    sqrt r1.xw, r1.xxxw
    div r4.yz, r3.xxzx, r1.wwww
    div r1.w, r1.w, r3.y
    max r2.w, r1.z, r2.y
    min r5.z, r2.w, cb0[13].y
    add r2.w, r2.y, -r5.z
    mul r2.w, r1.w, r2.w
    mad r5.xy, -r4.yzyy, r2.wwww, r29.xzxx
    min r2.w, r1.x, cb0[12].z
    add r6.xyz, -r2.xyzx, r5.xzyx
    dp3 r2.x, r6.xyzx, r6.xyzx
    sqrt r2.x, r2.x
    lt r2.z, r2.x, r2.w
    if_nz r2.z
      lt r2.z, l(0.000000), r1.w
      lt r3.w, l(-0.500000), r1.y
      and r2.z, r2.z, r3.w
      lt r3.w, r1.w, l(0.000000)
      lt r1.y, r1.y, l(0.500000)
      and r1.y, r1.y, r3.w
      and r1.y, r1.z, r1.y
      movc r6.y, r2.z, cb0[13].y, r1.y
      add r1.y, -r2.y, r6.y
      mul r1.y, r1.y, r1.w
      mad r6.xz, -r4.yyzy, r1.yyyy, r29.xxzx
      add r1.yzw, r5.xxzy, -r6.xxyz
      dp3 r1.y, r1.yzwy, r1.yzwy
      sqrt r1.y, r1.y
      add r1.z, -r2.x, r2.w
      min r1.y, r1.z, r1.y
      lt r1.w, l(0.000000), r1.y
      if_nz r1.w
        mul r2.yz, v1.xxyx, cb1[6].xxyx
        dp2 r1.w, l(2.40845060, 3.25352120, 0.000000, 0.000000), r2.yzyy
        frc r1.w, r1.w
        add r1.w, r1.w, l(-0.500000)
        log r2.y, r1.y
        mul r2.y, r2.y, l(0.693147182)
        max r2.y, r2.y, l(0.000000)
        mad r2.y, r2.y, cb0[15].x, l(0.100000)
        mul r2.y, r2.y, cb0[13].z
        mul_sat r2.z, r2.w, cb0[15].y
        mul r2.y, r2.z, r2.y
        max r2.y, r2.y, l(0.010000)
        mul r4.yzw, r2.yyyy, r3.xxyz
        div r4.yzw, r4.yyzw, r1.xxxx
        div r2.y, r1.y, r2.y
        add r6.xyz, r5.xzyx, -cb0[20].xyzx
        add r7.xyz, r5.xzyx, -cb0[22].xyzx
        add r8.xyz, r5.xzyx, -cb0[24].xyzx
        add r9.xyz, r5.xzyx, -cb0[26].xyzx
        add r10.xyz, r5.xzyx, -cb0[28].xyzx
        add r11.xyz, r5.xzyx, -cb0[30].xyzx
        mul r12.xz, r4.yywy, cb0[13].wwww
        mul r2.z, cb0[13].z, cb0[13].y
        div r12.y, r4.z, r2.z
        add r13.xy, r5.xyxx, cb0[14].xzxx
        mul r13.xy, r13.xyxx, cb0[13].wwww
        div r2.z, r5.z, r2.z
        add r13.zw, cb0[14].xxxz, r29.xxxz
        frc r2.w, r1.w
        mad r2.y, r2.w, cb0[44].x, r2.y
        add r5.w, r5.z, cb0[13].x
        mul r14.xyz, r5.wwww, cb0[39].xywx
        mad r14.xyz, cb0[38].xywx, r5.xxxx, r14.xyzx
        mad r14.xyz, cb0[40].xywx, r5.yyyy, r14.xyzx
        add r14.xyz, r14.xyzx, cb0[41].xywx
        div r14.xy, r14.xyxx, r14.zzzz
        mad r14.xy, r14.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        mad r1.w, r1.w, cb0[43].y, l(1.000000)
        mul r1.w, r1.w, r1.y
        mul r15.xyz, r3.xyzx, r1.wwww
        div r15.xyz, r15.xyzx, r1.xxxx
        add r15.xyz, r5.xwyx, r15.xyzx
        mul r16.xyz, r15.yyyy, cb0[39].xywx
        mad r16.xyz, cb0[38].xywx, r15.xxxx, r16.xyzx
        mad r16.xyz, cb0[40].xywx, r15.zzzz, r16.xyzx
        add r16.xyz, r16.xyzx, cb0[41].xywx
        div r14.zw, r16.xxxy, r16.zzzz
        mad r14.zw, r14.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r1.w, -r2.x, cb0[42].w
        mul_sat r1.w, r1.w, l(0.0285714287)
        mul r1.w, r1.w, cb0[43].x
        div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
        ge r1.y, r1.y, r1.z
        add r14.xy, -r14.zwzz, r14.xyxx
        add r5.xyz, r5.xwyx, -r15.xyzx
        mov r16.xyzw, l(0,0,0,0)
        mov r17.xyz, r6.xyzx
        mov r18.xyz, r7.xyzx
        mov r19.xyz, r8.xyzx
        mov r20.xyz, r9.xyzx
        mov r21.xyz, r10.xyzx
        mov r22.xyz, r11.xyzx
        mov r24.xz, r13.xxyx
        mov r1.z, r2.y
        mov r24.y, r2.z
        mov r23.xyzw, l(0,0,0,0)
        loop
          ge r3.w, l(1.000000), r1.z
          breakc_nz r3.w
          sample_l r25.xyzw, r24.xzxx, t2.xyzw, s0, l(0.000000)
          add r3.w, -|r24.y|, r25.w
          mad r26.xy, r13.zwzz, cb0[13].wwww, -r24.xzxx
          dp2 r5.w, r26.xyxx, r26.xyxx
          add r5.w, -r5.w, cb0[12].x
          max r5.w, r5.w, l(0.000000)
          mad r3.w, -r5.w, cb0[12].y, r3.w
          lt r5.w, l(0.000000), r3.w
          if_nz r5.w
            add r5.w, -r3.w, l(1.000000)
            mul r26.xyz, r5.wwww, cb0[11].xyzx
            mul r26.w, r3.w, l(0.400000)
            mul r3.w, r2.w, r1.z
            mad r27.xy, r3.wwww, r14.xyxx, r14.zwzz
            sample_l r27.xyzw, r27.xyxx, t3.xyzw, s3, l(0.000000)
            dp4 r5.w, r27.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
            div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
            mad r27.xyz, r3.wwww, r5.xyzx, r15.xyzx
            add r27.xyz, r27.xyzx, -cb0[42].xyzx
            dp3 r3.w, r27.xyzx, r27.xyzx
            sqrt r3.w, r3.w
            add_sat r3.w, -r3.w, r5.w
            mul r5.w, r1.w, r23.w
            add r3.w, r3.w, l(-1.000000)
            mad r5.w, r5.w, r3.w, l(1.000000)
            mad r3.w, cb0[43].z, r3.w, l(1.000000)
            mul r26.xyzw, r3.wwww, r26.xyzw
            dp3 r3.w, r17.xyzx, r17.xyzx
            div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
            dp3 r6.w, r18.xyzx, r18.xyzx
            div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
            dp3 r7.w, r19.xyzx, r19.xyzx
            div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
            dp3 r8.w, r20.xyzx, r20.xyzx
            div r8.w, l(1.000000, 1.000000, 1.000000, 1.000000), r8.w
            dp3 r9.w, r21.xyzx, r21.xyzx
            div r9.w, l(1.000000, 1.000000, 1.000000, 1.000000), r9.w
            dp3 r10.w, r22.xyzx, r22.xyzx
            div r10.w, l(1.000000, 1.000000, 1.000000, 1.000000), r10.w
            mul r27.xyz, r9.wwww, cb0[29].xyzx
            mad r27.xyz, cb0[31].xyzx, r10.wwww, r27.xyzx
            mad r27.xyz, cb0[27].xyzx, r8.wwww, r27.xyzx
            mad r27.xyz, cb0[25].xyzx, r7.wwww, r27.xyzx
            mad r27.xyz, cb0[23].xyzx, r6.wwww, r27.xyzx
            mad r27.xyz, cb0[21].xyzx, r3.wwww, r27.xyzx
            mul r27.xyz, r26.wwww, r27.xyzx
            mad r25.xyz, r25.xyzx, r5.wwww, r27.xyzx
            mul r25.xyz, r26.wwww, r25.xyzx
            mul r26.xyz, r25.xyzx, r26.xyzx
            add r3.w, -r23.w, l(1.000000)
            mad r25.xyzw, r26.xyzw, r3.wwww, r23.xyzw
            lt r3.w, l(0.990000), r25.w
            if_nz r3.w
              mov r16.xyzw, r26.xyzw
              mov r23.xyzw, r25.xyzw
              break
            endif
            mov r16.xyzw, r26.xyzw
            mov r23.xyzw, r25.xyzw
          endif
          add r17.xyz, r4.yzwy, r17.xyzx
          add r18.xyz, r4.yzwy, r18.xyzx
          add r19.xyz, r4.yzwy, r19.xyzx
          add r20.xyz, r4.yzwy, r20.xyzx
          add r21.xyz, r4.yzwy, r21.xyzx
          add r22.xyz, r4.yzwy, r22.xyzx
          add r1.z, r1.z, l(-1.000000)
          add r24.xyz, r12.xyzx, r24.xyzx
        endloop
        lt r1.w, r23.w, l(0.990000)
        and r1.yw, r1.yyyw, l(0, 0x3f800000, 0, 0x3f800000)
        add r2.y, -r23.w, l(1.000000)
        mul r1.y, r1.z, r1.y
        mul r1.z, r1.w, r2.y
        mul r1.y, r1.y, r1.z
        mad r5.xyzw, r16.xyzw, r1.yyyy, r23.xyzw
        div r1.xyz, r3.xyzx, r1.xxxx
        dp3 r1.x, r1.xyzx, cb0[33].xyzx
        mul r1.x, r1.x, cb0[36].w
        max r1.x, r1.x, l(0.000000)
        mul r1.x, r1.x, r1.x
        mul r1.x, r1.x, r1.x
        mul r1.x, r1.x, r1.x
        mul r1.x, r5.w, r1.x
        add r1.yzw, -r5.xxyz, cb0[34].xxyz
        mad r5.xyz, r1.xxxx, r1.yzwy, r5.xyzx
        mul r1.xyzw, r5.xyzw, cb0[10].wwww
        add r2.x, -r2.x, cb0[12].z
        div_sat r2.x, r2.x, cb0[12].w
        mul r2.x, r2.x, r2.x
        mul r1.xyzw, r1.xyzw, r2.xxxx
        mul o0.xyzw, r4.xxxx, r1.xyzw
      else
        mov o0.xyzw, l(0,0,0,0)
      endif
    else
      mov o0.xyzw, l(0,0,0,0)
    endif
  else
    mov o0.xyzw, l(0,0,0,0)
  endif
else
  mov o0.xyzw, l(0,0,0,0)
endif
mov o1.xyzw, r0.xyzw
ret
// Approximately 0 instruction slots used