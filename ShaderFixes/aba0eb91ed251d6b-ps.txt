// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed aba0eb91ed251d6b-ps.txt
// 3DMigoto: aba0eb91ed251d6b |    Unity headers extracted from AVP_DoubleSided
//    Shader "AVP/DoubleSided" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Geometry+0" "RenderType"="TransparentCutout" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+0" "RenderType"="TransparentCutout" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from AVP_DoubleSided:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 164 6 4
//   undeciphered1a: 13
//   Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "FOG_LINEAR" }
//   undeciphered2: 1 7 7 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 352
//   Vector 32 [_LightColor0]
//   Vector 128 [_ShadowMapTexture_TexelSize]
//   Float 208 [_Normal_Power]
//   Vector 224 [_Normal_ST]
//   Vector 240 [_Color]
//   Vector 256 [_Albedo_ST]
//   Vector 272 [_Metallic_ST]
//   Float 288 [_Smoothness]
//   Float 324 [_Cutoff]
//   Matrix 144 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   Matrix 128 [unity_WorldToShadow0]
//   Matrix 192 [unity_WorldToShadow1]
//   Matrix 256 [unity_WorldToShadow2]
//   Matrix 320 [unity_WorldToShadow3]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_Normal] 2D 4
//   SetTexture 1 [_Albedo] 2D 5
//   SetTexture 2 [_Metallic] 2D 6
//   SetTexture 3 [_LightTexture0] 2D 2
//   SetTexture 4 [_LightTextureB0] 2D 3
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//   SetTexture 6 [_ShadowMapTexture] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:55:28 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 7     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float
// TEXCOORD                 6   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[21], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed aba0eb91ed251d6b-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v5.xyzx, r14.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r2.xyzx
mad r4.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
sample r4.xyzw, r4.xyxx, t0.xyzw, s4
mul r4.x, r4.w, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, cb0[13].xxxx
dp2 r1.w, r4.xyxx, r4.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r4.z, r1.w
mad r5.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
sample r5.xyzw, r5.xyxx, t1.xyzw, s5
mul r6.xyz, r5.xyzx, cb0[15].xyzx
mad r7.xy, v1.xyxx, cb0[17].xyxx, cb0[17].zwzz
sample r7.xyzw, r7.xyxx, t2.xyzw, s6
add r1.w, r5.w, -cb0[20].y
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
mul r8.xyzw, v5.yyyy, cb0[10].xyzw
mad r8.xyzw, cb0[9].xyzw, v5.xxxx, r8.xyzw
mad r8.xyzw, cb0[11].xyzw, v5.zzzz, r8.xyzw
add r8.xyzw, r8.xyzw, cb0[12].xyzw
mov r9.x, cb4[9].z
mov r9.y, cb4[10].z
mov r9.z, cb4[11].z
dp3 r1.w, r2.xyzx, r9.xyzx
add r2.xyz, v5.xyzx, -cb3[25].xyzx
dp3 r2.x, r2.xyzx, r2.xyzx
sqrt r2.x, r2.x
add r2.x, -r1.w, r2.x
mad r1.w, cb3[25].w, r2.x, r1.w
mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
eq r2.x, cb6[0].x, l(1.000000)
if_nz r2.x
  eq r2.x, cb6[0].y, l(1.000000)
  mul r2.yzw, v5.yyyy, cb6[2].xxyz
  mad r2.yzw, cb6[1].xxyz, v5.xxxx, r2.yyzw
  mad r2.yzw, cb6[3].xxyz, v5.zzzz, r2.yyzw
  add r2.yzw, r2.yyzw, cb6[4].xxyz
  movc r2.xyz, r2.xxxx, r2.yzwy, v5.xyzx
  add r2.xyz, r2.xyzx, -cb6[6].xyzx
  mul r2.yzw, r2.xxyz, cb6[5].xxyz
  mad r2.y, r2.y, l(0.250000), l(0.750000)
  mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
  max r2.x, r2.y, r3.w
  sample r2.xyzw, r2.xzwx, t5.xyzw, s0
else
  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
lt r2.y, r1.w, l(0.990000)
if_nz r2.y
  mul r9.xyzw, v5.yyyy, cb3[9].xyzw
  mad r9.xyzw, cb3[8].xyzw, v5.xxxx, r9.xyzw
  mad r9.xyzw, cb3[10].xyzw, v5.zzzz, r9.xyzw
  add r9.xyzw, r9.xyzw, cb3[11].xyzw
  div r2.yzw, r9.xxyz, r9.wwww
  mad r7.yz, r2.yyzy, cb0[8].zzwz, l(0.000000, 0.500000, 0.500000, 0.000000)
  round_ni r7.yz, r7.yyzy
  mad r2.yz, r2.yyzy, cb0[8].zzwz, -r7.yyzy
  add r9.xyzw, r2.yyzz, l(0.500000, 1.000000, 0.500000, 1.000000)
  mul r10.xw, r9.xxxz, r9.xxxz
  mad r9.xz, r10.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000), -r2.yyzy
  add r11.xy, -r2.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
  min r11.zw, r2.yyyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r11.xy, -r11.zwzz, r11.zwzz, r11.xyxx
  max r2.yz, r2.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r2.yz, -r2.yyzy, r2.yyzy, r9.yywy
  mov r12.x, r9.x
  mov r12.y, r11.x
  mov r12.z, r2.y
  mov r12.w, r10.x
  mul r12.xyzw, r12.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  mov r10.x, r9.z
  mov r10.y, r11.y
  mov r10.z, r2.z
  mul r9.xyzw, r10.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  add r10.xyzw, r12.ywyw, r12.xzxz
  add r11.xyzw, r9.yyww, r9.xxzz
  div r2.yz, r12.yywy, r10.zzwz
  add r2.yz, r2.yyzy, l(0.000000, -1.500000, 0.500000, 0.000000)
  div r9.xy, r9.ywyy, r11.ywyy
  add r9.xy, r9.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  mul r12.xy, r2.yzyy, cb0[8].xxxx
  mul r12.zw, r9.xxxy, cb0[8].yyyy
  mul r9.xyzw, r10.xyzw, r11.xyzw
  mad r10.xyzw, r7.yzyz, cb0[8].xyxy, r12.xzyz
  sample_c_lz r2.y, r10.xyxx, t6.xxxx, s1, r2.w
  sample_c_lz r2.z, r10.zwzz, t6.xxxx, s1, r2.w
  mul r2.z, r2.z, r9.y
  mad r2.y, r9.x, r2.y, r2.z
  mad r10.xyzw, r7.yzyz, cb0[8].xyxy, r12.xwyw
  sample_c_lz r2.z, r10.xyxx, t6.xxxx, s1, r2.w
  mad r2.y, r9.z, r2.z, r2.y
  sample_c_lz r2.z, r10.zwzz, t6.xxxx, s1, r2.w
  mad r2.y, r9.w, r2.z, r2.y
  add r2.z, -cb3[24].x, l(1.000000)
  mad r2.y, r2.y, r2.z, cb3[24].x
else
  mov r2.y, l(1.000000)
endif
add r2.x, -r2.y, r2.x
mad r1.w, r1.w, r2.x, r2.y
lt r2.x, l(0.000000), r8.z
and r2.x, r2.x, l(0x3f800000)
div r2.yz, r8.xxyx, r8.wwww
add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
sample r9.xyzw, r2.yzyy, t3.xyzw, s2
mul r2.x, r2.x, r9.w
dp3 r2.y, r8.xyzx, r8.xyzx
sample r8.xyzw, r2.yyyy, t4.xyzw, s3
mul r2.x, r2.x, r8.x
mul r1.w, r1.w, r2.x
dp3 r2.x, v2.xyzx, r4.xyzx
dp3 r2.y, v3.xyzx, r4.xyzx
dp3 r2.z, v4.xyzx, r4.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mul r4.xyz, r1.wwww, cb0[2].xyzx
mad r5.xyz, cb0[15].xyzx, r5.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r5.xyz, r7.xxxx, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -r7.x, l(0.960000), l(0.960000)
mul r6.xyz, r1.wwww, r6.xyzx
mad r1.w, -r7.w, cb0[18].x, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r2.xyzx, r3.xyzx
dp3_sat r2.w, r2.xyzx, r1.xyzx
dp3_sat r2.x, r2.xyzx, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r2.w, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
max r0.z, r0.z, l(0.002000)
add r1.x, -r0.z, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r2.w, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r2.w, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r2.x, r0.z, -r2.x
mad r1.x, r1.x, r2.x, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r2.wwww, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r5.xyzx, r5.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r4.xyzx
mul r0.yzw, r4.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used