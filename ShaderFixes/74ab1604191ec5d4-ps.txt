// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 74ab1604191ec5d4-ps.txt
// 3DMigoto: 74ab1604191ec5d4 |    Unity headers extracted from Standard (Specular setup)
//    Shader "Standard (Specular setup)" {
//      CustomEditor "StandardShaderGUI"
//      Fallback "VertexLit"
//      SubShader 1/2 {
//        LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//        Pass 2/5 {
//          Name "FORWARD_DELTA"
//          Tags { "LIGHTMODE"="FORWARDADD" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard (Specular setup):
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 149 4 4
//   undeciphered1a: 10
//   Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "FOG_LINEAR" "_SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A" }
//   undeciphered2: 1 5 7 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 320
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Vector 128 [_ShadowMapTexture_TexelSize]
//   Vector 144 [_Color]
//   Float 224 [_GlossMapScale]
//   Matrix 256 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   Matrix 128 [unity_WorldToShadow0]
//   Matrix 192 [unity_WorldToShadow1]
//   Matrix 256 [unity_WorldToShadow2]
//   Matrix 320 [unity_WorldToShadow3]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_LightTexture0] 2D 3
//   SetTexture 2 [_LightTextureB0] 2D 4
//   SetTexture 3 [unity_ProbeVolumeSH] 3D 0
//   SetTexture 4 [_ShadowMapTexture] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:22:57 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 6   xyzw        7     NONE   float
// TEXCOORD                 7   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[20], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.w
dcl_input_ps linear v4.w
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 74ab1604191ec5d4-ps.txt

mul r10.w, -r10.x, r10.y
mad r11.xyz, -r10.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s2
mul r0.xyz, r0.xyzx, cb0[9].xyzx
max r1.x, cb0[3].y, cb0[3].x
max r1.x, r1.x, cb0[3].z
add r1.x, -r1.x, l(1.000000)
mul r0.xyz, r0.xyzx, r1.xxxx
dp3 r1.x, v5.xyzx, v5.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v5.xyzx
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v2.xyzx
mul r3.xyzw, v6.yyyy, cb0[17].xyzw
mad r3.xyzw, cb0[16].xyzw, v6.xxxx, r3.xyzw
mad r3.xyzw, cb0[18].xyzw, v6.zzzz, r3.xyzw
add r3.xyzw, r3.xyzw, cb0[19].xyzw
add r4.xyz, -v6.xyzx, r11.xyzx
mov r5.x, cb4[9].z
mov r5.y, cb4[10].z
mov r5.z, cb4[11].z
dp3 r1.w, r4.xyzx, r5.xyzx
add r4.xyz, v6.xyzx, -cb3[25].xyzx
dp3 r2.w, r4.xyzx, r4.xyzx
sqrt r2.w, r2.w
add r2.w, -r1.w, r2.w
mad r1.w, cb3[25].w, r2.w, r1.w
mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
eq r2.w, cb6[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb6[0].y, l(1.000000)
  mul r4.xyz, v6.yyyy, cb6[2].xyzx
  mad r4.xyz, cb6[1].xyzx, v6.xxxx, r4.xyzx
  mad r4.xyz, cb6[3].xyzx, v6.zzzz, r4.xyzx
  add r4.xyz, r4.xyzx, cb6[4].xyzx
  movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  add r4.xyz, r4.xyzx, -cb6[6].xyzx
  mul r4.yzw, r4.xxyz, cb6[5].xxyz
  mad r2.w, r4.y, l(0.250000), l(0.750000)
  mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
  max r4.x, r2.w, r4.y
  sample r4.xyzw, r4.xzwx, t3.xyzw, s0
else
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
lt r4.x, r1.w, l(0.990000)
if_nz r4.x
  mul r4.xyzw, v6.yyyy, cb3[9].xyzw
  mad r4.xyzw, cb3[8].xyzw, v6.xxxx, r4.xyzw
  mad r4.xyzw, cb3[10].xyzw, v6.zzzz, r4.xyzw
  add r4.xyzw, r4.xyzw, cb3[11].xyzw
  div r4.xyz, r4.xyzx, r4.wwww
  mad r5.xy, r4.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  round_ni r5.xy, r5.xyxx
  mad r4.xy, r4.xyxx, cb0[8].zwzz, -r5.xyxx
  add r6.xyzw, r4.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  mul r7.xw, r6.xxxz, r6.xxxz
  mad r5.zw, r7.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r4.xxxy
  add r6.xz, -r4.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  min r8.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r6.xz, -r8.xxyx, r8.xxyx, r6.xxzx
  max r4.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r4.xy, -r4.xyxx, r4.xyxx, r6.ywyy
  mov r8.x, r5.z
  mov r8.y, r6.x
  mov r8.z, r4.x
  mov r8.w, r7.x
  mul r8.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  mov r7.x, r5.w
  mov r7.y, r6.z
  mov r7.z, r4.y
  mul r6.xyzw, r7.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  add r7.xyzw, r8.ywyw, r8.xzxz
  add r9.xyzw, r6.yyww, r6.xxzz
  div r4.xy, r8.ywyy, r7.zwzz
  add r4.xy, r4.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  div r5.zw, r6.yyyw, r9.yyyw
  add r5.zw, r5.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  mul r6.xy, r4.xyxx, cb0[8].xxxx
  mul r6.zw, r5.zzzw, cb0[8].yyyy
  mul r7.xyzw, r7.xyzw, r9.xyzw
  mad r8.xyzw, r5.xyxy, cb0[8].xyxy, r6.xzyz
  sample_c_lz r4.x, r8.xyxx, t4.xxxx, s1, r4.z
  sample_c_lz r4.y, r8.zwzz, t4.xxxx, s1, r4.z
  mul r4.y, r4.y, r7.y
  mad r4.x, r7.x, r4.x, r4.y
  mad r5.xyzw, r5.xyxy, cb0[8].xyxy, r6.xwyw
  sample_c_lz r4.y, r5.xyxx, t4.xxxx, s1, r4.z
  mad r4.x, r7.z, r4.y, r4.x
  sample_c_lz r4.y, r5.zwzz, t4.xxxx, s1, r4.z
  mad r4.x, r7.w, r4.y, r4.x
  add r4.y, -cb3[24].x, l(1.000000)
  mad r4.x, r4.x, r4.y, cb3[24].x
else
  mov r4.x, l(1.000000)
endif
add r2.w, r2.w, -r4.x
mad r1.w, r1.w, r2.w, r4.x
lt r2.w, l(0.000000), r3.z
and r2.w, r2.w, l(0x3f800000)
div r4.xy, r3.xyxx, r3.wwww
add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample r4.xyzw, r4.xyxx, t1.xyzw, s3
mul r2.w, r2.w, r4.w
dp3 r3.x, r3.xyzx, r3.xyzx
sample r3.xyzw, r3.xxxx, t2.xyzw, s4
mul r2.w, r2.w, r3.x
mul r1.w, r1.w, r2.w
mov r3.x, v3.w
mov r3.y, v4.w
mov r3.z, v5.w
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, r3.xyzx
mul r5.xyz, r1.wwww, cb0[2].xyzx
mad r0.w, -r0.w, cb0[14].x, l(1.000000)
mad r3.xyz, r3.xyzx, r2.wwww, -r2.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
max r1.w, r1.w, l(0.001000)
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
dp3 r1.w, r1.xyzx, -r2.xyzx
dp3_sat r2.x, r1.xyzx, r4.xyzx
dp3_sat r1.x, r1.xyzx, r3.xyzx
dp3_sat r1.y, r4.xyzx, r3.xyzx
mul r1.z, r1.y, r1.y
dp2 r1.z, r1.zzzz, r0.wwww
add r1.z, r1.z, l(-0.500000)
add r2.y, -r2.x, l(1.000000)
mul r2.z, r2.y, r2.y
mul r2.z, r2.z, r2.z
mul r2.y, r2.y, r2.z
mad r2.y, r1.z, r2.y, l(1.000000)
add r2.z, -|r1.w|, l(1.000000)
mul r2.w, r2.z, r2.z
mul r2.w, r2.w, r2.w
mul r2.z, r2.z, r2.w
mad r1.z, r1.z, r2.z, l(1.000000)
mul r1.z, r1.z, r2.y
mul r1.z, r2.x, r1.z
mul r0.w, r0.w, r0.w
max r0.w, r0.w, l(0.002000)
add r2.y, -r0.w, l(1.000000)
mad r2.z, |r1.w|, r2.y, r0.w
mad r2.y, r2.x, r2.y, r0.w
mul r1.w, |r1.w|, r2.y
mad r1.w, r2.x, r2.z, r1.w
add r1.w, r1.w, l(0.000010)
div r1.w, l(0.500000), r1.w
mul r0.w, r0.w, r0.w
mad r2.y, r1.x, r0.w, -r1.x
mad r1.x, r2.y, r1.x, l(1.000000)
mul r0.w, r0.w, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.w, r0.w, r1.x
mul r0.w, r0.w, r1.w
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.x, r0.w
max r0.w, r0.w, l(0.000000)
dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
ne r1.x, r1.x, l(0.000000)
and r1.x, r1.x, l(0x3f800000)
mul r0.w, r0.w, r1.x
mul r1.xzw, r1.zzzz, r5.xxyz
mul r2.xyz, r5.xyzx, r0.wwww
add r0.w, -r1.y, l(1.000000)
mul r1.y, r0.w, r0.w
mul r1.y, r1.y, r1.y
mul r0.w, r0.w, r1.y
add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
mul r2.xyz, r2.xyzx, r3.xyzx
mad r0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
div r0.w, v2.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used