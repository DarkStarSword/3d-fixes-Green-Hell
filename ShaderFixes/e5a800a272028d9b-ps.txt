// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e5a800a272028d9b-ps.txt
// 3DMigoto: e5a800a272028d9b | Matched 2 variants of 1 shaders: AVP/POM
//
//       Unity headers extracted from AVP_POM
//       Shader "AVP/POM" {
//         CustomEditor "ASEMaterialInspector"
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           Tags { "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//           Pass 4/4 {
//             Name "ShadowCaster"
//             Tags { "LIGHTMODE"="SHADOWCASTER" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from AVP_POM:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 29 0 1
//      undeciphered1a: 7
// 2:   Keywords { "SHADOWS_CUBE" "UNITY_PASS_SHADOWCASTER" }
// 1:   Keywords { "SHADOWS_DEPTH" "UNITY_PASS_SHADOWCASTER" }
//      undeciphered2: 1 1 3 1 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 160
//      Vector 80 [_Albedo_ST]
//      Float 96 [_Scale]
//      Float 100 [_RefPlane]
//      Float 104 [_CurvFix]
//      Float 108 [_CurvatureU]
//      Float 112 [_CurvatureV]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityShadows" 416
//      Vector 80 [unity_LightShadowBias]
//      SetTexture 0 [_HeightMap] 2D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityShadows" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:23:31 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 1   xy          1     NONE   float   xy
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e5a800a272028d9b-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r0.xyz, -r0.xyzx, r8.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyz, r0.yyyy, v3.xyzx
mad r0.xyw, v2.xyxz, r0.xxxx, r1.xyxz
mad r0.xyz, v4.xyzx, r0.zzzz, r0.xywx
mad r1.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
deriv_rtx r1.zw, r1.xxxy
deriv_rty r2.xy, r1.xyxx
div r0.xy, r0.xyxx, r0.zzzz
mul r0.xy, r0.xyxx, cb0[6].xxxx
mad r0.zw, cb0[6].yyyy, r0.xxxy, r1.xxxy
mul r1.xy, r0.xyxx, l(-0.00781250000, -0.00781250000, 0.000000, 0.000000)
add r2.z, cb0[6].z, l(1.000000)
mov r3.x, cb0[6].w
mov r3.y, cb0[7].x
mov r4.x, l(129)
mov r5.xy, r1.xyxx
mov r2.w, l(0)
mov r5.zw, l(0,0,0,0.992187500)
loop
  ige r3.z, r5.z, l(129)
  breakc_nz r3.z
  mul r3.zw, r5.xxxy, r5.xxxy
  dp2 r2.w, r3.xyxx, r3.zwzz
  add r3.zw, r0.zzzw, r5.xxxy
  sample_d r6.xyzw, r3.zwzz, t0.xyzw, s0, r1.zwzz, r2.xyxx
  add r3.z, -r2.w, l(1.000000)
  mul r3.w, r3.z, r6.x
  lt r3.w, r5.w, r3.w
  iadd r6.x, r5.z, l(1)
  mad r6.yz, r0.xxyx, l(0.000000, -0.00781250000, -0.00781250000, 0.000000), r5.xxyx
  mul r3.z, r2.z, r3.z
  mad r6.w, -r3.z, l(0.00781250000), r5.w
  mov r4.yzw, r5.xxyw
  movc r5.xyzw, r3.wwww, r4.yzxw, r6.yzxw
endloop
eq r0.x, cb2[5].z, l(0.000000)
lt r0.y, l(1.000000), r2.w
and r0.x, r0.y, r0.x
discard_nz r0.x
mov o0.xyzw, l(0,0,0,0)
ret
// Approximately 0 instruction slots used