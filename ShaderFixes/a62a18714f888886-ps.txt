// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a62a18714f888886-ps.txt
// 3DMigoto: a62a18714f888886 |    Unity headers extracted from VolumetricFogAndMist_VolumetricFog
//    Shader "VolumetricFogAndMist/VolumetricFog" {
//      SubShader 1/1 {
//        Pass 4/5 {
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from VolumetricFogAndMist_VolumetricFog:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 127 2 8
//   undeciphered1a: 23
//   Keywords { "FOG_DISTANCE_ON" "FOG_AREA_BOX" "FOG_POINT_LIGHT4" }
//   undeciphered2: 1 2 2 2 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 592
//   Vector 64 [_CameraDepthTexture_TexelSize]
//   Float 172 [_FogAlpha]
//   Vector 176 [_Color] 3
//   Vector 192 [_FogDistance]
//   Vector 208 [_FogData]
//   Vector 224 [_FogWindDir] 3
//   Vector 240 [_FogStepping]
//   Vector 272 [_FogAreaPosition] 3
//   Vector 288 [_FogAreaData]
//   Vector 304 [_FogPointLightPosition0] 3
//   Vector 320 [_FogPointLightColor0] 3
//   Vector 336 [_FogPointLightPosition1] 3
//   Vector 352 [_FogPointLightColor1] 3
//   Vector 368 [_FogPointLightPosition2] 3
//   Vector 384 [_FogPointLightColor2] 3
//   Vector 400 [_FogPointLightPosition3] 3
//   Vector 416 [_FogPointLightColor3] 3
//   Vector 432 [_FogPointLightPosition4] 3
//   Vector 448 [_FogPointLightColor4] 3
//   Vector 480 [_SunDir] 3
//   Vector 496 [_SunColor] 3
//   Vector 528 [_FogScatteringData2]
//   Float 544 [_Jitter]
//   Float 560 [dither]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 1
//   SetTexture 1 [_NoiseTex] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:52:17 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[36], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 25
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r23.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a62a18714f888886-ps.txt

mul r23.w, -r23.x, r23.y
mad r24.xyz, -r23.wwww, cb10[0].xyzw, cb1[4].xyzw

mad r0.xyzw, cb0[4].xyxy, l(0.000000, -0.750000, 0.000000, 0.750000), v1.zwzw
sample r1.xyzw, r0.xyxx, t0.xyzw, s1
sample r0.xyzw, r0.zwzz, t0.xyzw, s1
max r0.x, r0.x, r1.x
mad r0.x, cb1[7].x, r0.x, cb1[7].y
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r1.y, -cb0[13].x, r24.y
mov r1.xz, r24.xxzx
mad r0.xyz, v2.xyzx, r0.xxxx, r1.xyzx
add r1.w, r0.y, l(0.000010)
lt r2.xy, cb0[13].yyyy, r1.ywyy
and r2.x, r2.y, r2.x
lt r2.y, r1.y, -cb0[13].y
lt r1.w, r1.w, -cb0[13].y
and r1.w, r1.w, r2.y
or r1.w, r1.w, r2.x
if_z r1.w
  add r0.w, r0.y, l(0.000010)
  add r0.xyz, -r1.xyzx, r0.xwzx
  dp3 r0.w, r0.xyzx, r0.xyzx
  sqrt r0.w, r0.w
  add r2.xyz, r1.xyzx, -cb0[17].xyzx
  div r3.xyz, r0.wwww, r0.xyzx
  div r4.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[18].xyzx
  add r5.xyz, -r2.xyzx, -r4.xyzx
  mul r5.xyz, r3.xyzx, r5.xyzx
  add r2.xyz, -r2.xyzx, r4.xyzx
  mul r2.xyz, r2.xyzx, r3.xyzx
  min r4.xyz, r5.xyzx, r2.xyzx
  max r4.xy, r4.yzyy, r4.xxxx
  max r1.w, r4.y, r4.x
  max r1.w, r1.w, l(0.000000)
  max r2.xyz, r5.xyzx, r2.xyzx
  min r2.xy, r2.yzyy, r2.xxxx
  min r2.x, r2.y, r2.x
  min r2.y, r0.w, cb0[12].z
  min r2.x, r2.y, r2.x
  add r2.x, -r1.w, r2.x
  lt r2.z, l(0.000000), r2.x
  if_nz r2.z
    div r3.xyz, r1.wwww, r3.xyzx
    add r1.xyz, r1.xyzx, r3.xyzx
    div r2.zw, cb0[18].xxxz, cb0[13].wwww
    log r3.x, r2.x
    mul r3.x, r3.x, l(0.693147182)
    max r3.x, r3.x, l(0.000000)
    mad r3.x, r3.x, cb0[15].x, l(0.100000)
    mul r3.x, r3.x, cb0[13].z
    mul_sat r3.y, r2.y, cb0[15].y
    mul r3.x, r3.y, r3.x
    add r1.w, -r1.w, r2.y
    max r2.y, r3.x, l(0.010000)
    mul r3.xyz, r0.xyzx, r2.yyyy
    div r3.xyz, r3.xyzx, r0.wwww
    div r2.y, r2.x, r2.y
    add r4.xyz, r1.xyzx, -cb0[19].xyzx
    add r5.xyz, r1.xyzx, -cb0[21].xyzx
    add r6.xyz, r1.xyzx, -cb0[23].xyzx
    add r7.xyz, r1.xyzx, -cb0[25].xyzx
    add r8.xyz, r1.xyzx, -cb0[27].xyzx
    mul r9.xz, r3.xxzx, cb0[13].wwww
    mul r3.w, cb0[13].z, cb0[13].y
    div r9.y, r3.y, r3.w
    add r1.xz, r1.xxzx, cb0[14].xxzx
    mul r1.xz, r1.xxzx, cb0[13].wwww
    div r1.y, r1.y, r3.w
    add r10.xy, cb0[14].xzxx, cb0[17].xzxx
    add r10.zw, cb0[14].xxxz, r24.xxxz
    frc r3.w, cb0[35].x
    mad r2.y, r3.w, cb0[34].x, r2.y
    ge r1.w, r2.x, r1.w
    mov r11.xyzw, l(0,0,0,0)
    mov r12.xyz, r4.xyzx
    mov r13.xyz, r5.xyzx
    mov r14.xyz, r6.xyzx
    mov r15.xyz, r7.xyzx
    mov r16.xyz, r8.xyzx
    mov r2.x, r2.y
    mov r18.xyz, r1.xyzx
    mov r17.xyzw, l(0,0,0,0)
    loop
      ge r3.w, l(1.000000), r2.x
      breakc_nz r3.w
      mad r19.xy, r10.xyxx, cb0[13].wwww, -r18.xzxx
      mul r19.xy, r2.zwzz, |r19.xyxx|
      max r3.w, r19.y, r19.x
      sample_l r19.xyzw, r18.xzxx, t1.xyzw, s0, l(0.000000)
      mad r3.w, r3.w, cb0[18].w, |r18.y|
      add r3.w, -r3.w, r19.w
      mad r20.xy, r10.zwzz, cb0[13].wwww, -r18.xzxx
      dp2 r4.w, r20.xyxx, r20.xyxx
      add r4.w, -r4.w, cb0[12].x
      max r4.w, r4.w, l(0.000000)
      mad r3.w, -r4.w, cb0[12].y, r3.w
      lt r4.w, l(0.000000), r3.w
      if_nz r4.w
        add r4.w, -r3.w, l(1.000000)
        mul r20.xyz, r4.wwww, cb0[11].xyzx
        mul r21.w, r3.w, l(0.400000)
        dp3 r3.w, r12.xyzx, r12.xyzx
        div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
        dp3 r4.w, r13.xyzx, r13.xyzx
        div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
        dp3 r5.w, r14.xyzx, r14.xyzx
        div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
        dp3 r6.w, r15.xyzx, r15.xyzx
        div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
        dp3 r7.w, r16.xyzx, r16.xyzx
        div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
        mul r22.xyz, r6.wwww, cb0[26].xyzx
        mad r22.xyz, cb0[28].xyzx, r7.wwww, r22.xyzx
        mad r22.xyz, cb0[24].xyzx, r5.wwww, r22.xyzx
        mad r22.xyz, cb0[22].xyzx, r4.wwww, r22.xyzx
        mad r22.xyz, cb0[20].xyzx, r3.wwww, r22.xyzx
        mad r19.xyz, r22.xyzx, r21.wwww, r19.xyzx
        mul r19.xyz, r21.wwww, r19.xyzx
        mul r21.xyz, r19.xyzx, r20.xyzx
        add r3.w, -r17.w, l(1.000000)
        mad r19.xyzw, r21.xyzw, r3.wwww, r17.xyzw
        lt r3.w, l(0.990000), r19.w
        if_nz r3.w
          mov r11.xyzw, r21.xyzw
          mov r17.xyzw, r19.xyzw
          break
        endif
        mov r11.xyzw, r21.xyzw
        mov r17.xyzw, r19.xyzw
      endif
      add r12.xyz, r3.xyzx, r12.xyzx
      add r13.xyz, r3.xyzx, r13.xyzx
      add r14.xyz, r3.xyzx, r14.xyzx
      add r15.xyz, r3.xyzx, r15.xyzx
      add r16.xyz, r3.xyzx, r16.xyzx
      add r2.x, r2.x, l(-1.000000)
      add r18.xyz, r9.xyzx, r18.xyzx
    endloop
    lt r1.x, r17.w, l(0.990000)
    and r1.xw, r1.xxxw, l(0x3f800000, 0, 0, 0x3f800000)
    add r1.y, -r17.w, l(1.000000)
    mul r1.z, r2.x, r1.w
    mul r1.x, r1.y, r1.x
    mul r1.x, r1.z, r1.x
    mad r1.xyzw, r11.xyzw, r1.xxxx, r17.xyzw
    div r0.xyz, r0.xyzx, r0.wwww
    dp3 r0.x, r0.xyzx, cb0[30].xyzx
    mul r0.x, r0.x, cb0[33].w
    max r0.x, r0.x, l(0.000000)
    mul r0.x, r0.x, r0.x
    mul r0.x, r0.x, r0.x
    mul r0.x, r0.x, r0.x
    mul r0.x, r1.w, r0.x
    add r0.yzw, -r1.xxyz, cb0[31].xxyz
    mad r1.xyz, r0.xxxx, r0.yzwy, r1.xyzx
    mul o0.xyzw, r1.xyzw, cb0[10].wwww
  else
    mov o0.xyzw, l(0,0,0,0)
  endif
else
  mov o0.xyzw, l(0,0,0,0)
endif
ret
// Approximately 0 instruction slots used