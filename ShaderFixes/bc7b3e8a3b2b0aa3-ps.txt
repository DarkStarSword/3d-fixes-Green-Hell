// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed bc7b3e8a3b2b0aa3-ps.txt
// 3DMigoto: bc7b3e8a3b2b0aa3 |    Unity headers extracted from NatureManufacture Shaders_Water_Water Swamp Tesseled Vertex Color Flow
//    Shader "NatureManufacture Shaders/Water/Water Swamp Tesseled Vertex Color Flow" {
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from NatureManufacture Shaders_Water_Water Swamp Tesseled Vertex Color Flow:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 201802150 416 23 8
//   undeciphered1a: 15
//   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
//   undeciphered2: 1 12 6 11 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 384
//   Vector 32 [_LightColor0]
//   ScalarInt 68 [_UVVDirection1UDirection0]
//   Vector 72 [_WaterMixSpeed] 2
//   Vector 80 [_WaterNormal_ST]
//   Float 96 [_GlobalTiling]
//   Vector 100 [_WaterMainSpeed] 2
//   Float 108 [_NormalScale]
//   Float 112 [_DetailNormalScale]
//   Vector 128 [_DetailAlbedo_ST]
//   Vector 144 [_Noise_ST]
//   Float 160 [_DetailNoisePower]
//   Float 164 [_Detail2NormalScale]
//   Vector 176 [_Detail2Albedo_ST]
//   Float 192 [_Detail2NoisePower]
//   Float 196 [_CascadeAngle]
//   Float 200 [_CascadeAngleFalloff]
//   Float 204 [_Distortion]
//   Vector 208 [_DeepColor]
//   Vector 224 [_ShalowColor]
//   Float 240 [_ShalowDepth]
//   Float 244 [_ShalowFalloff]
//   Vector 256 [_DetailAlbedoColor]
//   Vector 272 [_Detail2AlbedoColor]
//   Float 288 [_WaterSpecularFar]
//   Float 292 [_WaterSpecularClose]
//   Float 296 [_WaterSpecularThreshold]
//   Float 300 [_DetailSpecular]
//   Float 304 [_Detail2Specular]
//   Float 308 [_WaterSmoothness]
//   Float 312 [_DetailSmoothness]
//   Float 316 [_Detail2Smoothness]
//   Float 320 [_WaterAOPower]
//   Float 324 [_DetailAOPower]
//   Float 328 [_Detail2AOPower]
//   Float 332 [_WaterDepth]
//   Float 336 [_WaterFalloffBorder]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_WaterNormal] 2D 2
//   SetTexture 1 [_DetailNormal] 2D 4
//   SetTexture 2 [_DetailAlbedo] 2D 3
//   SetTexture 3 [_Noise] 2D 5
//   SetTexture 4 [_Detail2Normal] 2D 7
//   SetTexture 5 [_Detail2Albedo] 2D 6
//   SetTexture 6 [_WaterGrab] 2D 8
//   SetTexture 7 [_CameraDepthTexture] 2D 9
//   SetTexture 8 [_Detail1G_Sm_Detail_2_A_Sm] 2D 10
//   SetTexture 9 [unity_SpecCube0] CUBE 0
//   SetTexture 10 [unity_SpecCube1] CUBE -1
//   SetTexture 11 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityReflectionProbes" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:04:26 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
// COLOR                    0   xyzw        6     NONE   float   xyzw
// TEXCOORD                 5   xyz         7     NONE   float   xyz
// TEXCOORD                 6      w        7     NONE   float      w
// TEXCOORD                 8   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[22], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texturecube (float,float,float,float) t9
dcl_resource_texturecube (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t11
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyw
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyz
dcl_input_ps linear v7.w
dcl_output o0.xyzw
dcl_temps 17
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r15.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed bc7b3e8a3b2b0aa3-ps.txt

mul r15.w, -r15.x, r15.y
mad r16.xyz, -r15.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r16.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r3.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[6].x
mul r3.zw, r1.wwww, r3.xxxy
itof r2.w, cb0[4].y
eq r2.w, r2.w, l(1.000000)
movc r4.xy, r2.wwww, cb0[4].zwzz, cb0[4].wzww
mad r3.zw, cb1[0].yyyy, r4.xxxy, r3.zzzw
movc r4.xy, r2.wwww, cb0[6].yzyy, cb0[6].zyzz
mul r4.xy, r4.xyxx, v1.zwzz
mul r2.w, cb1[0].y, l(0.045000)
frc r2.w, r2.w
mul r4.zw, r2.wwww, r4.xxxy
mad r5.xy, r3.xyxx, r1.wwww, r4.zwzz
mad r5.z, cb1[0].y, l(0.045000), l(0.500000)
frc r5.z, r5.z
mul r4.xy, r4.xyxx, r5.zzzz
mad r3.xy, r3.xyxx, r1.wwww, r4.xyxx
add r2.w, r2.w, l(-0.500000)
add r2.w, r2.w, r2.w
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyxx, t0.xywz, s2
mul r5.x, r5.z, r5.x
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r5.xy, r5.xyxx, cb0[6].wwww
dp2 r5.w, r5.xyxx, r5.xyxx
min r5.w, r5.w, l(1.000000)
add r5.w, -r5.w, l(1.000000)
sqrt r5.z, r5.w
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r3.xyxx, t0.xywz, s2
mul r6.x, r6.z, r6.x
mad r3.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xy, r3.xyxx, cb0[6].wwww
dp2 r3.x, r6.xyxx, r6.xyxx
min r3.x, r3.x, l(1.000000)
add r3.x, -r3.x, l(1.000000)
sqrt r6.z, r3.x
add r6.xyz, -r5.xyzx, r6.xyzx
mad r5.xyz, |r2.wwww|, r6.xyzx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t0.xywz, s2
mul r3.w, cb0[6].w, l(1.200000)
mul r3.x, r3.z, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xy, r3.wwww, r3.xyxx
dp2 r3.z, r6.xyxx, r6.xyxx
min r3.z, r3.z, l(1.000000)
add r3.z, -r3.z, l(1.000000)
sqrt r3.z, r3.z
mad r6.xy, r3.xyxx, r3.wwww, r5.xyxx
mul r6.z, r5.z, r3.z
dp3 r3.x, r6.xyzx, r6.xyzx
rsq r3.x, r3.x
mul r3.yzw, r3.xxxx, r6.xxyz
mad r5.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
mad r5.zw, r5.xxxy, r1.wwww, r4.zzzw
mad r5.xy, r5.xyxx, r1.wwww, r4.xyxx
sample_indexable(texture2d)(float,float,float,float) r7.xyz, r5.zwzz, t1.xywz, s4
mul r7.x, r7.z, r7.x
mad r7.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r7.xy, r7.xyxx, cb0[7].xxxx
dp2 r6.w, r7.xyxx, r7.xyxx
min r6.w, r6.w, l(1.000000)
add r6.w, -r6.w, l(1.000000)
sqrt r7.z, r6.w
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r5.xyxx, t1.xywz, s4
mul r8.x, r8.z, r8.x
mad r8.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r8.xy, r8.xyxx, cb0[7].xxxx
dp2 r6.w, r8.xyxx, r8.xyxx
min r6.w, r6.w, l(1.000000)
add r6.w, -r6.w, l(1.000000)
sqrt r8.z, r6.w
add r8.xyz, -r7.xyzx, r8.xyzx
mad r7.xyz, |r2.wwww|, r8.xyzx, r7.xyzx
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, r5.zwzz, t2.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, r5.xyxx, t2.xyzw, s3
add r9.xyzw, -r8.xyzw, r9.xyzw
mad r8.xyzw, |r2.wwww|, r9.xyzw, r8.xyzw
mad r9.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
mad r9.zw, r9.xxxy, r1.wwww, r4.zzzw
mad r9.xy, r9.xyxx, r1.wwww, r4.xyxx
sample_indexable(texture2d)(float,float,float,float) r6.w, r9.zwzz, t3.xyzw, s5
sample_indexable(texture2d)(float,float,float,float) r7.w, r9.xyxx, t3.xyzw, s5
add r7.w, -r6.w, r7.w
mad r6.w, |r2.w|, r7.w, r6.w
log r7.w, r6.w
mul r7.w, r7.w, cb0[10].x
exp r7.w, r7.w
mul r7.w, r7.w, l(5.000000)
min r7.w, r7.w, l(1.000000)
mad r9.x, r7.w, l(-2.000000), l(3.000000)
mul r7.w, r7.w, r7.w
mul r7.w, r7.w, r9.x
min r7.w, r7.w, l(1.000000)
mul r7.w, r8.w, r7.w
mad r7.xyz, -r6.xyzx, r3.xxxx, r7.xyzx
mad r9.xyz, r7.wwww, r7.xyzx, r3.yzwy
mad r10.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
mad r4.zw, r10.xxxy, r1.wwww, r4.zzzw
mad r4.xy, r10.xyxx, r1.wwww, r4.xyxx
sample_indexable(texture2d)(float,float,float,float) r10.xyz, r4.zwzz, t4.xywz, s7
mul r10.x, r10.z, r10.x
mad r10.xy, r10.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r10.xy, r10.xyxx, cb0[10].yyyy
dp2 r1.w, r10.xyxx, r10.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r10.z, r1.w
sample_indexable(texture2d)(float,float,float,float) r11.xyz, r4.xyxx, t4.xywz, s7
mul r11.x, r11.z, r11.x
mad r11.xy, r11.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r11.xy, r11.xyxx, cb0[10].yyyy
dp2 r1.w, r11.xyxx, r11.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r11.z, r1.w
add r11.xyz, -r10.xyzx, r11.xyzx
mad r10.xyz, |r2.wwww|, r11.xyzx, r10.xyzx
sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r4.zwzz, t5.xyzw, s6
sample_indexable(texture2d)(float,float,float,float) r12.xyzw, r4.xyxx, t5.xyzw, s6
add r12.xyzw, -r11.xyzw, r12.xyzw
mad r11.xyzw, |r2.wwww|, r12.xyzw, r11.xyzw
max r1.w, r6.w, r6.w
log r1.w, r1.w
mul r1.w, r1.w, cb0[12].x
exp r1.w, r1.w
mul r1.w, r1.w, l(2.12765956)
min r1.w, r1.w, l(1.000000)
mad r6.w, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r6.w
min r1.w, r1.w, l(1.000000)
mul r1.w, r11.w, r1.w
add r12.xyz, -r9.xyzx, r10.xyzx
mad r9.xyz, r1.wwww, r12.xyzx, r9.xyzx
mad r7.xyz, r8.wwww, r7.xyzx, r3.yzwy
add r7.xyz, -r9.xyzx, r7.xyzx
mad r7.xyz, v6.xxxx, r7.xyzx, r9.xyzx
mad r10.xyz, -r6.xyzx, r3.xxxx, r10.xyzx
mad r3.yzw, r11.wwww, r10.xxyz, r3.yyzw
add r3.yzw, -r7.xxyz, r3.yyzw
mad r3.yzw, v6.yyyy, r3.yyzw, r7.xxyz
mad r7.xyz, r6.xyzx, r3.xxxx, -r3.yzwy
mad r3.yzw, v6.zzzz, r7.xxyz, r3.yyzw
mov_sat r6.w, v3.z
mul r7.x, cb0[12].y, l(0.0222222228)
mad r7.y, -cb0[12].y, l(0.0222222228), l(1.000000)
add r6.w, r6.w, -r7.y
max r6.w, r6.w, l(0.000000)
min r6.w, r6.w, l(2.000000)
div r7.x, l(1.000000, 1.000000, 1.000000, 1.000000), r7.x
mul_sat r6.w, r6.w, r7.x
add r6.w, -r6.w, l(1.000000)
log r6.w, r6.w
mul r6.w, r6.w, cb0[12].z
exp r6.w, r6.w
min r6.w, r6.w, l(1.000000)
mad r6.xyz, r6.xyzx, r3.xxxx, -r3.yzwy
mad r3.xyz, r6.wwww, r6.xyzx, r3.yzwy
add r10.xyw, v5.wxww, l(9.999999960E-012, 0.000000, 0.000000, 9.999999960E-012)
mul r3.w, r10.x, l(0.500000)
mad r6.x, -r10.x, l(0.500000), v5.y
mad r10.z, -r6.x, cb1[5].x, r3.w
div r6.xyz, r10.yzwy, r10.xxxx
div r6.xy, r6.xyxx, r6.zzzz
mad r6.xy, r9.xyxx, cb0[12].wwww, r6.xyxx
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t6.xyzw, s8
div r7.xy, v5.xyxx, r10.xxxx
sample_indexable(texture2d)(float,float,float,float) r3.w, r7.xyxx, t7.yzwx, s9
mad r3.w, cb1[7].z, r3.w, cb1[7].w
div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
add r3.w, -r10.x, r3.w
add r7.x, |r3.w|, cb0[15].x
log r7.x, r7.x
mul r7.x, r7.x, cb0[15].y
exp r7.x, r7.x
min r7.x, r7.x, l(1.000000)
add r9.xyz, -cb0[13].xyzx, cb0[14].xyzx
mad r9.xyz, r7.xxxx, r9.xyzx, cb0[13].xyzx
add r7.y, -r7.x, l(1.000000)
add r9.xyz, -r6.xyzx, r9.xyzx
mad r6.xyz, r7.yyyy, r9.xyzx, r6.xyzx
mul r9.xyz, r8.xyzx, cb0[16].xyzx
mad r8.xyz, r8.xyzx, cb0[16].xyzx, -r6.xyzx
mad r10.xyz, r7.wwww, r8.xyzx, r6.xyzx
mad r12.xyz, r11.xyzx, cb0[17].xyzx, -r10.xyzx
mad r10.xyz, r1.wwww, r12.xyzx, r10.xyzx
mad r8.xyz, r8.wwww, r8.xyzx, r6.xyzx
add r8.xyz, -r10.xyzx, r8.xyzx
mad r8.xyz, v6.xxxx, r8.xyzx, r10.xyzx
mad r10.xyz, r11.xyzx, cb0[17].xyzx, -r6.xyzx
mad r10.xyz, r11.wwww, r10.xyzx, r6.xyzx
add r10.xyz, -r8.xyzx, r10.xyzx
mad r8.xyz, v6.yyyy, r10.xyzx, r8.xyzx
add r10.xyz, r6.xyzx, -r8.xyzx
mad r8.xyz, v6.zzzz, r10.xyzx, r8.xyzx
add r6.xyz, r6.xyzx, -r8.xyzx
mad r6.xyz, r6.wwww, r6.xyzx, r8.xyzx
log r7.x, r7.x
mul r7.x, r7.x, cb0[18].z
exp r7.x, r7.x
add r7.y, -cb0[18].x, cb0[18].y
mad r7.x, r7.x, r7.y, cb0[18].x
mul r8.xyz, r9.xyzx, l(0.300000, 0.301960796, 0.301960796, 0.000000)
max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r8.xyz, r8.xyzx, l(0.500000, 0.501960814, 0.501960814, 0.000000)
mad r8.xyz, cb0[18].wwww, r8.xyzx, -r7.xxxx
mad r9.xyz, r7.wwww, r8.xyzx, r7.xxxx
mul r10.xyz, r11.xyzx, l(0.300000, 0.301960796, 0.301960796, 0.000000)
max r10.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r10.xyz, r10.xyzx, l(0.500000, 0.501960814, 0.501960814, 0.000000)
mad r11.xyz, cb0[19].xxxx, r10.xyzx, -r9.xyzx
mad r9.xyz, r1.wwww, r11.xyzx, r9.xyzx
mad r8.xyz, r8.wwww, r8.xyzx, r7.xxxx
add r8.xyz, -r9.xyzx, r8.xyzx
mad r8.xyz, v6.xxxx, r8.xyzx, r9.xyzx
mad r9.xyz, cb0[19].xxxx, r10.xyzx, -r7.xxxx
mad r9.xyz, r11.wwww, r9.xyzx, r7.xxxx
add r9.xyz, -r8.xyzx, r9.xyzx
mad r8.xyz, v6.yyyy, r9.xyzx, r8.xyzx
add r9.xyz, r7.xxxx, -r8.xyzx
mad r8.xyz, v6.zzzz, r9.xyzx, r8.xyzx
add r7.xyz, r7.xxxx, -r8.xyzx
mad r7.xyz, r6.wwww, r7.xyzx, r8.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.z, r5.zwzz, t8.xzyw, s10
sample_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t8.yxzw, s10
add r5.x, -r5.z, r5.x
mad r5.x, |r2.w|, r5.x, r5.z
mad r5.x, r5.x, cb0[19].z, -cb0[19].y
mad r5.y, r7.w, r5.x, cb0[19].y
sample_indexable(texture2d)(float,float,float,float) r4.z, r4.zwzz, t8.xywz, s10
sample_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t8.wxyz, s10
add r4.x, -r4.z, r4.x
mad r2.w, |r2.w|, r4.x, r4.z
mad r4.x, r2.w, cb0[19].w, -r5.y
mad r4.x, r1.w, r4.x, r5.y
mad r4.y, r8.w, r5.x, cb0[19].y
add r4.y, -r4.x, r4.y
mad r4.x, v6.x, r4.y, r4.x
mad r2.w, r2.w, cb0[19].w, -cb0[19].y
mad r2.w, r11.w, r2.w, cb0[19].y
add r2.w, -r4.x, r2.w
mad r2.w, v6.y, r2.w, r4.x
add r4.x, -r2.w, cb0[19].y
mad r2.w, v6.z, r4.x, r2.w
add r4.x, -r2.w, cb0[19].y
mad r2.w, r6.w, r4.x, r2.w
add r4.xy, -cb0[20].xxxx, cb0[20].yzyy
mad r4.z, r7.w, r4.x, cb0[20].x
add r4.w, -r4.z, cb0[20].z
mad r1.w, r1.w, r4.w, r4.z
mad r4.x, r8.w, r4.x, cb0[20].x
add r4.x, -r1.w, r4.x
mad r1.w, v6.x, r4.x, r1.w
mad r4.x, r11.w, r4.y, cb0[20].x
add r4.x, -r1.w, r4.x
mad r1.w, v6.y, r4.x, r1.w
add r4.x, -r1.w, cb0[20].x
mad r1.w, v6.z, r4.x, r1.w
add r4.x, -r1.w, cb0[20].x
mad r1.w, r6.w, r4.x, r1.w
log r3.w, |r3.w|
mul r3.w, r3.w, cb0[20].w
exp r3.w, r3.w
min r3.w, r3.w, l(1.000000)
log r3.w, r3.w
mul r3.w, r3.w, cb0[21].x
exp r3.w, r3.w
mul o0.w, r3.w, v6.w
eq r3.w, cb5[0].x, l(1.000000)
if_nz r3.w
  eq r4.x, cb5[0].y, l(1.000000)
  mul r4.yzw, v3.wwww, cb5[2].xxyz
  mad r4.yzw, cb5[1].xxyz, v2.wwww, r4.yyzw
  mad r4.yzw, cb5[3].xxyz, v4.wwww, r4.yyzw
  add r4.yzw, r4.yyzw, cb5[4].xxyz
  movc r4.xyz, r4.xxxx, r4.yzwy, r0.xyzx
  add r4.xyz, r4.xyzx, -cb5[6].xyzx
  mul r4.yzw, r4.xxyz, cb5[5].xxyz
  mad r4.y, r4.y, l(0.250000), l(0.750000)
  mad r5.x, cb5[0].z, l(0.500000), l(0.750000)
  max r4.x, r4.y, r5.x
  sample_indexable(texture3d)(float,float,float,float) r4.xyzw, r4.xzwx, t11.xyzw, s1
else
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r4.x, r4.xyzw, cb2[46].xyzw
dp3 r5.x, v2.xyzx, r3.xyzx
dp3 r5.y, v3.xyzx, r3.xyzx
dp3 r5.z, v4.xyzx, r3.xyzx
dp3 r3.x, r5.xyzx, r5.xyzx
rsq r3.x, r3.x
mul r5.xyz, r3.xxxx, r5.xyzx
add r3.x, -r2.w, l(1.000000)
dp3 r3.y, -r2.xyzx, r5.xyzx
add r3.y, r3.y, r3.y
mad r4.yzw, r5.xxyz, -r3.yyyy, -r2.xxyz
mul r8.xyz, r4.xxxx, cb0[2].xyzx
if_nz r3.w
  eq r3.y, cb5[0].y, l(1.000000)
  mul r9.xyz, v3.wwww, cb5[2].xyzx
  mad r9.xyz, cb5[1].xyzx, v2.wwww, r9.xyzx
  mad r9.xyz, cb5[3].xyzx, v4.wwww, r9.xyzx
  add r9.xyz, r9.xyzx, cb5[4].xyzx
  movc r3.yzw, r3.yyyy, r9.xxyz, r0.xxyz
  add r3.yzw, r3.yyzw, -cb5[6].xxyz
  mul r9.yzw, r3.yyzw, cb5[5].xxyz
  mul r3.y, r9.y, l(0.250000)
  mul r3.z, cb5[0].z, l(0.500000)
  mad r3.w, -cb5[0].z, l(0.500000), l(0.250000)
  max r3.y, r3.z, r3.y
  min r9.x, r3.w, r3.y
  sample_indexable(texture3d)(float,float,float,float) r10.xyzw, r9.xzwx, t11.xyzw, s1
  add r3.yzw, r9.xxzw, l(0.000000, 0.250000, 0.000000, 0.000000)
  sample_indexable(texture3d)(float,float,float,float) r11.xyzw, r3.yzwy, t11.xyzw, s1
  add r3.yzw, r9.xxzw, l(0.000000, 0.500000, 0.000000, 0.000000)
  sample_indexable(texture3d)(float,float,float,float) r9.xyzw, r3.yzwy, t11.xyzw, s1
  mov r5.w, l(1.000000)
  dp4 r10.x, r10.xyzw, r5.xyzw
  dp4 r10.y, r11.xyzw, r5.xyzw
  dp4 r10.z, r9.xyzw, r5.xyzw
else
  mov r5.w, l(1.000000)
  dp4 r10.x, cb2[39].xyzw, r5.xyzw
  dp4 r10.y, cb2[40].xyzw, r5.xyzw
  dp4 r10.z, cb2[41].xyzw, r5.xyzw
endif
add r3.yzw, r10.xxyz, v7.xxyz
max r3.yzw, r3.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r4.x, l(0.000000), cb4[2].w
if_nz r4.x
  dp3 r4.x, r4.yzwy, r4.yzwy
  rsq r4.x, r4.x
  mul r9.xyz, r4.xxxx, r4.yzwy
  add r10.xyz, -r0.xyzx, cb4[0].xyzx
  div r10.xyz, r10.xyzx, r9.xyzx
  add r11.xyz, -r0.xyzx, cb4[1].xyzx
  div r11.xyz, r11.xyzx, r9.xyzx
  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  min r4.x, r10.y, r10.x
  min r4.x, r10.z, r4.x
  add r10.xyz, r0.xyzx, -cb4[2].xyzx
  mad r9.xyz, r9.xyzx, r4.xxxx, r10.xyzx
else
  mov r9.xyz, r4.yzwy
endif
mad r4.x, -r3.x, l(0.700000), l(1.700000)
mul r4.x, r3.x, r4.x
mul r4.x, r4.x, l(6.000000)
sample_l_indexable(texturecube)(float,float,float,float) r9.xyzw, r9.xyzx, t9.xyzw, s0, r4.x
add r5.w, r9.w, l(-1.000000)
mad r5.w, cb4[3].w, r5.w, l(1.000000)
log r5.w, r5.w
mul r5.w, r5.w, cb4[3].y
exp r5.w, r5.w
mul r5.w, r5.w, cb4[3].x
mul r10.xyz, r9.xyzx, r5.wwww
lt r6.w, cb4[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb4[6].w
  if_nz r6.w
    dp3 r6.w, r4.yzwy, r4.yzwy
    rsq r6.w, r6.w
    mul r11.xyz, r4.yzwy, r6.wwww
    add r12.xyz, -r0.xyzx, cb4[4].xyzx
    div r12.xyz, r12.xyzx, r11.xyzx
    add r13.xyz, -r0.xyzx, cb4[5].xyzx
    div r13.xyz, r13.xyzx, r11.xyzx
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
    min r6.w, r12.y, r12.x
    min r6.w, r12.z, r6.w
    add r0.xyz, r0.xyzx, -cb4[6].xyzx
    mad r4.yzw, r11.xxyz, r6.wwww, r0.xxyz
  endif
  sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r4.yzwy, t10.xyzw, s0, r4.x
  add r0.x, r4.w, l(-1.000000)
  mad r0.x, cb4[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb4[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r4.xyzx, r0.xxxx
  mad r4.xyz, r5.wwww, r9.xyzx, -r0.xyzx
  mad r10.xyz, cb4[1].wwww, r4.xyzx, r0.xyzx
endif
mul r0.xyz, r1.wwww, r10.xyzx
max r4.x, r7.y, r7.x
max r4.x, r7.z, r4.x
add r4.x, -r4.x, l(1.000000)
mul r4.yzw, r4.xxxx, r6.xxyz
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r5.xyzx, r2.xyzx
dp3_sat r2.x, r5.xyzx, cb2[0].xyzx
dp3_sat r2.y, r5.xyzx, r1.xyzx
dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
add r1.y, r1.x, r1.x
mul r1.y, r1.x, r1.y
mad r1.y, r1.y, r3.x, l(-0.500000)
add r1.z, -r2.x, l(1.000000)
mul r2.z, r1.z, r1.z
mul r2.z, r2.z, r2.z
mul r1.z, r1.z, r2.z
mad r1.z, r1.y, r1.z, l(1.000000)
add r2.z, -|r0.w|, l(1.000000)
mul r5.x, r2.z, r2.z
mul r5.x, r5.x, r5.x
mul r2.z, r2.z, r5.x
mad r1.y, r1.y, r2.z, l(1.000000)
mul r1.y, r1.y, r1.z
mul r1.y, r2.x, r1.y
mul r1.z, r3.x, r3.x
max r1.z, r1.z, l(0.002000)
add r3.x, -r1.z, l(1.000000)
mad r5.x, |r0.w|, r3.x, r1.z
mad r3.x, r2.x, r3.x, r1.z
mul r0.w, |r0.w|, r3.x
mad r0.w, r2.x, r5.x, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r3.x, r1.z, r1.z
mad r5.x, r2.y, r3.x, -r2.y
mad r2.y, r5.x, r2.y, l(1.000000)
mul r3.x, r3.x, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r3.x, r2.y
mul r0.w, r0.w, r2.y
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.x, r0.w
max r0.w, r0.w, l(0.000000)
mad r1.z, r1.z, r1.z, l(1.000000)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
dp3 r2.x, r7.xyzx, r7.xyzx
ne r2.x, r2.x, l(0.000000)
and r2.x, r2.x, l(0x3f800000)
mul r0.w, r0.w, r2.x
add r2.x, -r4.x, l(1.000000)
add_sat r2.x, r2.x, r2.w
mul r5.xyz, r1.yyyy, r8.xyzx
mad r3.xyz, r3.yzwy, r1.wwww, r5.xyzx
mul r5.xyz, r8.xyzx, r0.wwww
add r0.w, -r1.x, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.xyzw, r0.xyzw, r1.zzzx
add r1.xyw, -r7.xyxz, l(1.000000, 1.000000, 0.000000, 1.000000)
mad r1.xyw, r1.xyxw, r0.wwww, r7.xyxz
mul r1.xyw, r1.xyxw, r5.xyxz
mad r1.xyw, r4.yzyw, r3.xyxz, r1.xyxw
add r2.xyw, -r7.xyxz, r2.xxxx
mad r2.xyz, r2.zzzz, r2.xywx, r7.xyzx
mad r0.xyz, r0.xyzx, r2.xyzx, r1.xywx
div r0.w, v7.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
ret
// Approximately 0 instruction slots used