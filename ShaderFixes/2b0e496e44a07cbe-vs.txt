// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 2b0e496e44a07cbe-vs.txt
// 3DMigoto: 2b0e496e44a07cbe | Matched 2 variants of 1 shaders: Custom/WindLeavesC2
//
//       Unity headers extracted from Custom_WindLeavesC2
//       Shader "Custom/WindLeavesC2" {
//         SubShader 1/2 {
//           LOD 200
//           Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Geometry+200" "RenderType"="Grass" }
//           Pass 1/7 {
//             Name "FORWARD"
//             Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+200" "RenderType"="Grass" "SHADOWSUPPORT"="true" }
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Custom_WindLeavesC2:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201802150 84 0 0
//      undeciphered1a: 5
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "INSTANCING_ON" }
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" "INSTANCING_ON" }
//      undeciphered2: 1 0 6 0 0 0
//      undeciphered3: 255 5 0 0 2 2 1 1 4 5 3 3
//      ConstBuffer "$Globals" 176
//      Float 88 [_WindStrength]
//      Float 92 [_WindFreq]
//      Float 96 [_BendScale]
//      Vector 100 [_WindDir] 2
//      Float 108 [_BranchAmplitude]
//      Float 112 [_DetailAmplitude]
//      Float 116 [_Speed]
//      Float 120 [_DetailFreq]
//      Float 124 [_BranchFreq]
//      Vector 128 [_MainTex_ST]
//      Vector 144 [_BumpMap_ST]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityPerDraw" 176
//      Vector 144 [unity_WorldTransformParams]
//      ConstBuffer "UnityPerFrame" 368
//      Matrix 272 [unity_MatrixVP]
//      ConstBuffer "UnityDrawCallInfo" 16
//      ScalarInt 0 [unity_BaseInstanceID]
//      ConstBuffer "UnityInstancing_PerDraw0" 256
//      Struct 0 [unity_Builtins0Array] 2 128
//      Matrix 0 [unity_ObjectToWorldArray]
//      Matrix 64 [unity_WorldToObjectArray]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "UnityPerFrame" 3
//      BindCB "UnityDrawCallInfo" 4
//      BindCB "UnityInstancing_PerDraw0" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:43:37 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xy
// TEXCOORD                 1   xyzw        4     NONE   float
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float
// COLOR                    0   xyzw        7     NONE   float   xyz
// SV_InstanceID            0   x           8   INSTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   x           6     NONE   float   x
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// SV_InstanceID            0   x           9     NONE    uint   x
//
vs_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[10], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_constantbuffer cb5[16], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v7.xyz
dcl_input_sgv v8.x, instance_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.x
dcl_output o7.xyzw
dcl_output o8.xyzw
dcl_output o9.x
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xy, cb0[5].zzzz, cb0[6].yzyy
mul r0.xy, r0.xyxx, cb0[5].wwww
frc r0.xy, r0.xyxx
mul r0.xy, r0.xyxx, cb1[0].wwww
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-0.500000, -0.500000, 0.000000, 0.000000)
frc r0.xy, r0.xyxx
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r0.zw, |r0.xxxy|, |r0.xxxy|
mad r0.xy, -|r0.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mul r0.xy, r0.xyxx, r0.zwzz
iadd r0.z, v8.x, cb4[0].x
ishl r0.z, r0.z, l(3)
mul r1.xyz, v0.yyyy, cb5[r0.z + 1].xyzx
mad r1.xyz, cb5[r0.z + 0].xyzx, v0.xxxx, r1.xyzx
mad r1.xyz, cb5[r0.z + 2].xyzx, v0.zzzz, r1.xyzx
mad r1.xyz, cb5[r0.z + 3].xyzx, v0.wwww, r1.xyzx
add r1.xyz, r1.xyzx, -cb5[r0.z + 3].xyzx
mad r0.w, r1.y, cb0[6].x, l(1.000000)
mul r0.w, r0.w, r0.w
mad r0.w, r0.w, r0.w, -r0.w
mad r2.xz, r0.xxyx, r0.wwww, r1.xxzx
mov r2.y, r1.y
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r0.xyw, r0.xxxx, r2.xyxz
mul r1.w, v7.x, cb0[7].x
mul r2.xy, r1.wwww, v2.xzxx
dp3 r1.w, cb5[r0.z + 3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r1.w, r1.w, v7.y
dp3 r1.w, r1.xyzx, r1.wwww
dp3 r1.x, r1.xyzx, r1.xyzx
sqrt r1.x, r1.x
add r1.y, r1.w, cb1[0].x
mul r1.yz, r1.yyyy, cb0[7].zzwz
mul r1.yz, r1.yyzy, cb0[7].yyyy
mul r1.yz, r1.yyzy, l(0.000000, 1.975000, 0.793000, 0.000000)
frc r1.yz, r1.yyzy
mad r1.yz, r1.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -0.500000, -0.500000, 0.000000)
frc r1.yz, r1.yyzy
mad r1.yz, r1.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
mul r2.zw, |r1.yyyz|, |r1.yyyz|
mad r1.yz, -|r1.yyzy|, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
mul r1.yz, r1.yyzy, r2.zzwz
add r1.y, r1.z, r1.y
mul r2.xz, r1.yyyy, r2.xxyx
add r1.y, -v7.z, l(1.000000)
mul r1.y, r1.y, cb0[6].w
mul r2.y, r1.z, r1.y
mad r0.xyw, r0.xyxw, r1.xxxx, r2.xyxz
add r0.xyw, r0.xyxw, cb5[r0.z + 3].xyxz
mul r1.xyzw, r0.yyyy, cb5[r0.z + 5].xyzw
mad r1.xyzw, cb5[r0.z + 4].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb5[r0.z + 6].xyzw, r0.wwww, r1.xyzw
add r1.xyzw, r1.xyzw, cb5[r0.z + 7].xyzw
mul r2.xyzw, r1.yyyy, cb5[r0.z + 1].xyzw
mad r2.xyzw, cb5[r0.z + 0].xyzw, r1.xxxx, r2.xyzw
mad r2.xyzw, cb5[r0.z + 2].xyzw, r1.zzzz, r2.xyzw
mad r0.xyw, cb5[r0.z + 3].xyxz, r1.wwww, r2.xyxz
add r1.xyzw, r2.xyzw, cb5[r0.z + 3].xyzw
mul r2.xyzw, r1.yyyy, cb3[18].xyzw
mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 2b0e496e44a07cbe-vs.txt
ne r5.w, r1.w, l(1.0)
if_nz r5.w
  add r5.w, r1.w, -r5.y
  mad r1.x, r5.w, r5.x, r1.x
endif

mad o1.xy, v3.xyxx, cb0[8].xyxx, cb0[8].zwzz
mad o1.zw, v3.xxxy, cb0[9].xxxy, cb0[9].zzzw
mov o2.w, r0.x
dp3 r2.y, v2.xyzx, cb5[r0.z + 4].xyzx
dp3 r2.z, v2.xyzx, cb5[r0.z + 5].xyzx
dp3 r2.x, v2.xyzx, cb5[r0.z + 6].xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r2.xyzx
mul r3.xyz, v1.yyyy, cb5[r0.z + 1].yzxy
mad r3.xyz, cb5[r0.z + 0].yzxy, v1.xxxx, r3.xyzx
mad r3.xyz, cb5[r0.z + 2].yzxy, v1.zzzz, r3.xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
rsq r0.x, r0.x
mul r3.xyz, r0.xxxx, r3.xyzx
mul r4.xyz, r2.xyzx, r3.xyzx
mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
mul r0.x, v1.w, cb2[9].w
mul r4.xyz, r0.xxxx, r4.xyzx
mov o2.y, r4.x
mov o2.x, r3.z
mov o2.z, r2.y
mov o3.w, r0.y
mov o4.w, r0.w
mov o3.x, r3.x
mov o4.x, r3.y
mov o3.z, r2.z
mov o4.z, r2.x
mov o3.y, r4.y
mov o4.y, r4.z
mov o5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
mov o6.x, r1.z
mul r0.x, r1.y, cb1[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mov o7.zw, r1.zzzw
add o7.xy, r0.zzzz, r0.xwxx
mov o8.xyzw, l(0,0,0,0)
mov o9.x, v8.x
ret
// Approximately 0 instruction slots used