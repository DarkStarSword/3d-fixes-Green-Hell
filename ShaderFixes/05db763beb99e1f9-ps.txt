// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 05db763beb99e1f9-ps.txt
// 3DMigoto: 05db763beb99e1f9 |    Unity headers extracted from Amplify_2_layers
//    Shader "Amplify/2_layers" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_2_layers:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 145 8 2
//   undeciphered1a: 9
//   Keywords { "POINT" "SHADOWS_CUBE" "FOG_LINEAR" }
//   undeciphered2: 1 9 8 9 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 160
//   Vector 32 [_LightColor0]
//   Vector 128 [_MASK_ST]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 16 [_LightPositionRange]
//   Vector 32 [_LightProjectionParams]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   ConstBuffer "Amplify2_layers" 32
//   Float 0 [_detail_normal_intensity]
//   Float 4 [_detail_normal_tiling]
//   Float 8 [_smoothness]
//   Float 12 [_Layer2Tiling]
//   Float 16 [_Normal1Intensity]
//   Float 20 [_Layer1Tiling]
//   Float 24 [_Normal2internsity]
//   SetTexture 0 [_MASK] 2D 5
//   SetTexture 1 [_Normal1] 2D 3
//   SetTexture 2 [_Normal2] 2D 4
//   SetTexture 3 [_detail_normal] 2D 6
//   SetTexture 4 [_Albedo1] 2D 7
//   SetTexture 5 [_Albedo2] 2D 8
//   SetTexture 6 [_LightTexture0] 2D 2
//   SetTexture 7 [unity_ProbeVolumeSH] 3D 0
//   SetTexture 8 [_ShadowMapTexture] CUBE 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityProbeVolume" 6
//   BindCB "Amplify2_layers" 7
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:26:05 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 7     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyz         6     NONE   float
// TEXCOORD                 6   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_constantbuffer cb7[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texturecube (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 05db763beb99e1f9-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v5.xyzx, r10.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r2.xyzx
mul r4.xy, v1.xyxx, cb7[1].yyyy
mul r5.xyzw, v1.xyxy, cb7[0].wwyy
mad r4.zw, v1.xxxy, cb0[8].xxxy, cb0[8].zzzw
sample r6.xyzw, r4.zwzz, t0.xyzw, s5
sample r7.xyzw, r4.xyxx, t1.xyzw, s3
mul r7.x, r7.w, r7.x
mad r4.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r7.xy, r4.zwzz, cb7[1].xxxx
dp2 r1.w, r7.xyxx, r7.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r7.z, r1.w
sample r8.xyzw, r5.xyxx, t2.xyzw, s4
mul r8.x, r8.w, r8.x
mad r4.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r8.xy, r4.zwzz, cb7[1].zzzz
dp2 r1.w, r8.xyxx, r8.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r8.z, r1.w
add r6.yzw, -r7.xxyz, r8.xxyz
mad r6.yzw, r6.xxxx, r6.yyzw, r7.xxyz
sample r7.xyzw, r5.zwzz, t3.xyzw, s6
mul r7.x, r7.w, r7.x
mad r4.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r5.zw, r4.zzzw, cb7[0].xxxx
dp2 r1.w, r5.zwzz, r5.zwzz
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.w, r1.w
mad r7.xy, r4.zwzz, cb7[0].xxxx, r6.yzyy
mul r7.z, r1.w, r6.w
dp3 r1.w, r7.xyzx, r7.xyzx
rsq r1.w, r1.w
mul r6.yzw, r1.wwww, r7.xxyz
sample r4.xyzw, r4.xyxx, t4.xyzw, s7
sample r5.xyzw, r5.xyxx, t5.xyzw, s8
add r5.xyz, -r4.xyzx, r5.xyzx
mad r4.xyz, r6.xxxx, r5.xyzx, r4.xyzx
mul r5.xyz, v5.yyyy, cb0[5].xyzx
mad r5.xyz, cb0[4].xyzx, v5.xxxx, r5.xyzx
mad r5.xyz, cb0[6].xyzx, v5.zzzz, r5.xyzx
add r5.xyz, r5.xyzx, cb0[7].xyzx
mov r7.x, cb4[9].z
mov r7.y, cb4[10].z
mov r7.z, cb4[11].z
dp3 r1.w, r2.xyzx, r7.xyzx
add r2.xyz, v5.xyzx, -cb3[25].xyzx
dp3 r2.x, r2.xyzx, r2.xyzx
sqrt r2.x, r2.x
add r2.x, -r1.w, r2.x
mad r1.w, cb3[25].w, r2.x, r1.w
mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
eq r2.x, cb6[0].x, l(1.000000)
if_nz r2.x
  eq r2.x, cb6[0].y, l(1.000000)
  mul r2.yzw, v5.yyyy, cb6[2].xxyz
  mad r2.yzw, cb6[1].xxyz, v5.xxxx, r2.yyzw
  mad r2.yzw, cb6[3].xxyz, v5.zzzz, r2.yyzw
  add r2.yzw, r2.yyzw, cb6[4].xxyz
  movc r2.xyz, r2.xxxx, r2.yzwy, v5.xyzx
  add r2.xyz, r2.xyzx, -cb6[6].xyzx
  mul r2.yzw, r2.xxyz, cb6[5].xxyz
  mad r2.y, r2.y, l(0.250000), l(0.750000)
  mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
  max r2.x, r2.y, r3.w
  sample r2.xyzw, r2.xzwx, t7.xyzw, s0
else
  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
add r2.yzw, v5.xxyz, -cb2[1].xxyz
max r3.w, |r2.z|, |r2.y|
max r3.w, |r2.w|, r3.w
add r3.w, r3.w, -cb2[2].z
max r3.w, r3.w, l(0.000010)
mul r3.w, r3.w, cb2[2].w
div r3.w, cb2[2].y, r3.w
add r3.w, r3.w, -cb2[2].x
add r3.w, -r3.w, l(1.000000)
sample_c_lz r2.y, r2.yzwy, t8.xxxx, s1, r3.w
add r2.z, -cb3[24].x, l(1.000000)
mad r2.y, r2.y, r2.z, cb3[24].x
add r2.x, -r2.y, r2.x
mad r1.w, r1.w, r2.x, r2.y
dp3 r2.x, r5.xyzx, r5.xyzx
sample r2.xyzw, r2.xxxx, t6.xyzw, s2
mul r1.w, r1.w, r2.x
dp3 r2.x, v2.xyzx, r6.yzwy
dp3 r2.y, v3.xyzx, r6.yzwy
dp3 r2.z, v4.xyzx, r6.yzwy
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mul r5.xyz, r1.wwww, cb0[2].xyzx
mul r4.xyz, r4.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
add r1.w, -cb7[0].z, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r2.xyzx, r3.xyzx
dp3_sat r2.w, r2.xyzx, r1.xyzx
dp3_sat r2.x, r2.xyzx, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r2.w, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
max r0.z, r0.z, l(0.002000)
add r1.x, -r0.z, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r2.w, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r2.w, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r2.x, r0.z, -r2.x
mad r1.x, r1.x, r2.x, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r2.wwww, r0.yyzy
max r0.z, r0.z, l(0.000000)
mul r1.xyz, r0.yyyy, r5.xyzx
mul r0.yzw, r5.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
mad r0.x, r0.x, l(0.960000), l(0.040000)
mul r0.xyz, r0.xxxx, r0.yzwy
mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used