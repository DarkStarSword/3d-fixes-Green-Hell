// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 37488a4f2f11fafa-ps.txt
// 3DMigoto: 37488a4f2f11fafa |    Unity headers extracted from AVP_POM
//    Shader "AVP/POM" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from AVP_POM:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 163 3 4
//   undeciphered1a: 13
//   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" }
//   undeciphered2: 1 8 6 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 240
//   Vector 96 [_LightColor0]
//   Float 128 [_NormalScale]
//   Vector 144 [_Albedo_ST]
//   Float 160 [_Scale]
//   Float 164 [_RefPlane]
//   Float 168 [_CurvFix]
//   Float 172 [_CurvatureU]
//   Float 176 [_CurvatureV]
//   Float 208 [_Metallic_Power]
//   Float 212 [_SmoothnessPower]
//   Matrix 32 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 16 [_LightPositionRange]
//   Vector 32 [_LightProjectionParams]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_HeightMap] 2D 6
//   SetTexture 1 [_Normal] 2D 4
//   SetTexture 2 [_Albedo] 2D 5
//   SetTexture 3 [_Metallic] 2D 7
//   SetTexture 4 [_LightTextureB0] 2D 3
//   SetTexture 5 [_LightTexture0] CUBE 2
//   SetTexture 6 [unity_ProbeVolumeSH] 3D 0
//   SetTexture 7 [_ShadowMapTexture] CUBE 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:49:27 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyz         6     NONE   float
// TEXCOORD                 6   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 37488a4f2f11fafa-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v5.xyzx, r14.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r2.xyzx
mul r4.xyz, r3.yyyy, v3.xyzx
mad r4.xyz, v2.xyzx, r3.xxxx, r4.xyzx
mad r4.xyz, v4.xyzx, r3.zzzz, r4.xyzx
mad r5.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
deriv_rtx r5.zw, r5.xxxy
deriv_rty r6.xy, r5.xyxx
div r4.xy, r4.xyxx, r4.zzzz
mul r4.xy, r4.xyxx, cb0[10].xxxx
mad r4.zw, cb0[10].yyyy, r4.xxxy, r5.xxxy
mul r5.xy, r4.xyxx, l(-0.00781250000, -0.00781250000, 0.000000, 0.000000)
add r1.w, cb0[10].z, l(1.000000)
mov r7.x, cb0[10].w
mov r7.y, cb0[11].x
mov r8.x, l(129)
mov r6.zw, l(0,0,0,0)
mov r7.zw, r5.xxxy
mov r2.w, l(0)
mov r9.xyzw, l(0,1.000000,0,0.992187500)
mov r10.x, l(0)
loop
  ige r3.w, r9.x, l(129)
  breakc_nz r3.w
  mul r11.xy, r7.zwzz, r7.zwzz
  dp2 r2.w, r7.xyxx, r11.xyxx
  add r11.xy, r4.zwzz, r7.zwzz
  sample_d r11.xyzw, r11.xyxx, t0.xyzw, s6, r5.zwzz, r6.xyxx
  add r3.w, -r2.w, l(1.000000)
  mul r10.x, r3.w, r11.x
  lt r11.x, r9.w, r10.x
  iadd r10.y, r9.x, l(1)
  mad r11.yz, r4.xxyx, l(0.000000, -0.00781250000, -0.00781250000, 0.000000), r7.zzwz
  mul r3.w, r1.w, r3.w
  mad r10.w, -r3.w, l(0.00781250000), r9.w
  movc r6.zw, r11.xxxx, r6.zzzw, r7.zzzw
  movc r7.zw, r11.xxxx, r7.zzzw, r11.yyyz
  mov r8.yzw, r9.yyzw
  mov r10.z, r8.w
  movc r9.xyzw, r11.xxxx, r8.xyzw, r10.yzxw
endloop
mov r4.xy, r5.xyxx
mov r7.xy, r6.zwzz
mov r7.zw, l(0,0,0,0)
mov r1.w, l(0.00781250000)
mov r8.xyz, r9.yzwy
mov r8.w, r10.x
mov r3.w, l(0)
loop
  ige r9.x, r3.w, l(10)
  breakc_nz r9.x
  add r9.x, -r8.x, r8.y
  add r10.y, -r8.w, r8.y
  add r10.y, r8.z, r10.y
  add r10.y, -r8.x, r10.y
  div r9.x, r9.x, r10.y
  mul r10.yz, r4.xxyx, r9.xxxx
  mad r7.zw, r9.xxxx, r4.xxxy, r7.xxxy
  mul r10.w, r1.w, r9.x
  mad r11.z, -r9.x, r1.w, r8.x
  add r12.xy, r4.zwzz, r7.zwzz
  sample_d r12.xyzw, r12.xyxx, t0.xyzw, s6, r5.zwzz, r6.xyxx
  lt r12.y, r11.z, r12.x
  add r9.x, -r9.x, l(1.000000)
  mul r12.zw, r4.xxxy, r9.xxxx
  mul r9.x, r1.w, r9.x
  movc r4.xy, r12.yyyy, r10.yzyy, r12.zwzz
  movc r7.xy, r12.yyyy, r7.xyxx, r7.zwzz
  movc r1.w, r12.y, r10.w, r9.x
  mov r11.xy, r8.xyxx
  mov r11.w, r12.x
  mov r8.xy, r11.zwzz
  movc r8.xyzw, r12.yyyy, r11.xyzw, r8.xyzw
  iadd r3.w, r3.w, l(1)
endloop
lt r1.w, l(1.000000), r2.w
discard_nz r1.w
add r4.xy, r4.zwzz, r7.zwzz
sample_d r7.xyzw, r4.xyxx, t1.xyzw, s4, r5.zwzz, r6.xyxx
mul r7.x, r7.w, r7.x
mad r4.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r7.xy, r4.zwzz, cb0[8].xxxx
dp2 r1.w, r7.xyxx, r7.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r7.z, r1.w
sample_d r8.xyzw, r4.xyxx, t2.xyzw, s5, r5.zwzz, r6.xyxx
sample_d r4.xyzw, r4.xyxx, t3.xyzw, s7, r5.zwzz, r6.xyxx
mul r1.w, r4.x, cb0[13].x
mul r4.xyz, v5.yyyy, cb0[3].xyzx
mad r4.xyz, cb0[2].xyzx, v5.xxxx, r4.xyzx
mad r4.xyz, cb0[4].xyzx, v5.zzzz, r4.xyzx
add r4.xyz, r4.xyzx, cb0[5].xyzx
mov r5.x, cb4[9].z
mov r5.y, cb4[10].z
mov r5.z, cb4[11].z
dp3 r2.x, r2.xyzx, r5.xyzx
add r2.yzw, v5.xxyz, -cb3[25].xxyz
dp3 r2.y, r2.yzwy, r2.yzwy
sqrt r2.y, r2.y
add r2.y, -r2.x, r2.y
mad r2.x, cb3[25].w, r2.y, r2.x
mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
eq r2.y, cb5[0].x, l(1.000000)
if_nz r2.y
  eq r2.y, cb5[0].y, l(1.000000)
  mul r5.xyz, v5.yyyy, cb5[2].xyzx
  mad r5.xyz, cb5[1].xyzx, v5.xxxx, r5.xyzx
  mad r5.xyz, cb5[3].xyzx, v5.zzzz, r5.xyzx
  add r5.xyz, r5.xyzx, cb5[4].xyzx
  movc r2.yzw, r2.yyyy, r5.xxyz, v5.xxyz
  add r2.yzw, r2.yyzw, -cb5[6].xxyz
  mul r5.yzw, r2.yyzw, cb5[5].xxyz
  mad r2.y, r5.y, l(0.250000), l(0.750000)
  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  max r5.x, r2.z, r2.y
  sample r5.xyzw, r5.xzwx, t6.xyzw, s0
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.y, r5.xyzw, cb2[46].xyzw
add r5.xyz, v5.xyzx, -cb2[1].xyzx
max r2.z, |r5.y|, |r5.x|
max r2.z, |r5.z|, r2.z
add r2.z, r2.z, -cb2[2].z
max r2.z, r2.z, l(0.000010)
mul r2.z, r2.z, cb2[2].w
div r2.z, cb2[2].y, r2.z
add r2.z, r2.z, -cb2[2].x
add r2.z, -r2.z, l(1.000000)
sample_c_lz r2.z, r5.xyzx, t7.xxxx, s1, r2.z
add r2.w, -cb3[24].x, l(1.000000)
mad r2.z, r2.z, r2.w, cb3[24].x
add r2.y, -r2.z, r2.y
mad r2.x, r2.x, r2.y, r2.z
dp3 r2.y, r4.xyzx, r4.xyzx
sample r5.xyzw, r2.yyyy, t4.xyzw, s3
sample r6.xyzw, r4.xyzx, t5.xyzw, s2
mul r2.y, r5.x, r6.w
mul r2.x, r2.x, r2.y
dp3 r4.x, v2.xyzx, r7.xyzx
dp3 r4.y, v3.xyzx, r7.xyzx
dp3 r4.z, v4.xyzx, r7.xyzx
dp3 r2.y, r4.xyzx, r4.xyzx
rsq r2.y, r2.y
mul r2.yzw, r2.yyyy, r4.xxyz
mul r4.xyz, r2.xxxx, cb0[6].xyzx
add r5.xyz, r8.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r5.xyz, r1.wwww, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -r1.w, l(0.960000), l(0.960000)
mul r6.xyz, r1.wwww, r8.xyzx
mad r1.w, -r4.w, cb0[13].y, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r2.yzwy, r3.xyzx
dp3_sat r2.x, r2.yzwy, r1.xyzx
dp3_sat r2.y, r2.yzwy, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r2.x, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
max r0.z, r0.z, l(0.002000)
add r1.x, -r0.z, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r2.x, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r2.x, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r2.y, r0.z, -r2.y
mad r1.x, r1.x, r2.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r2.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r5.xyzx, r5.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r4.xyzx
mul r0.yzw, r4.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad o0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used