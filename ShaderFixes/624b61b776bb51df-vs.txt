// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 624b61b776bb51df-vs.txt
// 3DMigoto: 624b61b776bb51df | Matched 4 variants of 1 shaders: Water/Clear_Water
//
//       Unity headers extracted from Water_Clear_Water
//       Shader "Water/Clear_Water" {
//         CustomEditor "ShaderForgeMaterialInspector"
//         SubShader 1/1 {
//           LOD 3000
//           Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//           Pass 2/3 {
//             Name "FORWARD"
//             Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" "RenderType"="Transparent" "SHADOWSUPPORT"="true" }
//             ZWrite Off
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Water_Clear_Water:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201802150 35 0 0
//      undeciphered1a: 5
// 4:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "VERTEXLIGHT_ON" }
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
// 8:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "VERTEXLIGHT_ON" }
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" }
//      undeciphered2: 1 0 3 0 0 0
//      undeciphered3: 23 4 0 0 1 1 2 2 4 5
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityPerDraw" 176
//      Matrix 0 [unity_ObjectToWorld]
//      Matrix 64 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 368
//      Matrix 144 [unity_MatrixV]
//      Matrix 272 [unity_MatrixVP]
//      BindCB "UnityPerCamera" 0
//      BindCB "UnityPerDraw" 1
//      BindCB "UnityPerFrame" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:11:40 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz
// TANGENT                  0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   xy          3     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 7     z         1     NONE   float     z
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[6], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[21], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyzw
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
add r1.xyzw, r0.xyzw, cb1[3].xyzw
mad o2.xyzw, cb1[3].xyzw, v0.wwww, r0.xyzw
mul r0.xyzw, r1.yyyy, cb2[18].xyzw
mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
mad r0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 624b61b776bb51df-vs.txt
ne r5.w, r0.w, l(1.0)
if_nz r5.w
  add r5.w, r0.w, -r5.y
  mad r0.x, r5.w, r5.x, r0.x
endif

mov o1.xy, v3.xyxx
mov o1.z, r0.z
dp3 r2.x, v1.xyzx, cb1[4].xyzx
dp3 r2.y, v1.xyzx, cb1[5].xyzx
dp3 r2.z, v1.xyzx, cb1[6].xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mov o3.xyz, r2.xyzx
mul r3.xyz, v2.yyyy, cb1[1].xyzx
mad r3.xyz, cb1[0].xyzx, v2.xxxx, r3.xyzx
mad r3.xyz, cb1[2].xyzx, v2.zzzz, r3.xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
mov o4.xyz, r3.xyzx
mul r4.xyz, r2.zxyz, r3.yzxy
mad r2.xyz, r2.yzxy, r3.zxyz, -r4.xyzx
mul r2.xyz, r2.xyzx, v2.wwww
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul o5.xyz, r2.wwww, r2.xyzx
mov o6.xyzw, r0.xyzw
mul r0.z, r1.y, cb2[10].z
mad r0.z, cb2[9].z, r1.x, r0.z
mad r0.z, cb2[11].z, r1.z, r0.z
mad r0.z, cb2[12].z, r1.w, r0.z
mov o7.z, -r0.z
mul r0.y, r0.y, cb0[5].x
mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o7.w, r0.w
add o7.xy, r1.zzzz, r1.xwxx
ret
// Approximately 0 instruction slots used