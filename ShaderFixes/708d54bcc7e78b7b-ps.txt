// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 708d54bcc7e78b7b-ps.txt
// 3DMigoto: 708d54bcc7e78b7b |    Unity headers extracted from NatureManufacture Shaders_Water_Water River Tesseled Vertex Color
//    Shader "NatureManufacture Shaders/Water/Water River Tesseled Vertex Color" {
//      SubShader 1/1 {
//        Tags { "IsEmissive"="true" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//        Pass 3/5 {
//          Name "FORWARD"
//          Tags { "IsEmissive"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from NatureManufacture Shaders_Water_Water River Tesseled Vertex Color:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 201802150 330 16 2
//   undeciphered1a: 11
//   Keywords { "POINT" "FOG_LINEAR" }
//   undeciphered2: 1 11 5 11 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 576
//   Vector 32 [_LightColor0]
//   ScalarInt 132 [_UVVDirection1UDirection0]
//   Vector 136 [_WaterMixSpeed] 2
//   Vector 144 [_WaterNormal_ST]
//   Float 160 [_GlobalTiling]
//   Vector 164 [_WaterMainSpeed] 2
//   Vector 176 [_SmallCascadeMixSpeed] 2
//   Vector 192 [_SmallCascadeNormal_ST]
//   Vector 212 [_SmallCascadeMainSpeed] 2
//   Float 220 [_SmallCascadeAngle]
//   Float 224 [_SmallCascadeAngleFalloff]
//   Float 228 [_BigCascadeAngle]
//   Float 232 [_BigCascadeAngleFalloff]
//   Vector 240 [_BigCascadeMixSpeed] 2
//   Vector 256 [_BigCascadeNormal_ST]
//   Vector 272 [_BigCascadeMainSpeed] 2
//   Float 280 [_NormalScale]
//   Float 284 [_SmallCascadeNormalScale]
//   Float 288 [_BigCascadeNormalScale]
//   Float 292 [_Distortion]
//   Vector 304 [_DeepColor]
//   Vector 320 [_ShalowColor]
//   Float 336 [_ShalowDepth]
//   Float 340 [_ShalowFalloff]
//   Float 344 [_BigCascadeTransparency]
//   Vector 352 [_FoamColor] 3
//   Float 364 [_FoamDepth]
//   Float 368 [_FoamFalloff]
//   Vector 372 [_FoamSpeed] 2
//   Vector 384 [_Foam_ST]
//   Vector 400 [_NoiseSpeed] 2
//   Vector 416 [_Noise_ST]
//   Float 432 [_SmallCascadeNoisePower]
//   Vector 436 [_SmallCascadeColor] 3
//   Float 448 [_SmallCascadeFoamFalloff]
//   Float 452 [_BigCascadeNoisePower]
//   Vector 464 [_BigCascadeColor] 3
//   Float 476 [_BigCascadeFoamFalloff]
//   Float 488 [_WaterSpecularFar]
//   Float 492 [_WaterSpecularClose]
//   Float 496 [_WaterSpecularThreshold]
//   Float 500 [_FoamSpecular]
//   Float 504 [_SmallCascadeSpecular]
//   Float 508 [_BigCascadeSpecular]
//   Float 512 [_WaterSmoothness]
//   Float 516 [_FoamSmoothness]
//   Float 520 [_SmallCascadeSmoothness]
//   Float 524 [_BigCascadeSmoothness]
//   Float 532 [_WaterDepth]
//   Float 536 [_WaterFalloffBorder]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 16 [_SinTime]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_WaterNormal] 2D 2
//   SetTexture 1 [_SmallCascadeNormal] 2D 3
//   SetTexture 2 [_BigCascadeNormal] 2D 4
//   SetTexture 3 [_WaterGrab] 2D 5
//   SetTexture 4 [_CameraDepthTexture] 2D 6
//   SetTexture 5 [_Foam] 2D 7
//   SetTexture 6 [_SmallCascade] 2D 8
//   SetTexture 7 [_Noise] 2D 9
//   SetTexture 8 [_BigCascade] 2D 10
//   SetTexture 9 [_LightTexture0] 2D 1
//   SetTexture 10 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:20:43 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 7     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// COLOR                    0   xyzw        7     NONE   float   xyzw
// TEXCOORD                 6   xyz         8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyw
dcl_input_ps linear v7.xyzw
dcl_output o0.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 708d54bcc7e78b7b-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v5.xyzx, r12.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mad r3.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[10].x
mul r3.xy, r1.wwww, r3.xyxx
itof r2.w, cb0[8].y
eq r2.w, r2.w, l(1.000000)
movc r3.zw, r2.wwww, cb0[8].zzzw, cb0[8].wwwz
mad r3.zw, cb1[0].yyyy, r3.zzzw, r3.xxxy
movc r4.xy, r2.wwww, cb0[10].yzyy, cb0[10].zyzz
mad r3.xy, cb1[0].yyyy, r4.xyxx, r3.xyxx
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.zwzz, t0.xywz, s2
mul r3.z, cb0[17].z, l(1.200000)
mul r4.x, r4.z, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.zw, r3.zzzz, r4.xxxy
dp2 r3.w, r4.zwzz, r4.zwzz
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r3.w, r3.w
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r3.xyxx, t0.xywz, s2
mul r5.x, r5.z, r5.x
mad r3.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, cb0[17].zzzz
dp2 r4.z, r3.xyxx, r3.xyxx
min r4.z, r4.z, l(1.000000)
add r4.z, -r4.z, l(1.000000)
sqrt r4.z, r4.z
mad r3.xy, r4.xyxx, r3.zzzz, r3.xyxx
mul r3.z, r3.w, r4.z
dp3 r3.w, r3.xyzx, r3.xyzx
rsq r3.w, r3.w
mul r4.xyz, r3.wwww, r3.xyzx
mad r5.xy, v1.xyxx, cb0[12].xyxx, cb0[12].zwzz
mul r5.xy, r1.wwww, r5.xyxx
movc r5.zw, r2.wwww, cb0[11].xxxy, cb0[11].yyyx
mad r5.zw, cb1[0].yyyy, r5.zzzw, r5.xxxy
movc r6.xy, r2.wwww, cb0[13].yzyy, cb0[13].zyzz
mad r5.xy, cb1[0].yyyy, r6.xyxx, r5.xyxx
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r5.zwzz, t1.xywz, s3
mul r6.x, r6.z, r6.x
mad r5.zw, r6.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r6.xy, r5.zwzz, cb0[17].wwww
dp2 r4.w, r6.xyxx, r6.xyxx
min r4.w, r4.w, l(1.000000)
add r4.w, -r4.w, l(1.000000)
sqrt r4.w, r4.w
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyxx, t1.xywz, s3
mul r6.x, r6.z, r6.x
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xy, r6.xyxx, cb0[17].wwww
dp2 r6.z, r6.xyxx, r6.xyxx
min r6.z, r6.z, l(1.000000)
add r6.z, -r6.z, l(1.000000)
sqrt r6.z, r6.z
mad r7.xy, r5.zwzz, cb0[17].wwww, r6.xyxx
mul r7.z, r4.w, r6.z
dp3 r4.w, r7.xyzx, r7.xyzx
rsq r4.w, r4.w
mov_sat r5.z, v3.z
mul r5.w, cb0[13].w, l(0.0222222228)
mad r6.x, -cb0[13].w, l(0.0222222228), l(1.000000)
add r6.x, r5.z, -r6.x
max r6.x, r6.x, l(0.000000)
min r6.x, r6.x, l(2.000000)
div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
mul_sat r5.w, r5.w, r6.x
add r5.w, -r5.w, l(1.000000)
log r5.w, r5.w
mul r5.w, r5.w, cb0[14].x
exp r5.w, r5.w
mul r6.x, cb0[14].y, l(0.0222222228)
mad r6.y, -cb0[14].y, l(0.0222222228), l(1.000000)
add r5.z, r5.z, -r6.y
max r5.z, r5.z, l(0.000000)
min r5.z, r5.z, l(2.000000)
div r6.x, l(1.000000, 1.000000, 1.000000, 1.000000), r6.x
mul_sat r5.z, r5.z, r6.x
add r5.z, -r5.z, l(1.000000)
log r5.z, r5.z
mul r5.z, r5.z, cb0[14].z
exp r5.z, r5.z
min r5.z, r5.z, l(1.000000)
add_sat r5.w, -r5.z, r5.w
mad r6.xyz, r7.xyzx, r4.wwww, -r4.xyzx
mad r4.xyz, r5.wwww, r6.xyzx, r4.xyzx
mad r6.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
mul r6.xy, r1.wwww, r6.xyxx
movc r6.zw, r2.wwww, cb0[15].xxxy, cb0[15].yyyx
mad r6.zw, cb1[0].yyyy, r6.zzzw, r6.xxxy
movc r8.xy, r2.wwww, cb0[17].xyxx, cb0[17].yxyy
mad r6.xy, cb1[0].yyyy, r8.xyxx, r6.xyxx
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r6.zwzz, t2.xywz, s4
mul r8.x, r8.z, r8.x
mad r6.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r8.xy, r6.zwzz, cb0[18].xxxx
dp2 r7.w, r8.xyxx, r8.xyxx
min r7.w, r7.w, l(1.000000)
add r7.w, -r7.w, l(1.000000)
sqrt r7.w, r7.w
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r6.xyxx, t2.xywz, s4
mul r8.x, r8.z, r8.x
mad r8.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r8.xy, r8.xyxx, cb0[18].xxxx
dp2 r8.z, r8.xyxx, r8.xyxx
min r8.z, r8.z, l(1.000000)
add r8.z, -r8.z, l(1.000000)
sqrt r8.z, r8.z
mad r9.xy, r6.zwzz, cb0[18].xxxx, r8.xyxx
mul r9.z, r7.w, r8.z
dp3 r6.z, r9.xyzx, r9.xyzx
rsq r6.z, r6.z
mad r8.xyz, r9.xyzx, r6.zzzz, -r4.xyzx
mad r4.xyz, r5.zzzz, r8.xyzx, r4.xyzx
mad r3.xyz, r3.xyzx, r3.wwww, -r4.xyzx
mad r3.xyz, v7.xxxx, r3.xyzx, r4.xyzx
mad r7.xyz, r7.xyzx, r4.wwww, -r3.xyzx
mad r3.xyz, v7.yyyy, r7.xyzx, r3.xyzx
mad r7.xyz, r9.xyzx, r6.zzzz, -r3.xyzx
mad r3.xyz, v7.zzzz, r7.xyzx, r3.xyzx
add r7.xyw, v6.wxww, l(9.999999960E-012, 0.000000, 0.000000, 9.999999960E-012)
mul r3.w, r7.x, l(0.500000)
mad r4.z, -r7.x, l(0.500000), v6.y
mad r7.z, -r4.z, cb1[5].x, r3.w
div r7.yzw, r7.yyzw, r7.xxxx
div r4.zw, r7.yyyz, r7.wwww
mad r4.xy, r4.xyxx, cb0[18].yyyy, r4.zwzz
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t3.xyzw, s5
div r6.zw, v6.xxxy, r7.xxxx
sample_indexable(texture2d)(float,float,float,float) r3.w, r6.zwzz, t4.yzwx, s6
mad r3.w, cb1[7].z, r3.w, cb1[7].w
div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
add r3.w, -r7.x, r3.w
add r4.w, |r3.w|, cb0[21].x
log r4.w, r4.w
mul r4.w, r4.w, cb0[21].y
exp r4.w, r4.w
mul r6.z, r5.z, cb0[21].z
add r6.w, -r4.w, l(100.000000)
mad_sat r4.w, r6.z, r6.w, r4.w
add r7.xyz, -cb0[19].xyzx, cb0[20].xyzx
mad r7.xyz, r4.wwww, r7.xyzx, cb0[19].xyzx
add r6.z, |r3.w|, cb0[22].w
log r6.z, r6.z
mul r6.z, r6.z, cb0[23].x
exp r6.z, r6.z
min r6.z, r6.z, l(1.000000)
mad r8.xy, v1.xyxx, cb0[24].xyxx, cb0[24].zwzz
movc r8.zw, r2.wwww, cb0[23].yyyz, cb0[23].zzzy
mul r8.xy, r1.wwww, r8.xyxx
mad r8.xy, cb1[0].yyyy, r8.zwzz, r8.xyxx
sample_indexable(texture2d)(float,float,float,float) r6.w, r8.xyxx, t5.xyzw, s7
mul r6.w, r6.w, r6.z
add r8.xyz, -r7.xyzx, cb0[22].xyzx
mad r8.xyz, r6.wwww, r8.xyzx, r7.xyzx
add r8.xyz, -r4.xyzx, r8.xyzx
mad r8.xyz, r6.zzzz, r8.xyzx, r4.xyzx
add r6.z, -r4.w, l(1.000000)
add r9.xyz, r7.xyzx, -r8.xyzx
mad r8.xyz, r6.zzzz, r9.xyzx, r8.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t6.wxyz, s8
movc r9.xy, r2.wwww, cb0[25].xyxx, cb0[25].yxyy
mad r9.zw, v1.xxxy, cb0[26].xxxy, cb0[26].zzzw
mul r9.zw, r1.wwww, r9.zzzw
mul r10.xy, r9.xyxx, cb1[1].xxxx
mad r10.xy, r10.xyxx, l(-1.200000, -0.900000, 0.000000, 0.000000), r9.zwzz
sample_indexable(texture2d)(float,float,float,float) r1.w, r10.xyxx, t7.xyzw, s9
mad r9.xy, r9.xyxx, cb1[1].xxxx, r9.zwzz
sample_indexable(texture2d)(float,float,float,float) r2.w, r9.xyxx, t7.xyzw, s9
min r2.w, r1.w, r2.w
log r2.w, r2.w
mul r2.w, r2.w, cb0[27].x
exp r2.w, r2.w
mul r2.w, r2.w, l(20.000000)
min r2.w, r2.w, l(1.000000)
mul r2.w, r5.x, r2.w
log r5.x, r5.x
mul r5.x, r5.x, cb0[28].x
exp r5.x, r5.x
min r5.x, r5.x, l(1.000000)
mul r5.y, r5.x, r5.w
mad r10.xyz, r2.wwww, cb0[27].yzwy, -r8.xyzx
mad r8.xyz, r5.yyyy, r10.xyzx, r8.xyzx
sample_indexable(texture2d)(float,float,float,float) r6.x, r6.xyxx, t8.wxyz, s10
add r9.xy, r9.xyxx, l(-0.470000, 0.370000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r6.y, r9.xyxx, t7.xwyz, s9
min r1.w, r1.w, r6.y
log r1.w, r1.w
mul r1.w, r1.w, cb0[28].y
exp r1.w, r1.w
mul r1.w, r1.w, l(20.000000)
min r1.w, r1.w, l(1.000000)
mul r6.y, r6.x, l(0.500000)
mad r1.w, r1.w, r6.y, r6.y
log r6.x, r6.x
mul r6.x, r6.x, cb0[29].w
exp r6.x, r6.x
min r6.x, r6.x, l(1.000000)
mul r6.y, r5.z, r6.x
mad r9.xyz, r1.wwww, cb0[29].xyzx, -r8.xyzx
mad r8.xyz, r6.yyyy, r9.xyzx, r8.xyzx
add r7.xyz, -r4.xyzx, r7.xyzx
mad r4.xyz, r6.zzzz, r7.xyzx, r4.xyzx
add r7.xyz, -r8.xyzx, r4.xyzx
mad r7.xyz, v7.xxxx, r7.xyzx, r8.xyzx
mad r8.xyz, r2.wwww, cb0[27].yzwy, -r4.xyzx
mad r8.xyz, r5.xxxx, r8.xyzx, r4.xyzx
add r8.xyz, -r7.xyzx, r8.xyzx
mad r7.xyz, v7.yyyy, r8.xyzx, r7.xyzx
mad r8.xyz, r1.wwww, cb0[29].xyzx, -r4.xyzx
mad r4.xyz, r6.xxxx, r8.xyzx, r4.xyzx
add r4.xyz, -r7.xyzx, r4.xyzx
mad r4.xyz, v7.zzzz, r4.xyzx, r7.xyzx
log r1.w, r4.w
mul r1.w, r1.w, cb0[31].x
exp r1.w, r1.w
add r2.w, -cb0[30].z, cb0[30].w
mad r1.w, r1.w, r2.w, cb0[30].z
add r2.w, -r1.w, cb0[31].y
mad r1.w, r6.w, r2.w, r1.w
mul r2.w, r5.w, r5.y
add r5.xw, -r1.wwww, cb0[31].zzzw
mad r4.w, r2.w, r5.x, r1.w
mul r5.z, r5.z, r6.y
add r6.x, -r4.w, cb0[31].w
mad r4.w, r5.z, r6.x, r4.w
add r6.x, r1.w, -r4.w
mad r4.w, v7.x, r6.x, r4.w
mad r5.x, r5.y, r5.x, r1.w
add r5.x, -r4.w, r5.x
mad r4.w, v7.y, r5.x, r4.w
mad r1.w, r6.y, r5.w, r1.w
add r1.w, -r4.w, r1.w
mad r1.w, v7.z, r1.w, r4.w
add r4.w, -cb0[32].x, cb0[32].y
mad r4.w, r6.w, r4.w, cb0[32].x
add r5.xw, -r4.wwww, cb0[32].zzzw
mad r2.w, r2.w, r5.x, r4.w
add r6.x, -r2.w, cb0[32].w
mad r2.w, r5.z, r6.x, r2.w
add r5.z, -r2.w, r4.w
mad r2.w, v7.x, r5.z, r2.w
mad r5.x, r5.y, r5.x, r4.w
add r5.x, -r2.w, r5.x
mad r2.w, v7.y, r5.x, r2.w
mad r4.w, r6.y, r5.w, r4.w
add r4.w, -r2.w, r4.w
mad r2.w, v7.z, r4.w, r2.w
log r3.w, |r3.w|
mul r3.w, r3.w, cb0[33].y
exp r3.w, r3.w
min r3.w, r3.w, l(1.000000)
log r3.w, r3.w
mul r3.w, r3.w, cb0[33].z
exp r3.w, r3.w
mul o0.w, r3.w, v7.w
mul r5.xyz, v5.yyyy, cb0[5].xyzx
mad r5.xyz, cb0[4].xyzx, v5.xxxx, r5.xyzx
mad r5.xyz, cb0[6].xyzx, v5.zzzz, r5.xyzx
add r5.xyz, r5.xyzx, cb0[7].xyzx
eq r3.w, cb4[0].x, l(1.000000)
if_nz r3.w
  eq r3.w, cb4[0].y, l(1.000000)
  mul r6.xyz, v5.yyyy, cb4[2].xyzx
  mad r6.xyz, cb4[1].xyzx, v5.xxxx, r6.xyzx
  mad r6.xyz, cb4[3].xyzx, v5.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb4[4].xyzx
  movc r6.xyz, r3.wwww, r6.xyzx, v5.xyzx
  add r6.xyz, r6.xyzx, -cb4[6].xyzx
  mul r6.yzw, r6.xxyz, cb4[5].xxyz
  mad r3.w, r6.y, l(0.250000), l(0.750000)
  mad r4.w, cb4[0].z, l(0.500000), l(0.750000)
  max r6.x, r3.w, r4.w
  sample_indexable(texture3d)(float,float,float,float) r6.xyzw, r6.xzwx, t10.xyzw, s0
else
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r3.w, r6.xyzw, cb2[46].xyzw
dp3 r4.w, r5.xyzx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.w, r4.wwww, t9.yzwx, s1
mul r3.w, r3.w, r4.w
dp3 r5.x, v2.xyzx, r3.xyzx
dp3 r5.y, v3.xyzx, r3.xyzx
dp3 r5.z, v4.xyzx, r3.xyzx
dp3 r3.x, r5.xyzx, r5.xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, r5.xyzx
mul r5.xyz, r3.wwww, cb0[2].xyzx
max r3.w, r1.w, r1.w
max r3.w, r1.w, r3.w
add r3.w, -r3.w, l(1.000000)
mul r4.xyz, r3.wwww, r4.xyzx
add r2.w, -r2.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.xyzx, r2.xyzx
dp3_sat r2.x, r3.xyzx, r1.xyzx
dp3_sat r2.y, r3.xyzx, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r2.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r2.x, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r2.w, r2.w
max r0.z, r0.z, l(0.002000)
add r1.x, -r0.z, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r2.x, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r2.x, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r2.y, r0.z, -r2.y
mad r1.x, r1.x, r2.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r2.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r1.wwww, r1.wwww
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r5.xyzx
mul r0.yzw, r5.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r2.x, r0.x, r0.x
mul r2.x, r2.x, r2.x
mul r0.x, r0.x, r2.x
add r2.x, -r1.w, l(1.000000)
mad r0.x, r2.x, r0.x, r1.w
mul r0.xyz, r0.xxxx, r0.yzwy
mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
mul o0.xyz, r0.xyzx, r0.wwww
ret
// Approximately 0 instruction slots used