// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6031dc1a827a33e4-ps.txt
// 3DMigoto: 6031dc1a827a33e4 |    Unity headers extracted from Lux Water_WaterSurface
//    Shader "Lux Water/WaterSurface" {
//      CustomEditor "LuxWaterMaterialEditor"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "FORCENOSHADOWCASTING"="true" "QUEUE"="Transparent-1" "RenderType"="Opaque" }
//        Pass 3/4 {
//          Name "FORWARD"
//          Tags { "FORCENOSHADOWCASTING"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent-1" "RenderType"="Opaque" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Lux Water_WaterSurface:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 196 8 2
//   undeciphered1a: 8
//   Keywords { "SPOT" "USINGWATERVOLUME" }
//   undeciphered2: 1 5 5 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 592
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Float 128 [_FresnelPower]
//   Float 164 [_WaterIOR]
//   Float 192 [_ScatteringPower]
//   Vector 196 [_TranslucencyColor] 3
//   Vector 208 [_FarBumpSampleParams] 2
//   Vector 240 [_BumpScale]
//   Vector 256 [_FinalBumpSpeed01]
//   Float 280 [_WaterSurfaceYPos]
//   Float 404 [_Glossiness]
//   Float 408 [_InvFade]
//   Vector 432 [_Color]
//   Vector 448 [_DepthAtten] 3
//   Float 460 [_Density]
//   Float 468 [_FogAbsorptionCancellation]
//   Float 472 [_AbsorptionHeight]
//   Float 476 [_AbsorptionMaxHeight]
//   Float 480 [_AbsorptionDepth]
//   Float 484 [_AbsorptionColorStrength]
//   Float 488 [_AbsorptionStrength]
//   Float 492 [_Refraction]
//   Vector 560 [_GrabTexture_TexelSize]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_BumpMap] 2D 3
//   SetTexture 1 [_CameraDepthTexture] 2D 4
//   SetTexture 2 [_LightTexture0] 2D 1
//   SetTexture 3 [_LightTextureB0] 2D 2
//   SetTexture 4 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//   BindCB "UnityLighting" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:10:21 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyz
// TEXCOORD                 7   xyzw        8     NONE   float   xy
// TEXCOORD                 8   xyzw        9     NONE   float
// TEXCOORD                 9   xyzw       10     NONE   float
// SV_IsFrontFace           0   x          11    FFACE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[36], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[47], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xy
dcl_input_ps_sgv v11.x, is_front_face
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6031dc1a827a33e4-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

movc r0.x, v11.x, l(1.000000), l(-1.000000)
add r0.yzw, -v4.xxyz, cb3[0].xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r1.yzw, r0.yyzw, r1.xxxx
add r2.xyz, -v4.xyzx, r9.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mul r3.xy, cb0[16].xyxx, cb1[0].xxxx
mul r3.xy, r3.xyxx, cb0[13].xxxx
mad r3.xy, v5.xyxx, cb0[13].xxxx, r3.xyxx
sample r3.xyzw, r3.xyxx, t0.xyzw, s3
mad r3.xz, r3.wwyw, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
mad r3.xz, r3.xxzx, l(0.050000, 0.000000, 0.050000, 0.000000), v5.xxyx
sample r4.xyzw, r3.xzxx, t0.xyzw, s3
mul_sat r2.w, v6.w, cb0[13].y
add r3.xy, r3.wyww, -r4.wyww
mad r3.xy, r2.wwww, r3.xyxx, r4.wyww
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, cb0[15].xxxx
mad r3.zw, r3.xxxy, l(0.000000, 0.000000, 0.050000, 0.050000), v5.zzzw
sample r4.xyzw, r3.zwzz, t0.xyzw, s3
sample r5.xyzw, v8.xyxx, t0.xyzw, s3
mad r3.zw, r4.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mad r3.xy, r3.zwzz, cb0[15].yyyy, r3.xyxx
mad r3.zw, r5.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mad r3.xy, r3.zwzz, cb0[15].zzzz, r3.xyxx
dp2 r2.w, r3.xyxx, r3.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r3.z, r2.w
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
mul r3.xyz, r0.xxxx, r3.xyzx
dp3 r4.x, v1.xyzx, r3.xyzx
dp3 r4.z, v3.xyzx, r3.xyzx
div r5.xy, v6.xyxx, v6.wwww
sample r5.xyzw, r5.xyxx, t1.xyzw, s4
mad r0.x, cb1[7].z, r5.x, cb1[7].w
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r0.x, r0.x, -v6.w
mul_sat r0.x, r0.x, cb0[25].z
add r2.w, -v6.z, l(1.000000)
mul r5.yz, cb0[30].wwww, cb0[35].xxyx
mul r5.yz, r2.wwww, r5.yyzy
mul r5.yz, r0.xxxx, r5.yyzy
mad r5.yz, r4.xxzx, r5.yyzy, v6.xxyx
div r5.yz, r5.yyzy, v6.wwww
sample_l r6.xyzw, r5.yzyy, t1.xyzw, s4, l(0.000000)
mad r2.w, cb1[7].z, r6.x, cb1[7].w
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
lt r2.w, r2.w, v6.w
movc r2.w, r2.w, r5.x, r6.x
mad r5.xy, cb1[7].zxzz, r2.wwww, cb1[7].wyww
div r5.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r5.xyxx
add r2.w, r5.x, -v6.w
mul_sat r3.w, r2.w, cb0[25].z
div r4.w, cb1[5].z, v7.z
mul r5.xzw, r4.wwww, v7.xxyz
mul r5.xyz, r5.yyyy, r5.xzwx
mul r4.w, r5.y, cb2[19].y
mad r4.w, cb2[18].y, r5.x, r4.w
mad r4.w, cb2[20].y, r5.z, r4.w
add r4.w, r4.w, cb2[21].y
add r4.w, -r4.w, cb0[17].z
add r5.x, r4.w, -cb0[28].x
div_sat r5.x, r5.x, cb0[28].y
mul r5.x, r5.x, l(-11.541560)
exp r5.x, r5.x
add r5.x, -r5.x, l(1.000000)
mov_sat r5.y, cb0[28].z
mul r5.x, r5.y, r5.x
movc r2.w, v11.x, r2.w, v6.w
mul r5.y, -r2.w, cb0[28].w
mul r5.y, r5.y, l(1.442695)
exp r5.y, r5.y
add r5.y, -r5.y, l(1.000000)
max r5.y, r5.y, l(0.000000)
max r5.x, r5.y, r5.x
div_sat r4.w, r4.w, cb0[29].w
mul r4.w, r4.w, -r4.w
mul r4.w, r4.w, cb0[29].z
exp r4.w, r4.w
mul r2.w, -r2.w, cb0[30].x
mul r2.w, r2.w, l(1.442695)
exp r2.w, r2.w
mul r2.w, r4.w, r2.w
min r2.w, r2.w, l(1.000000)
add r2.w, r2.w, l(-1.000000)
mad r2.w, cb0[30].z, r2.w, l(1.000000)
mad_sat r2.w, r5.x, cb0[29].y, r2.w
add r6.xyzw, -r2.wwww, l(1.000000, -0.450000, -0.029000, -0.018000)
mul r4.w, r6.x, cb0[30].y
mad_sat r5.yzw, r4.wwww, r6.yyzw, r2.wwww
mul r6.xyzw, v4.yyyy, cb0[5].xyzw
mad r6.xyzw, cb0[4].xyzw, v4.xxxx, r6.xyzw
mad r6.xyzw, cb0[6].xyzw, v4.zzzz, r6.xyzw
add r6.xyzw, r6.xyzw, cb0[7].xyzw
eq r2.w, cb4[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb4[0].y, l(1.000000)
  mul r7.xyz, v4.yyyy, cb4[2].xyzx
  mad r7.xyz, cb4[1].xyzx, v4.xxxx, r7.xyzx
  mad r7.xyz, cb4[3].xyzx, v4.zzzz, r7.xyzx
  add r7.xyz, r7.xyzx, cb4[4].xyzx
  movc r7.xyz, r2.wwww, r7.xyzx, v4.xyzx
  add r7.xyz, r7.xyzx, -cb4[6].xyzx
  mul r7.yzw, r7.xxyz, cb4[5].xxyz
  mad r2.w, r7.y, l(0.250000), l(0.750000)
  mad r4.w, cb4[0].z, l(0.500000), l(0.750000)
  max r7.x, r2.w, r4.w
  sample r7.xyzw, r7.xzwx, t4.xyzw, s0
else
  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r7.xyzw, cb3[46].xyzw
lt r4.w, l(0.000000), r6.z
and r4.w, r4.w, l(0x3f800000)
div r7.xy, r6.xyxx, r6.wwww
add r7.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample r7.xyzw, r7.xyxx, t2.xyzw, s1
mul r4.w, r4.w, r7.w
dp3 r6.x, r6.xyzx, r6.xyzx
sample r6.xyzw, r6.xxxx, t3.xyzw, s2
mul r4.w, r4.w, r6.x
mul r2.w, r2.w, r4.w
dp3 r4.y, v2.xyzx, r3.xyzx
dp3 r3.x, r4.xyzx, r4.xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, r4.xyzx
mul r4.xyz, r2.wwww, cb0[2].xyzx
max r2.w, cb0[3].y, cb0[3].x
max r2.w, r2.w, cb0[3].z
add r2.w, -r2.w, l(1.000000)
add r4.w, -cb0[25].y, l(1.000000)
mad r0.yzw, r0.yyzw, r1.xxxx, r2.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
max r1.x, r1.x, l(0.001000)
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
dp3 r1.x, r3.xyzx, r2.xyzx
dp3_sat r6.x, r3.xyzx, r1.yzwy
dp3_sat r6.y, r3.xyzx, r0.yzwy
dp3_sat r0.y, r1.yzwy, r0.yzwy
mul r0.z, r4.w, r4.w
mad r0.w, -r4.w, r4.w, l(1.000000)
mad r4.w, |r1.x|, r0.w, r0.z
mad r0.w, r6.x, r0.w, r0.z
mul r0.w, r0.w, |r1.x|
mad r0.w, r6.x, r4.w, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r4.w, r6.y, r0.z, -r6.y
mad r4.w, r4.w, r6.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r4.w, r4.w, r4.w, l(1.000000012E-007)
div r0.z, r0.z, r4.w
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.z, r6.x, r0.z
max r0.z, r0.z, l(0.000000)
mul r6.xyz, r4.xyzx, r0.zzzz
add r0.y, -r0.y, l(1.000000)
mul r0.z, r0.y, r0.y
mul r0.z, r0.z, r0.z
mul r0.y, r0.y, r0.z
add r7.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.yzw, r7.xxyz, r0.yyyy, cb0[3].xxyz
mul r0.yzw, r0.yyzw, r6.xxyz
add r2.w, -r2.w, cb0[25].y
add_sat r2.w, r2.w, l(1.000000)
mul r4.w, cb0[10].y, l(0.999707043)
mul r4.w, r4.w, r4.w
mad r6.x, -|r1.x|, |r1.x|, l(1.000000)
mul r6.y, r4.w, r6.x
ge r6.y, l(1.000000), r6.y
mad r4.w, -r4.w, r6.x, l(1.000000)
sqrt r4.w, r4.w
add r4.w, -r4.w, l(1.000000)
mul r6.x, r4.w, r4.w
mul r6.x, r6.x, r6.x
mul r4.w, r4.w, r6.x
add r6.x, r2.w, l(-0.020370)
mad r4.w, r4.w, r6.x, l(0.020370)
movc r4.w, r6.y, r4.w, l(1.000000)
add r1.x, -|r1.x|, l(1.000000)
log r1.x, r1.x
mul r1.x, r1.x, cb0[8].x
exp r1.x, r1.x
add r6.xyz, r2.wwww, -cb0[3].xyzx
mad r6.xyz, r1.xxxx, r6.xyzx, cb0[3].xyzx
movc r6.xyz, v11.xxxx, r6.xyzx, r4.wwww
mov_sat r1.x, r1.z
mul r7.xyz, r1.xxxx, r4.xyzx
mul r7.xyz, r7.xyzx, cb0[27].xyzx
mul r7.xyz, r5.xxxx, r7.xyzx
mul r5.yzw, r5.yyzw, r7.xxyz
add r1.x, -r5.x, l(1.000000)
mul r7.xyz, r0.yzwy, r1.xxxx
add r6.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r6.xyz, r5.yzwy, r6.xyzx
movc r5.xyz, v11.xxxx, r6.xyzx, r5.yzwy
movc r0.yzw, v11.xxxx, r0.yyzw, r7.xxyz
add r0.yzw, r0.yyzw, r5.xxyz
mad r1.xyz, -r3.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), r1.yzwy
dp3_sat r1.x, -r1.xyzx, r2.xyzx
mad r1.x, r1.x, cb0[12].x, -cb0[12].x
exp r1.x, r1.x
add r1.y, -|r3.y|, l(1.000000)
add_sat r1.y, r1.y, r1.y
mul r1.x, r1.y, r1.x
mul r1.xyz, r4.xyzx, r1.xxxx
mul r1.xyz, r1.xyzx, cb0[12].yzwy
mul_sat r1.xyz, r1.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
add r0.yzw, r0.yyzw, r1.xxyz
mul o0.xyz, r0.yzwy, r3.wwww
mov o0.w, r0.x
ret
// Approximately 0 instruction slots used