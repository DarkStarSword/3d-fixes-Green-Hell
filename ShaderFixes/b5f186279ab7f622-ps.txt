// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b5f186279ab7f622-ps.txt
// 3DMigoto: b5f186279ab7f622 |    Unity headers extracted from DynamicFog_Image Effect_Only Fog
//    Shader "DynamicFog/Image Effect/Only Fog" {
//      SubShader 1/1 {
//        Pass 1/1 {
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from DynamicFog_Image Effect_Only Fog:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 32 3 4
//   undeciphered1a: 3
//   undeciphered2: 1 3 2 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 256
//   Float 80 [_FogAlpha]
//   Vector 160 [_FogDistance]
//   Vector 176 [_FogHeightData]
//   Vector 192 [_FogNoiseData]
//   Float 208 [_FogSpeed]
//   Vector 224 [_FogColor]
//   Vector 240 [_FogColor2]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_MainTex] 2D 0
//   SetTexture 1 [_CameraDepthTexture] 2D 1
//   SetTexture 2 [_NoiseTex] 2D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:01:19 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 5
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b5f186279ab7f622-ps.txt

mul r3.w, -r3.x, r3.y
mad r4.xyz, -r3.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s0
sample r1.xyzw, v1.zwzz, t1.xyzw, s1
mad r1.x, cb1[7].x, r1.x, cb1[7].y
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
lt r1.y, cb0[10].z, r1.x
if_nz r1.y
  mov o0.xyzw, r0.xyzw
  ret
endif
mad r1.yzw, v2.xxyz, r1.xxxx, r4.xxyz
add r1.z, r1.z, -cb0[11].y
lt r2.x, r1.z, cb0[11].z
add r2.y, cb0[11].x, cb0[12].y
lt r2.y, r2.y, r1.z
or r2.x, r2.y, r2.x
if_nz r2.x
  mov o0.xyzw, r0.xyzw
  ret
endif
mul r1.yw, r1.yyyw, cb0[12].wwww
mul r2.x, cb0[13].x, cb1[0].y
mad r1.yw, r1.yyyw, l(0.000000, 0.100000, 0.000000, 0.100000), r2.xxxx
sample r2.xyzw, r1.ywyy, t2.xyzw, s2
mul r1.y, r1.x, cb0[12].z
div r1.y, r2.y, r1.y
mad r1.z, -r2.y, cb0[12].y, r1.z
add r1.w, r1.x, -cb0[10].x
add r1.x, -r1.x, cb0[10].z
div r1.xw, r1.xxxw, cb0[10].wwwy
min r1.x, r1.x, r1.w
mad r1.w, r2.y, cb0[12].y, cb0[11].x
add r2.x, -r1.z, r1.w
mul r2.y, r1.w, cb0[11].w
div r2.x, r2.x, r2.y
min_sat r1.x, r1.x, r2.x
mad r1.y, -r1.y, cb0[12].x, l(1.000000)
mul_sat r1.y, r1.y, cb0[5].x
mul r1.x, r1.y, r1.x
div_sat r1.y, r1.z, r1.w
add r2.xyzw, -cb0[14].xyzw, cb0[15].xyzw
mad r2.xyzw, r1.yyyy, r2.xyzw, cb0[14].xyzw
add r2.xyzw, -r0.xyzw, r2.xyzw
mad o0.xyzw, r1.xxxx, r2.xyzw, r0.xyzw
ret
// Approximately 0 instruction slots used