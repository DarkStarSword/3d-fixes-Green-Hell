// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 045720566d56e9d2-ps.txt
// 3DMigoto: 045720566d56e9d2 |    Unity headers extracted from Lux Water_WaterSurface
//    Shader "Lux Water/WaterSurface" {
//      CustomEditor "LuxWaterMaterialEditor"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "FORCENOSHADOWCASTING"="true" "QUEUE"="Transparent-1" "RenderType"="Opaque" }
//        Pass 3/4 {
//          Name "FORWARD"
//          Tags { "FORCENOSHADOWCASTING"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent-1" "RenderType"="Opaque" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Lux Water_WaterSurface:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 205 9 2
//   undeciphered1a: 9
//   Keywords { "POINT_COOKIE" "GEOM_TYPE_BRANCH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
//   undeciphered2: 1 6 5 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 592
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Float 128 [_FresnelPower]
//   Float 164 [_WaterIOR]
//   Float 192 [_ScatteringPower]
//   Vector 196 [_TranslucencyColor] 3
//   Vector 208 [_FarBumpSampleParams] 2
//   Vector 224 [_BumpTiling]
//   Vector 240 [_BumpScale]
//   Vector 256 [_FinalBumpSpeed01]
//   Vector 272 [_FinalBumpSpeed23] 2
//   Float 280 [_WaterSurfaceYPos]
//   Float 404 [_Glossiness]
//   Float 408 [_InvFade]
//   Vector 432 [_Color]
//   Vector 448 [_DepthAtten] 3
//   Float 460 [_Density]
//   Float 468 [_FogAbsorptionCancellation]
//   Float 472 [_AbsorptionHeight]
//   Float 476 [_AbsorptionMaxHeight]
//   Float 480 [_AbsorptionDepth]
//   Float 484 [_AbsorptionColorStrength]
//   Float 488 [_AbsorptionStrength]
//   Float 492 [_Refraction]
//   Vector 560 [_GrabTexture_TexelSize]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_BumpMap] 2D 3
//   SetTexture 1 [_LuxWater_NormalOverlay] 2D 4
//   SetTexture 2 [_CameraDepthTexture] 2D 5
//   SetTexture 3 [_LightTextureB0] 2D 2
//   SetTexture 4 [_LightTexture0] CUBE 1
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//   BindCB "UnityLighting" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:25:22 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyzw        5     NONE   float   xy
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyz
// TEXCOORD                 7   xyzw        8     NONE   float
// TEXCOORD                 8   xyz         9     NONE   float
// TEXCOORD                 9   xyzw       10     NONE   float
// SV_IsFrontFace           0   x          11    FFACE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[36], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[47], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyz
dcl_input_ps_sgv v11.x, is_front_face
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 045720566d56e9d2-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

movc r0.x, v11.x, l(1.000000), l(-1.000000)
add r0.yzw, -v4.xxyz, cb3[0].xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r1.yzw, r0.yyzw, r1.xxxx
add r2.xyz, -v4.xyzx, r10.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
div r3.xy, v6.xyxx, v6.wwww
mul r4.xyzw, cb0[16].xyzw, cb1[0].xxxx
mad r5.xyzw, v5.xyxy, cb0[14].xxyy, r4.xyzw
mul r3.zw, cb0[17].xxxy, cb1[0].xxxx
mad r3.zw, v5.xxxy, cb0[14].zzzz, r3.zzzw
mul r4.xy, r4.xyxx, cb0[13].xxxx
mad r4.xy, r5.xyxx, cb0[13].xxxx, r4.xyxx
sample r4.xyzw, r4.xyxx, t0.xyzw, s3
mad r4.xz, r4.wwyw, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
mad r4.xz, r4.xxzx, l(0.050000, 0.000000, 0.050000, 0.000000), r5.xxyx
sample r6.xyzw, r4.xzxx, t0.xyzw, s3
mul_sat r2.w, v6.w, cb0[13].y
add r4.xy, r4.wyww, -r6.wyww
mad r4.xy, r2.wwww, r4.xyxx, r6.wyww
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, cb0[15].xxxx
mad r4.zw, r4.xxxy, l(0.000000, 0.000000, 0.050000, 0.050000), r5.zzzw
sample r5.xyzw, r4.zwzz, t0.xyzw, s3
sample r6.xyzw, r3.zwzz, t0.xyzw, s3
mad r3.zw, r5.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mad r3.zw, r3.zzzw, cb0[15].yyyy, r4.xxxy
mad r4.xy, r6.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r4.xy, r4.xyxx, cb0[15].zzzz, r3.zwzz
dp2 r2.w, r4.xyxx, r4.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r4.z, r2.w
dp3 r2.w, r4.xyzx, r4.xyzx
rsq r2.w, r2.w
mul r3.z, r2.w, r4.z
sample r5.xyzw, r3.xyxx, t1.xyzw, s4
add r5.xyz, r5.xyzx, l(-0.000000, -0.000000, -1.000000, 0.000000)
mad r5.xyz, r5.wwww, r5.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mad r4.xy, r4.xyxx, r2.wwww, r5.xyxx
mul r4.z, r3.z, r5.z
dp3 r2.w, r4.xyzx, r4.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, r4.xyzx
mul r4.xyz, r0.xxxx, r4.xyzx
dp3 r5.x, v1.xyzx, r4.xyzx
dp3 r5.z, v3.xyzx, r4.xyzx
sample r3.xyzw, r3.xyxx, t2.xyzw, s5
mad r0.x, cb1[7].z, r3.x, cb1[7].w
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r0.x, r0.x, -v6.w
mul_sat r0.x, r0.x, cb0[25].z
add r2.w, -v6.z, l(1.000000)
mul r3.yz, cb0[30].wwww, cb0[35].xxyx
mul r3.yz, r2.wwww, r3.yyzy
mul r3.yz, r0.xxxx, r3.yyzy
mad r3.yz, r5.xxzx, r3.yyzy, v6.xxyx
div r3.yz, r3.yyzy, v6.wwww
mul r3.yz, r3.yyzy, cb0[35].zzwz
round_ni r3.yz, r3.yyzy
add r3.yz, r3.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
div r3.yz, r3.yyzy, cb0[35].zzwz
sample_l r6.xyzw, r3.yzyy, t2.xyzw, s5, l(0.000000)
mad r2.w, cb1[7].z, r6.x, cb1[7].w
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
lt r2.w, r2.w, v6.w
movc r2.w, r2.w, r3.x, r6.x
mad r3.xy, cb1[7].zxzz, r2.wwww, cb1[7].wyww
div r3.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyxx
add r2.w, r3.x, -v6.w
mul_sat r3.x, r2.w, cb0[25].z
div r3.z, cb1[5].z, v7.z
mul r6.xyz, r3.zzzz, v7.xyzx
mul r3.yzw, r3.yyyy, r6.xxyz
mul r3.z, r3.z, cb2[19].y
mad r3.y, cb2[18].y, r3.y, r3.z
mad r3.y, cb2[20].y, r3.w, r3.y
add r3.y, r3.y, cb2[21].y
add r3.y, -r3.y, cb0[17].z
add r3.z, r3.y, -cb0[28].x
div_sat r3.z, r3.z, cb0[28].y
mul r3.z, r3.z, l(-11.541560)
exp r3.z, r3.z
add r3.z, -r3.z, l(1.000000)
mov_sat r3.w, cb0[28].z
mul r3.z, r3.w, r3.z
movc r2.w, v11.x, r2.w, v6.w
mul r3.w, -r2.w, cb0[28].w
mul r3.w, r3.w, l(1.442695)
exp r3.w, r3.w
add r3.w, -r3.w, l(1.000000)
max r3.w, r3.w, l(0.000000)
max r3.z, r3.w, r3.z
div_sat r3.y, r3.y, cb0[29].w
mul r3.y, r3.y, -r3.y
mul r3.y, r3.y, cb0[29].z
exp r3.y, r3.y
mul r2.w, -r2.w, cb0[30].x
mul r2.w, r2.w, l(1.442695)
exp r2.w, r2.w
mul r2.w, r3.y, r2.w
min r2.w, r2.w, l(1.000000)
add r2.w, r2.w, l(-1.000000)
mad r2.w, cb0[30].z, r2.w, l(1.000000)
mad_sat r2.w, r3.z, cb0[29].y, r2.w
add r6.xyzw, -r2.wwww, l(1.000000, -0.450000, -0.029000, -0.018000)
mul r3.y, r6.x, cb0[30].y
mad_sat r6.xyz, r3.yyyy, r6.yzwy, r2.wwww
mul r7.xyz, v4.yyyy, cb0[5].xyzx
mad r7.xyz, cb0[4].xyzx, v4.xxxx, r7.xyzx
mad r7.xyz, cb0[6].xyzx, v4.zzzz, r7.xyzx
add r7.xyz, r7.xyzx, cb0[7].xyzx
eq r2.w, cb4[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb4[0].y, l(1.000000)
  mul r8.xyz, v4.yyyy, cb4[2].xyzx
  mad r8.xyz, cb4[1].xyzx, v4.xxxx, r8.xyzx
  mad r8.xyz, cb4[3].xyzx, v4.zzzz, r8.xyzx
  add r8.xyz, r8.xyzx, cb4[4].xyzx
  movc r8.xyz, r2.wwww, r8.xyzx, v4.xyzx
  add r8.xyz, r8.xyzx, -cb4[6].xyzx
  mul r8.yzw, r8.xxyz, cb4[5].xxyz
  mad r2.w, r8.y, l(0.250000), l(0.750000)
  mad r3.y, cb4[0].z, l(0.500000), l(0.750000)
  max r8.x, r2.w, r3.y
  sample r8.xyzw, r8.xzwx, t5.xyzw, s0
else
  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r8.xyzw, cb3[46].xyzw
dp3 r3.y, r7.xyzx, r7.xyzx
sample r8.xyzw, r3.yyyy, t3.xyzw, s2
sample r7.xyzw, r7.xyzx, t4.xyzw, s1
mul r3.y, r7.w, r8.x
mul r2.w, r2.w, r3.y
dp3 r5.y, v2.xyzx, r4.xyzx
dp3 r3.y, r5.xyzx, r5.xyzx
rsq r3.y, r3.y
mul r4.xyz, r3.yyyy, r5.xyzx
mul r5.xyz, r2.wwww, cb0[2].xyzx
max r2.w, cb0[3].y, cb0[3].x
max r2.w, r2.w, cb0[3].z
add r2.w, -r2.w, l(1.000000)
add r3.y, -cb0[25].y, l(1.000000)
mad r0.yzw, r0.yyzw, r1.xxxx, r2.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
max r1.x, r1.x, l(0.001000)
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
dp3 r1.x, r4.xyzx, r2.xyzx
dp3_sat r3.w, r4.xyzx, r1.yzwy
dp3_sat r4.w, r4.xyzx, r0.yzwy
dp3_sat r0.y, r1.yzwy, r0.yzwy
mul r0.z, r3.y, r3.y
mad r0.w, -r3.y, r3.y, l(1.000000)
mad r3.y, |r1.x|, r0.w, r0.z
mad r0.w, r3.w, r0.w, r0.z
mul r0.w, r0.w, |r1.x|
mad r0.w, r3.w, r3.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r3.y, r4.w, r0.z, -r4.w
mad r3.y, r3.y, r4.w, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r3.y, r3.y, r3.y, l(1.000000012E-007)
div r0.z, r0.z, r3.y
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.z, r3.w, r0.z
max r0.z, r0.z, l(0.000000)
mul r7.xyz, r5.xyzx, r0.zzzz
add r0.y, -r0.y, l(1.000000)
mul r0.z, r0.y, r0.y
mul r0.z, r0.z, r0.z
mul r0.y, r0.y, r0.z
add r8.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.yzw, r8.xxyz, r0.yyyy, cb0[3].xxyz
mul r0.yzw, r0.yyzw, r7.xxyz
add r2.w, -r2.w, cb0[25].y
add_sat r2.w, r2.w, l(1.000000)
mul r3.y, cb0[10].y, l(0.999707043)
mul r3.y, r3.y, r3.y
mad r3.w, -|r1.x|, |r1.x|, l(1.000000)
mul r4.w, r3.w, r3.y
ge r4.w, l(1.000000), r4.w
mad r3.y, -r3.y, r3.w, l(1.000000)
sqrt r3.y, r3.y
add r3.y, -r3.y, l(1.000000)
mul r3.w, r3.y, r3.y
mul r3.w, r3.w, r3.w
mul r3.y, r3.y, r3.w
add r3.w, r2.w, l(-0.020370)
mad r3.y, r3.y, r3.w, l(0.020370)
movc r3.y, r4.w, r3.y, l(1.000000)
add r1.x, -|r1.x|, l(1.000000)
log r1.x, r1.x
mul r1.x, r1.x, cb0[8].x
exp r1.x, r1.x
add r7.xyz, r2.wwww, -cb0[3].xyzx
mad r7.xyz, r1.xxxx, r7.xyzx, cb0[3].xyzx
movc r7.xyz, v11.xxxx, r7.xyzx, r3.yyyy
mov_sat r1.x, r1.z
mul r8.xyz, r1.xxxx, r5.xyzx
mul r8.xyz, r8.xyzx, cb0[27].xyzx
mul r8.xyz, r3.zzzz, r8.xyzx
mul r6.xyz, r6.xyzx, r8.xyzx
add r1.x, -r3.z, l(1.000000)
mul r3.yzw, r0.yyzw, r1.xxxx
add r7.xyz, -r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r7.xyz, r6.xyzx, r7.xyzx
movc r6.xyz, v11.xxxx, r7.xyzx, r6.xyzx
movc r0.yzw, v11.xxxx, r0.yyzw, r3.yyzw
add r0.yzw, r0.yyzw, r6.xxyz
mad r1.xyz, -r4.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), r1.yzwy
dp3_sat r1.x, -r1.xyzx, r2.xyzx
mad r1.x, r1.x, cb0[12].x, -cb0[12].x
exp r1.x, r1.x
add r1.y, -|r4.y|, l(1.000000)
add_sat r1.y, r1.y, r1.y
mul r1.x, r1.y, r1.x
mul r1.xyz, r5.xyzx, r1.xxxx
mul r1.xyz, r1.xyzx, cb0[12].yzwy
mul_sat r1.xyz, r1.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
add r0.yzw, r0.yyzw, r1.xxyz
mul o0.xyz, r0.yzwy, r3.xxxx
mov o0.w, r0.x
ret
// Approximately 0 instruction slots used