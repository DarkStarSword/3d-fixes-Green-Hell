// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 075d892c716c1174-ps.txt
// 3DMigoto: 075d892c716c1174 | Matched 3 variants of 1 shaders: Shader Forge/3mat_vert_blend
//
//       Unity headers extracted from Shader Forge_3mat_vert_blend
//       Shader "Shader Forge/3mat_vert_blend" {
//         CustomEditor "ShaderForgeMaterialInspector"
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           Tags { "RenderType"="Opaque" }
//           Pass 1/3 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDBASE" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Shader Forge_3mat_vert_blend:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 137 3 4
//      undeciphered1a: 12
// 2:   Keywords { "DIRECTIONAL" "DIRLIGHTMAP_COMBINED" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 4:   Keywords { "DIRECTIONAL" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 1:   Keywords { "DIRECTIONAL" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//      undeciphered2: 1 5 4 4 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 144
//      Vector 32 [_LightColor0]
//      Vector 64 [_Albedo3_ST]
//      Vector 80 [_Albedo2_ST]
//      Vector 96 [_Albedo1_ST]
//      Float 112 [_metallic]
//      Vector 128 [_colordif]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      ConstBuffer "UnityReflectionProbes" 128
//      Vector 0 [unity_SpecCube0_BoxMax]
//      Vector 16 [unity_SpecCube0_BoxMin]
//      Vector 32 [unity_SpecCube0_ProbePosition]
//      Vector 48 [unity_SpecCube0_HDR]
//      Vector 64 [unity_SpecCube1_BoxMax]
//      Vector 80 [unity_SpecCube1_BoxMin]
//      Vector 96 [unity_SpecCube1_ProbePosition]
//      Vector 112 [unity_SpecCube1_HDR]
//      SetTexture 0 [_Albedo1] 2D 3
//      SetTexture 1 [_Albedo2] 2D 2
//      SetTexture 2 [_Albedo3] 2D 1
//      SetTexture 3 [unity_SpecCube0] CUBE 0
//      SetTexture 4 [unity_SpecCube1] CUBE -1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:26:49 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float
// TEXCOORD                 2   xy          2     NONE   float
// TEXCOORD                 3   xyzw        3     NONE   float   xyz
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// TEXCOORD                 5   xyz         5     NONE   float
// TEXCOORD                 6   xyz         6     NONE   float
// COLOR                    0   xyzw        7     NONE   float   xy
// TEXCOORD                10   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v7.xy
dcl_output o0.xyzw
dcl_temps 14
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 075d892c716c1174-ps.txt

mul r12.w, -r12.x, r12.y
mad r13.xyz, -r12.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v4.xyzx, v4.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v4.xyzx
add r1.xyz, -v3.xyzx, r13.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
dp3 r1.w, -r2.xyzx, r0.xyzx
add r1.w, r1.w, r1.w
mad r3.xyz, r0.xyzx, -r1.wwww, -r2.xyzx
dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, cb2[0].xyzx
mad r1.xyz, r1.xyzx, r0.wwww, r4.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mad r5.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
sample r5.xyzw, r5.xyxx, t0.xyzw, s3
mad r6.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r6.xyzw, r6.xyxx, t1.xyzw, s2
mad r7.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
sample r7.xyzw, r7.xyxx, t2.xyzw, s1
add r6.xyzw, -r5.wxyz, r6.wxyz
mad r5.xyzw, v7.xxxx, r6.xyzw, r5.wxyz
add r6.xyzw, -r5.xyzw, r7.wxyz
mad r5.xyzw, v7.yyyy, r6.xyzw, r5.xyzw
add r0.w, -r5.x, l(1.000000)
mul r1.w, r0.w, r0.w
lt r2.w, l(0.000000), cb3[2].w
if_nz r2.w
  dp3 r2.w, r3.xyzx, r3.xyzx
  rsq r2.w, r2.w
  mul r6.xyz, r2.wwww, r3.xyzx
  add r7.xyz, -v3.xyzx, cb3[0].xyzx
  div r7.xyz, r7.xyzx, r6.xyzx
  add r8.xyz, -v3.xyzx, cb3[1].xyzx
  div r8.xyz, r8.xyzx, r6.xyzx
  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  min r2.w, r7.y, r7.x
  min r2.w, r7.z, r2.w
  add r7.xyz, v3.xyzx, -cb3[2].xyzx
  mad r6.xyz, r6.xyzx, r2.wwww, r7.xyzx
else
  mov r6.xyz, r3.xyzx
endif
mad r2.w, -r0.w, l(0.700000), l(1.700000)
mul r2.w, r0.w, r2.w
mul r2.w, r2.w, l(6.000000)
sample_l r6.xyzw, r6.xyzx, t3.xyzw, s0, r2.w
add r3.w, r6.w, l(-1.000000)
mad r3.w, cb3[3].w, r3.w, l(1.000000)
log r3.w, r3.w
mul r3.w, r3.w, cb3[3].y
exp r3.w, r3.w
mul r3.w, r3.w, cb3[3].x
mul r7.xyz, r6.xyzx, r3.wwww
lt r4.w, cb3[1].w, l(0.999990)
if_nz r4.w
  lt r4.w, l(0.000000), cb3[6].w
  if_nz r4.w
    dp3 r4.w, r3.xyzx, r3.xyzx
    rsq r4.w, r4.w
    mul r8.xyz, r3.xyzx, r4.wwww
    add r9.xyz, -v3.xyzx, cb3[4].xyzx
    div r9.xyz, r9.xyzx, r8.xyzx
    add r10.xyz, -v3.xyzx, cb3[5].xyzx
    div r10.xyz, r10.xyzx, r8.xyzx
    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
    min r4.w, r9.y, r9.x
    min r4.w, r9.z, r4.w
    add r9.xyz, v3.xyzx, -cb3[6].xyzx
    mad r3.xyz, r8.xyzx, r4.wwww, r9.xyzx
  endif
  sample_l r8.xyzw, r3.xyzx, t4.xyzw, s0, r2.w
  add r2.w, r8.w, l(-1.000000)
  mad r2.w, cb3[7].w, r2.w, l(1.000000)
  log r2.w, r2.w
  mul r2.w, r2.w, cb3[7].y
  exp r2.w, r2.w
  mul r2.w, r2.w, cb3[7].x
  mul r3.xyz, r8.xyzx, r2.wwww
  mad r6.xyz, r3.wwww, r6.xyzx, -r3.xyzx
  mad r7.xyz, cb3[1].wwww, r6.xyzx, r3.xyzx
endif
dp3 r2.w, r0.xyzx, r4.xyzx
max r2.w, r2.w, l(0.000000)
min r3.x, r2.w, l(1.000000)
dp3_sat r3.y, r4.xyzx, r1.xyzx
mul r4.xyz, r5.yzwy, cb0[8].xyzx
mad r5.yzw, r5.yyzw, cb0[8].xxyz, l(0.000000, -0.040000, -0.040000, -0.040000)
mad r5.yzw, cb0[7].xxxx, r5.yyzw, l(0.000000, 0.040000, 0.040000, 0.040000)
mad r3.z, -cb0[7].x, l(0.960000), l(0.960000)
mul r4.xyz, r3.zzzz, r4.xyzx
add r3.z, -r3.z, l(1.000000)
dp3 r2.x, r0.xyzx, r2.xyzx
dp3_sat r0.x, r0.xyzx, r1.xyzx
mad r0.y, -r0.w, r0.w, l(1.000000)
mad r0.z, |r2.x|, r0.y, r1.w
mad r0.y, r3.x, r0.y, r1.w
mul r0.y, r0.y, |r2.x|
mad r0.y, r3.x, r0.z, r0.y
add r0.y, r0.y, l(0.000010)
div r0.y, l(0.500000), r0.y
mul r0.z, r1.w, r1.w
mad r1.x, r0.x, r0.z, -r0.x
mad r0.x, r1.x, r0.x, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r0.x, r0.x, r0.x, l(1.000000012E-007)
div r0.x, r0.z, r0.x
mul r0.x, r0.x, r0.y
mul r0.x, r3.x, r0.x
mul r0.x, r0.x, l(3.14159274)
max r0.x, r0.x, l(0.000000)
mad r0.y, r1.w, r1.w, l(1.000000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
dp3 r0.z, r5.yzwy, r5.yzwy
ne r0.z, r0.z, l(0.000000)
and r0.z, r0.z, l(0x3f800000)
mul r0.x, r0.z, r0.x
mul r1.xyz, r0.xxxx, cb0[2].xyzx
add r0.x, -r3.y, l(1.000000)
mul r0.z, r0.x, r0.x
mul r0.z, r0.z, r0.z
mul r0.x, r0.x, r0.z
add r6.xyz, -r5.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r6.xyz, r6.xyzx, r0.xxxx, r5.yzwy
add_sat r0.x, r3.z, r5.x
add r0.z, -|r2.x|, l(1.000000)
mul r1.w, r0.z, r0.z
mul r1.w, r1.w, r1.w
mul r0.z, r0.z, r1.w
add r2.xyz, -r5.yzwy, r0.xxxx
mad r2.xyz, r0.zzzz, r2.xyzx, r5.yzwy
mul r2.xyz, r2.xyzx, r7.xyzx
mul r2.xyz, r0.yyyy, r2.xyzx
mad r1.xyz, r1.xyzx, r6.xyzx, r2.xyzx
add r0.x, r3.y, r3.y
mul r0.x, r3.y, r0.x
add r0.y, -r2.w, l(1.000000)
mul r1.w, r0.y, r0.y
mul r1.w, r1.w, r1.w
mul r0.y, r0.y, r1.w
mad r0.x, r0.x, r0.w, l(-0.500000)
mad r0.y, r0.x, r0.y, l(1.000000)
mad r0.x, r0.x, r0.z, l(1.000000)
mul r0.x, r0.x, r0.y
mul r0.x, r2.w, r0.x
mul r0.xyz, r0.xxxx, cb0[2].xyzx
mad o0.xyz, r0.xyzx, r4.xyzx, r1.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used