// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2d8a9b5697867fb6-ps.txt
// 3DMigoto: 2d8a9b5697867fb6 |    Unity headers extracted from Amplify_mud_buildings
//    Shader "Amplify/mud_buildings" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_mud_buildings:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 201802150 125 8 2
//   undeciphered1a: 7
//   Keywords { "DIRECTIONAL" "FOG_LINEAR" "_LIGHTEN_ON" "_1OR2COLORVARIABLE_ON" "_INVERTMASK_ON" }
//   undeciphered2: 1 8 5 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 144
//   Vector 32 [_LightColor0]
//   Float 64 [_Tilingdetail]
//   Float 68 [_Tilingdetail2]
//   Float 72 [_MaskContrast]
//   Float 76 [_cracknrmpower]
//   Float 80 [_cracktilling]
//   Float 84 [_AlbedoVariabletilling]
//   Float 88 [_variablepower]
//   Vector 96 [_AlbedoColor]
//   Float 112 [_Smth1]
//   Float 116 [_Smth2]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_mask] 2D 3
//   SetTexture 1 [_nrm1] 2D 1
//   SetTexture 2 [_nrm2] 2D 2
//   SetTexture 3 [_cracknrm] 2D 4
//   SetTexture 4 [_Albedovariable] 2D 5
//   SetTexture 5 [_albedo1] 2D 6
//   SetTexture 6 [_albedo2] 2D 7
//   SetTexture 7 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:44:50 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 7     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyzw        6     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2d8a9b5697867fb6-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, r8.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
mul r2.xyzw, v1.xyxy, cb0[4].xxyy
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.xyxx, t0.xyzw, s3
mul r3.yzw, r3.xxyz, cb0[4].zzzz
mad r1.w, -r3.x, cb0[4].z, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r2.xyxx, t1.xywz, s1
mul r4.x, r4.z, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r3.x, r4.xyxx, r4.xyxx
min r3.x, r3.x, l(1.000000)
add r3.x, -r3.x, l(1.000000)
sqrt r4.z, r3.x
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r2.zwzz, t2.xywz, s2
mul r5.x, r5.z, r5.x
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r3.x, r5.xyxx, r5.xyxx
min r3.x, r3.x, l(1.000000)
add r3.x, -r3.x, l(1.000000)
sqrt r5.z, r3.x
add r5.xyz, -r4.xyzx, r5.xyzx
mad r4.xyz, r1.wwww, r5.xyzx, r4.xyzx
mul r5.xyzw, v1.xyxy, cb0[5].xxyy
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyxx, t3.xywz, s4
mul r6.x, r6.z, r6.x
mad r5.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xy, r5.xyxx, cb0[4].wwww
dp2 r3.x, r6.xyxx, r6.xyxx
min r3.x, r3.x, l(1.000000)
add r3.x, -r3.x, l(1.000000)
sqrt r3.x, r3.x
mad r6.xy, r5.xyxx, cb0[4].wwww, r4.xyxx
mul r6.z, r3.x, r4.z
dp3 r3.x, r6.xyzx, r6.xyzx
rsq r3.x, r3.x
mul r4.xyz, r3.xxxx, r6.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r5.zwzz, t4.xyzw, s5
add r5.xyz, r5.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r5.xyz, cb0[5].zzzz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r6.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r3.yzwy, r6.xyzx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r2.xyxx, t5.xyzw, s6
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.zwzz, t6.xyzw, s7
add r2.xyz, -r5.xyzx, r2.xyzx
mad r2.xyz, r1.wwww, r2.xyzx, r5.xyzx
add r5.xyz, -cb0[6].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r2.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad_sat r2.xyz, -r5.xyzx, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r3.xyzx
mul r3.x, r5.w, cb0[7].x
mad r2.w, r2.w, cb0[7].y, -r3.x
mad r1.w, r1.w, r2.w, r3.x
eq r2.w, cb4[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb4[0].y, l(1.000000)
  mul r3.xyz, v5.yyyy, cb4[2].xyzx
  mad r3.xyz, cb4[1].xyzx, v5.xxxx, r3.xyzx
  mad r3.xyz, cb4[3].xyzx, v5.zzzz, r3.xyzx
  add r3.xyz, r3.xyzx, cb4[4].xyzx
  movc r3.xyz, r2.wwww, r3.xyzx, v5.xyzx
  add r3.xyz, r3.xyzx, -cb4[6].xyzx
  mul r3.yzw, r3.xxyz, cb4[5].xxyz
  mad r2.w, r3.y, l(0.250000), l(0.750000)
  mad r3.y, cb4[0].z, l(0.500000), l(0.750000)
  max r3.x, r2.w, r3.y
  sample_indexable(texture3d)(float,float,float,float) r3.xyzw, r3.xzwx, t7.xyzw, s0
else
  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r3.xyzw, cb2[46].xyzw
dp3 r3.x, v2.xyzx, r4.xyzx
dp3 r3.y, v3.xyzx, r4.xyzx
dp3 r3.z, v4.xyzx, r4.xyzx
dp3 r3.w, r3.xyzx, r3.xyzx
rsq r3.w, r3.w
mul r3.xyz, r3.wwww, r3.xyzx
mul r4.xyz, r2.wwww, cb0[2].xyzx
mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
add r1.w, -r1.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.xyzx, r1.xyzx
dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
dp3_sat r1.y, r3.xyzx, r0.xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.x, l(1.000000)
mul r1.z, r0.z, r0.z
mul r1.z, r1.z, r1.z
mul r0.z, r0.z, r1.z
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.z, -|r0.w|, l(1.000000)
mul r2.w, r1.z, r1.z
mul r2.w, r2.w, r2.w
mul r1.z, r1.z, r2.w
mad r0.y, r0.y, r1.z, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
max r0.z, r0.z, l(0.002000)
add r1.z, -r0.z, l(1.000000)
mad r1.w, |r0.w|, r1.z, r0.z
mad r1.z, r1.x, r1.z, r0.z
mul r0.w, |r0.w|, r1.z
mad r0.w, r1.x, r1.w, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.z, r1.y, r0.z, -r1.y
mad r1.y, r1.z, r1.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.y, r1.y, r1.y, l(1.000000012E-007)
div r0.z, r0.z, r1.y
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r1.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
mul r1.xyz, r0.yyyy, r4.xyzx
mul r0.yzw, r4.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
mad r0.x, r0.x, l(0.960000), l(0.040000)
mul r0.xyz, r0.xxxx, r0.yzwy
mad r0.xyz, r2.xyzx, r1.xyzx, r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used