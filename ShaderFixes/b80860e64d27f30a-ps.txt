// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b80860e64d27f30a-ps.txt
// 3DMigoto: b80860e64d27f30a |    Unity headers extracted from NatureManufacture Shaders_Water_Water River Mobile Flow
//    Shader "NatureManufacture Shaders/Water/Water River Mobile Flow" {
//      SubShader 1/1 {
//        Tags { "IsEmissive"="true" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//        Pass 3/5 {
//          Name "FORWARD"
//          Tags { "IsEmissive"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from NatureManufacture Shaders_Water_Water River Mobile Flow:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 321 23 2
//   undeciphered1a: 14
//   Keywords { "SPOT" }
//   undeciphered2: 1 8 4 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 528
//   Vector 32 [_LightColor0]
//   Float 128 [_NormalScale]
//   ScalarInt 132 [_UVVDirection1UDirection0]
//   Vector 136 [_WaterMixSpeed] 2
//   Vector 144 [_WaterNormal_ST]
//   Float 160 [_GlobalTiling]
//   Vector 164 [_WaterMainSpeed] 2
//   Float 172 [_SmallCascadeNormalScale]
//   Vector 176 [_SmallCascadeMixSpeed] 2
//   Vector 184 [_SmallCascadeMainSpeed] 2
//   Float 192 [_SmallCascadeAngle]
//   Float 196 [_SmallCascadeAngleFalloff]
//   Float 200 [_BigCascadeAngle]
//   Float 204 [_BigCascadeAngleFalloff]
//   Float 208 [_BigCascadeNormalScale]
//   Vector 212 [_BigCascadeMixSpeed] 2
//   Vector 224 [_BigCascadeMainSpeed] 2
//   Float 232 [_Distortion]
//   Vector 240 [_DeepColor]
//   Vector 256 [_ShalowColor]
//   Float 272 [_ShalowDepth]
//   Float 276 [_ShalowFalloff]
//   Float 280 [_BigCascadeTransparency]
//   Vector 288 [_FoamColor] 3
//   Float 300 [_FoamDepth]
//   Float 304 [_FoamFalloff]
//   Vector 320 [_Foam_ST]
//   Vector 336 [_FoamSpeed] 2
//   Vector 344 [_NoiseSpeed] 2
//   Vector 352 [_NoiseTiling] 2
//   Vector 368 [_CascadesTextures_ST]
//   Float 384 [_SmallCascadeNoisePower]
//   Vector 388 [_SmallCascadeColor] 3
//   Float 400 [_SmallCascadeFoamFalloff]
//   Float 404 [_BigCascadeNoisePower]
//   Vector 416 [_BigCascadeColor] 3
//   Float 428 [_BigCascadeFoamFalloff]
//   Float 440 [_WaterSpecularFar]
//   Float 444 [_WaterSpecularClose]
//   Float 448 [_WaterSpecularThreshold]
//   Float 452 [_FoamSpecular]
//   Float 456 [_SmallCascadeSpecular]
//   Float 460 [_BigCascadeSpecular]
//   Float 464 [_WaterSmoothness]
//   Float 468 [_FoamSmoothness]
//   Float 472 [_SmallCascadeSmoothness]
//   Float 476 [_BigCascadeSmoothness]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 16 [_SinTime]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_WaterNormal] 2D 3
//   SetTexture 1 [_WaterGrab] 2D 4
//   SetTexture 2 [_CameraDepthTexture] 2D 5
//   SetTexture 3 [_Foam] 2D 6
//   SetTexture 4 [_CascadesTextures] 2D 7
//   SetTexture 5 [_LightTexture0] 2D 1
//   SetTexture 6 [_LightTextureB0] 2D 2
//   SetTexture 7 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:02:20 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 6   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[30], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyw
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b80860e64d27f30a-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v5.xyzx, r15.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mad r3.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[10].x
mul r3.xy, r1.wwww, r3.xyxx
itof r2.w, cb0[8].y
eq r2.w, r2.w, l(1.000000)
movc r3.zw, r2.wwww, cb0[8].zzzw, cb0[8].wwwz
mad r3.zw, cb1[0].yyyy, r3.zzzw, r3.xxxy
movc r4.xy, r2.wwww, cb0[10].yzyy, cb0[10].zyzz
mul r4.xy, r4.xyxx, v1.zwzz
mul r5.xyz, cb1[0].yyyy, l(0.150000, 0.250000, 0.600000, 0.000000)
frc r5.xyz, r5.xyzx
mad r4.zw, r4.xxxy, r5.xxxx, r3.xxxy
mad r6.xyz, cb1[0].yyyy, l(0.150000, 0.250000, 0.600000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
frc r6.xyz, r6.xyzx
mad r4.xy, r4.xyxx, r6.xxxx, r3.xyxx
add r7.xyz, r5.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r7.xyz, r7.xyzx, r7.xyzx
sample r8.xyzw, r4.zwzz, t0.xyzw, s3
mul r8.x, r8.w, r8.x
mad r4.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r8.xy, r4.zwzz, cb0[8].xxxx
dp2 r4.z, r8.xyxx, r8.xyxx
min r4.z, r4.z, l(1.000000)
add r4.z, -r4.z, l(1.000000)
sqrt r8.z, r4.z
sample r4.xyzw, r4.xyxx, t0.xyzw, s3
mul r4.x, r4.w, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, cb0[8].xxxx
dp2 r4.w, r4.xyxx, r4.xyxx
min r4.w, r4.w, l(1.000000)
add r4.w, -r4.w, l(1.000000)
sqrt r4.z, r4.w
add r4.xyz, -r8.xyzx, r4.xyzx
mad r4.xyz, |r7.xxxx|, r4.xyzx, r8.xyzx
sample r8.xyzw, r3.zwzz, t0.xyzw, s3
mul r3.z, cb0[8].x, l(1.200000)
mul r8.x, r8.w, r8.x
mad r8.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r8.zw, r3.zzzz, r8.xxxy
dp2 r3.w, r8.zwzz, r8.zwzz
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r3.w, r3.w
mad r8.xy, r8.xyxx, r3.zzzz, r4.xyxx
mul r8.z, r4.z, r3.w
dp3 r3.z, r8.xyzx, r8.xyzx
rsq r3.z, r3.z
mul r4.xyz, r3.zzzz, r8.xyzx
movc r8.xyzw, r2.wwww, cb0[11].xyzw, cb0[11].yxwz
mad r3.zw, cb1[0].yyyy, r8.xxxy, r3.xxxy
mul r8.xy, r8.zwzz, v1.zwzz
mad r5.yw, r8.xxxy, r5.yyyy, r3.xxxy
mad r6.yw, r8.xxxy, r6.yyyy, r3.xxxy
sample r8.xyzw, r5.ywyy, t0.xyzw, s3
mul r8.x, r8.w, r8.x
mad r8.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r8.xy, r8.xyxx, cb0[10].wwww
dp2 r4.w, r8.xyxx, r8.xyxx
min r4.w, r4.w, l(1.000000)
add r4.w, -r4.w, l(1.000000)
sqrt r8.z, r4.w
sample r9.xyzw, r6.ywyy, t0.xyzw, s3
mul r9.x, r9.w, r9.x
mad r9.xy, r9.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r9.xy, r9.xyxx, cb0[10].wwww
dp2 r4.w, r9.xyxx, r9.xyxx
min r4.w, r4.w, l(1.000000)
add r4.w, -r4.w, l(1.000000)
sqrt r9.z, r4.w
add r9.xyz, -r8.xyzx, r9.xyzx
mad r8.xyz, |r7.yyyy|, r9.xyzx, r8.xyzx
mov_sat r4.w, v3.z
mul r9.xy, cb0[12].zxzz, l(0.0222222228, 0.0222222228, 0.000000, 0.000000)
mad r9.zw, -cb0[12].zzzx, l(0.000000, 0.000000, 0.0222222228, 0.0222222228), l(0.000000, 0.000000, 1.000000, 1.000000)
add r9.zw, r4.wwww, -r9.zzzw
max r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min r9.zw, r9.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000)
div r9.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r9.xyxx
mul_sat r9.xy, r9.xyxx, r9.zwzz
add r9.xy, -r9.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
log r9.xy, r9.xyxx
mul r9.xy, r9.xyxx, cb0[12].wyww
exp r9.xy, r9.xyxx
min r4.w, r9.x, l(1.000000)
add_sat r7.w, -r4.w, r9.y
sample r9.xyzw, r3.zwzz, t0.xyzw, s3
mul r9.x, r9.w, r9.x
mad r3.zw, r9.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r9.xy, r3.zwzz, cb0[10].wwww
dp2 r8.w, r9.xyxx, r9.xyxx
min r8.w, r8.w, l(1.000000)
add r8.w, -r8.w, l(1.000000)
sqrt r8.w, r8.w
mad r9.xy, r3.zwzz, cb0[10].wwww, r8.xyxx
mul r9.z, r8.z, r8.w
dp3 r3.z, r9.xyzx, r9.xyzx
rsq r3.z, r3.z
mad r8.xyz, r9.xyzx, r3.zzzz, -r4.xyzx
mad r4.xyz, r7.wwww, r8.xyzx, r4.xyzx
movc r3.zw, r2.wwww, cb0[13].yyyz, cb0[13].zzzy
mad r3.zw, cb1[0].yyyy, r3.zzzw, r3.xxxy
movc r8.xy, r2.wwww, cb0[14].xyxx, cb0[14].yxyy
mul r8.xy, r8.xyxx, v1.zwzz
mad r8.zw, r8.xxxy, r5.zzzz, r3.xxxy
mad r3.xy, r8.xyxx, r6.zzzz, r3.xyxx
sample r9.xyzw, r8.zwzz, t0.xyzw, s3
mul r9.x, r9.w, r9.x
mad r8.xy, r9.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r9.xy, r8.xyxx, cb0[13].xxxx
dp2 r5.z, r9.xyxx, r9.xyxx
min r5.z, r5.z, l(1.000000)
add r5.z, -r5.z, l(1.000000)
sqrt r9.z, r5.z
sample r10.xyzw, r3.xyxx, t0.xyzw, s3
mul r10.x, r10.w, r10.x
mad r8.xy, r10.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r10.xy, r8.xyxx, cb0[13].xxxx
dp2 r5.z, r10.xyxx, r10.xyxx
min r5.z, r5.z, l(1.000000)
add r5.z, -r5.z, l(1.000000)
sqrt r10.z, r5.z
add r10.xyz, -r9.xyzx, r10.xyzx
mad r9.xyz, |r7.zzzz|, r10.xyzx, r9.xyzx
sample r10.xyzw, r3.zwzz, t0.xyzw, s3
mul r10.x, r10.w, r10.x
mad r3.zw, r10.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r8.xy, r3.zwzz, cb0[13].xxxx
dp2 r5.z, r8.xyxx, r8.xyxx
min r5.z, r5.z, l(1.000000)
add r5.z, -r5.z, l(1.000000)
sqrt r5.z, r5.z
mad r10.xy, r3.zwzz, cb0[13].xxxx, r9.xyxx
mul r10.z, r9.z, r5.z
dp3 r3.z, r10.xyzx, r10.xyzx
rsq r3.z, r3.z
mad r9.xyz, r10.xyzx, r3.zzzz, -r4.xyzx
mad r4.xyz, r4.wwww, r9.xyzx, r4.xyzx
add r9.xyw, v6.wxww, l(9.999999960E-012, 0.000000, 0.000000, 9.999999960E-012)
mul r3.z, r9.x, l(0.500000)
mad r3.w, -r9.x, l(0.500000), v6.y
mad r9.z, -r3.w, cb1[5].x, r3.z
div r9.yzw, r9.yyzw, r9.xxxx
div r3.zw, r9.yyyz, r9.wwww
mad r3.zw, r4.xxxy, cb0[14].zzzz, r3.zzzw
sample r10.xyzw, r3.zwzz, t1.xyzw, s4
div r3.zw, v6.xxxy, r9.xxxx
sample r11.xyzw, r3.zwzz, t2.xyzw, s5
mad r3.z, cb1[7].z, r11.x, cb1[7].w
div r3.z, l(1.000000, 1.000000, 1.000000, 1.000000), r3.z
add r3.z, -r9.x, r3.z
add r3.w, |r3.z|, cb0[17].x
log r3.w, r3.w
mul r3.w, r3.w, cb0[17].y
exp r3.w, r3.w
mul r5.z, r4.w, cb0[17].z
add r6.z, -r3.w, l(100.000000)
mad_sat r3.w, r5.z, r6.z, r3.w
add r9.xyz, -cb0[15].xyzx, cb0[16].xyzx
mad r9.xyz, r3.wwww, r9.xyzx, cb0[15].xyzx
add r3.z, |r3.z|, cb0[18].w
log r3.z, r3.z
mul r3.z, r3.z, cb0[19].x
exp r3.z, r3.z
min r3.z, r3.z, l(1.000000)
mad r8.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
mul r8.xy, r1.wwww, r8.xyxx
movc r11.xyzw, r2.wwww, cb0[21].xyzw, cb0[21].yxwz
mul r11.xy, r11.xyxx, v1.zwzz
mad r5.xz, r11.xxyx, r5.xxxx, r8.xxyx
mad r6.xz, r11.xxyx, r6.xxxx, r8.xxyx
sample r12.xyzw, r5.xzxx, t3.xyzw, s6
sample r13.xyzw, r6.xzxx, t3.xyzw, s6
add r2.w, -r12.w, r13.w
mad r2.w, |r7.x|, r2.w, r12.w
mul r2.w, r2.w, r3.z
add r12.xyz, -r9.xyzx, cb0[18].xyzx
mad r12.xyz, r2.wwww, r12.xyzx, r9.xyzx
add r12.xyz, -r10.xyzx, r12.xyzx
mad r10.xyz, r3.zzzz, r12.xyzx, r10.xyzx
add r3.z, -r3.w, l(1.000000)
add r9.xyz, r9.xyzx, -r10.xyzx
mad r9.xyz, r3.zzzz, r9.xyzx, r10.xyzx
sample r5.xyzw, r5.ywyy, t4.xyzw, s7
sample r6.xyzw, r6.ywyy, t4.xyzw, s7
add r3.z, -r5.x, r6.x
mad r3.z, |r7.y|, r3.z, r5.x
mad r5.xy, v1.xyxx, cb0[23].xyxx, cb0[23].zwzz
mul r5.xy, r1.wwww, r5.xyxx
mul r5.xy, r5.xyxx, cb0[22].xyxx
mul r5.zw, r11.zzzw, cb1[1].xxxx
mad r5.zw, r5.zzzw, l(0.000000, 0.000000, -1.200000, -0.900000), r5.xxxy
sample r6.xyzw, r5.zwzz, t4.xyzw, s7
mad r5.xy, r11.zwzz, cb1[1].xxxx, r5.xyxx
sample r10.xyzw, r5.xyxx, t4.xyzw, s7
min r1.w, r6.w, r10.w
log r1.w, r1.w
mul r1.w, r1.w, cb0[24].x
exp r1.w, r1.w
mul r1.w, r1.w, l(20.000000)
min r1.w, r1.w, l(1.000000)
mul r1.w, r3.z, r1.w
log r3.z, r3.z
mul r3.z, r3.z, cb0[25].x
exp r3.z, r3.z
min r3.z, r3.z, l(1.000000)
mul r3.z, r3.z, r7.w
mad r6.xyz, r1.wwww, cb0[24].yzwy, -r9.xyzx
mad r6.xyz, r3.zzzz, r6.xyzx, r9.xyzx
sample r8.xyzw, r8.zwzz, t4.xyzw, s7
sample r9.xyzw, r3.xyxx, t4.xyzw, s7
add r1.w, -r8.y, r9.y
mad r1.w, |r7.z|, r1.w, r8.y
add r3.xy, r5.xyxx, l(-0.470000, 0.370000, 0.000000, 0.000000)
sample r5.xyzw, r3.xyxx, t4.xyzw, s7
min r3.x, r5.w, r6.w
log r3.x, r3.x
mul r3.x, r3.x, cb0[25].y
exp r3.x, r3.x
mul r3.x, r3.x, l(20.000000)
min r3.x, r3.x, l(1.000000)
mul r3.y, r1.w, l(0.500000)
mad r3.x, r3.x, r3.y, r3.y
log r1.w, r1.w
mul r1.w, r1.w, cb0[26].w
exp r1.w, r1.w
min r1.w, r1.w, l(1.000000)
mul r1.w, r1.w, r4.w
mad r5.xyz, r3.xxxx, cb0[26].xyzx, -r6.xyzx
mad r5.xyz, r1.wwww, r5.xyzx, r6.xyzx
log r3.x, r3.w
mul r3.x, r3.x, cb0[28].x
exp r3.x, r3.x
add r3.y, -cb0[27].z, cb0[27].w
mad r3.x, r3.x, r3.y, cb0[27].z
add r3.y, -r3.x, cb0[28].y
mad r3.x, r2.w, r3.y, r3.x
mul r3.y, r7.w, r3.z
add r3.z, -r3.x, cb0[28].z
mad r3.x, r3.y, r3.z, r3.x
mul r1.w, r4.w, r1.w
add r3.z, -r3.x, cb0[28].w
mad r3.x, r1.w, r3.z, r3.x
add r3.z, -cb0[29].x, cb0[29].y
mad r2.w, r2.w, r3.z, cb0[29].x
add r3.z, -r2.w, cb0[29].z
mad r2.w, r3.y, r3.z, r2.w
add r3.y, -r2.w, cb0[29].w
mad r1.w, r1.w, r3.y, r2.w
mul r6.xyzw, v5.yyyy, cb0[5].xyzw
mad r6.xyzw, cb0[4].xyzw, v5.xxxx, r6.xyzw
mad r6.xyzw, cb0[6].xyzw, v5.zzzz, r6.xyzw
add r6.xyzw, r6.xyzw, cb0[7].xyzw
eq r2.w, cb3[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb3[0].y, l(1.000000)
  mul r3.yzw, v5.yyyy, cb3[2].xxyz
  mad r3.yzw, cb3[1].xxyz, v5.xxxx, r3.yyzw
  mad r3.yzw, cb3[3].xxyz, v5.zzzz, r3.yyzw
  add r3.yzw, r3.yyzw, cb3[4].xxyz
  movc r3.yzw, r2.wwww, r3.yyzw, v5.xxyz
  add r3.yzw, r3.yyzw, -cb3[6].xxyz
  mul r7.yzw, r3.yyzw, cb3[5].xxyz
  mad r2.w, r7.y, l(0.250000), l(0.750000)
  mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  max r7.x, r2.w, r3.y
  sample r7.xyzw, r7.xzwx, t7.xyzw, s0
else
  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r7.xyzw, cb2[46].xyzw
lt r3.y, l(0.000000), r6.z
and r3.y, r3.y, l(0x3f800000)
div r3.zw, r6.xxxy, r6.wwww
add r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
sample r7.xyzw, r3.zwzz, t5.xyzw, s1
mul r3.y, r3.y, r7.w
dp3 r3.z, r6.xyzx, r6.xyzx
sample r6.xyzw, r3.zzzz, t6.xyzw, s2
mul r3.y, r3.y, r6.x
mul r2.w, r2.w, r3.y
dp3 r6.x, v2.xyzx, r4.xyzx
dp3 r6.y, v3.xyzx, r4.xyzx
dp3 r6.z, v4.xyzx, r4.xyzx
dp3 r3.y, r6.xyzx, r6.xyzx
rsq r3.y, r3.y
mul r3.yzw, r3.yyyy, r6.xxyz
mul r4.xyz, r2.wwww, cb0[2].xyzx
max r2.w, r3.x, r3.x
max r2.w, r3.x, r2.w
add r2.w, -r2.w, l(1.000000)
mul r5.xyz, r2.wwww, r5.xyzx
add r1.w, -r1.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.yzwy, r2.xyzx
dp3_sat r2.x, r3.yzwy, r1.xyzx
dp3_sat r2.y, r3.yzwy, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
add r0.y, r0.x, r0.x
mul r0.y, r0.x, r0.y
mad r0.y, r0.y, r1.w, l(-0.500000)
add r0.z, -r2.x, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
max r0.z, r0.z, l(0.002000)
add r1.x, -r0.z, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r2.x, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r2.x, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r2.y, r0.z, -r2.y
mad r1.x, r1.x, r2.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r2.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r3.xxxx, r3.xxxx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r4.xyzx
mul r0.yzw, r4.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r1.w, -r3.x, l(1.000000)
mad r0.x, r1.w, r0.x, r3.x
mul r0.xyz, r0.xxxx, r0.yzwy
mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used