// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 5213eb7a29813aea-vs.txt
// 3DMigoto: 5213eb7a29813aea |    Unity headers extracted from Custom_RainCone
//    Shader "Custom/RainCone" {
//      SubShader 1/1 {
//        LOD 200
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_RainCone:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201802150 32 0 0
//   undeciphered1a: 3
//   Keywords { "SPOT" }
//   undeciphered2: 1 0 4 0 0 0
//   undeciphered3: 255 6 0 0 1 1 4 5 5 6 6 7 3 3
//   ConstBuffer "$Globals" 272
//   Vector 224 [_MainTex_ST]
//   Vector 240 [_UV1Tex_ST]
//   Vector 256 [_UV2Tex_ST]
//   Matrix 32 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityPerDraw" 176
//   Matrix 0 [unity_ObjectToWorld]
//   Matrix 64 [unity_WorldToObject]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 272 [unity_MatrixVP]
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:02:20 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xy
// TEXCOORD                 1   xyzw        4     NONE   float   xy
// TEXCOORD                 2   xyzw        5     NONE   float   xy
// TEXCOORD                 3   xyzw        6     NONE   float
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// COLOR                    0   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyzw        6     NONE   float   xyzw
// TEXCOORD                 5   xyz         7     NONE   float   xyz
// TEXCOORD                 6   xyzw        8     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[7], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xy
dcl_input v5.xy
dcl_input v7.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyz
dcl_output o8.xyzw
dcl_temps 4

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r3.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
add r1.xyzw, r0.xyzw, cb2[3].xyzw
mul r2.xyzw, r1.yyyy, cb3[18].xyzw
mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 5213eb7a29813aea-vs.txt
ne r3.w, r1.w, l(1.0)
if_nz r3.w
  add r3.w, r1.w, -r3.y
  mad r1.x, r3.w, r3.x, r1.x
endif

mad r2.y, cb1[0].x, l(40.000000), v3.y
mov r2.x, v3.x
mul r2.xy, r2.xyxx, cb0[14].xyxx
mad o1.xy, r2.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000), cb0[14].zwzz
mad r2.w, cb1[0].x, l(20.000000), v4.y
mov r2.z, v4.x
mul r2.xy, r2.zwzz, cb0[15].xyxx
mad o1.zw, r2.xxxy, l(0.000000, 0.000000, 4.000000, 4.000000), cb0[15].zzzw
mad r2.y, cb1[0].x, l(10.000000), v5.y
mov r2.x, v5.x
mul r2.xy, r2.xyxx, cb0[16].xyxx
mad o2.xy, r2.xyxx, l(8.000000, 8.000000, 0.000000, 0.000000), cb0[16].zwzz
dp3 r2.x, v2.xyzx, cb2[4].xyzx
dp3 r2.y, v2.xyzx, cb2[5].xyzx
dp3 r2.z, v2.xyzx, cb2[6].xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul o3.xyz, r2.wwww, r2.xyzx
mad r2.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
mov o4.xyz, r2.xyzx
mov o7.xyz, r2.xyzx
mov o5.xyzw, v7.xyzw
mul r1.y, r1.y, cb1[5].x
mul r2.xzw, r1.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
mov o6.zw, r1.zzzw
add o6.xy, r2.zzzz, r2.xwxx
mul r1.xyzw, r0.yyyy, cb0[3].xyzw
mad r1.xyzw, cb0[2].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb0[4].xyzw, r0.zzzz, r1.xyzw
mad o8.xyzw, cb0[5].xyzw, r0.wwww, r1.xyzw
ret
// Approximately 0 instruction slots used