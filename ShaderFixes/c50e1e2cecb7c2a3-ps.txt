// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed c50e1e2cecb7c2a3-ps.txt
// 3DMigoto: c50e1e2cecb7c2a3 |    Unity headers extracted from NatureManufacture Shaders_Water_Water Particles
//    Shader "NatureManufacture Shaders/Water/Water Particles" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "QUEUE"="Transparent+0" "RenderType"="Transparent" }
//        Pass 3/5 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent+0" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from NatureManufacture Shaders_Water_Water Particles:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 83 2 2
//   undeciphered1a: 6
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 2 4 2 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 176
//   Vector 32 [_LightColor0]
//   Vector 64 [_ColorPower] 3
//   Vector 80 [_Color]
//   Vector 96 [_ParticleTexture_ST]
//   Float 144 [_Specular]
//   Float 148 [_Smoothness]
//   Float 156 [_Opacity]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_ParticleTexture] 2D 1
//   SetTexture 1 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:08:15 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float     z
// TEXCOORD                 2   xyz         3     NONE   float     z
// TEXCOORD                 3   xyz         4     NONE   float     z
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// COLOR                    0   xyzw        6     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.z
dcl_input_ps linear v3.z
dcl_input_ps linear v4.z
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyzw
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed c50e1e2cecb7c2a3-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, r7.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
mad r2.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
sample r2.xyzw, r2.xyxx, t0.xyzw, s1
mul r3.xyz, v6.xyzx, cb0[4].xyzx
mul r3.xyz, r3.xyzx, cb0[5].xyzx
mul r2.yzw, r2.xxyz, r3.xxyz
mul_sat r1.w, r2.x, cb0[9].w
mul o0.w, r1.w, v6.w
eq r1.w, cb3[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb3[0].y, l(1.000000)
  mul r3.xyz, v5.yyyy, cb3[2].xyzx
  mad r3.xyz, cb3[1].xyzx, v5.xxxx, r3.xyzx
  mad r3.xyz, cb3[3].xyzx, v5.zzzz, r3.xyzx
  add r3.xyz, r3.xyzx, cb3[4].xyzx
  movc r3.xyz, r1.wwww, r3.xyzx, v5.xyzx
  add r3.xyz, r3.xyzx, -cb3[6].xyzx
  mul r3.yzw, r3.xxyz, cb3[5].xxyz
  mad r1.w, r3.y, l(0.250000), l(0.750000)
  mad r2.x, cb3[0].z, l(0.500000), l(0.750000)
  max r3.x, r1.w, r2.x
  sample r3.xyzw, r3.xzwx, t1.xyzw, s0
else
  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r1.w, r3.xyzw, cb2[46].xyzw
mov r3.x, v2.z
mov r3.y, v3.z
mov r3.z, v4.z
dp3 r2.x, r3.xyzx, r3.xyzx
rsq r2.x, r2.x
mul r3.xyz, r2.xxxx, r3.xyzx
mul r4.xyz, r1.wwww, cb0[2].xyzx
add r5.xy, -cb0[9].xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r2.xyz, r2.yzwy, r5.xxxx
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.xyzx, r1.xyzx
dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
dp3_sat r1.y, r3.xyzx, r0.xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r5.yyyy
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.x, l(1.000000)
mul r1.z, r0.z, r0.z
mul r1.z, r1.z, r1.z
mul r0.z, r0.z, r1.z
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.z, -|r0.w|, l(1.000000)
mul r1.w, r1.z, r1.z
mul r1.w, r1.w, r1.w
mul r1.z, r1.z, r1.w
mad r0.y, r0.y, r1.z, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r5.y, r5.y
max r0.z, r0.z, l(0.002000)
add r1.z, -r0.z, l(1.000000)
mad r1.w, |r0.w|, r1.z, r0.z
mad r1.z, r1.x, r1.z, r0.z
mul r0.w, |r0.w|, r1.z
mad r0.w, r1.x, r1.w, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.z, r1.y, r0.z, -r1.y
mad r1.y, r1.z, r1.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.y, r1.y, r1.y, l(1.000000012E-007)
div r0.z, r0.z, r1.y
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r1.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, cb0[9].xxxx, cb0[9].xxxx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r4.xyzx
mul r0.yzw, r4.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
mad r0.x, r5.x, r0.x, cb0[9].x
mul r0.xyz, r0.xxxx, r0.yzwy
mad o0.xyz, r2.xyzx, r1.xyzx, r0.xyzx
ret
// Approximately 0 instruction slots used