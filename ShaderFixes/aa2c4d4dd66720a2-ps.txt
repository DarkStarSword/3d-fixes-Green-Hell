// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed aa2c4d4dd66720a2-ps.txt
// 3DMigoto: aa2c4d4dd66720a2 |    Unity headers extracted from Hidden_Internal-DeferredShading
//    Shader "Hidden/Internal-DeferredShading" {
//      SubShader 1/1 {
//        Pass 1/2 {
//          Tags { "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_Internal-DeferredShading:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 135 5 2
//   undeciphered1a: 10
//   Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
//   undeciphered2: 1 7 4 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 288
//   Vector 64 [_LightPos]
//   Vector 80 [_LightColor]
//   Vector 240 [_ShadowMapTexture_TexelSize]
//   Matrix 112 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   Matrix 128 [unity_WorldToShadow0]
//   Matrix 192 [unity_WorldToShadow1]
//   Matrix 256 [unity_WorldToShadow2]
//   Matrix 320 [unity_WorldToShadow3]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_LightTexture0] 2D 2
//   SetTexture 2 [_LightTextureB0] 2D 1
//   SetTexture 3 [_CameraGBufferTexture0] 2D 4
//   SetTexture 4 [_CameraGBufferTexture1] 2D 5
//   SetTexture 5 [_CameraGBufferTexture2] 2D 6
//   SetTexture 6 [_ShadowMapTexture] 2D 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//   BindCB "UnityShadows" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:54:41 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 3      w        2     NONE   float      w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_comparison
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 15

// New input from vertex shader with unity_CameraInvProjection[0].x:
dcl_input_ps linear v2.w
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed aa2c4d4dd66720a2-ps.txt

mul r10.w, -r10.x, r10.y
ne r12.x, l(0.0, 0.0, 0.0, 0.0), v2.w
if_nz r12.x
  mul r10.w, r10.w, v2.w
  mad r11.xyz, -r10.wwww, cb2[18].xyzw, cb1[4].xyzw
else
  mad r11.xyz, -r10.wwww, cb10[0].xyzw, cb1[4].xyzw
endif

div r0.x, cb1[5].z, v2.z
mul r0.xyz, r0.xxxx, v2.xyzx
div r1.xy, v1.xyxx, v1.wwww
sample r2.xyzw, r1.xyxx, t0.xyzw, s0
mad r0.w, cb1[7].x, r2.x, cb1[7].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r2.xyz, r0.wwww, r0.xyzx

// copy depth from r2.z to r13.x:
mov r13.x, r2.z


// Unity light/shadow fix (pixel shader stage) inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-lighting-ps --only-autofixed aa2c4d4dd66720a2-ps.txt

add r14.x, r13.x, -r10.y
mul r14.x, r10.x, r14.x
ne r10.w, l(0.0, 0.0, 0.0, 0.0), v2.w
if_nz r10.w
  mad r2.x, -r14.x, v2.w, r2.x
endif

mul r3.xyz, r2.yyyy, cb2[19].xyzx
mad r2.xyw, cb2[18].xyxz, r2.xxxx, r3.xyxz
mad r2.xyw, cb2[20].xyxz, r2.zzzz, r2.xyxw
add r2.xyw, r2.xyxw, cb2[21].xyxz

if_z r10.w
  mad r2.xyw, -r14.xxxx, cb10[0].xyxz, r2.xyzw
endif

add r3.xyz, r2.xywx, -cb3[25].xyzx
dp3 r0.x, r3.xyzx, r3.xyzx
sqrt r0.x, r0.x
mad r0.x, -r0.z, r0.w, r0.x
mad r0.x, cb3[25].w, r0.x, r2.z
add r0.yzw, -r2.xxyw, cb0[4].xxyz
dp3 r1.z, r0.yzwy, r0.yzwy
rsq r1.w, r1.z
mul r3.xyz, r0.yzwy, r1.wwww
mul r4.xyz, r2.yyyy, cb0[8].xywx
mad r4.xyz, cb0[7].xywx, r2.xxxx, r4.xyzx
mad r4.xyz, cb0[9].xywx, r2.wwww, r4.xyzx
add r4.xyz, r4.xyzx, cb0[10].xywx
div r4.xy, r4.xyxx, r4.zzzz
sample_b r5.xyzw, r4.xyxx, t1.xyzw, s2, l(-8.000000)
lt r2.z, r4.z, l(0.000000)
and r2.z, r2.z, l(0x3f800000)
mul r2.z, r2.z, r5.w
mul r1.z, r1.z, cb0[4].w
sample r4.xyzw, r1.zzzz, t2.xyzw, s1
mul r1.z, r2.z, r4.x
mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
lt r2.z, r0.x, l(0.990000)
if_nz r2.z
  mul r4.xyzw, r2.yyyy, cb3[9].xyzw
  mad r4.xyzw, cb3[8].xyzw, r2.xxxx, r4.xyzw
  mad r4.xyzw, cb3[10].xyzw, r2.wwww, r4.xyzw
  add r4.xyzw, r4.xyzw, cb3[11].xyzw
  div r4.xyz, r4.xyzx, r4.wwww
  mad r5.xy, r4.xyxx, cb0[15].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  round_ni r5.xy, r5.xyxx
  mad r4.xy, r4.xyxx, cb0[15].zwzz, -r5.xyxx
  add r6.xyzw, r4.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  mul r7.xw, r6.xxxz, r6.xxxz
  mad r5.zw, r7.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r4.xxxy
  add r6.xz, -r4.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  min r8.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r6.xz, -r8.xxyx, r8.xxyx, r6.xxzx
  max r4.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r4.xy, -r4.xyxx, r4.xyxx, r6.ywyy
  mov r8.x, r5.z
  mov r8.y, r6.x
  mov r8.z, r4.x
  mov r8.w, r7.x
  mul r8.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  mov r7.x, r5.w
  mov r7.y, r6.z
  mov r7.z, r4.y
  mul r6.xyzw, r7.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  add r7.xyzw, r8.ywyw, r8.xzxz
  add r9.xyzw, r6.yyww, r6.xxzz
  div r4.xy, r8.ywyy, r7.zwzz
  add r4.xy, r4.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  div r5.zw, r6.yyyw, r9.yyyw
  add r5.zw, r5.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  mul r6.xy, r4.xyxx, cb0[15].xxxx
  mul r6.zw, r5.zzzw, cb0[15].yyyy
  mul r7.xyzw, r7.xyzw, r9.xyzw
  mad r8.xyzw, r5.xyxy, cb0[15].xyxy, r6.xzyz
  sample_c_lz r2.z, r8.xyxx, t6.xxxx, s3, r4.z
  sample_c_lz r3.w, r8.zwzz, t6.xxxx, s3, r4.z
  mul r3.w, r3.w, r7.y
  mad r2.z, r7.x, r2.z, r3.w
  mad r5.xyzw, r5.xyxy, cb0[15].xyxy, r6.xwyw
  sample_c_lz r3.w, r5.xyxx, t6.xxxx, s3, r4.z
  mad r2.z, r7.z, r3.w, r2.z
  sample_c_lz r3.w, r5.zwzz, t6.xxxx, s3, r4.z
  mad r2.z, r7.w, r3.w, r2.z
  add r3.w, -cb3[24].x, l(1.000000)
  mad r2.z, r2.z, r3.w, cb3[24].x
else
  mov r2.z, l(1.000000)
endif
add r3.w, -r2.z, l(1.000000)
mad r0.x, r0.x, r3.w, r2.z
mul r0.x, r0.x, r1.z
mul r4.xyz, r0.xxxx, cb0[5].xyzx
sample r5.xyzw, r1.xyxx, t3.xyzw, s4
sample r6.xyzw, r1.xyxx, t4.xyzw, s5
sample r7.xyzw, r1.xyxx, t5.xyzw, s6
mad r1.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
add r2.xyz, r2.xywx, -r11.xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, r2.xyzx
add r7.xyzw, -r6.wxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
mad r0.xyz, r0.yzwy, r1.wwww, -r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r1.xyzx, -r2.xyzx
dp3_sat r1.w, r1.xyzx, r3.xyzx
dp3_sat r1.x, r1.xyzx, r0.xyzx
dp3_sat r0.x, r3.xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r7.xxxx
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.w, l(1.000000)
mul r1.y, r0.z, r0.z
mul r1.y, r1.y, r1.y
mul r0.z, r0.z, r1.y
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.y, -|r0.w|, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
mad r0.y, r0.y, r1.y, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r7.x, r7.x
max r0.z, r0.z, l(0.002000)
add r1.y, -r0.z, l(1.000000)
mad r1.z, |r0.w|, r1.y, r0.z
mad r1.y, r1.w, r1.y, r0.z
mul r0.w, |r0.w|, r1.y
mad r0.w, r1.w, r1.z, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.y, r1.x, r0.z, -r1.x
mad r1.x, r1.y, r1.x, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r1.wwww, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r6.xyzx, r6.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r4.xyzx
mul r0.yzw, r4.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
mad r2.xyz, r7.yzwy, r0.xxxx, r6.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
mov r0.w, l(1.000000)
exp o0.xyzw, -r0.xyzw
ret
// Approximately 0 instruction slots used