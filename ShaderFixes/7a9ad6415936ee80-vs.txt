// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 7a9ad6415936ee80-vs.txt
// 3DMigoto: 7a9ad6415936ee80 | Matched 4 variants of 1 shaders: Lux Water/WaterSurface
//
//       Unity headers extracted from Lux Water_WaterSurface
//       Shader "Lux Water/WaterSurface" {
//         CustomEditor "LuxWaterMaterialEditor"
//         SubShader 1/1 {
//           LOD 200
//           Tags { "FORCENOSHADOWCASTING"="true" "QUEUE"="Transparent-1" "RenderType"="Opaque" }
//           Pass 3/4 {
//             Name "FORWARD"
//             Tags { "FORCENOSHADOWCASTING"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent-1" "RenderType"="Opaque" }
//             ZWrite Off
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Lux Water_WaterSurface:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201802150 37 0 0
//      undeciphered1a: 5
// 8:   Keywords { "DIRECTIONAL" "EFFECT_BUMP" "GEOM_TYPE_BRANCH_DETAIL" "GEOM_TYPE_MESH" "USINGWATERVOLUME" }
// 2:   Keywords { "DIRECTIONAL" "EFFECT_BUMP" "GEOM_TYPE_BRANCH_DETAIL" "GEOM_TYPE_MESH" }
// 4:   Keywords { "DIRECTIONAL" "EFFECT_BUMP" "GEOM_TYPE_BRANCH_DETAIL" "USINGWATERVOLUME" }
// 1:   Keywords { "DIRECTIONAL" "EFFECT_BUMP" "GEOM_TYPE_BRANCH_DETAIL" }
//      undeciphered2: 1 0 4 0 0 0
//      undeciphered3: 255 4 0 0 2 2 1 1 4 5
// 5:   ConstBuffer "$Globals" 528
// a:   ConstBuffer "$Globals" 544
//      Vector 160 [_BumpTiling]
//      Vector 192 [_FinalBumpSpeed01]
//      Vector 208 [_FinalBumpSpeed23] 2
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      ConstBuffer "UnityPerDraw" 176
//      Vector 144 [unity_WorldTransformParams]
//      Matrix 0 [unity_ObjectToWorld]
//      Matrix 64 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 368
//      Matrix 144 [unity_MatrixV]
//      Matrix 272 [unity_MatrixVP]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:26:29 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xy
// TEXCOORD                 1   xyzw        4     NONE   float
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float
// COLOR                    0   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 9   xyzw        9     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_constantbuffer cb2[10], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyzw
dcl_output o9.xyzw
dcl_temps 6

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
add r1.xyzw, r0.xyzw, cb2[3].xyzw
mad o4.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
mul r0.xyzw, r1.yyyy, cb3[18].xyzw
mad r0.xyzw, cb3[17].xyzw, r1.xxxx, r0.xyzw
mad r0.xyzw, cb3[19].xyzw, r1.zzzz, r0.xyzw
mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 7a9ad6415936ee80-vs.txt
ne r5.w, r0.w, l(1.0)
if_nz r5.w
  add r5.w, r0.w, -r5.y
  mad r0.x, r5.w, r5.x, r0.x
endif

dp3 r2.y, v2.xyzx, cb2[4].xyzx
dp3 r2.z, v2.xyzx, cb2[5].xyzx
dp3 r2.x, v2.xyzx, cb2[6].xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mul r3.xyz, v1.yyyy, cb2[1].yzxy
mad r3.xyz, cb2[0].yzxy, v1.xxxx, r3.xyzx
mad r3.xyz, cb2[2].yzxy, v1.zzzz, r3.xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
mul r4.xyz, r2.xyzx, r3.xyzx
mad r4.xyz, r2.zxyz, r3.yzxy, -r4.xyzx
mul r2.w, v1.w, cb2[9].w
mul r4.xyz, r2.wwww, r4.xyzx
mov o1.y, r4.x
mov o1.x, r3.z
mov o1.z, r2.y
mov o2.x, r3.x
mov o3.x, r3.y
mov o2.z, r2.z
mov o3.z, r2.x
mov o2.y, r4.y
mov o3.y, r4.z
mul r2.xyzw, cb0[12].xyzw, cb1[0].xxxx
mul r3.xy, v3.xyxx, cb0[10].wwww
mad o5.xyzw, r3.xyxy, cb0[10].xxyy, r2.xyzw
mul r2.xyz, r0.xwyx, l(0.500000, 0.500000, -0.500000, 0.000000)
mov o6.zw, r0.zzzw
add o6.xy, r2.yyyy, r2.xzxx
mul r0.xyz, r1.yyyy, cb3[10].xyzx
mad r0.xyz, cb3[9].xyzx, r1.xxxx, r0.xyzx
mad r0.xyz, cb3[11].xyzx, r1.zzzz, r0.xyzx
mad r0.xyz, cb3[12].xyzx, r1.wwww, r0.xyzx
mov o7.w, r1.y
mul o7.xyz, r0.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000)
mul r0.xy, cb0[13].xyxx, cb1[0].xxxx
mad o8.xy, r3.xyxx, cb0[10].zzzz, r0.xyxx
mov o8.zw, l(0,0,0,0)
mov o9.xyzw, l(0,0,0,0)
ret
// Approximately 0 instruction slots used