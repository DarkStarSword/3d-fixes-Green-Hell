// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 3bf033e5213bb8c4-vs.txt
// 3DMigoto: 3bf033e5213bb8c4 | Matched 2 variants of 2 shaders: AVP/Glass_Refraction, AVP/Velvet
//
// 1:    Unity headers extracted from AVP_Glass_Refraction
// 2:    Unity headers extracted from AVP_Velvet
// 1:    Shader "AVP/Glass_Refraction" {
// 2:    Shader "AVP/Velvet" {
// 1:      CustomEditor "ASEMaterialInspector"
//         Fallback "Diffuse"
//         SubShader 1/1 {
// 2:        Tags { "IsEmissive"="true" "QUEUE"="Geometry+0" "RenderType"="Opaque" }
// 1:        Tags { "QUEUE"="Transparent+0" "RenderType"="Opaque" }
//           Pass 5/5 {
//             Name "ShadowCaster"
// 2:          Tags { "IsEmissive"="true" "LIGHTMODE"="SHADOWCASTER" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
// 1:          Tags { "LIGHTMODE"="SHADOWCASTER" "QUEUE"="Transparent+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
// 1: Unity 5.3 headers extracted from AVP_Glass_Refraction:
// 2: Unity 5.3 headers extracted from AVP_Velvet:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201802150 41 0 0
//      undeciphered1a: 4
//      Keywords { "SHADOWS_CUBE" "UNITY_PASS_SHADOWCASTER" }
//      undeciphered2: 1 0 4 0 0 0
//      undeciphered3: 255 5 0 0 2 2 1 1 4 5 5 6
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      ConstBuffer "UnityShadows" 416
//      Vector 80 [unity_LightShadowBias]
//      ConstBuffer "UnityPerDraw" 176
//      Vector 144 [unity_WorldTransformParams]
//      Matrix 0 [unity_ObjectToWorld]
//      Matrix 64 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 368
//      Matrix 272 [unity_MatrixVP]
//      BindCB "UnityLighting" 0
//      BindCB "UnityShadows" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:51:36 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xy
// TEXCOORD                 1   xyzw        4     NONE   float   xy
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float
// COLOR                    0   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 6   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[1], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[10], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_temps 5

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
mad r1.xyz, -r0.xyzx, cb0[0].wwww, cb0[0].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp3 r2.x, v2.xyzx, cb2[4].xyzx
dp3 r2.y, v2.xyzx, cb2[5].xyzx
dp3 r2.z, v2.xyzx, cb2[6].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r1.x, r2.xyzx, r1.xyzx
mad r1.x, -r1.x, r1.x, l(1.000000)
sqrt r1.x, r1.x
mul r1.x, r1.x, cb1[5].z
mad r1.xyz, -r2.xyzx, r1.xxxx, r0.xyzx
ne r1.w, cb1[5].z, l(0.000000)
movc r0.xyz, r1.wwww, r1.xyzx, r0.xyzx
mul r1.xyzw, r0.yyyy, cb3[18].xyzw
mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw

// Relocated to here with asmtool.py
mov o0.xyw, r0.xyxw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 3bf033e5213bb8c4-vs.txt
ne r4.w, r0.w, l(1.0)
if_nz r4.w
  add r4.w, r0.w, -r4.y
  mad r0.x, r4.w, r4.x, r0.x
endif

min r1.x, r0.w, r0.z
add r1.x, -r0.z, r1.x
mad o0.z, cb1[5].y, r1.x, r0.z

// mov o0.xyw, r0.xyxw // Relocated from here with asmtool.py

mul r0.xyz, v0.yyyy, cb2[1].xyzx
mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
mov o1.xyz, r0.xyzx
mov o2.w, r0.x
mul r1.xyz, v1.yyyy, cb2[1].yzxy
mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
mul r3.xyz, r1.xyzx, r2.zxyz
mad r3.xyz, r2.yzxy, r1.yzxy, -r3.xyzx
mul r0.x, v1.w, cb2[9].w
mul r3.xyz, r0.xxxx, r3.xyzx
mov o2.y, r3.x
mov o2.z, r2.x
mov o2.x, r1.z
mov o3.x, r1.x
mov o4.x, r1.y
mov o3.z, r2.y
mov o4.z, r2.z
mov o3.w, r0.y
mov o4.w, r0.z
mov o3.y, r3.y
mov o4.y, r3.z
mov o5.xy, v3.xyxx
mov o5.zw, v4.xxxy
ret
// Approximately 0 instruction slots used