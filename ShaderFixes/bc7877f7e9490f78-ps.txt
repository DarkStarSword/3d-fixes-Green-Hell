// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed bc7877f7e9490f78-ps.txt
// 3DMigoto: bc7877f7e9490f78 |    Unity headers extracted from Hidden_HxVolumetricDirectionalLight
//    Shader "Hidden/HxVolumetricDirectionalLight" {
//      SubShader 1/1 {
//        Pass 2/3 {
//          Tags { "IGNOREPROJECTOR"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_HxVolumetricDirectionalLight:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 247 0 21
//   undeciphered1a: 13
//   undeciphered2: 1 3 4 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 6000
//   Vector 224 [Phase]
//   Vector 240 [Phase2]
//   Vector 256 [Density]
//   Vector 928 [hxVolumeSettingsOld0] 2
//   Vector 936 [hxVolumeSettingsOld1] 2
//   Vector 944 [hxVolumeSettingsOld2] 2
//   Vector 952 [hxVolumeSettingsOld3] 2
//   Vector 960 [hxVolumeSettingsOld4] 2
//   Vector 968 [hxVolumeSettingsOld5] 2
//   Vector 976 [hxVolumeSettingsOld6] 2
//   Vector 984 [hxVolumeSettingsOld7] 2
//   Vector 992 [hxVolumeSettingsOld8] 2
//   Vector 1000 [hxVolumeSettingsOld9] 2
//   Float 5152 [hxRayOffset]
//   Float 5156 [HxTileSize]
//   Float 5648 [FirstLight]
//   Vector 5744 [ShadowBias] 3
//   Vector 5840 [_SpotLightParams]
//   Vector 5856 [CameraFoward] 3
//   Float 5868 [VolumeScale]
//   Float 5872 [ExtinctionEffect]
//   Vector 5876 [LightColour] 3
//   Vector 5888 [LightColour2] 3
//   Float 5920 [TintPercent]
//   Vector 5924 [MaxRayDistance] 2
//   Float 5932 [AmbientStrength]
//   Vector 5936 [AmbientSkyColor] 3
//   Vector 5952 [AmbientEquatorColor] 3
//   Vector 5968 [AmbientGroundColor] 3
//   Vector 5984 [SunSize] 2
//   Matrix 288 [hxVolumeMatrixOld0]
//   Matrix 352 [hxVolumeMatrixOld1]
//   Matrix 416 [hxVolumeMatrixOld2]
//   Matrix 480 [hxVolumeMatrixOld3]
//   Matrix 544 [hxVolumeMatrixOld4]
//   Matrix 608 [hxVolumeMatrixOld5]
//   Matrix 672 [hxVolumeMatrixOld6]
//   Matrix 736 [hxVolumeMatrixOld7]
//   Matrix 800 [hxVolumeMatrixOld8]
//   Matrix 864 [hxVolumeMatrixOld9]
//   Matrix 5168 [InverseProjectionMatrix]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   ConstBuffer "UnityShadows" 416
//   Vector 96 [_LightSplitsNear]
//   Vector 112 [_LightSplitsFar]
//   Matrix 128 [unity_WorldToShadow0]
//   Matrix 192 [unity_WorldToShadow1]
//   Matrix 256 [unity_WorldToShadow2]
//   Matrix 320 [unity_WorldToShadow3]
//   SetTexture 0 [VolumetricDepth] 2D 0
//   SetTexture 1 [Tile5x5] 2D 2
//   SetTexture 2 [_ShadowMapTexture] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//   BindCB "UnityShadows" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:04:26 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[375], dynamicIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[24], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xyw
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed bc7877f7e9490f78-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.xy, v1.xyxx, v1.wwww
sample_l r1.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
dp2 r0.z, r1.xyxx, l(1.000000, 0.00392156886, 0.000000, 0.000000)
mad r1.xy, r1.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xyzw, r1.yyyy, cb0[324].xyzw
mad r1.xyzw, cb0[323].xyzw, r1.xxxx, r2.xyzw
add r1.xyzw, r1.xyzw, cb0[325].xyzw
add r1.xyzw, r1.xyzw, cb0[326].xyzw
div r1.xyz, r1.xyzx, r1.wwww
div r0.w, cb1[5].z, r1.z
mul r1.xyz, r0.wwww, r1.xyzx
mul r1.xyz, r0.zzzz, r1.xyzx
mul r2.xyz, r1.yyyy, cb2[19].xyzx
mad r1.xyw, cb2[18].xyxz, r1.xxxx, r2.xyxz
mad r1.xyz, cb2[20].xyzx, r1.zzzz, r1.xywx
add r1.xyz, r1.xyzx, cb2[21].xyzx
add r2.xyz, -r1.xyzx, r14.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, cb0[366].xyzx, -r2.xyzx
dp2 r1.w, r2.xzxx, r2.xzxx
rsq r1.w, r1.w
mul r3.xy, r1.wwww, r2.xzxx
dp2 r1.w, r3.xyxx, r2.xzxx
add r1.w, r1.w, l(-0.700000)
mul r1.w, r1.w, l(3.333300)
max r2.w, -r2.y, l(0.000000)
max r3.x, r2.y, l(0.000000)
mul r3.xyz, r3.xxxx, cb0[373].xyzx
mad r3.xyz, r2.wwww, cb0[371].xyzx, r3.xyzx
mul r2.w, r1.w, r1.w
mul r2.w, r2.w, r2.w
mul r1.w, r1.w, r2.w
max r1.w, r1.w, l(0.000000)
mad r3.xyz, r1.wwww, cb0[372].xyzx, r3.xyzx
mul r3.xyz, r3.xyzx, cb0[370].wwww
div r0.w, cb1[5].y, r0.w
mad r2.xyz, -r2.xyzx, r0.wwww, r14.xyzx
mad r1.xyz, cb0[365].xyzx, cb0[359].xxxx, r1.xyzx
add r1.xyz, -r1.xyzx, r2.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
sqrt r0.w, r0.w
div r1.xyz, r1.xyzx, r0.wwww
min r0.w, r0.w, cb0[370].z
min r1.w, r0.w, cb0[370].y
add r0.w, r0.w, -r1.w
min r2.w, cb0[16].y, l(128.000000)
ftoi r3.w, r2.w
round_z r2.w, r2.w
div r4.x, r1.w, r2.w
mul r4.yz, cb0[366].wwww, cb1[6].xxyx
mul r0.xy, r0.xyxx, r4.yzyy
div r0.xy, r0.xyxx, cb0[322].yyyy
ge r4.yz, r0.xxyx, -r0.xxyx
frc r0.xy, |r0.xyxx|
movc r0.xy, r4.yzyy, r0.xyxx, -r0.xyxx
mul r0.xy, r0.xyxx, cb0[322].yyyy
div r0.xy, r0.xyxx, cb0[322].yyyy
sample_l r5.xyzw, r0.xyxx, t1.xyzw, s2, l(0.000000)
add r0.x, r5.x, cb0[322].x
frc r0.x, r0.x
mul r0.y, r0.x, r4.x
mad r2.xyz, -r0.yyyy, r1.xyzx, r2.xyzx
dp3 r0.y, cb0[365].xyzx, r1.xyzx
lt r0.z, l(0.990000), r0.z
and r0.z, r0.z, l(0x3f800000)
mad r4.y, -cb0[15].w, r0.y, cb0[15].z
log r4.y, r4.y
mul r4.y, r4.y, l(1.500000)
exp r4.y, r4.y
max r4.y, r4.y, l(0.000100)
div r4.y, cb0[15].y, r4.y
mul r4.y, r4.y, cb0[15].x
mul r4.y, r4.y, cb0[374].x
max r0.z, r0.z, cb0[374].y
mul r0.z, r0.z, r4.y
min r0.z, r0.z, l(100.000000)
mad r4.y, -cb0[14].w, r0.y, cb0[14].z
log r4.y, r4.y
mul r4.y, r4.y, l(1.500000)
exp r4.y, r4.y
div r4.y, cb0[14].y, r4.y
mul r4.y, r4.y, cb0[14].x
max r0.z, r0.z, r4.y
add r0.y, r0.y, l(1.000000)
mul r0.y, r0.y, cb0[370].x
mul_sat r0.y, r0.y, l(0.500000)
add r4.yzw, cb0[367].yyzw, -cb0[368].xxyz
mad r4.yzw, r0.yyyy, r4.yyzw, cb0[368].xxyz
add r5.xyz, r2.xyzx, -r14.xyzx
dp3 r0.y, r5.xyzx, r5.xyzx
sqrt r0.y, r0.y
mov r5.z, l(0)
mov r6.xyz, r2.xyzx
mov r5.w, l(0)
mov r6.w, l(0)
mov r7.y, r0.y
mov r7.xz, l(0,0,0,0)
loop
  ige r7.w, r7.z, r3.w
  breakc_nz r7.w
  ge r8.xyzw, r7.yyyy, cb3[6].xyzw
  and r8.xyzw, r8.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  lt r9.xyzw, r7.yyyy, cb3[7].xyzw
  and r9.xyzw, r9.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
  mul r10.xyzw, r8.xyzw, r9.xyzw
  add r7.w, r10.y, r10.x
  mad r7.w, r8.z, r9.z, r7.w
  mad r7.w, r8.w, r9.w, r7.w
  lt r7.w, l(0.000000), r7.w
  mul r8.xyz, r6.yyyy, cb3[9].xyzx
  mad r8.xyz, cb3[8].xyzx, r6.xxxx, r8.xyzx
  mad r8.xyz, cb3[10].xyzx, r6.zzzz, r8.xyzx
  add r8.xyz, r8.xyzx, cb3[11].xyzx
  mul r9.xyz, r6.yyyy, cb3[13].xyzx
  mad r9.xyz, cb3[12].xyzx, r6.xxxx, r9.xyzx
  mad r9.xyz, cb3[14].xyzx, r6.zzzz, r9.xyzx
  add r9.xyz, r9.xyzx, cb3[15].xyzx
  mul r11.xyz, r6.yyyy, cb3[17].xyzx
  mad r11.xyz, cb3[16].xyzx, r6.xxxx, r11.xyzx
  mad r11.xyz, cb3[18].xyzx, r6.zzzz, r11.xyzx
  add r11.xyz, r11.xyzx, cb3[19].xyzx
  mul r12.xyz, r6.yyyy, cb3[21].xyzx
  mad r12.xyz, cb3[20].xyzx, r6.xxxx, r12.xyzx
  mad r12.xyz, cb3[22].xyzx, r6.zzzz, r12.xyzx
  add r12.xyz, r12.xyzx, cb3[23].xyzx
  mul r9.xyz, r10.yyyy, r9.xyzx
  mad r8.xyz, r8.xyzx, r10.xxxx, r9.xyzx
  mad r8.xyz, r11.xyzx, r10.zzzz, r8.xyzx
  mad r8.xyz, r12.xyzx, r10.wwww, r8.xyzx
  sample_c_lz r8.x, r8.xyxx, t2.xxxx, s1, r8.z
  movc r7.w, r7.w, r8.x, l(1.000000)
  mov r8.x, cb0[16].x
  mov r8.yzw, l(0,0,0,0)
  loop
    ige r9.x, r8.z, l(10)
    mov r8.w, l(0)
    breakc_nz r9.x
    eq r9.x, l(-1.000000), cb0[r8.z + 58].y
    if_nz r9.x
      mov r8.xy, r8.xxxx
      mov r8.w, l(-1)
      break
    endif
    ishl r9.y, r8.z, l(2)
    mul r10.xyz, r6.yyyy, cb0[r9.y + 19].xyzx
    mad r10.xyz, cb0[r9.y + 18].xyzx, r6.xxxx, r10.xyzx
    mad r10.xyz, cb0[r9.y + 20].xyzx, r6.zzzz, r10.xyzx
    add r9.yzw, r10.xxyz, cb0[r9.y + 21].xxyz
    lt r10.xyz, l(-0.500000, -0.500000, -0.500000, 0.000000), r9.yzwy
    lt r11.xyz, r9.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000)
    and r10.x, r10.x, r11.x
    and r10.x, r10.y, r10.x
    and r10.x, r11.y, r10.x
    and r10.x, r10.z, r10.x
    and r10.x, r11.z, r10.x
    if_nz r10.x
      ge r10.x, l(3.000000), cb0[r8.z + 58].y
      if_nz r10.x
        max r10.x, r8.x, cb0[r8.z + 58].x
        add r10.y, r8.x, cb0[r8.z + 58].x
        min r10.z, r8.x, cb0[r8.z + 58].x
        eq r11.xyzw, l(0.000000, 1.000000, 2.000000, 3.000000), cb0[r8.z + 58].yyyy
        add r10.w, r8.x, -cb0[r8.z + 58].x
        movc r10.w, r11.w, r10.w, r8.x
        movc r10.z, r11.z, r10.z, r10.w
        movc r10.y, r11.y, r10.y, r10.z
        movc r5.x, r11.x, r10.x, r10.y
      else
        ge r10.x, l(7.000000), cb0[r8.z + 58].y
        dp3 r9.z, r9.yzwy, r9.yzwy
        sqrt r9.z, r9.z
        lt r9.z, r9.z, l(0.500000)
        and r9.z, r9.z, r10.x
        if_nz r9.z
          max r9.z, r8.x, cb0[r8.z + 58].x
          add r10.x, r8.x, cb0[r8.z + 58].x
          min r10.y, r8.x, cb0[r8.z + 58].x
          eq r11.xyzw, l(4.000000, 5.000000, 6.000000, 7.000000), cb0[r8.z + 58].yyyy
          add r10.z, r8.x, -cb0[r8.z + 58].x
          movc r10.z, r11.w, r10.z, r8.x
          movc r10.y, r11.z, r10.y, r10.z
          movc r10.x, r11.y, r10.x, r10.y
          movc r5.x, r11.x, r9.z, r10.x
        else
          ge r9.z, l(11.000000), cb0[r8.z + 58].y
          dp2 r9.y, r9.ywyy, r9.ywyy
          sqrt r9.y, r9.y
          lt r9.y, r9.y, l(0.500000)
          and r9.y, r9.y, r9.z
          max r9.z, r8.x, cb0[r8.z + 58].x
          add r9.w, r8.x, cb0[r8.z + 58].x
          min r10.x, r8.x, cb0[r8.z + 58].x
          eq r11.xyzw, l(8.000000, 9.000000, 10.000000, 11.000000), cb0[r8.z + 58].yyyy
          add r10.y, r8.x, -cb0[r8.z + 58].x
          movc r10.y, r11.w, r10.y, r8.x
          movc r10.x, r11.z, r10.x, r10.y
          movc r9.w, r11.y, r9.w, r10.x
          movc r9.z, r11.x, r9.z, r9.w
          movc r5.x, r9.y, r9.z, r8.x
        endif
      endif
    else
      mov r5.x, r8.x
    endif
    iadd r5.y, r8.z, l(1)
    mov r8.xyz, r5.xzyx
    mov r8.w, r9.x
  endloop
  movc r5.x, r8.w, r8.y, r8.x
  mul r5.y, r5.x, cb0[16].w
  mad r7.x, r5.y, r4.x, r7.x
  mul r5.y, r7.x, l(-1.442695)
  exp r5.y, r5.y
  mul r5.x, r4.x, r5.x
  mul r5.x, r5.y, r5.x
  add r5.y, -r7.w, l(1.000000)
  mul r5.y, r5.y, cb0[359].z
  mad r5.y, r7.w, r0.z, r5.y
  mul r5.y, r5.x, r5.y
  max r5.y, r5.y, l(0.000000)
  add r5.w, r5.y, r5.w
  mad r6.w, r5.x, l(0.079580), r6.w
  mad r6.xyz, -r1.xyzx, r4.xxxx, r6.xyzx
  add r7.y, r4.x, r7.y
  iadd r7.z, r7.z, l(1)
endloop
lt r0.y, l(0.000000), r0.w
if_nz r0.y
  add r0.y, r1.w, r4.x
  mad r2.xyz, -r1.xyzx, r0.yyyy, r14.xyzx
  div r0.y, r0.w, r2.w
  mul r0.x, r0.x, r0.y
  mad r2.xyz, -r0.xxxx, r1.xyzx, r2.xyzx
  mov r5.z, l(0)
  mov r6.xyz, r2.xyzx
  mov r0.x, r5.w
  mov r0.w, r6.w
  mov r1.w, r7.x
  mov r2.w, l(0)
  loop
    ige r4.x, r2.w, r3.w
    breakc_nz r4.x
    mov r8.x, cb0[16].x
    mov r8.yz, l(0,0,0,0)
    mov r4.x, l(0)
    loop
      ige r7.y, r8.z, l(10)
      mov r4.x, l(0)
      breakc_nz r7.y
      eq r7.y, l(-1.000000), cb0[r8.z + 58].y
      if_nz r7.y
        mov r8.xy, r8.xxxx
        mov r4.x, l(-1)
        break
      endif
      ishl r7.z, r8.z, l(2)
      mul r9.xyz, r6.yyyy, cb0[r7.z + 19].xyzx
      mad r9.xyz, cb0[r7.z + 18].xyzx, r6.xxxx, r9.xyzx
      mad r9.xyz, cb0[r7.z + 20].xyzx, r6.zzzz, r9.xyzx
      add r9.xyz, r9.xyzx, cb0[r7.z + 21].xyzx
      lt r10.xyz, l(-0.500000, -0.500000, -0.500000, 0.000000), r9.xyzx
      lt r11.xyz, r9.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      and r7.z, r10.x, r11.x
      and r7.z, r10.y, r7.z
      and r7.z, r11.y, r7.z
      and r7.z, r10.z, r7.z
      and r7.z, r11.z, r7.z
      if_nz r7.z
        ge r7.z, l(3.000000), cb0[r8.z + 58].y
        if_nz r7.z
          max r7.z, r8.x, cb0[r8.z + 58].x
          add r7.w, r8.x, cb0[r8.z + 58].x
          min r8.w, r8.x, cb0[r8.z + 58].x
          eq r10.xyzw, l(0.000000, 1.000000, 2.000000, 3.000000), cb0[r8.z + 58].yyyy
          add r9.w, r8.x, -cb0[r8.z + 58].x
          movc r9.w, r10.w, r9.w, r8.x
          movc r8.w, r10.z, r8.w, r9.w
          movc r7.w, r10.y, r7.w, r8.w
          movc r5.x, r10.x, r7.z, r7.w
        else
          ge r7.z, l(7.000000), cb0[r8.z + 58].y
          dp3 r7.w, r9.xyzx, r9.xyzx
          sqrt r7.w, r7.w
          lt r7.w, r7.w, l(0.500000)
          and r7.z, r7.w, r7.z
          if_nz r7.z
            max r7.z, r8.x, cb0[r8.z + 58].x
            add r7.w, r8.x, cb0[r8.z + 58].x
            min r8.w, r8.x, cb0[r8.z + 58].x
            eq r10.xyzw, l(4.000000, 5.000000, 6.000000, 7.000000), cb0[r8.z + 58].yyyy
            add r9.y, r8.x, -cb0[r8.z + 58].x
            movc r9.y, r10.w, r9.y, r8.x
            movc r8.w, r10.z, r8.w, r9.y
            movc r7.w, r10.y, r7.w, r8.w
            movc r5.x, r10.x, r7.z, r7.w
          else
            ge r7.z, l(11.000000), cb0[r8.z + 58].y
            dp2 r7.w, r9.xzxx, r9.xzxx
            sqrt r7.w, r7.w
            lt r7.w, r7.w, l(0.500000)
            and r7.z, r7.w, r7.z
            max r7.w, r8.x, cb0[r8.z + 58].x
            add r8.w, r8.x, cb0[r8.z + 58].x
            min r9.x, r8.x, cb0[r8.z + 58].x
            eq r10.xyzw, l(8.000000, 9.000000, 10.000000, 11.000000), cb0[r8.z + 58].yyyy
            add r9.y, r8.x, -cb0[r8.z + 58].x
            movc r9.y, r10.w, r9.y, r8.x
            movc r9.x, r10.z, r9.x, r9.y
            movc r8.w, r10.y, r8.w, r9.x
            movc r7.w, r10.x, r7.w, r8.w
            movc r5.x, r7.z, r7.w, r8.x
          endif
        endif
      else
        mov r5.x, r8.x
      endif
      iadd r5.y, r8.z, l(1)
      mov r8.xyz, r5.xzyx
      mov r4.x, r7.y
    endloop
    movc r5.x, r4.x, r8.y, r8.x
    mul r5.y, r5.x, cb0[16].w
    mad r1.w, r5.y, r0.y, r1.w
    mul r5.y, r1.w, l(-1.442695)
    exp r5.y, r5.y
    mul r5.x, r0.y, r5.x
    mul r5.x, r5.y, r5.x
    mul r5.y, r0.z, r5.x
    max r5.y, r5.y, l(0.000000)
    add r0.x, r0.x, r5.y
    mad r6.xyz, -r1.xyzx, r0.yyyy, r6.xyzx
    mad r0.w, r5.x, l(0.079580), r0.w
    iadd r2.w, r2.w, l(1)
  endloop
  mov r5.w, r0.x
  mov r6.w, r0.w
  mov r7.x, r1.w
endif
mul r0.x, r7.x, l(-1.442695)
exp r0.x, r0.x
min r0.x, r0.x, l(1.000000)
mul r0.yzw, r3.xxyz, r6.wwww
mul r0.yzw, r0.yyzw, cb0[353].xxxx
mad o0.xyz, r4.yzwy, r5.wwww, r0.yzwy
add r0.y, -cb0[367].x, l(1.000000)
add r0.z, -r0.x, l(1.000000)
mad r0.x, r0.y, r0.z, r0.x
add r0.x, -r0.x, l(1.000000)
mul o0.w, r0.x, cb0[353].x
ret
// Approximately 0 instruction slots used