namespace = debug_crosshair

; Bind the depth buffer and whatever else crosshair.hlsl needs to the ***PIXEL
; SHADER*** then call run = CustomShader\debug_crosshair\depth and adjust the
; convergence. The sudden transition from white to red should line up perfectly
; with the screen depth if everything is correct (white will be in front of the
; screen, red behind it). If you only see black double check you bound the
; buffers to the pixel shader, not the vertex shader.

[Constants]
global $amplify = 1
global $flip = 0

[CustomShaderDepth]
vs = debug_crosshair.hlsl
ps = debug_crosshair.hlsl
blend = disable
;blend = ADD ONE ONE
cull = none
topology = triangle_strip
run = BuiltInCommandListUnbindAllRenderTargets
o0 = set_viewport bb
;ps-t100 = Resource2D
local $bak_x = x
local $bak_y = y
x = $amplify
y = $flip
Draw = 4, 0
;post ps-t100 = null
post x = $bak_x
post y = $bak_y
