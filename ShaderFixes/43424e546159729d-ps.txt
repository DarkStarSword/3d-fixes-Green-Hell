// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 43424e546159729d-ps.txt
// 3DMigoto: 43424e546159729d |    Unity headers extracted from VolumetricFogAndMist_VolumetricFog
//    Shader "VolumetricFogAndMist/VolumetricFog" {
//      SubShader 1/1 {
//        Pass 1/5 {
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from VolumetricFogAndMist_VolumetricFog:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 192 3 12
//   undeciphered1a: 19
//   Keywords { "FOG_DISTANCE_ON" "FOG_AREA_BOX" "FOG_VOID_BOX" "FOG_HAZE_ON" "FOG_SCATTERING_ON" "FOG_POINT_LIGHT0" "FOG_SUN_SHADOWS_ON" }
//   undeciphered2: 1 4 2 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 624
//   Vector 32 [_MainTex_TexelSize]
//   Float 172 [_FogAlpha]
//   Vector 176 [_Color] 3
//   Vector 192 [_FogDistance]
//   Vector 208 [_FogData]
//   Vector 224 [_FogWindDir] 3
//   Vector 240 [_FogStepping]
//   Vector 256 [_FogSkyData]
//   Vector 272 [_FogVoidPosition] 3
//   Vector 288 [_FogVoidData]
//   Vector 304 [_FogAreaPosition] 3
//   Vector 320 [_FogAreaData]
//   Vector 336 [_FogSkyColor]
//   Vector 352 [_FogPointLightPosition0] 3
//   Vector 368 [_FogPointLightColor0] 3
//   Vector 384 [_SunPosition] 3
//   Vector 400 [_SunDir] 3
//   Vector 416 [_SunColor] 3
//   Vector 432 [_FogScatteringData]
//   Vector 448 [_FogScatteringData2]
//   Vector 544 [_VolumetricFogSunWorldPos]
//   Vector 560 [_VolumetricFogSunShadowsData]
//   Float 576 [_Jitter]
//   Matrix 480 [_VolumetricFogSunProj]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 96 [_ScreenParams]
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 2
//   SetTexture 1 [_NoiseTex] 2D 1
//   SetTexture 2 [_VolumetricFogSunDepthTexture] 2D 3
//   SetTexture 3 [_MainTex] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:55:11 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[37], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 21
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r19.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 43424e546159729d-ps.txt

mul r19.w, -r19.x, r19.y
mad r20.xyz, -r19.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.zwzz, t0.xyzw, s2
mad r0.x, cb1[7].x, r0.x, cb1[7].y
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r1.y, -cb0[13].x, r20.y
mov r1.xz, r20.xxzx
mad r2.xyz, v2.xyzx, r0.xxxx, r1.xyzx
add r0.y, r2.y, l(0.000010)
mul r0.zw, v1.xxxy, cb1[6].xxxy
dp2 r0.z, l(2.40845060, 3.25352120, 0.000000, 0.000000), r0.zwzz
frc r0.z, r0.z
add r0.z, r0.z, l(-0.500000)
lt r0.w, cb0[13].y, r1.y
lt r1.w, cb0[13].y, r0.y
and r0.w, r0.w, r1.w
lt r1.w, r1.y, -cb0[13].y
lt r3.x, r0.y, -cb0[13].y
and r1.w, r1.w, r3.x
or r0.w, r0.w, r1.w
if_z r0.w
  add r2.w, r2.y, l(0.000010)
  add r3.xyz, -r1.xyzx, r2.xwzx
  dp3 r0.w, r3.xyzx, r3.xyzx
  sqrt r0.w, r0.w
  add r4.xyz, r1.xyzx, -cb0[19].xyzx
  div r5.xyz, r0.wwww, r3.xyzx
  div r6.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[20].xyzx
  add r7.xyz, -r4.xyzx, -r6.xyzx
  mul r7.xyz, r5.xyzx, r7.xyzx
  add r4.xyz, -r4.xyzx, r6.xyzx
  mul r4.xyz, r4.xyzx, r5.xyzx
  min r6.xyz, r7.xyzx, r4.xyzx
  max r2.yw, r6.yyyz, r6.xxxx
  max r1.w, r2.w, r2.y
  max r1.w, r1.w, l(0.000000)
  max r4.xyz, r7.xyzx, r4.xyzx
  min r2.yw, r4.yyyz, r4.xxxx
  min r2.y, r2.w, r2.y
  min r2.w, r0.w, cb0[12].z
  min r2.y, r2.w, r2.y
  add r2.y, -r1.w, r2.y
  lt r3.w, l(0.000000), r2.y
  if_nz r3.w
    div r4.xyz, r1.wwww, r5.xyzx
    add r4.xyz, r1.xyzx, r4.xyzx
    mul r1.xyz, r3.xyzx, r2.yyyy
    div r1.xyz, r1.xyzx, r0.wwww
    add r1.xyz, r1.xyzx, r4.xyzx
    add r1.xyz, -r1.xyzx, cb0[17].xyzx
    mul r1.xyz, |r1.xyzx|, cb0[18].xyzx
    max r1.x, r1.y, r1.x
    max r1.x, r1.z, r1.x
    add r1.x, r1.x, l(-1.000000)
    mad_sat r1.x, cb0[18].w, r1.x, l(1.000000)
    lt r1.y, l(0.000000), r1.x
    if_nz r1.y
      div r1.yz, cb0[20].xxzx, cb0[13].wwww
      log r3.w, r2.y
      mul r3.w, r3.w, l(0.693147182)
      max r3.w, r3.w, l(0.000000)
      mad r3.w, r3.w, cb0[15].x, l(0.100000)
      mul r3.w, r3.w, cb0[13].z
      mul_sat r5.x, r2.w, cb0[15].y
      mul r3.w, r3.w, r5.x
      add r2.w, -r1.w, r2.w
      max r3.w, r3.w, l(0.010000)
      mul r5.xyz, r3.wwww, r3.xyzx
      div r5.xyz, r5.xyzx, r0.wwww
      div r3.w, r2.y, r3.w
      add r6.xyz, r4.xyzx, -cb0[22].xyzx
      mul r7.xz, r5.xxzx, cb0[13].wwww
      mul r5.w, cb0[13].z, cb0[13].y
      div r7.y, r5.y, r5.w
      add r8.xy, r4.xzxx, cb0[14].xzxx
      mul r8.xy, r8.xyxx, cb0[13].wwww
      div r5.w, r4.y, r5.w
      add r8.zw, cb0[14].xxxz, cb0[19].xxxz
      add r9.xy, cb0[14].xzxx, r20.xzxx
      frc r6.w, r0.z
      mad r3.w, r6.w, cb0[36].x, r3.w
      add r4.w, r4.y, cb0[13].x
      mul r10.xyz, r4.wwww, cb0[31].xywx
      mad r10.xyz, cb0[30].xywx, r4.xxxx, r10.xyzx
      mad r10.xyz, cb0[32].xywx, r4.zzzz, r10.xyzx
      add r10.xyz, r10.xyzx, cb0[33].xywx
      div r9.zw, r10.xxxy, r10.zzzz
      mad r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      mad r4.y, r0.z, cb0[35].y, l(1.000000)
      mul r4.y, r2.y, r4.y
      mul r10.xyz, r3.xyzx, r4.yyyy
      div r10.xyz, r10.xyzx, r0.wwww
      add r10.xyz, r4.xwzx, r10.xyzx
      mul r11.xyz, r10.yyyy, cb0[31].xywx
      mad r11.xyz, cb0[30].xywx, r10.xxxx, r11.xyzx
      mad r11.xyz, cb0[32].xywx, r10.zzzz, r11.xyzx
      add r11.xyz, r11.xyzx, cb0[33].xywx
      div r11.xy, r11.xyxx, r11.zzzz
      mad r11.xy, r11.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r1.w, -r1.w, cb0[34].w
      mul_sat r1.w, r1.w, l(0.0285714287)
      mul r1.w, r1.w, cb0[35].x
      div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
      ge r2.y, r2.y, r2.w
      and r2.y, r2.y, l(0x3f800000)
      add r9.zw, r9.zzzw, -r11.xxxy
      add r4.xzw, r4.xxwz, -r10.xxyz
      mov r12.xyzw, l(0,0,0,0)
      mov r13.xyz, r6.xyzx
      mov r15.xz, r8.xxyx
      mov r2.w, r3.w
      mov r15.y, r5.w
      mov r14.xyzw, l(0,0,0,0)
      loop
        ge r6.w, l(1.000000), r2.w
        breakc_nz r6.w
        mad r11.zw, r8.zzzw, cb0[13].wwww, -r15.xxxz
        mul r11.zw, r1.yyyz, |r11.zzzw|
        max r6.w, r11.w, r11.z
        sample_l r16.xyzw, r15.xzxx, t1.xyzw, s1, l(0.000000)
        mad r6.w, r6.w, cb0[20].w, |r15.y|
        add r6.w, -r6.w, r16.w
        mad r11.zw, r9.xxxy, cb0[13].wwww, -r15.xxxz
        dp2 r7.w, r11.zwzz, r11.zwzz
        add r7.w, -r7.w, cb0[12].x
        max r7.w, r7.w, l(0.000000)
        mad r6.w, -r7.w, cb0[12].y, r6.w
        lt r7.w, l(0.000000), r6.w
        if_nz r7.w
          add r7.w, -r6.w, l(1.000000)
          mul r17.xyz, r7.wwww, cb0[11].xyzx
          mul r17.w, r6.w, l(0.400000)
          mul r6.w, r4.y, r2.w
          mad r11.zw, r6.wwww, r9.zzzw, r11.xxxy
          sample_l r18.xyzw, r11.zwzz, t2.xyzw, s3, l(0.000000)
          dp4 r7.w, r18.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
          div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
          mad r18.xyz, r6.wwww, r4.xzwx, r10.xyzx
          add r18.xyz, r18.xyzx, -cb0[34].xyzx
          dp3 r6.w, r18.xyzx, r18.xyzx
          sqrt r6.w, r6.w
          add_sat r6.w, -r6.w, r7.w
          mul r7.w, r1.w, r14.w
          add r6.w, r6.w, l(-1.000000)
          mad r7.w, r7.w, r6.w, l(1.000000)
          mad r6.w, cb0[35].z, r6.w, l(1.000000)
          mul r17.xyzw, r6.wwww, r17.xyzw
          dp3 r6.w, r13.xyzx, r13.xyzx
          div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
          mul r18.xyz, r6.wwww, cb0[23].xyzx
          mul r18.xyz, r17.wwww, r18.xyzx
          mad r16.xyz, r16.xyzx, r7.wwww, r18.xyzx
          mul r16.xyz, r17.wwww, r16.xyzx
          mul r17.xyz, r16.xyzx, r17.xyzx
          add r6.w, -r14.w, l(1.000000)
          mad r16.xyzw, r17.xyzw, r6.wwww, r14.xyzw
          lt r6.w, l(0.990000), r16.w
          if_nz r6.w
            mov r12.xyzw, r17.xyzw
            mov r14.xyzw, r16.xyzw
            break
          endif
          mov r12.xyzw, r17.xyzw
          mov r14.xyzw, r16.xyzw
        endif
        add r13.xyz, r5.xyzx, r13.xyzx
        add r2.w, r2.w, l(-1.000000)
        add r15.xyz, r7.xyzx, r15.xyzx
      endloop
      lt r1.y, r14.w, l(0.990000)
      and r1.y, r1.y, l(0x3f800000)
      add r1.z, -r14.w, l(1.000000)
      mul r1.w, r2.w, r2.y
      mul r1.y, r1.z, r1.y
      mul r1.y, r1.w, r1.y
      mad r4.xyzw, r12.xyzw, r1.yyyy, r14.xyzw
      div r1.yzw, r3.xxyz, r0.wwww
      dp3 r0.w, r1.yzwy, cb0[25].xyzx
      mul r0.w, r0.w, cb0[28].w
      max r0.w, r0.w, l(0.000000)
      mul r0.w, r0.w, r0.w
      mul r0.w, r0.w, r0.w
      mul r0.w, r0.w, r0.w
      mul r0.w, r4.w, r0.w
      add r1.yzw, -r4.xxyz, cb0[26].xxyz
      mad r4.xyz, r0.wwww, r1.yzwy, r4.xyzx
      mul r3.xyzw, r4.xyzw, cb0[10].wwww
      mul r1.xyzw, r1.xxxx, r3.xyzw
    else
      mov r1.xyzw, l(0,0,0,0)
    endif
  else
    mov r1.xyzw, l(0,0,0,0)
  endif
else
  mov r1.xyzw, l(0,0,0,0)
endif
mul r0.w, r0.z, cb0[15].w
mad r2.y, r0.z, cb0[15].w, l(1.000000)
mul r3.xyzw, r1.xyzw, r2.yyyy
sample r4.xyzw, v1.xyxx, t3.xyzw, s0
ge r0.x, r0.x, cb0[16].w
if_nz r0.x
  add r0.x, r0.y, cb0[13].x
  max r0.x, r0.x, l(1.000000)
  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  mul r1.xy, r0.xxxx, r2.xzxx
  mad r1.xy, r1.xyxx, cb0[13].wwww, cb0[16].zzzz
  sample r5.xyzw, r1.xyxx, t1.xyzw, s1
  mad r0.y, r0.w, l(3.000000), r5.w
  mul r0.x, r0.x, cb0[16].x
  mad r0.y, -r0.y, cb0[16].y, l(1.000000)
  mul_sat r0.x, r0.y, r0.x
  mul r0.x, r0.x, cb0[21].w
  add r1.xyz, -r4.xyzx, cb0[21].xyzx
  mad r4.xyz, r0.xxxx, r1.xyzx, r4.xyzx
endif
mad_sat r0.x, -r1.w, r2.y, l(1.000000)
mad r0.xyw, r4.xyxz, r0.xxxx, r3.xyxz
lt r1.x, cb0[2].y, l(0.000000)
add r1.y, -cb0[24].y, l(1.000000)
movc r1.x, r1.x, r1.y, cb0[24].y
add r2.x, -v1.x, cb0[24].x
add r2.y, r1.x, -v1.y
mad r0.z, r0.z, cb0[28].z, l(1.000000)
mul r0.z, r0.z, cb0[27].x
mov r1.xyz, l(0,0,0,0)
mov r2.zw, v1.xxxy
mov r1.w, cb0[28].x
mov r3.x, cb0[27].y
loop
  ge r3.y, l(0.000000), r3.x
  breakc_nz r3.y
  mad r2.zw, r2.xxxy, r0.zzzz, r2.zzzw
  sample_l r4.xyzw, r2.zwzz, t3.xyzw, s0, l(0.000000)
  mul r4.xyz, r1.wwww, r4.xyzx
  mad r1.xyz, r4.xyzx, cb0[27].wwww, r1.xyzx
  mul r1.w, r1.w, cb0[28].y
  add r3.x, r3.x, l(-1.000000)
endloop
mad o0.xyz, r1.xyzx, cb0[27].zzzz, r0.xywx
mov o0.w, r3.w
ret
// Approximately 0 instruction slots used