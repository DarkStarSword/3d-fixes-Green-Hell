// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3267054db085e33d-ps.txt
// 3DMigoto: 3267054db085e33d |    Unity headers extracted from ASESampleShaders_ObjectNormalRefraction
//    Shader "ASESampleShaders/ObjectNormalRefraction" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Transparent+0" "RenderType"="Opaque" }
//        Pass 3/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from ASESampleShaders_ObjectNormalRefraction:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 111 6 2
//   undeciphered1a: 6
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_ALPHAPREMULTIPLY_ON" }
//   undeciphered2: 1 6 6 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 176
//   Vector 32 [_LightColor0]
//   Float 64 [_NormalScale]
//   Vector 80 [_NormalMap_ST]
//   Vector 96 [_Albedo_ST]
//   Float 112 [_AlbedoDirtPower]
//   Vector 128 [_Smth_ST]
//   Float 144 [_Opacity_Dirt_Power]
//   Float 148 [_Opacity]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_NormalMap] 2D 2
//   SetTexture 1 [_Albedo] 2D 3
//   SetTexture 2 [_CubeMap] CUBE 4
//   SetTexture 3 [_Smth] 2D 5
//   SetTexture 4 [_ShadowMapTexture] 2D 1
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:47:01 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float   xyz
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyw
dcl_output o0.xyzw
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3267054db085e33d-ps.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, r7.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
mad r2.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r2.xyzw, r2.xyxx, t0.xyzw, s2
mul r2.x, r2.w, r2.x
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, cb0[4].xxxx
dp2 r1.w, r2.xyxx, r2.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r2.z, r1.w
mad r3.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
sample r3.xyzw, r3.xyxx, t1.xyzw, s3
dp3 r4.x, v2.xyzx, r2.xyzx
dp3 r4.y, v3.xyzx, r2.xyzx
dp3 r4.z, v4.xyzx, r2.xyzx
dp3 r1.w, -r1.xyzx, r4.xyzx
add r1.w, r1.w, r1.w
mad r4.xyz, r4.xyzx, -r1.wwww, -r1.xyzx
sample r4.xyzw, r4.xyzx, t2.xyzw, s4
mad r4.xyz, r4.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000), -r3.xyzx
mad r3.xyz, cb0[7].xxxx, r4.xyzx, r3.xyzx
mad r4.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
sample r4.xyzw, r4.xyxx, t3.xyzw, s5
mad r1.w, r4.x, r4.x, -r4.x
mad r1.w, cb0[9].x, r1.w, r4.x
mul r2.w, r3.w, cb0[9].y
mul r4.xyz, v5.xyzx, v6.xyzx
mad r2.xyz, r4.xyzx, l(0.000010, 0.000010, 0.000010, 0.000000), r2.xyzx
mov r4.x, cb4[9].z
mov r4.y, cb4[10].z
mov r4.z, cb4[11].z
dp3 r3.w, r0.xyzx, r4.xyzx
add r4.xyz, v5.xyzx, -cb3[25].xyzx
dp3 r4.x, r4.xyzx, r4.xyzx
sqrt r4.x, r4.x
add r4.x, -r3.w, r4.x
mad r3.w, cb3[25].w, r4.x, r3.w
mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
eq r4.x, cb5[0].x, l(1.000000)
if_nz r4.x
  eq r4.x, cb5[0].y, l(1.000000)
  mul r4.yzw, v5.yyyy, cb5[2].xxyz
  mad r4.yzw, cb5[1].xxyz, v5.xxxx, r4.yyzw
  mad r4.yzw, cb5[3].xxyz, v5.zzzz, r4.yyzw
  add r4.yzw, r4.yyzw, cb5[4].xxyz
  movc r4.xyz, r4.xxxx, r4.yzwy, v5.xyzx
  add r4.xyz, r4.xyzx, -cb5[6].xyzx
  mul r4.yzw, r4.xxyz, cb5[5].xxyz
  mad r4.y, r4.y, l(0.250000), l(0.750000)
  mad r5.x, cb5[0].z, l(0.500000), l(0.750000)
  max r4.x, r4.y, r5.x
  sample r4.xyzw, r4.xzwx, t5.xyzw, s0
else
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r4.x, r4.xyzw, cb2[46].xyzw
div r4.yz, v7.xxyx, v7.wwww
sample r5.xyzw, r4.yzyy, t4.xyzw, s1
add r4.x, r4.x, -r5.x
mad r3.w, r3.w, r4.x, r5.x
dp3 r4.x, v2.xyzx, r2.xyzx
dp3 r4.y, v3.xyzx, r2.xyzx
dp3 r4.z, v4.xyzx, r2.xyzx
dp3 r2.x, r4.xyzx, r4.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, r4.xyzx
mul r4.xyz, r3.wwww, cb0[2].xyzx
mul r3.xyz, r2.wwww, r3.xyzx
mul r3.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad o0.w, r2.w, l(0.960000), l(0.0400000215)
add r1.w, -r1.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r2.xyzx, r1.xyzx
dp3_sat r1.x, r2.xyzx, cb2[0].xyzx
dp3_sat r1.y, r2.xyzx, r0.xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.x, l(1.000000)
mul r1.z, r0.z, r0.z
mul r1.z, r1.z, r1.z
mul r0.z, r0.z, r1.z
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.z, -|r0.w|, l(1.000000)
mul r2.x, r1.z, r1.z
mul r2.x, r2.x, r2.x
mul r1.z, r1.z, r2.x
mad r0.y, r0.y, r1.z, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
max r0.z, r0.z, l(0.002000)
add r1.z, -r0.z, l(1.000000)
mad r1.w, |r0.w|, r1.z, r0.z
mad r1.z, r1.x, r1.z, r0.z
mul r0.w, |r0.w|, r1.z
mad r0.w, r1.x, r1.w, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.z, r1.y, r0.z, -r1.y
mad r1.y, r1.z, r1.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.y, r1.y, r1.y, l(1.000000012E-007)
div r0.z, r0.z, r1.y
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r1.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
mul r1.xyz, r0.yyyy, r4.xyzx
mul r0.yzw, r4.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
mad r0.x, r0.x, l(0.960000), l(0.040000)
mul r0.xyz, r0.xxxx, r0.yzwy
mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
ret
// Approximately 0 instruction slots used