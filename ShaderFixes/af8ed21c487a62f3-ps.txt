// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed af8ed21c487a62f3-ps.txt
// 3DMigoto: af8ed21c487a62f3 |    Unity headers extracted from Hidden_HxVolumetricProjector
//    Shader "Hidden/HxVolumetricProjector" {
//      SubShader 1/1 {
// 1:     Pass 1/2 {
// 2:     Pass 2/2 {
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_HxVolumetricProjector:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 255 0 10
//   undeciphered1a: 19
//   Keywords { "VTRANSPARENCY_ON" "HEIGHTFOG_ON" }
//   undeciphered2: 1 4 3 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 6032
//   Vector 224 [Phase]
//   Vector 256 [Density]
//   Vector 272 [FogHeights] 3
//   Vector 928 [hxVolumeSettingsOld0] 2
//   Vector 936 [hxVolumeSettingsOld1] 2
//   Vector 944 [hxVolumeSettingsOld2] 2
//   Vector 952 [hxVolumeSettingsOld3] 2
//   Vector 960 [hxVolumeSettingsOld4] 2
//   Vector 968 [hxVolumeSettingsOld5] 2
//   Vector 976 [hxVolumeSettingsOld6] 2
//   Vector 984 [hxVolumeSettingsOld7] 2
//   Vector 992 [hxVolumeSettingsOld8] 2
//   Vector 1000 [hxVolumeSettingsOld9] 2
//   Vector 5088 [TransparencySliceSettings]
//   Float 5168 [OrthoLight]
//   Float 5328 [hxNearPlane]
//   Vector 5344 [_SpotLightParams]
//   Float 5360 [hxRayOffset]
//   Vector 5364 [LightColour] 3
//   Vector 5376 [LightColour2] 3
//   Float 5388 [TintPercent]
//   Vector 5392 [CameraFoward] 3
//   Vector 5408 [_LightParams]
//   Vector 5424 [_CustomLightPosition]
//   Float 5440 [HxTileSize]
//   Float 5840 [VolumeScale]
//   Vector 5936 [TopFrustumNormal] 3
//   Vector 5952 [BottomFrustumNormal] 3
//   Vector 5968 [LeftFrustumNormal] 3
//   Vector 5984 [RightFrustumNormal] 3
//   Vector 6000 [UpFrustumOffset] 3
//   Vector 6016 [RightFrustumOffset] 3
//   Matrix 288 [hxVolumeMatrixOld0]
//   Matrix 352 [hxVolumeMatrixOld1]
//   Matrix 416 [hxVolumeMatrixOld2]
//   Matrix 480 [hxVolumeMatrixOld3]
//   Matrix 544 [hxVolumeMatrixOld4]
//   Matrix 608 [hxVolumeMatrixOld5]
//   Matrix 672 [hxVolumeMatrixOld6]
//   Matrix 736 [hxVolumeMatrixOld7]
//   Matrix 800 [hxVolumeMatrixOld8]
//   Matrix 864 [hxVolumeMatrixOld9]
//   Matrix 5200 [hxCameraToWorld]
//   Matrix 5456 [InverseProjectionMatrix]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityPerDraw" 176
//   Matrix 64 [unity_WorldToObject]
//   SetTexture 0 [VolumetricDepth] 2D 1
//   SetTexture 1 [Tile5x5] 2D 0
//   SetTexture 2 [_FalloffTex] 2D 3
//   SetTexture 3 [_ShadowTex] 2D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:57:53 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[377], dynamicIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xyw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 21
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r19.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed af8ed21c487a62f3-ps.txt

mul r19.w, -r19.x, r19.y
mad r20.xyz, -r19.wwww, cb10[0].xyzw, cb1[4].xyzw

div r0.xy, v1.xyxx, v1.wwww
sample_l r1.xyzw, r0.xyxx, t0.xyzw, s1, l(0.000000)
dp2 r0.z, r1.xyxx, l(1.000000, 0.00392156886, 0.000000, 0.000000)
add r1.xy, -r1.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xyzw, r1.yyyy, cb0[342].xyzw
mad r1.xyzw, cb0[341].xyzw, r1.xxxx, r2.xyzw
add r1.xyzw, r1.xyzw, cb0[343].xyzw
add r1.xyzw, r1.xyzw, cb0[344].xyzw
div r1.xyz, r1.xyzx, r1.wwww
div r0.w, cb1[5].z, r1.z
mul r1.xyz, r0.wwww, -r1.xyzx
mul r1.xyz, r0.zzzz, r1.xyzx
mul r2.xyz, r1.yyyy, cb0[326].xyzx
mad r1.xyw, cb0[325].xyxz, r1.xxxx, r2.xyxz
mad r1.xyz, cb0[327].xyzx, r1.zzzz, r1.xywx
add r1.xyz, r1.xyzx, cb0[328].xyzx
add r1.xyz, r1.xyzx, -r20.xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.w, r0.z
mul r1.xyz, r0.wwww, r1.xyzx
sqrt r0.z, r0.z
add r0.z, r0.z, l(-0.050000)
dp3 r0.w, cb0[334].xyzx, r1.xyzx
mad r2.xyz, cb0[334].xyzx, cb0[338].zzzz, cb0[339].xyzx
add r2.xyz, r2.xyzx, -r20.xyzx
dp3 r1.w, r2.xyzx, cb0[334].xyzx
dp3 r2.x, cb0[372].xyzx, r1.xyzx
add r2.yzw, cb0[339].xxyz, -r20.xxyz
add r3.xyz, r2.yzwy, -cb0[375].xyzx
dp3 r3.x, r3.xyzx, cb0[372].xyzx
dp3 r3.y, cb0[373].xyzx, r1.xyzx
add r4.xyz, r2.yzwy, -cb0[376].xyzx
dp3 r3.z, r4.xyzx, cb0[373].xyzx
dp3 r3.w, -cb0[334].xyzx, r1.xyzx
mad r4.xyz, cb0[334].xyzx, cb0[333].xxxx, cb0[339].xyzx
add r5.xyz, r4.xyzx, -r20.xyzx
dp3 r4.w, r5.xyzx, -cb0[334].xyzx
dp3 r5.w, cb0[371].xyzx, r1.xyzx
add r6.xyz, r2.yzwy, cb0[375].xyzx
dp3 r6.x, r6.xyzx, cb0[371].xyzx
dp3 r6.y, cb0[374].xyzx, r1.xyzx
add r2.yzw, r2.yyzw, cb0[376].xxyz
dp3 r2.y, r2.yzwy, cb0[374].xyzx
lt r2.z, l(0.000000), r3.w
div r2.w, r4.w, r3.w
min r7.z, r2.w, l(100000.000000)
lt r4.w, r3.w, l(0.000000)
max r6.z, r2.w, l(0.000000)
and r8.y, r4.w, r6.z
mov r7.y, l(0)
mov r8.z, l(100000.000000)
movc r7.yz, r2.zzzz, r7.yyzy, r8.yyzy
lt r2.z, l(0.000000), r5.w
div r4.w, r6.x, r5.w
min r7.w, r4.w, r7.z
lt r5.w, r5.w, l(0.000000)
max r4.w, r4.w, r7.y
movc r7.x, r5.w, r4.w, r7.y
movc r7.yz, r2.zzzz, r7.yywy, r7.xxzx
lt r2.z, l(0.000000), r6.y
div r2.y, r2.y, r6.y
min r7.w, r2.y, r7.z
lt r4.w, r6.y, l(0.000000)
max r2.y, r2.y, r7.y
movc r7.x, r4.w, r2.y, r7.y
movc r6.yz, r2.zzzz, r7.yywy, r7.xxzx
lt r2.y, l(0.000000), r0.w
div r1.w, r1.w, r0.w
min r6.w, r1.w, r6.z
lt r2.z, r0.w, l(0.000000)
max r1.w, r1.w, r6.y
movc r6.x, r2.z, r1.w, r6.y
movc r6.yz, r2.yyyy, r6.yywy, r6.xxzx
lt r1.w, l(0.000000), r2.x
div r2.y, r3.x, r2.x
min r6.w, r2.y, r6.z
lt r2.x, r2.x, l(0.000000)
max r2.y, r2.y, r6.y
movc r6.x, r2.x, r2.y, r6.y
movc r6.yz, r1.wwww, r6.yywy, r6.xxzx
lt r1.w, l(0.000000), r3.y
div r2.x, r3.z, r3.y
min r6.w, r2.x, r6.z
lt r2.y, r3.y, l(0.000000)
max r2.x, r2.x, r6.y
movc r6.x, r2.y, r2.x, r6.y
movc r2.xy, r1.wwww, r6.ywyy, r6.xzxx
min r0.z, r0.z, r2.y
ge r1.w, r2.x, r0.z
discard_nz r1.w
mad r2.xyz, r1.xyzx, r2.xxxx, r20.xyzx
mad r3.xyz, r1.xyzx, r0.zzzz, r20.xyzx
add r6.xyz, -r4.xyzx, r2.xyzx
dp3 r0.z, r6.xyzx, cb0[334].xyzx
add r4.xyz, -r4.xyzx, r3.xyzx
dp3 r1.w, r4.xyzx, cb0[334].xyzx
ge r4.x, l(0.000000), r0.z
ge r4.y, l(0.000000), r1.w
and r4.z, r4.y, r4.x
discard_nz r4.z
lt r0.z, l(0.000000), r0.z
and r0.z, r4.y, r0.z
lt r3.w, l(0.000001), r3.w
mad r4.yzw, r1.xxyz, r2.wwww, r20.xxyz
movc r4.yzw, r3.wwww, r4.yyzw, r3.xxyz
movc r3.xyz, r0.zzzz, r4.yzwy, r3.xyzx
lt r0.z, l(0.000000), r1.w
and r0.z, r0.z, r4.x
lt r1.w, l(0.000001), r0.w
dp3 r2.w, r5.xyzx, cb0[334].xyzx
div r0.w, r2.w, r0.w
mad r1.xyz, r1.xyzx, r0.wwww, r20.xyzx
movc r1.xyz, r1.wwww, r1.xyzx, r2.xyzx
movc r1.xyz, r0.zzzz, r1.xyzx, r2.xyzx
mul r0.zw, cb0[365].xxxx, cb1[6].xxxy
mul r0.xy, r0.xyxx, r0.zwzz
div r0.xy, r0.xyxx, cb0[340].xxxx
ge r0.zw, r0.xxxy, -r0.xxxy
frc r0.xy, |r0.xyxx|
movc r0.xy, r0.zwzz, r0.xyxx, -r0.xyxx
mul r0.xy, r0.xyxx, cb0[340].xxxx
add r2.xyz, r1.xyzx, -r20.xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
sqrt r0.z, r0.z
add r2.xyz, -r1.xyzx, r3.xyzx
min r0.w, cb0[16].y, l(128.000000)
ftoi r1.w, r0.w
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r3.w, r2.w
mul r2.xyz, r2.xyzx, r3.wwww
sqrt r2.w, r2.w
round_z r0.w, r0.w
div r2.w, r2.w, r0.w
mul r4.xyz, r2.wwww, r2.xyzx
add r5.xyz, r1.xyzx, -cb0[339].xyzx
mul r6.xyz, r5.yyyy, cb2[5].xyzx
mad r5.xyw, cb2[4].xyxz, r5.xxxx, r6.xyxz
mad r5.xyz, cb2[6].xyzx, r5.zzzz, r5.xywx
add r3.xyz, r3.xyzx, -cb0[339].xyzx
mul r6.xyz, r3.yyyy, cb2[5].xyzx
mad r3.xyw, cb2[4].xyxz, r3.xxxx, r6.xyxz
mad r3.xyz, cb2[6].xyzx, r3.zzzz, r3.xywx
add r3.xyz, -r5.xyzx, r3.xyzx
dp3 r3.w, r3.xyzx, r3.xyzx
sqrt r4.w, r3.w
div r0.w, r4.w, r0.w
rsq r3.w, r3.w
mul r3.xyz, r3.wwww, r3.xyzx
mul r6.xyz, r0.wwww, r3.xyzx
div r0.xy, r0.xyxx, cb0[340].xxxx
sample_l r7.xyzw, r0.xyxx, t1.xyzw, s0, l(0.000000)
add r0.x, r7.x, cb0[335].x
frc r0.x, r0.x
mad r5.xyz, r6.xyzx, r0.xxxx, r5.xyzx
mad r1.xyz, r4.xyzx, r0.xxxx, r1.xyzx
mul r0.x, r0.z, cb0[16].x
mul r0.x, r0.x, cb0[16].w
mul r0.y, r2.w, cb0[16].w
dp3 r3.w, cb0[337].xyzx, r2.xyzx
mul r0.z, r0.z, r3.w
div r3.w, r2.w, r3.w
add r4.x, -cb0[17].y, cb0[17].x
div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r4.x
add r4.y, -cb0[17].z, l(1.000000)
mul r4.z, cb0[338].z, cb0[338].z
div r4.z, l(1.000000, 1.000000, 1.000000, 1.000000), r4.z
add r6.xyz, cb0[335].yzwy, -cb0[336].xyzx
ftoi r4.w, cb0[318].z
iadd r4.w, r4.w, l(-1)
itof r4.w, r4.w
mov r7.z, l(0)
mov r8.xyzw, l(0,0,0,0)
mov r9.xyzw, l(0,0,0,0)
mov r10.xyz, l(0,0,0,0)
mov r11.xyz, r5.xyzx
mov r12.xyz, r1.xyzx
mov r5.w, r0.x
mov r6.w, r0.z
mov r7.w, l(0)
loop
  ige r10.w, r7.w, r1.w
  breakc_nz r10.w
  mul r10.w, r11.z, l(0.500000)
  div r10.w, l(1.000000, 1.000000, 1.000000, 1.000000), r10.w
  mul r13.xy, r11.xyxx, r10.wwww
  mul r13.zw, r13.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
  mad r13.xy, r13.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  add r14.xyz, r12.xyzx, -cb0[339].xyzx
  add r10.w, r12.y, -cb0[17].y
  mul_sat r10.w, r4.x, r10.w
  mad r11.w, r10.w, l(-2.000000), l(3.000000)
  mul r10.w, r10.w, r10.w
  mul r10.w, r10.w, r11.w
  mad r10.w, r10.w, r4.y, cb0[17].z
  mul r10.w, r10.w, cb0[16].x
  mov r15.x, r10.w
  mov r15.yz, l(0,0,0,0)
  mov r11.w, l(0)
  loop
    ige r12.w, r15.z, l(10)
    mov r11.w, l(0)
    breakc_nz r12.w
    eq r12.w, l(-1.000000), cb0[r15.z + 58].y
    if_nz r12.w
      mov r15.xy, r15.xxxx
      mov r11.w, l(-1)
      break
    endif
    ishl r14.w, r15.z, l(2)
    mul r16.xyz, r12.yyyy, cb0[r14.w + 19].xyzx
    mad r16.xyz, cb0[r14.w + 18].xyzx, r12.xxxx, r16.xyzx
    mad r16.xyz, cb0[r14.w + 20].xyzx, r12.zzzz, r16.xyzx
    add r16.xyz, r16.xyzx, cb0[r14.w + 21].xyzx
    lt r17.xyz, l(-0.500000, -0.500000, -0.500000, 0.000000), r16.xyzx
    lt r18.xyz, r16.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    and r14.w, r17.x, r18.x
    and r14.w, r17.y, r14.w
    and r14.w, r18.y, r14.w
    and r14.w, r17.z, r14.w
    and r14.w, r18.z, r14.w
    if_nz r14.w
      ge r14.w, l(3.000000), cb0[r15.z + 58].y
      if_nz r14.w
        max r14.w, r15.x, cb0[r15.z + 58].x
        add r15.w, r15.x, cb0[r15.z + 58].x
        min r16.w, r15.x, cb0[r15.z + 58].x
        eq r17.xyzw, l(0.000000, 1.000000, 2.000000, 3.000000), cb0[r15.z + 58].yyyy
        add r18.x, r15.x, -cb0[r15.z + 58].x
        movc r17.w, r17.w, r18.x, r15.x
        movc r16.w, r17.z, r16.w, r17.w
        movc r15.w, r17.y, r15.w, r16.w
        movc r7.x, r17.x, r14.w, r15.w
      else
        ge r14.w, l(7.000000), cb0[r15.z + 58].y
        dp3 r15.w, r16.xyzx, r16.xyzx
        sqrt r15.w, r15.w
        lt r15.w, r15.w, l(0.500000)
        and r14.w, r14.w, r15.w
        if_nz r14.w
          max r14.w, r15.x, cb0[r15.z + 58].x
          add r15.w, r15.x, cb0[r15.z + 58].x
          min r16.y, r15.x, cb0[r15.z + 58].x
          eq r17.xyzw, l(4.000000, 5.000000, 6.000000, 7.000000), cb0[r15.z + 58].yyyy
          add r16.w, r15.x, -cb0[r15.z + 58].x
          movc r16.w, r17.w, r16.w, r15.x
          movc r16.y, r17.z, r16.y, r16.w
          movc r15.w, r17.y, r15.w, r16.y
          movc r7.x, r17.x, r14.w, r15.w
        else
          ge r14.w, l(11.000000), cb0[r15.z + 58].y
          dp2 r15.w, r16.xzxx, r16.xzxx
          sqrt r15.w, r15.w
          lt r15.w, r15.w, l(0.500000)
          and r14.w, r14.w, r15.w
          max r15.w, r15.x, cb0[r15.z + 58].x
          add r16.x, r15.x, cb0[r15.z + 58].x
          min r16.y, r15.x, cb0[r15.z + 58].x
          eq r17.xyzw, l(8.000000, 9.000000, 10.000000, 11.000000), cb0[r15.z + 58].yyyy
          add r16.z, r15.x, -cb0[r15.z + 58].x
          movc r16.z, r17.w, r16.z, r15.x
          movc r16.y, r17.z, r16.y, r16.z
          movc r16.x, r17.y, r16.x, r16.y
          movc r15.w, r17.x, r15.w, r16.x
          movc r7.x, r14.w, r15.w, r15.x
        endif
      endif
    else
      mov r7.x, r15.x
    endif
    iadd r7.y, r15.z, l(1)
    mov r15.xyz, r7.xzyx
    mov r11.w, r12.w
  endloop
  movc r7.x, r11.w, r15.y, r15.x
  dp3 r7.y, r14.xyzx, r14.xyzx
  rsq r10.w, r7.y
  mul r14.xyz, r10.wwww, r14.xyzx
  dp3 r10.w, r14.xyzx, -r2.xyzx
  mad r10.w, -cb0[14].w, r10.w, cb0[14].z
  log r10.w, r10.w
  mul r10.w, r10.w, l(1.500000)
  exp r10.w, r10.w
  div r10.w, cb0[14].y, r10.w
  mul r10.w, r10.w, cb0[14].x
  mul r12.w, r4.z, r7.y
  sample_l r14.xyzw, r12.wwww, t2.xyzw, s3, l(0.000000)
  add r14.xy, r11.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  add r14.xy, -r13.xyxx, r14.xyxx
  mad r13.xy, cb0[323].xxxx, r14.xyxx, r13.xyxx
  sample_l r16.xyzw, r13.xyxx, t3.xyzw, s2, l(0.000000)
  mul r12.w, r14.w, r16.w
  mad r7.y, -r7.y, r4.z, l(1.000000)
  dp2 r13.x, r13.zwzz, r13.zwzz
  sqrt r13.x, r13.x
  mad r13.x, -r13.x, l(2.000000), l(1.000000)
  min r7.y, r7.y, r13.x
  mul r7.y, r7.y, cb0[336].w
  mul_sat r7.y, r7.y, l(0.500000)
  mad r13.xyz, r7.yyyy, r6.xyzx, cb0[336].xyzx
  mul r13.xyz, r13.xyzx, r16.xyzx
  mul r7.y, r10.w, r12.w
  mul r10.w, r5.w, l(-1.442695)
  exp r10.w, r10.w
  mul r7.y, r7.y, r10.w
  mul r7.y, r7.x, r7.y
  mul r7.y, r2.w, r7.y
  max r7.y, r7.y, l(0.000000)
  mul r14.xyz, r7.yyyy, r13.xyzx
  mad r10.xyz, r13.xyzx, r7.yyyy, r10.xyzx
  dp3 r7.y, r14.xyzx, l(0.0396819152, 0.458021790, 0.00609653955, 0.000000)
  div r10.w, r6.w, cb0[318].x
  log r10.w, r10.w
  mul r10.w, r10.w, cb0[318].y
  exp r10.w, r10.w
  mul r12.w, r4.w, r10.w
  mov_sat r12.w, r12.w
  add r12.w, -r12.w, l(1.000000)
  mul_sat r13.x, r7.y, r12.w
  mad_sat r14.xyzw, r10.wwww, r4.wwww, l(-1.000000, -2.000000, -3.000000, -4.000000)
  add r14.xyzw, -r14.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  mul_sat r14.xyzw, r7.yyyy, r14.wxyz
  mov r13.yzw, r14.yyzw
  add r8.xyzw, r8.xyzw, r13.xyzw
  mad_sat r13.xyz, r10.wwww, r4.wwww, l(-5.000000, -6.000000, -7.000000, 0.000000)
  add r13.xyz, -r13.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul_sat r14.yzw, r7.yyyy, r13.xxyz
  add r9.xyzw, r9.xyzw, r14.xyzw
  mad r5.w, r0.y, r7.x, r5.w
  mad r11.xyz, r3.xyzx, r0.wwww, r11.xyzx
  mad r12.xyz, r2.xyzx, r2.wwww, r12.xyzx
  add r6.w, r3.w, r6.w
  iadd r7.w, r7.w, l(1)
endloop
mov o1.xyzw, r8.xyzw
mov o2.xyzw, r9.xyzw
mov o0.xyz, r10.xyzx
mov o0.w, l(0)
ret
// Approximately 0 instruction slots used