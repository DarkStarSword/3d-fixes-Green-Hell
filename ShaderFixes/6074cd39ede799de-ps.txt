// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6074cd39ede799de-ps.txt
// 3DMigoto: 6074cd39ede799de |    Unity headers extracted from NatureManufacture Shaders_Water_Water River Tesseled Vertex Color Flow
//    Shader "NatureManufacture Shaders/Water/Water River Tesseled Vertex Color Flow" {
//      SubShader 1/1 {
//        Tags { "IsEmissive"="true" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//        Pass 3/5 {
//          Name "FORWARD"
//          Tags { "IsEmissive"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from NatureManufacture Shaders_Water_Water River Tesseled Vertex Color Flow:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 201802150 369 22 2
//   undeciphered1a: 14
//   Keywords { "POINT" }
//   undeciphered2: 1 11 4 11 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 592
//   Vector 32 [_LightColor0]
//   ScalarInt 132 [_UVVDirection1UDirection0]
//   Vector 136 [_WaterMixSpeed] 2
//   Vector 144 [_WaterNormal_ST]
//   Float 160 [_GlobalTiling]
//   Vector 164 [_WaterMainSpeed] 2
//   Vector 176 [_SmallCascadeMixSpeed] 2
//   Vector 192 [_SmallCascadeNormal_ST]
//   Vector 212 [_SmallCascadeMainSpeed] 2
//   Float 220 [_SmallCascadeAngle]
//   Float 224 [_SmallCascadeAngleFalloff]
//   Float 228 [_BigCascadeAngle]
//   Float 232 [_BigCascadeAngleFalloff]
//   Vector 240 [_BigCascadeMixSpeed] 2
//   Vector 256 [_BigCascadeNormal_ST]
//   Vector 272 [_BigCascadeMainSpeed] 2
//   Float 280 [_NormalScale]
//   Float 284 [_SmallCascadeNormalScale]
//   Float 288 [_BigCascadeNormalScale]
//   Float 292 [_Distortion]
//   Vector 304 [_DeepColor]
//   Vector 320 [_ShalowColor]
//   Float 336 [_ShalowDepth]
//   Float 340 [_ShalowFalloff]
//   Float 344 [_BigCascadeTransparency]
//   Vector 352 [_FoamColor] 3
//   Float 364 [_FoamDepth]
//   Float 368 [_FoamFalloff]
//   Vector 384 [_Foam_ST]
//   Vector 400 [_FoamSpeed] 2
//   Vector 408 [_NoiseSpeed] 2
//   Vector 416 [_Noise_ST]
//   Float 432 [_SmallCascadeNoisePower]
//   Vector 436 [_SmallCascadeColor] 3
//   Float 448 [_SmallCascadeFoamFalloff]
//   Float 452 [_BigCascadeNoisePower]
//   Vector 464 [_BigCascadeColor] 3
//   Float 476 [_BigCascadeFoamFalloff]
//   Float 488 [_WaterSpecularFar]
//   Float 492 [_WaterSpecularClose]
//   Float 496 [_WaterSpecularThreshold]
//   Float 500 [_FoamSpecular]
//   Float 504 [_SmallCascadeSpecular]
//   Float 508 [_BigCascadeSpecular]
//   Float 512 [_WaterSmoothness]
//   Float 516 [_FoamSmoothness]
//   Float 520 [_SmallCascadeSmoothness]
//   Float 524 [_BigCascadeSmoothness]
//   Float 532 [_WaterDepth]
//   Float 536 [_WaterFalloffBorder]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 16 [_SinTime]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_WaterNormal] 2D 2
//   SetTexture 1 [_SmallCascadeNormal] 2D 3
//   SetTexture 2 [_BigCascadeNormal] 2D 4
//   SetTexture 3 [_WaterGrab] 2D 5
//   SetTexture 4 [_CameraDepthTexture] 2D 6
//   SetTexture 5 [_Foam] 2D 7
//   SetTexture 6 [_SmallCascade] 2D 8
//   SetTexture 7 [_Noise] 2D 9
//   SetTexture 8 [_BigCascade] 2D 10
//   SetTexture 9 [_LightTexture0] 2D 1
//   SetTexture 10 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:10:30 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// COLOR                    0   xyzw        7     NONE   float   xyzw
// TEXCOORD                 6   xyz         8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyw
dcl_input_ps linear v7.xyzw
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6074cd39ede799de-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v5.xyzx, r15.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mad r3.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[10].x
mul r3.xy, r1.wwww, r3.xyxx
itof r2.w, cb0[8].y
eq r2.w, r2.w, l(1.000000)
movc r3.zw, r2.wwww, cb0[8].zzzw, cb0[8].wwwz
mad r3.zw, cb1[0].yyyy, r3.zzzw, r3.xxxy
movc r4.xy, r2.wwww, cb0[10].yzyy, cb0[10].zyzz
mul r4.xy, r4.xyxx, v1.zwzz
mul r5.xyz, cb1[0].yyyy, l(0.150000, 0.250000, 0.600000, 0.000000)
frc r5.xyz, r5.xyzx
mad r4.zw, r4.xxxy, r5.xxxx, r3.xxxy
mad r6.xyz, cb1[0].yyyy, l(0.150000, 0.250000, 0.600000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
frc r6.xyz, r6.xyzx
mad r3.xy, r4.xyxx, r6.xxxx, r3.xyxx
add r7.xyz, r5.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r7.xyz, r7.xyzx, r7.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.zwzz, t0.xywz, s2
mul r4.x, r4.z, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, cb0[17].zzzz
dp2 r4.w, r4.xyxx, r4.xyxx
min r4.w, r4.w, l(1.000000)
add r4.w, -r4.w, l(1.000000)
sqrt r4.z, r4.w
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r3.xyxx, t0.xywz, s2
mul r8.x, r8.z, r8.x
mad r3.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r8.xy, r3.xyxx, cb0[17].zzzz
dp2 r3.x, r8.xyxx, r8.xyxx
min r3.x, r3.x, l(1.000000)
add r3.x, -r3.x, l(1.000000)
sqrt r8.z, r3.x
add r8.xyz, -r4.xyzx, r8.xyzx
mad r4.xyz, |r7.xxxx|, r8.xyzx, r4.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t0.xywz, s2
mul r3.w, cb0[17].z, l(1.200000)
mul r3.x, r3.z, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r8.xy, r3.wwww, r3.xyxx
dp2 r3.z, r8.xyxx, r8.xyxx
min r3.z, r3.z, l(1.000000)
add r3.z, -r3.z, l(1.000000)
sqrt r3.z, r3.z
mad r8.xy, r3.xyxx, r3.wwww, r4.xyxx
mul r8.z, r4.z, r3.z
dp3 r3.x, r8.xyzx, r8.xyzx
rsq r3.x, r3.x
mul r3.yzw, r3.xxxx, r8.xxyz
mad r4.xy, v1.xyxx, cb0[12].xyxx, cb0[12].zwzz
mul r4.xy, r1.wwww, r4.xyxx
movc r4.zw, r2.wwww, cb0[11].xxxy, cb0[11].yyyx
mad r4.zw, cb1[0].yyyy, r4.zzzw, r4.xxxy
movc r9.xy, r2.wwww, cb0[13].yzyy, cb0[13].zyzz
mul r9.xy, r9.xyxx, v1.zwzz
mad r5.yw, r9.xxxy, r5.yyyy, r4.xxxy
mad r4.xy, r9.xyxx, r6.yyyy, r4.xyxx
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r5.ywyy, t1.xywz, s3
mul r9.x, r9.z, r9.x
mad r9.xy, r9.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r6.y, r9.xyxx, r9.xyxx
min r6.y, r6.y, l(1.000000)
add r6.y, -r6.y, l(1.000000)
sqrt r9.z, r6.y
sample_indexable(texture2d)(float,float,float,float) r10.xyz, r4.xyxx, t1.xywz, s3
mul r10.x, r10.z, r10.x
mad r6.yw, r10.xxxy, l(0.000000, 2.000000, 0.000000, 2.000000), l(0.000000, -1.000000, 0.000000, -1.000000)
mul r10.xy, r6.ywyy, cb0[17].wwww
dp2 r6.y, r10.xyxx, r10.xyxx
min r6.y, r6.y, l(1.000000)
add r6.y, -r6.y, l(1.000000)
sqrt r10.z, r6.y
add r10.xyz, -r9.xyzx, r10.xyzx
mad r9.xyz, |r7.yyyy|, r10.xyzx, r9.xyzx
sample_indexable(texture2d)(float,float,float,float) r10.xyz, r4.zwzz, t1.xywz, s3
mul r10.x, r10.z, r10.x
mad r4.zw, r10.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r6.yw, r4.zzzw, cb0[17].wwww
dp2 r6.y, r6.ywyy, r6.ywyy
min r6.y, r6.y, l(1.000000)
add r6.y, -r6.y, l(1.000000)
sqrt r6.y, r6.y
mad r10.xy, r4.zwzz, cb0[17].wwww, r9.xyxx
mul r10.z, r9.z, r6.y
dp3 r4.z, r10.xyzx, r10.xyzx
rsq r4.z, r4.z
mov_sat r4.w, v3.z
mul r6.y, cb0[13].w, l(0.0222222228)
mad r6.w, -cb0[13].w, l(0.0222222228), l(1.000000)
add r6.w, r4.w, -r6.w
max r6.w, r6.w, l(0.000000)
min r6.w, r6.w, l(2.000000)
div r6.y, l(1.000000, 1.000000, 1.000000, 1.000000), r6.y
mul_sat r6.y, r6.y, r6.w
add r6.y, -r6.y, l(1.000000)
log r6.y, r6.y
mul r6.y, r6.y, cb0[14].x
exp r6.y, r6.y
mul r6.w, cb0[14].y, l(0.0222222228)
mad r7.w, -cb0[14].y, l(0.0222222228), l(1.000000)
add r4.w, r4.w, -r7.w
max r4.w, r4.w, l(0.000000)
min r4.w, r4.w, l(2.000000)
div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
mul_sat r4.w, r4.w, r6.w
add r4.w, -r4.w, l(1.000000)
log r4.w, r4.w
mul r4.w, r4.w, cb0[14].z
exp r4.w, r4.w
min r4.w, r4.w, l(1.000000)
add_sat r6.y, -r4.w, r6.y
mad r9.xyz, r10.xyzx, r4.zzzz, -r3.yzwy
mad r3.yzw, r6.yyyy, r9.xxyz, r3.yyzw
mad r9.xy, v1.xyxx, cb0[16].xyxx, cb0[16].zwzz
mul r9.xy, r1.wwww, r9.xyxx
movc r9.zw, r2.wwww, cb0[15].xxxy, cb0[15].yyyx
mad r9.zw, cb1[0].yyyy, r9.zzzw, r9.xxxy
movc r11.xy, r2.wwww, cb0[17].xyxx, cb0[17].yxyy
mul r11.xy, r11.xyxx, v1.zwzz
mad r11.zw, r11.xxxy, r5.zzzz, r9.xxxy
mad r6.zw, r11.xxxy, r6.zzzz, r9.xxxy
sample_indexable(texture2d)(float,float,float,float) r12.xyz, r11.zwzz, t2.xywz, s4
mul r12.x, r12.z, r12.x
mad r9.xy, r12.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r12.xy, r9.xyxx, cb0[18].xxxx
dp2 r5.z, r12.xyxx, r12.xyxx
min r5.z, r5.z, l(1.000000)
add r5.z, -r5.z, l(1.000000)
sqrt r12.z, r5.z
sample_indexable(texture2d)(float,float,float,float) r13.xyz, r6.zwzz, t2.xywz, s4
mul r13.x, r13.z, r13.x
mad r9.xy, r13.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r13.xy, r9.xyxx, cb0[18].xxxx
dp2 r5.z, r13.xyxx, r13.xyxx
min r5.z, r5.z, l(1.000000)
add r5.z, -r5.z, l(1.000000)
sqrt r13.z, r5.z
add r13.xyz, -r12.xyzx, r13.xyzx
mad r12.xyz, |r7.zzzz|, r13.xyzx, r12.xyzx
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r9.zwzz, t2.xywz, s4
mul r9.x, r9.z, r9.x
mad r9.xy, r9.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r9.zw, r9.xxxy, cb0[18].xxxx
dp2 r5.z, r9.zwzz, r9.zwzz
min r5.z, r5.z, l(1.000000)
add r5.z, -r5.z, l(1.000000)
sqrt r5.z, r5.z
mad r9.xy, r9.xyxx, cb0[18].xxxx, r12.xyxx
mul r9.z, r12.z, r5.z
dp3 r5.z, r9.xyzx, r9.xyzx
rsq r5.z, r5.z
mad r12.xyz, r9.xyzx, r5.zzzz, -r3.yzwy
mad r3.yzw, r4.wwww, r12.xxyz, r3.yyzw
mad r8.xyz, r8.xyzx, r3.xxxx, -r3.yzwy
mad r8.xyz, v7.xxxx, r8.xyzx, r3.yzwy
mad r10.xyz, r10.xyzx, r4.zzzz, -r8.xyzx
mad r8.xyz, v7.yyyy, r10.xyzx, r8.xyzx
mad r9.xyz, r9.xyzx, r5.zzzz, -r8.xyzx
mad r8.xyz, v7.zzzz, r9.xyzx, r8.xyzx
add r9.xyw, v6.wxww, l(9.999999960E-012, 0.000000, 0.000000, 9.999999960E-012)
mul r3.x, r9.x, l(0.500000)
mad r3.w, -r9.x, l(0.500000), v6.y
mad r9.z, -r3.w, cb1[5].x, r3.x
div r9.yzw, r9.yyzw, r9.xxxx
div r3.xw, r9.yyyz, r9.wwww
mad r3.xy, r3.yzyy, cb0[18].yyyy, r3.xwxx
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t3.xyzw, s5
div r9.yz, v6.xxyx, r9.xxxx
sample_indexable(texture2d)(float,float,float,float) r3.w, r9.yzyy, t4.yzwx, s6
mad r3.w, cb1[7].z, r3.w, cb1[7].w
div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
add r3.w, -r9.x, r3.w
add r4.z, |r3.w|, cb0[21].x
log r4.z, r4.z
mul r4.z, r4.z, cb0[21].y
exp r4.z, r4.z
mul r5.z, r4.w, cb0[21].z
add r7.w, -r4.z, l(100.000000)
mad_sat r4.z, r5.z, r7.w, r4.z
add r9.xyz, -cb0[19].xyzx, cb0[20].xyzx
mad r9.xyz, r4.zzzz, r9.xyzx, cb0[19].xyzx
add r5.z, |r3.w|, cb0[22].w
log r5.z, r5.z
mul r5.z, r5.z, cb0[23].x
exp r5.z, r5.z
min r5.z, r5.z, l(1.000000)
mad r10.xy, v1.xyxx, cb0[24].xyxx, cb0[24].zwzz
mul r10.xy, r1.wwww, r10.xyxx
movc r12.xyzw, r2.wwww, cb0[25].xyzw, cb0[25].yxwz
mul r10.zw, r12.xxxy, v1.zzzw
mad r11.xy, r10.zwzz, r5.xxxx, r10.xyxx
mad r10.xy, r10.zwzz, r6.xxxx, r10.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.w, r11.xyxx, t5.xyzw, s7
sample_indexable(texture2d)(float,float,float,float) r5.x, r10.xyxx, t5.wxyz, s7
add r5.x, -r2.w, r5.x
mad r2.w, |r7.x|, r5.x, r2.w
mul r2.w, r2.w, r5.z
add r10.xyz, -r9.xyzx, cb0[22].xyzx
mad r10.xyz, r2.wwww, r10.xyzx, r9.xyzx
add r10.xyz, -r3.xyzx, r10.xyzx
mad r10.xyz, r5.zzzz, r10.xyzx, r3.xyzx
add r5.x, -r4.z, l(1.000000)
add r13.xyz, r9.xyzx, -r10.xyzx
mad r10.xyz, r5.xxxx, r13.xyzx, r10.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.y, r5.ywyy, t6.xwyz, s8
sample_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t6.wxyz, s8
add r4.x, -r5.y, r4.x
mad r4.x, |r7.y|, r4.x, r5.y
mad r5.yz, v1.xxyx, cb0[26].xxyx, cb0[26].zzwz
mul r5.yz, r1.wwww, r5.yyzy
mad r5.yz, cb1[1].xxxx, r12.zzwz, r5.yyzy
mov r7.xy, -r5.yzyy
sample_indexable(texture2d)(float,float,float,float) r1.w, r7.xyxx, t7.xyzw, s9
sample_indexable(texture2d)(float,float,float,float) r4.y, r5.yzyy, t7.xwyz, s9
min r4.y, r1.w, r4.y
log r4.y, r4.y
mul r4.y, r4.y, cb0[27].x
exp r4.y, r4.y
mul r4.y, r4.y, l(20.000000)
min r4.y, r4.y, l(1.000000)
mul r4.y, r4.x, r4.y
log r4.x, r4.x
mul r4.x, r4.x, cb0[28].x
exp r4.x, r4.x
min r4.x, r4.x, l(1.000000)
mul r5.w, r4.x, r6.y
mad r7.xyw, r4.yyyy, cb0[27].yzyw, -r10.xyxz
mad r7.xyw, r5.wwww, r7.xyxw, r10.xyxz
sample_indexable(texture2d)(float,float,float,float) r6.x, r11.zwzz, t8.wxyz, s10
sample_indexable(texture2d)(float,float,float,float) r6.z, r6.zwzz, t8.xywz, s10
add r6.z, -r6.x, r6.z
mad r6.x, |r7.z|, r6.z, r6.x
add r5.yz, r5.yyzy, l(0.000000, -0.470000, 0.370000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r5.y, r5.yzyy, t7.xwyz, s9
min r1.w, r1.w, r5.y
log r1.w, r1.w
mul r1.w, r1.w, cb0[28].y
exp r1.w, r1.w
mul r1.w, r1.w, l(20.000000)
min r1.w, r1.w, l(1.000000)
mul r5.y, r6.x, l(0.500000)
mad r1.w, r1.w, r5.y, r5.y
log r5.y, r6.x
mul r5.y, r5.y, cb0[29].w
exp r5.y, r5.y
min r5.y, r5.y, l(1.000000)
mul r5.z, r4.w, r5.y
mad r6.xzw, r1.wwww, cb0[29].xxyz, -r7.xxyw
mad r6.xzw, r5.zzzz, r6.xxzw, r7.xxyw
add r7.xyz, -r3.xyzx, r9.xyzx
mad r3.xyz, r5.xxxx, r7.xyzx, r3.xyzx
add r7.xyz, -r6.xzwx, r3.xyzx
mad r6.xzw, v7.xxxx, r7.xxyz, r6.xxzw
mad r7.xyz, r4.yyyy, cb0[27].yzwy, -r3.xyzx
mad r7.xyz, r4.xxxx, r7.xyzx, r3.xyzx
add r7.xyz, -r6.xzwx, r7.xyzx
mad r6.xzw, v7.yyyy, r7.xxyz, r6.xxzw
mad r7.xyz, r1.wwww, cb0[29].xyzx, -r3.xyzx
mad r3.xyz, r5.yyyy, r7.xyzx, r3.xyzx
add r3.xyz, -r6.xzwx, r3.xyzx
mad r3.xyz, v7.zzzz, r3.xyzx, r6.xzwx
log r1.w, r4.z
mul r1.w, r1.w, cb0[31].x
exp r1.w, r1.w
add r4.x, -cb0[30].z, cb0[30].w
mad r1.w, r1.w, r4.x, cb0[30].z
add r4.x, -r1.w, cb0[31].y
mad r1.w, r2.w, r4.x, r1.w
mul r4.x, r6.y, r5.w
add r4.yz, -r1.wwww, cb0[31].zzwz
mad r5.x, r4.x, r4.y, r1.w
mul r4.w, r4.w, r5.z
add r5.y, -r5.x, cb0[31].w
mad r5.x, r4.w, r5.y, r5.x
add r5.y, r1.w, -r5.x
mad r5.x, v7.x, r5.y, r5.x
mad r4.y, r5.w, r4.y, r1.w
add r4.y, -r5.x, r4.y
mad r4.y, v7.y, r4.y, r5.x
mad r1.w, r5.z, r4.z, r1.w
add r1.w, -r4.y, r1.w
mad r1.w, v7.z, r1.w, r4.y
add r4.y, -cb0[32].x, cb0[32].y
mad r2.w, r2.w, r4.y, cb0[32].x
add r4.yz, -r2.wwww, cb0[32].zzwz
mad r4.x, r4.x, r4.y, r2.w
add r5.x, -r4.x, cb0[32].w
mad r4.x, r4.w, r5.x, r4.x
add r4.w, r2.w, -r4.x
mad r4.x, v7.x, r4.w, r4.x
mad r4.y, r5.w, r4.y, r2.w
add r4.y, -r4.x, r4.y
mad r4.x, v7.y, r4.y, r4.x
mad r2.w, r5.z, r4.z, r2.w
add r2.w, -r4.x, r2.w
mad r2.w, v7.z, r2.w, r4.x
log r3.w, |r3.w|
mul r3.w, r3.w, cb0[33].y
exp r3.w, r3.w
min r3.w, r3.w, l(1.000000)
log r3.w, r3.w
mul r3.w, r3.w, cb0[33].z
exp r3.w, r3.w
mul o0.w, r3.w, v7.w
mul r4.xyz, v5.yyyy, cb0[5].xyzx
mad r4.xyz, cb0[4].xyzx, v5.xxxx, r4.xyzx
mad r4.xyz, cb0[6].xyzx, v5.zzzz, r4.xyzx
add r4.xyz, r4.xyzx, cb0[7].xyzx
eq r3.w, cb3[0].x, l(1.000000)
if_nz r3.w
  eq r3.w, cb3[0].y, l(1.000000)
  mul r5.xyz, v5.yyyy, cb3[2].xyzx
  mad r5.xyz, cb3[1].xyzx, v5.xxxx, r5.xyzx
  mad r5.xyz, cb3[3].xyzx, v5.zzzz, r5.xyzx
  add r5.xyz, r5.xyzx, cb3[4].xyzx
  movc r5.xyz, r3.wwww, r5.xyzx, v5.xyzx
  add r5.xyz, r5.xyzx, -cb3[6].xyzx
  mul r5.yzw, r5.xxyz, cb3[5].xxyz
  mad r3.w, r5.y, l(0.250000), l(0.750000)
  mad r4.w, cb3[0].z, l(0.500000), l(0.750000)
  max r5.x, r3.w, r4.w
  sample_indexable(texture3d)(float,float,float,float) r5.xyzw, r5.xzwx, t10.xyzw, s0
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
dp3 r4.x, r4.xyzx, r4.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.x, r4.xxxx, t9.xyzw, s1
mul r3.w, r3.w, r4.x
dp3 r4.x, v2.xyzx, r8.xyzx
dp3 r4.y, v3.xyzx, r8.xyzx
dp3 r4.z, v4.xyzx, r8.xyzx
dp3 r4.w, r4.xyzx, r4.xyzx
rsq r4.w, r4.w
mul r4.xyz, r4.wwww, r4.xyzx
mul r5.xyz, r3.wwww, cb0[2].xyzx
max r3.w, r1.w, r1.w
max r3.w, r1.w, r3.w
add r3.w, -r3.w, l(1.000000)
mul r3.xyz, r3.wwww, r3.xyzx
add r2.w, -r2.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r4.xyzx, r2.xyzx
dp3_sat r2.x, r4.xyzx, r1.xyzx
dp3_sat r2.y, r4.xyzx, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
add r0.y, r0.x, r0.x
mul r0.y, r0.x, r0.y
mad r0.y, r0.y, r2.w, l(-0.500000)
add r0.z, -r2.x, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r2.w, r2.w
max r0.z, r0.z, l(0.002000)
add r1.x, -r0.z, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r2.x, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r2.x, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r2.y, r0.z, -r2.y
mad r1.x, r1.x, r2.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r2.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r1.wwww, r1.wwww
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r5.xyzx
mul r0.yzw, r5.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r2.x, r0.x, r0.x
mul r2.x, r2.x, r2.x
mul r0.x, r0.x, r2.x
add r2.x, -r1.w, l(1.000000)
mad r0.x, r2.x, r0.x, r1.w
mul r0.xyz, r0.xxxx, r0.yzwy
mad o0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
ret
// Approximately 0 instruction slots used