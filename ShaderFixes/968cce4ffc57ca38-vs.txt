// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 968cce4ffc57ca38-vs.txt
// 3DMigoto: 968cce4ffc57ca38 |    Unity headers extracted from SineVFX_LivingParticles_LivingParticleMaskedMorphPbrArray
//    Shader "SineVFX/LivingParticles/LivingParticleMaskedMorphPbrArray" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from SineVFX_LivingParticles_LivingParticleMaskedMorphPbrArray:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201802150 95 0 6
//   undeciphered1a: 9
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
//   undeciphered2: 1 2 4 2 0 0
//   undeciphered3: 255 6 0 0 2 2 4 5 5 6 6 7 7 8
//   ConstBuffer "$Globals" 608
//   Float 64 [_AffectorCount]
//   Vector 80 [_Affectors0]
//   Vector 96 [_Affectors1]
//   Vector 112 [_Affectors2]
//   Vector 128 [_Affectors3]
//   Vector 144 [_Affectors4]
//   Vector 160 [_Affectors5]
//   Vector 176 [_Affectors6]
//   Vector 192 [_Affectors7]
//   Vector 208 [_Affectors8]
//   Vector 224 [_Affectors9]
//   Vector 240 [_Affectors10]
//   Vector 256 [_Affectors11]
//   Vector 272 [_Affectors12]
//   Vector 288 [_Affectors13]
//   Vector 304 [_Affectors14]
//   Vector 320 [_Affectors15]
//   Vector 336 [_Affectors16]
//   Vector 352 [_Affectors17]
//   Vector 368 [_Affectors18]
//   Vector 384 [_Affectors19]
//   Float 400 [_Distance]
//   Float 404 [_DistanceRemap]
//   Float 408 [_DistancePower]
//   Float 420 [_OffsetPower]
//   Vector 592 [_texcoord_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityPerDraw" 176
//   Vector 144 [unity_WorldTransformParams]
//   Matrix 0 [unity_ObjectToWorld]
//   Matrix 64 [unity_WorldToObject]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 272 [unity_MatrixVP]
//   SetTexture 0 [_MorphMain] 2D 0
//   SetTexture 1 [_MorphNormal] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:43:02 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float
// TEXCOORD                 0   xyzw        3     NONE   float   xy
// TEXCOORD                 1   xyzw        4     NONE   float   xyzw
// TEXCOORD                 2   xyzw        5     NONE   float   xyzw
// TEXCOORD                 3   xyzw        6     NONE   float   x
// COLOR                    0   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyzw        6     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[38], dynamicIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[10], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v3.xy
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.x
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyzw
dcl_temps 10

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw

mov r0.x, v4.w
mov r0.yz, v5.xxyx
mov r0.w, l(0)
add r1.xyzw, r0.xyzw, -cb0[5].xyzw
dp4 r2.x, r1.xyzw, r1.xyzw
sqrt r2.y, r2.x
mov r2.zw, l(0,0,0,0)
loop
  itof r3.x, r2.w
  ge r3.x, r3.x, cb0[4].x
  breakc_nz r3.x
  if_z r2.w
    mov r2.z, r2.y
  else
    add r3.xyzw, r0.xyzw, -cb0[r2.w + 5].xyzw
    dp4 r3.x, r3.xyzw, r3.xyzw
    sqrt r3.x, r3.x
    min r2.z, r2.z, r3.x
  endif
  iadd r2.w, r2.w, l(1)
endloop
add r2.z, -r2.z, l(1.000000)
add r2.w, cb0[25].x, l(-1.000000)
add r2.z, r2.w, r2.z
mul r2.z, r2.z, cb0[25].y
div_sat r2.z, r2.z, cb0[25].x
log r2.z, r2.z
mul r2.z, r2.z, cb0[25].z
exp r2.z, r2.z
rsq r2.x, r2.x
mul r1.xyzw, r1.xyzw, r2.xxxx
add r2.x, -r2.y, r2.w
add r2.x, r2.x, l(1.000000)
div_sat r2.x, r2.x, cb0[25].x
add r2.x, r2.x, l(0.000010)
mul r1.xyzw, r1.xyzw, r2.xxxx
mov r3.xyzw, l(0,0,0,0)
mov r2.x, l(0)
loop
  itof r2.y, r2.x
  ge r2.y, r2.y, cb0[4].x
  breakc_nz r2.y
  if_z r2.x
    mov r3.xyzw, r1.xyzw
  else
    add r4.xyzw, r0.xyzw, -cb0[r2.x + 5].xyzw
    dp4 r2.y, r4.xyzw, r4.xyzw
    rsq r5.x, r2.y
    mul r4.xyzw, r4.xyzw, r5.xxxx
    sqrt r2.y, r2.y
    add r2.y, -r2.y, r2.w
    add r2.y, r2.y, l(1.000000)
    div_sat r2.y, r2.y, cb0[25].x
    add r2.y, r2.y, l(0.000010)
    mad r3.xyzw, r4.xyzw, r2.yyyy, r3.xyzw
  endif
  iadd r2.x, r2.x, l(1)
endloop
dp4 r0.x, r3.xyzw, r3.xyzw
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r3.xyzx
mov r1.yz, v5.zzwz
mov r1.x, v6.x
add r0.w, r2.z, v4.y
add r2.y, r0.w, l(-0.500000)
mov r2.x, v4.x
sample_l r3.xyzw, r2.xyxx, t0.xywz, s0, l(0.000000)
mul r3.yz, r3.xxyx, v4.zzzz
mov r4.x, l(-1.000000)
mov r4.z, v4.z
mul r3.yzw, r3.yyzw, r4.xxxz
sincos null, r1.xyz, -r1.xyzx
sincos r4.x, null, v6.x
mov r1.w, -r4.x
dp2 r5.x, r1.xwxx, r3.yzyy
mov r4.y, r1.x
dp2 r3.x, r4.xyxx, r3.yzyy
sincos r6.xy, null, v5.zwzz
mov r7.x, -r6.x
mov r7.z, r1.y
dp2 r8.y, r7.zxzz, r3.xwxx
mov r6.z, r7.z
dp2 r5.y, r6.xzxx, r3.xwxx
mov r6.w, r1.z
dp2 r8.x, r6.wyww, r5.xyxx
mul r3.xyzw, r6.ywzx, l(-1.000000, 1.000000, 1.000000, -1.000000)
dp2 r8.z, r3.xyxx, r5.xyxx
mul r0.xyz, r0.xyzx, r2.zzzz
mad r0.xyz, r0.xyzx, cb0[26].yyyy, r8.xyzx
add r0.xyz, r0.xyzx, v0.xyzx
sample_l r2.xyzw, r2.xyxx, t1.xyzw, s1, l(0.000000)
mad r2.yzw, r2.xxyz, l(0.000000, -2.000000, -2.000000, 2.000000), l(0.000000, 1.000000, 1.000000, -1.000000)
dp2 r1.x, r1.xwxx, r2.yzyy
dp2 r2.x, r4.xyxx, r2.yzyy
dp2 r4.y, r3.zwzz, r2.xwxx
dp2 r1.y, r6.xzxx, r2.xwxx
dp2 r4.x, r6.wyww, r1.xyxx
dp2 r4.z, r3.xyxx, r1.xyxx
mul r1.xyzw, r0.yyyy, cb2[1].xyzw
mad r1.xyzw, cb2[0].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb2[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r0.xyzw, cb2[3].xyzw
mul r2.xyzw, r1.yyyy, cb3[18].xyzw
mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
mad r1.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
mad o1.xy, v3.xyxx, cb0[37].xyxx, cb0[37].zwzz
mad o5.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
dp3 r0.y, r4.xyzx, cb2[4].xyzx
dp3 r0.z, r4.xyzx, cb2[5].xyzx
dp3 r0.x, r4.xyzx, cb2[6].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r2.xyz, v1.yyyy, cb2[1].yzxy
mad r2.xyz, cb2[0].yzxy, v1.xxxx, r2.xyzx
mad r2.xyz, cb2[2].yzxy, v1.zzzz, r2.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
mul r0.w, v1.w, cb2[9].w
mul r3.xyz, r0.xyzx, r2.xyzx
mad r3.xyz, r0.zxyz, r2.yzxy, -r3.xyzx
mul r3.xyz, r0.wwww, r3.xyzx

// Relocated to here with asmtool.py
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 968cce4ffc57ca38-vs.txt
ne r9.w, r1.w, l(1.0)
if_nz r9.w
  add r9.w, r1.w, -r9.y
  mad r1.x, r9.w, r9.x, r1.x
endif

mul r4.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mul r0.w, r1.y, cb1[5].x
mul r4.w, r0.w, l(0.500000)
add o6.xy, r4.zzzz, r4.xwxx

// mov o0.xyzw, r1.xyzw // Relocated from here with asmtool.py

mov o6.zw, r1.zzzw
mov o2.x, r2.z
mov o2.y, r3.x
mov o2.z, r0.y
mov o3.x, r2.x
mov o3.y, r3.y
mov o3.z, r0.z
mov o4.x, r2.y
mov o4.y, r3.z
mov o4.z, r0.x
ret
// Approximately 0 instruction slots used