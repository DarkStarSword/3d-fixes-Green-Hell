// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 99fdbe2f185e8c19-ps.txt
// 3DMigoto: 99fdbe2f185e8c19 |    Unity headers extracted from Amplify_player_skin_material_Translucency
//    Shader "Amplify/player_skin_material/Translucency" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_player_skin_material_Translucency:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 153 8 2
//   undeciphered1a: 8
//   Keywords { "SPOT" "FOG_LINEAR" }
//   undeciphered2: 1 8 5 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 240
//   Vector 32 [_LightColor0]
//   Float 128 [_NrmPower]
//   Float 132 [_DetailNrmPower]
//   Float 136 [_Detailnrmtiling]
//   Vector 144 [_Albedo_ST]
//   Vector 160 [_TextureMask_ST]
//   Float 176 [_AlbedoMaskPower]
//   Float 180 [_RGHPower]
//   Float 184 [_Translucency]
//   Float 188 [_TransNormalDistortion]
//   Float 192 [_TransScattering]
//   Float 196 [_TransDirect]
//   Vector 208 [_Color0]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_Normal] 2D 3
//   SetTexture 1 [_DetailNrm] 2D 4
//   SetTexture 2 [_DetailMask] 2D 5
//   SetTexture 3 [_Albedo] 2D 6
//   SetTexture 4 [_TextureMask] 2D 7
//   SetTexture 5 [_LightTexture0] 2D 1
//   SetTexture 6 [_LightTextureB0] 2D 2
//   SetTexture 7 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:44:56 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 5     z         1     NONE   float     z
// TEXCOORD                 8      w        1     NONE   float      w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyzw        6     NONE   float
// TEXCOORD                 7   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 99fdbe2f185e8c19-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v5.xyzx, r9.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s3
mul r3.x, r3.w, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xy, r3.xyxx, cb0[8].xxxx
dp2 r1.w, r4.xyxx, r4.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r4.z, r1.w
mul r3.zw, v1.xxxy, cb0[8].zzzz
sample r5.xyzw, r3.zwzz, t1.xyzw, s4
mul r5.x, r5.w, r5.x
mad r3.zw, r5.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r5.xy, r3.zwzz, cb0[8].yyyy
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
sample r6.xyzw, v1.xyxx, t2.xyzw, s5
add r5.xyz, -r4.xyzx, r5.xyzx
mad r4.xyw, r6.xxxx, r5.xyxz, r4.xyxz
mad r3.xy, r3.xyxx, cb0[8].xxxx, r4.xyxx
mul r3.z, r4.z, r4.w
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
mad r4.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
sample r4.xyzw, r4.xyxx, t3.xyzw, s6
mad r5.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
sample r5.xyzw, r5.xyxx, t4.xyzw, s7
max r5.yz, cb0[11].xxxx, l(0.000000, 0.000000, 0.100000, 0.000000)
min r5.yz, r5.yyzy, l(0.000000, 0.800000, 0.600000, 0.000000)
log r1.w, r5.x
mul r1.w, r1.w, l(1.500000)
exp r1.w, r1.w
mul r6.xyz, r1.wwww, r4.xyzx
mad r4.xyz, -r4.xyzx, r1.wwww, r4.xyzx
mad r4.xyz, r5.yyyy, r4.xyzx, r6.xyzx
max r1.w, r4.w, l(0.000000)
min r1.w, r1.w, l(0.500000)
add r2.w, -r5.x, l(1.000000)
add r3.w, r5.z, l(-0.408621)
mad r3.w, r2.w, r3.w, l(0.408621)
add r3.w, -r1.w, r3.w
mad r1.w, r2.w, r3.w, r1.w
add r2.w, -r1.w, l(0.700000)
mad r1.w, cb0[11].y, r2.w, r1.w
mad r5.xy, cb0[11].xxxx, l(-0.549999952, 0.274999976, 0.000000, 0.000000), l(1.400000, -0.199999988, 0.000000, 0.000000)
dp2 r1.w, r5.xyxx, r1.wwww
mul r5.xyz, r4.xyzx, cb0[13].xyzx
mul r5.xyz, r5.xyzx, v1.zzzz
mul r6.xyzw, v5.yyyy, cb0[5].xyzw
mad r6.xyzw, cb0[4].xyzw, v5.xxxx, r6.xyzw
mad r6.xyzw, cb0[6].xyzw, v5.zzzz, r6.xyzw
add r6.xyzw, r6.xyzw, cb0[7].xyzw
eq r2.w, cb4[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb4[0].y, l(1.000000)
  mul r7.xyz, v5.yyyy, cb4[2].xyzx
  mad r7.xyz, cb4[1].xyzx, v5.xxxx, r7.xyzx
  mad r7.xyz, cb4[3].xyzx, v5.zzzz, r7.xyzx
  add r7.xyz, r7.xyzx, cb4[4].xyzx
  movc r7.xyz, r2.wwww, r7.xyzx, v5.xyzx
  add r7.xyz, r7.xyzx, -cb4[6].xyzx
  mul r7.yzw, r7.xxyz, cb4[5].xxyz
  mad r2.w, r7.y, l(0.250000), l(0.750000)
  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
  max r7.x, r2.w, r3.w
  sample r7.xyzw, r7.xzwx, t7.xyzw, s0
else
  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r7.xyzw, cb2[46].xyzw
lt r3.w, l(0.000000), r6.z
and r3.w, r3.w, l(0x3f800000)
div r7.xy, r6.xyxx, r6.wwww
add r7.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample r7.xyzw, r7.xyxx, t5.xyzw, s1
mul r3.w, r3.w, r7.w
dp3 r4.w, r6.xyzx, r6.xyzx
sample r6.xyzw, r4.wwww, t6.xyzw, s2
mul r3.w, r3.w, r6.x
mul r2.w, r2.w, r3.w
dp3 r6.x, v2.xyzx, r3.xyzx
dp3 r6.y, v3.xyzx, r3.xyzx
dp3 r6.z, v4.xyzx, r3.xyzx
dp3 r3.x, r6.xyzx, r6.xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, r6.xyzx
mul r6.xyz, r2.wwww, cb0[2].xyzx
mad r7.xyz, r3.xyzx, cb0[11].wwww, r1.xyzx
dp3_sat r2.w, r2.xyzx, -r7.xyzx
log r2.w, r2.w
mul r2.w, r2.w, cb0[12].x
exp r2.w, r2.w
mul r2.w, r2.w, cb0[12].y
mul r7.xyz, r2.wwww, r6.xyzx
mul r5.xyz, r5.xyzx, r7.xyzx
mul r5.xyz, r4.xyzx, r5.xyzx
mul r4.xyz, r4.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
add r1.w, -r1.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.xyzx, r2.xyzx
dp3_sat r2.x, r3.xyzx, r1.xyzx
dp3_sat r2.y, r3.xyzx, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r2.x, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
max r0.z, r0.z, l(0.002000)
add r1.x, -r0.z, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r2.x, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r2.x, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r2.y, r0.z, -r2.y
mad r1.x, r1.x, r2.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r2.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
mul r1.xyz, r0.yyyy, r6.xyzx
mul r0.yzw, r6.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
mad r0.x, r0.x, l(0.960000), l(0.040000)
mul r0.xyz, r0.xxxx, r0.yzwy
mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
mad r0.xyz, r5.xyzx, cb0[11].zzzz, r0.xyzx
mov o0.w, l(1.000000)
div r0.w, v1.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
mul o0.xyz, r0.xyzx, r0.wwww
ret
// Approximately 0 instruction slots used