// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a131d6f1c4065644-ps.txt
// 3DMigoto: a131d6f1c4065644 |    Unity headers extracted from Standard
//    Shader "Standard" {
//      CustomEditor "StandardShaderGUI"
//      Fallback "VertexLit"
//      SubShader 1/2 {
//        LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite [_ZWrite]
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 159 9 8
//   undeciphered1a: 14
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "_EMISSION" "INSTANCING_ON" "_NORMALMAP" "_SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A" "_SPECULARHIGHLIGHTS_OFF" }
//   undeciphered2: 1 8 9 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 176
//   Vector 32 [_LightColor0]
//   Vector 64 [_Color]
//   Float 128 [_BumpScale]
//   Float 136 [_Metallic]
//   Float 144 [_GlossMapScale]
//   Float 148 [_OcclusionStrength]
//   Vector 160 [_EmissionColor]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   ConstBuffer "UnityDrawCallInfo" 16
//   ScalarInt 0 [unity_BaseInstanceID]
//   ConstBuffer "UnityInstancing_PerDraw2" 224
//   Struct 0 [unity_Builtins2Array] 2 112
//   Vector 0 [unity_SHArArray]
//   Vector 16 [unity_SHAgArray]
//   Vector 32 [unity_SHAbArray]
//   Vector 48 [unity_SHBrArray]
//   Vector 64 [unity_SHBgArray]
//   Vector 80 [unity_SHBbArray]
//   Vector 96 [unity_SHCArray]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_BumpMap] 2D 3
//   SetTexture 2 [_ShadowMapTexture] 2D 6
//   SetTexture 3 [_OcclusionMap] 2D 4
//   SetTexture 4 [_EmissionMap] 2D 5
//   SetTexture 5 [unity_SpecCube0] CUBE 0
//   SetTexture 6 [unity_SpecCube1] CUBE -1
//   SetTexture 7 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityReflectionProbes" 5
//   BindCB "UnityProbeVolume" 6
//   BindCB "UnityDrawCallInfo" 7
//   BindCB "UnityInstancing_PerDraw2" 8
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:49:30 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyz
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
// SV_InstanceID            0   x           8     NONE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_constantbuffer cb7[1], immediateIndexed
dcl_constantbuffer cb8[14], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyw
dcl_input_ps constant v8.x
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a131d6f1c4065644-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s2
mul r1.xyz, r0.xyzx, cb0[4].xyzx
mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -cb0[8].z, l(0.960000), l(0.960000)
mul r1.xyz, r1.wwww, r1.xyzx
sample r2.xyzw, v1.xyxx, t1.xyzw, s3
mul r2.x, r2.w, r2.x
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, cb0[8].xxxx
dp2 r2.z, r2.xyxx, r2.xyxx
min r2.z, r2.z, l(1.000000)
add r2.z, -r2.z, l(1.000000)
sqrt r2.z, r2.z
mul r3.xyz, r2.yyyy, v4.xyzx
mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
dp3 r3.x, v2.xyzx, v2.xyzx
rsq r3.x, r3.x
mul r3.yzw, r3.xxxx, v2.xxyz
iadd r4.x, v8.x, cb7[0].x
mov r5.x, v3.w
mov r5.y, v4.w
mov r5.z, v5.w
add r4.yzw, -r5.xxyz, r15.xxyz
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r4.y, r4.yzwy, r6.xyzx
add r6.xyz, r5.xyzx, -cb3[25].xyzx
dp3 r4.z, r6.xyzx, r6.xyzx
sqrt r4.z, r4.z
add r4.z, -r4.y, r4.z
mad r4.y, cb3[25].w, r4.z, r4.y
mad_sat r4.y, r4.y, cb3[24].z, cb3[24].w
imul null, r4.x, r4.x, l(7)
eq r4.z, cb6[0].x, l(1.000000)
if_nz r4.z
  eq r4.w, cb6[0].y, l(1.000000)
  mul r6.xyz, v4.wwww, cb6[2].xyzx
  mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  add r6.xyz, r6.xyzx, cb6[4].xyzx
  movc r6.xyz, r4.wwww, r6.xyzx, r5.xyzx
  add r6.xyz, r6.xyzx, -cb6[6].xyzx
  mul r6.yzw, r6.xxyz, cb6[5].xxyz
  mad r4.w, r6.y, l(0.250000), l(0.750000)
  mad r5.w, cb6[0].z, l(0.500000), l(0.750000)
  max r6.x, r4.w, r5.w
  sample r6.xyzw, r6.xzwx, t7.xyzw, s1
else
  mov r6.xyzw, cb8[r4.x + 6].wwww
endif
dp4_sat r4.w, r6.xyzw, cb2[46].xyzw
div r6.xy, v7.xyxx, v7.wwww
sample r6.xyzw, r6.xyxx, t2.xyzw, s6
add r4.w, r4.w, -r6.x
mad r4.y, r4.y, r4.w, r6.x
sample r6.xyzw, v1.xyxx, t3.xyzw, s4
add r4.w, -cb0[9].y, l(1.000000)
mad r4.w, r6.y, cb0[9].y, r4.w
mad r5.w, -r0.w, cb0[9].x, l(1.000000)
dp3 r6.x, r3.yzwy, r2.xyzx
add r6.x, r6.x, r6.x
mad r6.xyz, r2.xyzx, -r6.xxxx, r3.yzwy
mul r7.xyz, r4.yyyy, cb0[2].xyzx
if_nz r4.z
  eq r4.y, cb6[0].y, l(1.000000)
  mul r8.xyz, v4.wwww, cb6[2].xyzx
  mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  add r8.xyz, r8.xyzx, cb6[4].xyzx
  movc r8.xyz, r4.yyyy, r8.xyzx, r5.xyzx
  add r8.xyz, r8.xyzx, -cb6[6].xyzx
  mul r8.yzw, r8.xxyz, cb6[5].xxyz
  mul r4.y, r8.y, l(0.250000)
  mul r4.z, cb6[0].z, l(0.500000)
  mad r6.w, -cb6[0].z, l(0.500000), l(0.250000)
  max r4.y, r4.z, r4.y
  min r8.x, r6.w, r4.y
  sample r9.xyzw, r8.xzwx, t7.xyzw, s1
  add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r10.xyzw, r10.xyzx, t7.xyzw, s1
  add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r8.xyzw, r8.xyzx, t7.xyzw, s1
  mov r2.w, l(1.000000)
  dp4 r9.x, r9.xyzw, r2.xyzw
  dp4 r9.y, r10.xyzw, r2.xyzw
  dp4 r9.z, r8.xyzw, r2.xyzw
else
  mov r2.w, l(1.000000)
  dp4 r9.x, cb8[r4.x + 0].xyzw, r2.xyzw
  dp4 r9.y, cb8[r4.x + 1].xyzw, r2.xyzw
  dp4 r9.z, cb8[r4.x + 2].xyzw, r2.xyzw
endif
add r4.xyz, r9.xyzx, v6.xyzx
max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.w, l(0.000000), cb5[2].w
if_nz r2.w
  dp3 r2.w, r6.xyzx, r6.xyzx
  rsq r2.w, r2.w
  mul r8.xyz, r2.wwww, r6.xyzx
  add r9.xyz, -r5.xyzx, cb5[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r5.xyzx, cb5[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r2.w, r9.y, r9.x
  min r2.w, r9.z, r2.w
  add r9.xyz, r5.xyzx, -cb5[2].xyzx
  mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
else
  mov r8.xyz, r6.xyzx
endif
mad r2.w, -r5.w, l(0.700000), l(1.700000)
mul r2.w, r2.w, r5.w
mul r2.w, r2.w, l(6.000000)
sample_l r8.xyzw, r8.xyzx, t5.xyzw, s0, r2.w
add r6.w, r8.w, l(-1.000000)
mad r6.w, cb5[3].w, r6.w, l(1.000000)
log r6.w, r6.w
mul r6.w, r6.w, cb5[3].y
exp r6.w, r6.w
mul r6.w, r6.w, cb5[3].x
mul r9.xyz, r8.xyzx, r6.wwww
lt r7.w, cb5[1].w, l(0.999990)
if_nz r7.w
  lt r7.w, l(0.000000), cb5[6].w
  if_nz r7.w
    dp3 r7.w, r6.xyzx, r6.xyzx
    rsq r7.w, r7.w
    mul r10.xyz, r6.xyzx, r7.wwww
    add r11.xyz, -r5.xyzx, cb5[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r5.xyzx, cb5[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r7.w, r11.y, r11.x
    min r7.w, r11.z, r7.w
    add r5.xyz, r5.xyzx, -cb5[6].xyzx
    mad r6.xyz, r10.xyzx, r7.wwww, r5.xyzx
  endif
  sample_l r10.xyzw, r6.xyzx, t6.xyzw, s0, r2.w
  add r2.w, r10.w, l(-1.000000)
  mad r2.w, cb5[7].w, r2.w, l(1.000000)
  log r2.w, r2.w
  mul r2.w, r2.w, cb5[7].y
  exp r2.w, r2.w
  mul r2.w, r2.w, cb5[7].x
  mul r5.xyz, r10.xyzx, r2.wwww
  mad r6.xyz, r6.wwww, r8.xyzx, -r5.xyzx
  mad r9.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
endif
mul r5.xyz, r4.wwww, r9.xyzx
mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
dp3 r2.w, r6.xyzx, r6.xyzx
max r2.w, r2.w, l(0.001000)
rsq r2.w, r2.w
mul r6.xyz, r2.wwww, r6.xyzx
dp3 r2.w, r2.xyzx, -r3.yzwy
dp3_sat r2.x, r2.xyzx, cb2[0].xyzx
dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
mul r2.y, r2.y, r2.y
dp2 r2.y, r2.yyyy, r5.wwww
add r2.y, r2.y, l(-0.500000)
add r2.z, -r2.x, l(1.000000)
mul r3.x, r2.z, r2.z
mul r3.x, r3.x, r3.x
mul r2.z, r2.z, r3.x
mad r2.z, r2.y, r2.z, l(1.000000)
add r2.w, -|r2.w|, l(1.000000)
mul r3.x, r2.w, r2.w
mul r3.x, r3.x, r3.x
mul r2.w, r2.w, r3.x
mad r2.y, r2.y, r2.w, l(1.000000)
mul r2.y, r2.y, r2.z
mul r2.x, r2.x, r2.y
mul r2.y, r5.w, r5.w
max r2.y, r2.y, l(0.002000)
mad r2.y, r2.y, r2.y, l(1.000000)
div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
mad r0.w, r0.w, cb0[9].x, -r1.w
add_sat r0.w, r0.w, l(1.000000)
mul r3.xyz, r2.xxxx, r7.xyzx
mad r3.xyz, r4.xyzx, r4.wwww, r3.xyzx
mul r2.xyz, r5.xyzx, r2.yyyy
add r4.xyz, -r0.xyzx, r0.wwww
mad r0.xyz, r2.wwww, r4.xyzx, r0.xyzx
mul r0.xyz, r0.xyzx, r2.xyzx
mad r0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
sample r1.xyzw, v1.xyxx, t4.xyzw, s5
mad o0.xyz, r1.xyzx, cb0[10].xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used