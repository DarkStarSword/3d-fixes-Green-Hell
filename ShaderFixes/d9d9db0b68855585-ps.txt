// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d9d9db0b68855585-ps.txt
// 3DMigoto: d9d9db0b68855585 |    Unity headers extracted from DynamicFog_Opaque_Lambert Solid Color
//    Shader "DynamicFog/Opaque/Lambert Solid Color" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from DynamicFog_Opaque_Lambert Solid Color:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 79 3 4
//   undeciphered1a: 8
//   Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" }
//   undeciphered2: 1 4 6 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 272
//   Vector 32 [_LightColor0]
//   Vector 128 [_ShadowMapTexture_TexelSize]
//   Vector 208 [_Color]
//   Matrix 144 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   Matrix 128 [unity_WorldToShadow0]
//   Matrix 192 [unity_WorldToShadow1]
//   Matrix 256 [unity_WorldToShadow2]
//   Matrix 320 [unity_WorldToShadow3]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_LightTexture0] 2D 2
//   SetTexture 1 [_LightTextureB0] 2D 3
//   SetTexture 2 [unity_ProbeVolumeSH] 3D 0
//   SetTexture 3 [_ShadowMapTexture] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:17:55 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyzw        3     NONE   float
// TEXCOORD                 3   xyzw        4     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed d9d9db0b68855585-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v2.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyzw, v2.yyyy, cb0[10].xyzw
mad r1.xyzw, cb0[9].xyzw, v2.xxxx, r1.xyzw
mad r1.xyzw, cb0[11].xyzw, v2.zzzz, r1.xyzw
add r1.xyzw, r1.xyzw, cb0[12].xyzw
add r2.xyz, -v2.xyzx, r9.xyzx
mov r3.x, cb4[9].z
mov r3.y, cb4[10].z
mov r3.z, cb4[11].z
dp3 r0.w, r2.xyzx, r3.xyzx
add r2.xyz, v2.xyzx, -cb3[25].xyzx
dp3 r2.x, r2.xyzx, r2.xyzx
sqrt r2.x, r2.x
add r2.x, -r0.w, r2.x
mad r0.w, cb3[25].w, r2.x, r0.w
mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
eq r2.x, cb5[0].x, l(1.000000)
if_nz r2.x
  eq r2.x, cb5[0].y, l(1.000000)
  mul r2.yzw, v2.yyyy, cb5[2].xxyz
  mad r2.yzw, cb5[1].xxyz, v2.xxxx, r2.yyzw
  mad r2.yzw, cb5[3].xxyz, v2.zzzz, r2.yyzw
  add r2.yzw, r2.yyzw, cb5[4].xxyz
  movc r2.xyz, r2.xxxx, r2.yzwy, v2.xyzx
  add r2.xyz, r2.xyzx, -cb5[6].xyzx
  mul r2.yzw, r2.xxyz, cb5[5].xxyz
  mad r2.y, r2.y, l(0.250000), l(0.750000)
  mad r3.x, cb5[0].z, l(0.500000), l(0.750000)
  max r2.x, r2.y, r3.x
  sample r2.xyzw, r2.xzwx, t2.xyzw, s0
else
  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.x, r2.xyzw, cb2[46].xyzw
lt r2.y, r0.w, l(0.990000)
if_nz r2.y
  mul r3.xyzw, v2.yyyy, cb3[9].xyzw
  mad r3.xyzw, cb3[8].xyzw, v2.xxxx, r3.xyzw
  mad r3.xyzw, cb3[10].xyzw, v2.zzzz, r3.xyzw
  add r3.xyzw, r3.xyzw, cb3[11].xyzw
  div r2.yzw, r3.xxyz, r3.wwww
  mad r3.xy, r2.yzyy, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  round_ni r3.xy, r3.xyxx
  mad r2.yz, r2.yyzy, cb0[8].zzwz, -r3.xxyx
  add r4.xyzw, r2.yyzz, l(0.500000, 1.000000, 0.500000, 1.000000)
  mul r5.xw, r4.xxxz, r4.xxxz
  mad r3.zw, r5.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r2.yyyz
  add r4.xz, -r2.yyzy, l(1.000000, 0.000000, 1.000000, 0.000000)
  min r6.xy, r2.yzyy, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r4.xz, -r6.xxyx, r6.xxyx, r4.xxzx
  max r2.yz, r2.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r2.yz, -r2.yyzy, r2.yyzy, r4.yywy
  mov r6.x, r3.z
  mov r6.y, r4.x
  mov r6.z, r2.y
  mov r6.w, r5.x
  mul r6.xyzw, r6.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  mov r5.x, r3.w
  mov r5.y, r4.z
  mov r5.z, r2.z
  mul r4.xyzw, r5.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  add r5.xyzw, r6.ywyw, r6.xzxz
  add r7.xyzw, r4.yyww, r4.xxzz
  div r2.yz, r6.yywy, r5.zzwz
  add r2.yz, r2.yyzy, l(0.000000, -1.500000, 0.500000, 0.000000)
  div r3.zw, r4.yyyw, r7.yyyw
  add r3.zw, r3.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  mul r4.xy, r2.yzyy, cb0[8].xxxx
  mul r4.zw, r3.zzzw, cb0[8].yyyy
  mul r5.xyzw, r5.xyzw, r7.xyzw
  mad r6.xyzw, r3.xyxy, cb0[8].xyxy, r4.xzyz
  sample_c_lz r2.y, r6.xyxx, t3.xxxx, s1, r2.w
  sample_c_lz r2.z, r6.zwzz, t3.xxxx, s1, r2.w
  mul r2.z, r2.z, r5.y
  mad r2.y, r5.x, r2.y, r2.z
  mad r3.xyzw, r3.xyxy, cb0[8].xyxy, r4.xwyw
  sample_c_lz r2.z, r3.xyxx, t3.xxxx, s1, r2.w
  mad r2.y, r5.z, r2.z, r2.y
  sample_c_lz r2.z, r3.zwzz, t3.xxxx, s1, r2.w
  mad r2.y, r5.w, r2.z, r2.y
  add r2.z, -cb3[24].x, l(1.000000)
  mad r2.y, r2.y, r2.z, cb3[24].x
else
  mov r2.y, l(1.000000)
endif
add r2.x, -r2.y, r2.x
mad r0.w, r0.w, r2.x, r2.y
lt r2.x, l(0.000000), r1.z
and r2.x, r2.x, l(0x3f800000)
div r2.yz, r1.xxyx, r1.wwww
add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
sample r3.xyzw, r2.yzyy, t0.xyzw, s2
mul r1.w, r2.x, r3.w
dp3 r1.x, r1.xyzx, r1.xyzx
sample r2.xyzw, r1.xxxx, t1.xyzw, s3
mul r1.x, r1.w, r2.x
mul r0.w, r0.w, r1.x
mul r1.xyz, r0.wwww, cb0[2].xyzx
dp3 r0.x, v1.xyzx, r0.xyzx
max r0.x, r0.x, l(0.000000)
mul r0.yzw, r1.xxyz, cb0[13].xxyz
mul o0.xyz, r0.xxxx, r0.yzwy
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used