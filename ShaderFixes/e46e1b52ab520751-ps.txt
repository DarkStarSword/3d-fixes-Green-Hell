// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e46e1b52ab520751-ps.txt
// 3DMigoto: e46e1b52ab520751 |    Unity headers extracted from Amplify_pan_texture_billboard
//    Shader "Amplify/pan_texture_billboard" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "QUEUE"="Transparent+0" "RenderType"="Transparent" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent+0" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_pan_texture_billboard:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 148 5 6
//   undeciphered1a: 11
//   Keywords { "DIRECTIONAL" "FOG_LINEAR" }
//   undeciphered2: 1 4 6 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 176
//   Vector 32 [_LightColor0]
//   Vector 64 [_Albedo_color]
//   Float 80 [_opacity_power]
//   Float 84 [_R_power]
//   Vector 88 [_Red_channel_pan] 2
//   Float 96 [_R2_power]
//   Vector 100 [_Red2_channel_pan] 2
//   Float 108 [_G_power]
//   Vector 112 [_Green_channel_pan] 2
//   Float 120 [_B_power]
//   Vector 128 [_Blue_channel_pan] 2
//   Float 136 [_cuttopmaskpower]
//   Float 140 [_cuttopmaskcontrast]
//   Float 144 [_edgemaskcontrast]
//   Float 148 [_mask_range]
//   Float 152 [_mask_fallof]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_Texture_to_pan] 2D 2
//   SetTexture 1 [unity_SpecCube0] CUBE 0
//   SetTexture 2 [unity_SpecCube1] CUBE -1
//   SetTexture 3 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityReflectionProbes" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:22:54 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 4     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 6   xyzw        4     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e46e1b52ab520751-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r12.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xy, v1.xyxx, l(0.000000, 1.000000, 0.000000, 0.000000)
mad r2.zw, cb1[0].yyyy, cb0[5].zzzw, r2.xxxy
mad r3.xy, cb1[0].yyyy, cb0[6].yzyy, r2.xyxx
mad r3.zw, cb1[0].yyyy, cb0[7].xxxy, r2.xxxy
mad r2.xy, cb1[0].yyyy, cb0[8].xyxx, r2.xyxx
add r1.w, -v1.y, l(1.000000)
log r1.w, r1.w
mul r1.w, r1.w, cb0[8].z
exp r1.w, r1.w
mul_sat r1.w, r1.w, cb0[8].w
mul r4.xy, v1.xyxx, l(3.140000, 3.140000, 0.000000, 0.000000)
sincos r4.xy, null, r4.xyxx
mul r4.xy, r4.xyxx, r4.xyxx
mul r4.xy, r4.xyxx, cb0[9].xxxx
mul_sat r4.x, r4.y, r4.x
add r4.yzw, v3.xxyz, -r12.xxyz
dp3 r4.y, r4.yzwy, r4.yzwy
sqrt r4.y, r4.y
div r4.y, r4.y, cb0[9].y
log r4.y, r4.y
mul r4.y, r4.y, cb0[9].z
exp r4.y, r4.y
min r4.y, r4.y, l(1.000000)
sample r5.xyzw, r2.zwzz, t0.xyzw, s2
sample r6.xyzw, r3.xyxx, t0.xyzw, s2
mul r2.z, r6.x, cb0[6].x
mad r2.z, cb0[5].y, r5.x, r2.z
sample r3.xyzw, r3.zwzz, t0.xyzw, s2
mad r2.z, cb0[6].w, r3.y, r2.z
sample r3.xyzw, r2.xyxx, t0.xyzw, s2
mad r2.x, cb0[7].z, r3.z, r2.z
mul r1.w, r1.w, r2.x
mul r1.w, r4.x, r1.w
mul r1.w, r4.y, r1.w
mul_sat r2.w, r1.w, cb0[5].x
eq r1.w, cb5[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb5[0].y, l(1.000000)
  mul r3.xyz, v3.yyyy, cb5[2].xyzx
  mad r3.xyz, cb5[1].xyzx, v3.xxxx, r3.xyzx
  mad r3.xyz, cb5[3].xyzx, v3.zzzz, r3.xyzx
  add r3.xyz, r3.xyzx, cb5[4].xyzx
  movc r3.xyz, r1.wwww, r3.xyzx, v3.xyzx
  add r3.xyz, r3.xyzx, -cb5[6].xyzx
  mul r3.yzw, r3.xxyz, cb5[5].xxyz
  mad r1.w, r3.y, l(0.250000), l(0.750000)
  mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
  max r3.x, r1.w, r3.y
  sample r3.xyzw, r3.xzwx, t3.xyzw, s1
else
  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r1.w, r3.xyzw, cb2[46].xyzw
dp3 r3.x, -r1.xyzx, v2.xyzx
add r3.x, r3.x, r3.x
mad r3.xyz, v2.xyzx, -r3.xxxx, -r1.xyzx
mul r4.xyz, r1.wwww, cb0[2].xyzx
lt r1.w, l(0.000000), cb4[2].w
if_nz r1.w
  dp3 r1.w, r3.xyzx, r3.xyzx
  rsq r1.w, r1.w
  mul r5.xyz, r1.wwww, r3.xyzx
  add r6.xyz, -v3.xyzx, cb4[0].xyzx
  div r6.xyz, r6.xyzx, r5.xyzx
  add r7.xyz, -v3.xyzx, cb4[1].xyzx
  div r7.xyz, r7.xyzx, r5.xyzx
  lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
  movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
  min r1.w, r6.y, r6.x
  min r1.w, r6.z, r1.w
  add r6.xyz, v3.xyzx, -cb4[2].xyzx
  mad r5.xyz, r5.xyzx, r1.wwww, r6.xyzx
else
  mov r5.xyz, r3.xyzx
endif
sample_l r5.xyzw, r5.xyzx, t1.xyzw, s0, l(6.000000)
add r1.w, r5.w, l(-1.000000)
mad r1.w, cb4[3].w, r1.w, l(1.000000)
log r1.w, r1.w
mul r1.w, r1.w, cb4[3].y
exp r1.w, r1.w
mul r1.w, r1.w, cb4[3].x
mul r6.xyz, r5.xyzx, r1.wwww
lt r3.w, cb4[1].w, l(0.999990)
if_nz r3.w
  lt r3.w, l(0.000000), cb4[6].w
  if_nz r3.w
    dp3 r3.w, r3.xyzx, r3.xyzx
    rsq r3.w, r3.w
    mul r7.xyz, r3.wwww, r3.xyzx
    add r8.xyz, -v3.xyzx, cb4[4].xyzx
    div r8.xyz, r8.xyzx, r7.xyzx
    add r9.xyz, -v3.xyzx, cb4[5].xyzx
    div r9.xyz, r9.xyzx, r7.xyzx
    lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
    movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
    min r3.w, r8.y, r8.x
    min r3.w, r8.z, r3.w
    add r8.xyz, v3.xyzx, -cb4[6].xyzx
    mad r3.xyz, r7.xyzx, r3.wwww, r8.xyzx
  endif
  sample_l r3.xyzw, r3.xyzx, t2.xyzw, s0, l(6.000000)
  add r3.w, r3.w, l(-1.000000)
  mad r3.w, cb4[7].w, r3.w, l(1.000000)
  log r3.w, r3.w
  mul r3.w, r3.w, cb4[7].y
  exp r3.w, r3.w
  mul r3.w, r3.w, cb4[7].x
  mul r3.xyz, r3.xyzx, r3.wwww
  mad r5.xyz, r1.wwww, r5.xyzx, -r3.xyzx
  mad r6.xyz, cb4[1].wwww, r5.xyzx, r3.xyzx
endif
dp3 r1.w, v2.xyzx, cb2[0].xyzx
max r1.w, -r1.w, l(0.000000)
mul r3.xyz, r4.xyzx, r1.wwww
mul r3.xyz, r3.xyzx, cb0[4].xyzx
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, v2.xyzx
mul r7.xyz, cb0[4].xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r5.xyzx, r1.xyzx
dp3_sat r1.x, r5.xyzx, cb2[0].xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
dp2 r0.y, r0.xxxx, r0.xxxx
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.x, l(1.000000)
mul r1.y, r0.z, r0.z
mul r1.y, r1.y, r1.y
mul r0.z, r0.z, r1.y
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.y, -|r0.w|, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
mad r0.y, r0.y, r1.y, l(1.000000)
mul r0.y, r0.y, r0.z
add r0.z, |r0.w|, r1.x
add r0.z, r0.z, l(0.000010)
div r0.z, l(0.500000), r0.z
mul r0.z, r0.z, l(0.999999881)
mul r0.yz, r1.xxxx, r0.yyzy
mul r1.xzw, r0.yyyy, r4.xxyz
mul r0.yzw, r4.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r4.x, r0.x, r0.x
mul r4.x, r4.x, r4.x
mul r0.x, r0.x, r4.x
mad r0.x, r0.x, l(0.960000), l(0.040000)
mul r0.xyz, r0.xxxx, r0.yzwy
mad r0.xyz, r7.xyzx, r1.xzwx, r0.xyzx
mul r1.xzw, r6.xxyz, l(0.500000, 0.000000, 0.500000, 0.500000)
mad r0.w, r1.y, l(2.235174179E-008), l(0.040000)
mad r2.xyz, r1.xzwx, r0.wwww, r0.xyzx
mov r3.w, l(0)
add r0.xyzw, r2.xyzw, r3.xyzw
div r1.x, v1.z, cb1[5].y
add r1.x, -r1.x, l(1.000000)
mul r1.x, r1.x, cb1[5].z
max r1.x, r1.x, l(0.000000)
mad_sat r1.x, r1.x, cb3[1].z, cb3[1].w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r1.xxxx, r0.xyzx, cb3[0].xyzx
mov o0.w, r0.w
ret
// Approximately 0 instruction slots used