// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 445e7cba82ca5e1a-ps.txt
// 3DMigoto: 445e7cba82ca5e1a |    Unity headers extracted from NatureManufacture Shaders_Water_Water Particles
//    Shader "NatureManufacture Shaders/Water/Water Particles" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "QUEUE"="Transparent+0" "RenderType"="Transparent" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent+0" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from NatureManufacture Shaders_Water_Water Particles:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 192 7 8
//   undeciphered1a: 16
//   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
//   undeciphered2: 1 6 6 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 176
//   Vector 32 [_LightColor0]
//   Vector 64 [_ColorPower] 3
//   Vector 80 [_Color]
//   Vector 96 [_ParticleTexture_ST]
//   Float 112 [_NormalScale]
//   Vector 128 [_NormalMap_ST]
//   Float 144 [_Specular]
//   Float 148 [_Smoothness]
//   Float 152 [_AOPower]
//   Float 156 [_Opacity]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_ParticleTexture] 2D 2
//   SetTexture 1 [_NormalMap] 2D 3
//   SetTexture 2 [_GrabTexture] 2D 4
//   SetTexture 3 [unity_SpecCube0] CUBE 0
//   SetTexture 4 [unity_SpecCube1] CUBE -1
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityReflectionProbes" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:55:42 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 6     z         1     NONE   float     z
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xy w
// COLOR                    0   xyzw        6     NONE   float   xyzw
// TEXCOORD                 5   xyz         7     NONE   float   xyz
// TEXCOORD                 8   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyw
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_temps 18
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r16.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 445e7cba82ca5e1a-ps.txt

mul r16.w, -r16.x, r16.y
mad r17.xyz, -r16.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r17.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r3.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
sample r3.xyzw, r3.xyxx, t0.xyzw, s2
mul r4.xyz, v6.xyzx, cb0[4].xyzx
mul r4.xyz, r4.xyzx, cb0[5].xyzx
mul r3.yzw, r3.xxyz, r4.xxyz
mad r4.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
sample r4.xyzw, r4.xyxx, t1.xyzw, s3
mul r4.x, r4.w, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, cb0[7].xxxx
dp2 r1.w, r4.xyxx, r4.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r4.z, r1.w
dp3 r5.x, v2.xyzx, r4.xyzx
dp3 r5.y, v3.xyzx, r4.xyzx
dp3 r5.z, v4.xyzx, r4.xyzx
dp3 r1.w, r5.xyzx, r2.xyzx
add r5.xyw, v5.wxww, l(9.999999960E-012, 0.000000, 0.000000, 9.999999960E-012)
mul r2.w, r5.x, l(0.500000)
mad r4.z, -r5.x, l(0.500000), v5.y
mad r5.z, -r4.z, cb1[5].x, r2.w
div r5.xyz, r5.yzwy, r5.xxxx
mov r4.w, l(0)
add r4.xyz, r4.xywx, r5.xyzx
div r4.xy, r4.xyxx, r4.zzzz
sample r4.xyzw, r4.xyxx, t2.xyzw, s4
mad r1.w, -r1.w, l(0.800000), l(1.000000)
mul_sat r2.w, r3.x, cb0[9].w
mul o0.w, r2.w, v6.w
eq r2.w, cb5[0].x, l(1.000000)
if_nz r2.w
  eq r3.x, cb5[0].y, l(1.000000)
  mul r5.xyz, v3.wwww, cb5[2].xyzx
  mad r5.xyz, cb5[1].xyzx, v2.wwww, r5.xyzx
  mad r5.xyz, cb5[3].xyzx, v4.wwww, r5.xyzx
  add r5.xyz, r5.xyzx, cb5[4].xyzx
  movc r5.xyz, r3.xxxx, r5.xyzx, r0.xyzx
  add r5.xyz, r5.xyzx, -cb5[6].xyzx
  mul r5.yzw, r5.xxyz, cb5[5].xxyz
  mad r3.x, r5.y, l(0.250000), l(0.750000)
  mad r4.w, cb5[0].z, l(0.500000), l(0.750000)
  max r5.x, r3.x, r4.w
  sample r5.xyzw, r5.xzwx, t5.xyzw, s1
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r3.x, r5.xyzw, cb2[46].xyzw
mov r5.x, v2.z
mov r5.y, v3.z
mov r5.z, v4.z
dp3 r4.w, r5.xyzx, r5.xyzx
rsq r4.w, r4.w
mul r5.xyz, r4.wwww, r5.xyzx
add r6.xy, -cb0[9].yxyy, l(1.000000, 1.000000, 0.000000, 0.000000)
dp3 r4.w, -r2.xyzx, r5.xyzx
add r4.w, r4.w, r4.w
mad r7.xyz, r5.xyzx, -r4.wwww, -r2.xyzx
mul r8.xyz, r3.xxxx, cb0[2].xyzx
if_nz r2.w
  eq r2.w, cb5[0].y, l(1.000000)
  mul r9.xyz, v3.wwww, cb5[2].xyzx
  mad r9.xyz, cb5[1].xyzx, v2.wwww, r9.xyzx
  mad r9.xyz, cb5[3].xyzx, v4.wwww, r9.xyzx
  add r9.xyz, r9.xyzx, cb5[4].xyzx
  movc r9.xyz, r2.wwww, r9.xyzx, r0.xyzx
  add r9.xyz, r9.xyzx, -cb5[6].xyzx
  mul r9.yzw, r9.xxyz, cb5[5].xxyz
  mul r2.w, r9.y, l(0.250000)
  mul r3.x, cb5[0].z, l(0.500000)
  mad r4.w, -cb5[0].z, l(0.500000), l(0.250000)
  max r2.w, r2.w, r3.x
  min r9.x, r4.w, r2.w
  sample r10.xyzw, r9.xzwx, t5.xyzw, s1
  add r11.xyz, r9.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r11.xyzw, r11.xyzx, t5.xyzw, s1
  add r9.xyz, r9.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r9.xyzw, r9.xyzx, t5.xyzw, s1
  mov r5.w, l(1.000000)
  dp4 r10.x, r10.xyzw, r5.xyzw
  dp4 r10.y, r11.xyzw, r5.xyzw
  dp4 r10.z, r9.xyzw, r5.xyzw
else
  mov r5.w, l(1.000000)
  dp4 r10.x, cb2[39].xyzw, r5.xyzw
  dp4 r10.y, cb2[40].xyzw, r5.xyzw
  dp4 r10.z, cb2[41].xyzw, r5.xyzw
endif
add r9.xyz, r10.xyzx, v7.xyzx
max r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.w, l(0.000000), cb4[2].w
if_nz r2.w
  dp3 r2.w, r7.xyzx, r7.xyzx
  rsq r2.w, r2.w
  mul r10.xyz, r2.wwww, r7.xyzx
  add r11.xyz, -r0.xyzx, cb4[0].xyzx
  div r11.xyz, r11.xyzx, r10.xyzx
  add r12.xyz, -r0.xyzx, cb4[1].xyzx
  div r12.xyz, r12.xyzx, r10.xyzx
  lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  min r2.w, r11.y, r11.x
  min r2.w, r11.z, r2.w
  add r11.xyz, r0.xyzx, -cb4[2].xyzx
  mad r10.xyz, r10.xyzx, r2.wwww, r11.xyzx
else
  mov r10.xyz, r7.xyzx
endif
mad r2.w, -r6.x, l(0.700000), l(1.700000)
mul r2.w, r2.w, r6.x
mul r2.w, r2.w, l(6.000000)
sample_l r10.xyzw, r10.xyzx, t3.xyzw, s0, r2.w
add r3.x, r10.w, l(-1.000000)
mad r3.x, cb4[3].w, r3.x, l(1.000000)
log r3.x, r3.x
mul r3.x, r3.x, cb4[3].y
exp r3.x, r3.x
mul r3.x, r3.x, cb4[3].x
mul r11.xyz, r10.xyzx, r3.xxxx
lt r4.w, cb4[1].w, l(0.999990)
if_nz r4.w
  lt r4.w, l(0.000000), cb4[6].w
  if_nz r4.w
    dp3 r4.w, r7.xyzx, r7.xyzx
    rsq r4.w, r4.w
    mul r12.xyz, r4.wwww, r7.xyzx
    add r13.xyz, -r0.xyzx, cb4[4].xyzx
    div r13.xyz, r13.xyzx, r12.xyzx
    add r14.xyz, -r0.xyzx, cb4[5].xyzx
    div r14.xyz, r14.xyzx, r12.xyzx
    lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
    movc r13.xyz, r15.xyzx, r13.xyzx, r14.xyzx
    min r4.w, r13.y, r13.x
    min r4.w, r13.z, r4.w
    add r0.xyz, r0.xyzx, -cb4[6].xyzx
    mad r7.xyz, r12.xyzx, r4.wwww, r0.xyzx
  endif
  sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r2.w
  add r0.x, r7.w, l(-1.000000)
  mad r0.x, cb4[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb4[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r7.xyzx, r0.xxxx
  mad r7.xyz, r3.xxxx, r10.xyzx, -r0.xyzx
  mad r11.xyz, cb4[1].wwww, r7.xyzx, r0.xyzx
endif
mul r0.xyz, r11.xyzx, cb0[9].zzzz
mul r3.xyz, r3.yzwy, r6.yyyy
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r5.xyzx, r2.xyzx
dp3_sat r2.x, r5.xyzx, cb2[0].xyzx
dp3_sat r2.y, r5.xyzx, r1.xyzx
dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
mul r1.y, r1.x, r1.x
dp2 r1.y, r1.yyyy, r6.xxxx
add r1.y, r1.y, l(-0.500000)
add r1.z, -r2.x, l(1.000000)
mul r2.z, r1.z, r1.z
mul r2.z, r2.z, r2.z
mul r1.z, r1.z, r2.z
mad r1.z, r1.y, r1.z, l(1.000000)
add r2.z, -|r0.w|, l(1.000000)
mul r2.w, r2.z, r2.z
mul r2.w, r2.w, r2.w
mul r2.z, r2.z, r2.w
mad r1.y, r1.y, r2.z, l(1.000000)
mul r1.y, r1.y, r1.z
mul r1.y, r2.x, r1.y
mul r1.z, r6.x, r6.x
max r1.z, r1.z, l(0.002000)
add r2.w, -r1.z, l(1.000000)
mad r3.w, |r0.w|, r2.w, r1.z
mad r2.w, r2.x, r2.w, r1.z
mul r0.w, |r0.w|, r2.w
mad r0.w, r2.x, r3.w, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r2.w, r1.z, r1.z
mad r3.w, r2.y, r2.w, -r2.y
mad r2.y, r3.w, r2.y, l(1.000000)
mul r2.w, r2.w, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r2.w, r2.y
mul r0.w, r0.w, r2.y
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.x, r0.w
max r0.w, r0.w, l(0.000000)
mad r1.z, r1.z, r1.z, l(1.000000)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
dp3 r2.x, cb0[9].xxxx, cb0[9].xxxx
ne r2.x, r2.x, l(0.000000)
and r2.x, r2.x, l(0x3f800000)
mul r0.w, r0.w, r2.x
add r2.x, -r6.y, l(1.000000)
add_sat r2.x, r2.x, cb0[9].y
mul r5.xyz, r1.yyyy, r8.xyzx
mad r5.xyz, r9.xyzx, cb0[9].zzzz, r5.xyzx
mul r6.xzw, r8.xxyz, r0.wwww
add r0.w, -r1.x, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.xyzw, r0.xyzw, r1.zzzx
mad r0.w, r6.y, r0.w, cb0[9].x
mul r6.xyz, r0.wwww, r6.xzwx
mad r3.xyz, r3.xyzx, r5.xyzx, r6.xyzx
add r0.w, r2.x, -cb0[9].x
mad r0.w, r2.z, r0.w, cb0[9].x
mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
mad r0.xyz, r1.wwww, r4.xyzx, r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
ret
// Approximately 0 instruction slots used