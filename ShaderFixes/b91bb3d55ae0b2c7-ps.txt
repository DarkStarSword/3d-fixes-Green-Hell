// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b91bb3d55ae0b2c7-ps.txt
// 3DMigoto: b91bb3d55ae0b2c7 | Matched 12 variants of 1 shaders: Custom/DetailTrunk
//
//         Unity headers extracted from Custom_DetailTrunk
//         Shader "Custom/DetailTrunk" {
//           CustomEditor "ShaderForgeMaterialInspector"
//           Fallback "Standard"
//           SubShader 1/1 {
//             LOD 200
//             Tags { "RenderType"="Opaque" }
//             Pass 1/4 {
//               Name "DEFERRED"
//               Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//               Program "fp" {
//                 SubProgram "d3d11" {
//                 }
//               }
//             }
//           }
//         }
//
//      Unity 5.3 headers extracted from Custom_DetailTrunk:
//        API d3d11
//        Shader model ps_4_0
//        undeciphered1: 201802150 127 6 4
//        undeciphered1a: 11
// 080:   Keywords { "SHADOWS_CUBE" "DIRLIGHTMAP_COMBINED" "FOG_LINEAR" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 020:   Keywords { "SHADOWS_CUBE" "DIRLIGHTMAP_COMBINED" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 200:   Keywords { "SHADOWS_CUBE" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 800:   Keywords { "SHADOWS_CUBE" "FOG_LINEAR" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 008:   Keywords { "SHADOWS_CUBE" "FOG_LINEAR" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 002:   Keywords { "SHADOWS_CUBE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 040:   Keywords { "SHADOWS_DEPTH" "DIRLIGHTMAP_COMBINED" "FOG_LINEAR" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 010:   Keywords { "SHADOWS_DEPTH" "DIRLIGHTMAP_COMBINED" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 100:   Keywords { "SHADOWS_DEPTH" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 400:   Keywords { "SHADOWS_DEPTH" "FOG_LINEAR" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 004:   Keywords { "SHADOWS_DEPTH" "FOG_LINEAR" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 001:   Keywords { "SHADOWS_DEPTH" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//        undeciphered2: 1 8 3 7 0 0
//        undeciphered3: 0 0
//        ConstBuffer "$Globals" 224
//        Vector 64 [_AddLayerBaseColor_ST]
//        Vector 80 [_AddLayerNormal_ST]
//        Vector 96 [_BaseColor_ST]
//        Vector 112 [_Normal_ST]
//        Float 128 [_NormalIntensity]
//        Float 132 [_AddLayerNormalIntensity]
//        Vector 144 [_DetailLayerBaseColoruv1_ST]
//        Vector 160 [_Mask_ST]
//        Vector 176 [_BlendingColor]
//        Float 192 [_AddLayerSmoothness]
//        Float 196 [_Smoothness]
//        Float 200 [_AddLayerIntensity]
//        Float 204 [_AddLayerHardness]
//        Float 208 [_AddLayerColorIntensity]
//        Float 212 [_ColorIntensity]
//        Float 216 [_ColorHardness]
//        Float 220 [_DetailLayerColorIntensity]
//        ConstBuffer "UnityPerCamera" 144
//        Vector 64 [_WorldSpaceCameraPos] 3
//        ConstBuffer "UnityReflectionProbes" 128
//        Vector 0 [unity_SpecCube0_BoxMax]
//        Vector 16 [unity_SpecCube0_BoxMin]
//        Vector 32 [unity_SpecCube0_ProbePosition]
//        Vector 48 [unity_SpecCube0_HDR]
//        Vector 64 [unity_SpecCube1_BoxMax]
//        Vector 80 [unity_SpecCube1_BoxMin]
//        Vector 96 [unity_SpecCube1_ProbePosition]
//        Vector 112 [unity_SpecCube1_HDR]
//        SetTexture 0 [_Normal] 2D 4
//        SetTexture 1 [_AddLayerNormal] 2D 2
//        SetTexture 2 [_Mask] 2D 6
//        SetTexture 3 [_BaseColor] 2D 3
//        SetTexture 4 [_AddLayerBaseColor] 2D 1
//        SetTexture 5 [_DetailLayerBaseColoruv1] 2D 5
//        SetTexture 6 [unity_SpecCube0] CUBE 0
//        SetTexture 7 [unity_SpecCube1] CUBE -1
//        BindCB "$Globals" 0
//        BindCB "UnityPerCamera" 1
//        BindCB "UnityReflectionProbes" 2
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:02:49 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xy          2     NONE   float
// TEXCOORD                 3   xyzw        3     NONE   float   xyz
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// TEXCOORD                 5   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyz         6     NONE   float   xyz
// COLOR                    0   xyzw        7     NONE   float   xy
// TEXCOORD                 7   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b91bb3d55ae0b2c7-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v4.xyzx, v4.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v4.xyzx
add r1.xyz, -v3.xyzx, r12.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mad r2.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
sample r2.xyzw, r2.xyxx, t0.xyzw, s4
mul r2.x, r2.w, r2.x
add r3.xy, r2.xyxx, r2.xyxx
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r3.z, r0.w
mad r2.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r2.xyzw, r2.xyxx, t1.xyzw, s2
mul r2.x, r2.w, r2.x
add r4.xy, r2.xyxx, r2.xyxx
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r4.z, r0.w
mad r2.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
sample r2.xyzw, r2.xyxx, t2.xyzw, s6
add r2.zw, -cb0[12].zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
add_sat r2.xy, r2.yxyy, v7.yxyy
div r0.w, r2.z, r2.x
add_sat r0.w, -r0.w, l(1.000000)
div_sat r0.w, r0.w, r2.w
add r2.xzw, r3.xxyz, l(-1.000000, 0.000000, -1.000000, -1.000000)
mad r2.xzw, cb0[8].xxxx, r2.xxzw, l(0.000000, 0.000000, 0.000000, 1.000000)
add r3.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r3.xyz, cb0[8].yyyy, r3.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
add r3.xyz, -r2.xzwx, r3.xyzx
mad r2.xzw, r0.wwww, r3.xxyz, r2.xxzw
mul r3.xyz, r2.zzzz, v6.xyzx
mad r3.xyz, r2.xxxx, v5.xyzx, r3.xyzx
mad r0.xyz, r2.wwww, r0.xyzx, r3.xyzx
dp3 r1.w, r0.xyzx, r0.xyzx
rsq r1.w, r1.w
mul r0.xyz, r0.xyzx, r1.wwww
dp3 r1.w, -r1.xyzx, r0.xyzx
add r1.w, r1.w, r1.w
mad r2.xzw, r0.xxyz, -r1.wwww, -r1.xxyz
mad r3.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
sample r3.xyzw, r3.xyxx, t3.xyzw, s3
mad r4.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
sample r4.xyzw, r4.xyxx, t4.xyzw, s1
mul r1.w, r3.w, cb0[12].y
mad r3.w, r4.w, cb0[12].x, -r1.w
mad r1.w, r0.w, r3.w, r1.w
add r3.w, -r1.w, l(1.000000)
lt r4.w, l(0.000000), cb2[2].w
if_nz r4.w
  dp3 r4.w, r2.xzwx, r2.xzwx
  rsq r4.w, r4.w
  mul r5.xyz, r2.xzwx, r4.wwww
  add r6.xyz, -v3.xyzx, cb2[0].xyzx
  div r6.xyz, r6.xyzx, r5.xyzx
  add r7.xyz, -v3.xyzx, cb2[1].xyzx
  div r7.xyz, r7.xyzx, r5.xyzx
  lt r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
  movc r6.xyz, r8.xyzx, r6.xyzx, r7.xyzx
  min r4.w, r6.y, r6.x
  min r4.w, r6.z, r4.w
  add r6.xyz, v3.xyzx, -cb2[2].xyzx
  mad r5.xyz, r5.xyzx, r4.wwww, r6.xyzx
else
  mov r5.xyz, r2.xzwx
endif
mad r4.w, -r3.w, l(0.700000), l(1.700000)
mul r3.w, r3.w, r4.w
mul r3.w, r3.w, l(6.000000)
sample_l r5.xyzw, r5.xyzx, t6.xyzw, s0, r3.w
add r4.w, r5.w, l(-1.000000)
mad r4.w, cb2[3].w, r4.w, l(1.000000)
log r4.w, r4.w
mul r4.w, r4.w, cb2[3].y
exp r4.w, r4.w
mul r4.w, r4.w, cb2[3].x
mul r6.xyz, r5.xyzx, r4.wwww
lt r5.w, cb2[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb2[6].w
  if_nz r5.w
    dp3 r5.w, r2.xzwx, r2.xzwx
    rsq r5.w, r5.w
    mul r7.xyz, r2.xzwx, r5.wwww
    add r8.xyz, -v3.xyzx, cb2[4].xyzx
    div r8.xyz, r8.xyzx, r7.xyzx
    add r9.xyz, -v3.xyzx, cb2[5].xyzx
    div r9.xyz, r9.xyzx, r7.xyzx
    lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
    movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
    min r5.w, r8.y, r8.x
    min r5.w, r8.z, r5.w
    add r8.xyz, v3.xyzx, -cb2[6].xyzx
    mad r2.xzw, r7.xxyz, r5.wwww, r8.xxyz
  endif
  sample_l r7.xyzw, r2.xzwx, t7.xyzw, s0, r3.w
  add r2.x, r7.w, l(-1.000000)
  mad r2.x, cb2[7].w, r2.x, l(1.000000)
  log r2.x, r2.x
  mul r2.x, r2.x, cb2[7].y
  exp r2.x, r2.x
  mul r2.x, r2.x, cb2[7].x
  mul r2.xzw, r7.xxyz, r2.xxxx
  mad r5.xyz, r4.wwww, r5.xyzx, -r2.xzwx
  mad r6.xyz, cb2[1].wwww, r5.xyzx, r2.xzwx
endif
mad r2.xz, v1.zzwz, cb0[9].xxyx, cb0[9].zzwz
sample r5.xyzw, r2.xzxx, t5.xyzw, s5
add r2.xzw, -r3.xxyz, r5.xxyz
mad r2.xzw, r5.wwww, r2.xxzw, r3.xxyz
add r3.xyz, -r2.xzwx, r4.xyzx
mad r2.xzw, r0.wwww, r3.xxyz, r2.xxzw
add r0.w, -r0.w, l(1.000000)
add r3.x, -r0.w, l(1.000000)
mad r0.w, cb0[13].x, r3.x, r0.w
add r3.xy, -cb0[13].yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
div r2.y, r3.x, r2.y
add_sat r2.y, -r2.y, l(1.000000)
div_sat r2.y, r2.y, r3.y
mul r0.w, r0.w, r2.y
add r2.y, cb0[13].w, l(-1.000000)
mad r2.y, r5.w, r2.y, l(1.000000)
mul r0.w, r0.w, r2.y
mad r3.xyz, r2.xzwx, cb0[11].xyzx, -r2.xzwx
mad r2.xyz, r0.wwww, r3.xyzx, r2.xzwx
mul o0.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
dp3 r0.w, r0.xyzx, r1.xyzx
max r0.w, r0.w, l(0.000000)
add_sat r1.x, r1.w, l(0.0400000215)
add r0.w, -r0.w, l(1.000000)
mul r1.y, r0.w, r0.w
mul r1.y, r1.y, r1.y
mul r0.w, r0.w, r1.y
add r1.x, r1.x, l(-0.040000)
mad r0.w, r0.w, r1.x, l(0.040000)
mul r1.xyz, r0.wwww, r6.xyzx
mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
exp o3.xyz, -r1.xyzx
mov o0.w, l(1.000000)
mov o1.xyz, l(0.040000,0.040000,0.040000,0)
mov o1.w, r1.w
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret
// Approximately 0 instruction slots used