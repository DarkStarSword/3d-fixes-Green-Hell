// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e9948899f1c01850-ps.txt
// 3DMigoto: e9948899f1c01850 |    Unity headers extracted from Custom_Hair
//    Shader "Custom/Hair" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="AlphaTest+0" "RenderType"="TreeTransparentCutout" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="AlphaTest+0" "RenderType"="TreeTransparentCutout" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Custom_Hair:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 127 3 2
//   undeciphered1a: 9
//   Keywords { "DIRECTIONAL" }
//   undeciphered2: 1 3 4 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 176
//   Vector 32 [_LightColor0]
//   Float 64 [_NormalIntensity]
//   Vector 80 [_TillingOffset]
//   Vector 96 [_AlbedoTint]
//   Vector 112 [_AdditionalTint]
//   Vector 128 [_SpecularTint]
//   Float 144 [_AnisotropyX]
//   Float 148 [_AnisotropyY]
//   Float 152 [_SpacularIntensity]
//   Float 156 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_NormalMap] 2D 1
//   SetTexture 1 [_PackRAlbedoGAdditionalMaskBSpecular] 2D 2
//   SetTexture 2 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:25:22 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// COLOR                    0   xyzw        6     NONE   float   x
// TEXCOORD                 5   xyzw        7     NONE   float   xy w
// TEXCOORD                 7   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 9.000000, 0, 0, 0},
                              { 3.000000, 0, 0, 0},
                              { 11.000000, 0, 0, 0},
                              { 13.000000, 0, 0, 0},
                              { 5.000000, 0, 0, 0},
                              { 15.000000, 0, 0, 0},
                              { 7.000000, 0, 0, 0},
                              { 4.000000, 0, 0, 0},
                              { 12.000000, 0, 0, 0},
                              { 2.000000, 0, 0, 0},
                              { 10.000000, 0, 0, 0},
                              { 16.000000, 0, 0, 0},
                              { 8.000000, 0, 0, 0},
                              { 14.000000, 0, 0, 0},
                              { 6.000000, 0, 0, 0} }
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.x
dcl_input_ps linear v7.xyw
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e9948899f1c01850-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, r10.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
mad r2.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r3.xyzw, r2.xyxx, t0.xyzw, s1
mul r3.x, r3.w, r3.x
mad r2.zw, r3.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r3.xy, r2.zwzz, cb0[4].xxxx
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r3.z, r1.w
sample r2.xyzw, r2.xyxx, t1.xyzw, s2
mul r4.xyz, r2.xxxx, cb0[6].xyzx
mad r5.xyz, r2.xxxx, cb0[7].xyzx, -r4.xyzx
mad r4.xyz, r2.yyyy, r5.xyzx, r4.xyzx
dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, cb2[0].xyzx
mad r6.xyz, cb2[0].xyzx, r1.wwww, r1.xyzx
dp3 r1.w, r6.xyzx, r6.xyzx
rsq r1.w, r1.w
mul r6.xyz, r1.wwww, r6.xyzx
dp3 r7.x, v2.xyzx, r3.xyzx
dp3 r7.y, v3.xyzx, r3.xyzx
dp3 r7.z, v4.xyzx, r3.xyzx
dp3 r1.w, r7.xyzx, r7.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r7.xyzx
mov r7.y, v4.y
mov r7.z, v2.y
mov r7.x, v3.y
mul r8.xyz, r3.zxyz, r7.xyzx
mad r7.xyz, r3.yzxy, r7.yzxy, -r8.xyzx
dp3 r1.w, r7.xyzx, r7.xyzx
rsq r1.w, r1.w
mul r7.xyz, r1.wwww, r7.xyzx
dp3 r1.w, r6.xyzx, r7.xyzx
div r1.w, r1.w, cb0[9].x
mov r7.y, v4.x
mov r7.z, v2.x
mov r7.x, v3.x
mul r8.xyz, r3.zxyz, r7.xyzx
mad r7.xyz, r3.yzxy, r7.yzxy, -r8.xyzx
dp3 r2.x, r7.xyzx, r7.xyzx
rsq r2.x, r2.x
mul r7.xyz, r2.xxxx, r7.xyzx
dp3 r2.x, r6.xyzx, r7.xyzx
div r2.x, r2.x, cb0[9].y
dp3 r2.y, r3.xyzx, r6.xyzx
dp3 r3.w, r3.xyzx, r5.xyzx
mul r5.xyz, r2.zzzz, cb0[8].xyzx
mul r2.x, r2.x, r2.x
mad r1.w, r1.w, r1.w, r2.x
add r2.x, r2.y, l(1.000000)
div r1.w, r1.w, r2.x
mul r1.w, r1.w, l(-2.885390)
exp r1.w, r1.w
max r2.x, r3.w, l(0.000000)
mul r1.w, r1.w, r2.x
mul r2.xyz, r1.wwww, r5.xyzx
mul r2.xyz, r2.xyzx, v6.xxxx
mul r5.xyz, r2.xyzx, cb0[9].zzzz
div r6.xy, v7.xyxx, v7.wwww
mul r6.xy, r6.xyxx, cb1[6].xyxx
mul r6.xy, r6.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
ge r6.zw, r6.xxxy, -r6.xxxy
frc r6.xy, |r6.xyxx|
movc r6.xy, r6.zwzz, r6.xyxx, -r6.xyxx
mul r6.xy, r6.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000)
ftoi r6.xy, r6.xyxx
ishl r1.w, r6.y, l(2)
iadd r1.w, r6.x, r1.w
mul r1.w, l(0.062500), icb[r1.w + 0].x
ge r1.w, r2.w, r1.w
and r3.w, r1.w, l(0x3f800000)
movc r1.w, r1.w, l(0), l(1.000000)
mad r1.w, r2.w, r1.w, r3.w
add r1.w, r1.w, -cb0[9].w
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
eq r1.w, cb3[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb3[0].y, l(1.000000)
  mul r6.xyz, v5.yyyy, cb3[2].xyzx
  mad r6.xyz, cb3[1].xyzx, v5.xxxx, r6.xyzx
  mad r6.xyz, cb3[3].xyzx, v5.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb3[4].xyzx
  movc r6.xyz, r1.wwww, r6.xyzx, v5.xyzx
  add r6.xyz, r6.xyzx, -cb3[6].xyzx
  mul r6.yzw, r6.xxyz, cb3[5].xxyz
  mad r1.w, r6.y, l(0.250000), l(0.750000)
  mad r2.w, cb3[0].z, l(0.500000), l(0.750000)
  max r6.x, r1.w, r2.w
  sample r6.xyzw, r6.xzwx, t2.xyzw, s0
else
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r1.w, r6.xyzw, cb2[46].xyzw
mul r6.xyz, r1.wwww, cb0[2].xyzx
max r1.w, r5.y, r5.x
max r1.w, r5.z, r1.w
add r1.w, -r1.w, l(1.000000)
mul r4.xyz, r1.wwww, r4.xyzx
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.xyzx, r1.xyzx
dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
dp2 r0.y, r0.xxxx, r0.xxxx
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.x, l(1.000000)
mul r1.y, r0.z, r0.z
mul r1.y, r1.y, r1.y
mul r0.z, r0.z, r1.y
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.y, -|r0.w|, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
mad r0.y, r0.y, r1.y, l(1.000000)
mul r0.y, r0.y, r0.z
add r0.z, |r0.w|, r1.x
add r0.z, r0.z, l(0.000010)
div r0.z, l(0.500000), r0.z
mul r0.z, r0.z, l(0.999999881)
mul r0.yz, r1.xxxx, r0.yyzy
dp3 r0.w, r5.xyzx, r5.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r6.xyzx
mul r0.yzw, r6.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
mad r2.xyz, -r2.xyzx, cb0[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad o0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used