// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b7b1ceeac6ffedba-ps.txt
// 3DMigoto: b7b1ceeac6ffedba |    Unity headers extracted from DynamicFog_Reflections_Lambert
//    Shader "DynamicFog/Reflections/Lambert" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "RenderType"="Opaque" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from DynamicFog_Reflections_Lambert:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 36 5 2
//   undeciphered1a: 4
//   Keywords { "DIRECTIONAL_COOKIE" "SHADOWS_SCREEN" }
//   undeciphered2: 1 5 6 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 32 [_LightColor0]
//   Vector 128 [_Color]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 3
//   SetTexture 1 [_ReflectionTex] 2D 4
//   SetTexture 2 [_ShadowMapTexture] 2D 1
//   SetTexture 3 [_LightTexture0] 2D 2
//   SetTexture 4 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:02:09 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 4     zw        1     NONE   float
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyzw        4     NONE   float   xy w
// TEXCOORD                 5   xyzw        5     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyw
dcl_input_ps linear v5.xyw
dcl_output o0.xyzw
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed b7b1ceeac6ffedba-ps.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s3
div r1.xy, v4.xyxx, v4.wwww
sample r1.xyzw, r1.xyxx, t1.xyzw, s4
mul r0.xyz, r0.xyzx, r1.xyzx
mul r0.xyz, r0.xyzx, cb0[8].xyzx
mul r1.xy, v3.yyyy, cb0[5].xyxx
mad r1.xy, cb0[4].xyxx, v3.xxxx, r1.xyxx
mad r1.xy, cb0[6].xyxx, v3.zzzz, r1.xyxx
add r1.xy, r1.xyxx, cb0[7].xyxx
add r2.xyz, -v3.xyzx, r5.xyzx
mov r3.x, cb4[9].z
mov r3.y, cb4[10].z
mov r3.z, cb4[11].z
dp3 r0.w, r2.xyzx, r3.xyzx
add r2.xyz, v3.xyzx, -cb3[25].xyzx
dp3 r1.z, r2.xyzx, r2.xyzx
sqrt r1.z, r1.z
add r1.z, -r0.w, r1.z
mad r0.w, cb3[25].w, r1.z, r0.w
mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
eq r1.z, cb5[0].x, l(1.000000)
if_nz r1.z
  eq r1.z, cb5[0].y, l(1.000000)
  mul r2.xyz, v3.yyyy, cb5[2].xyzx
  mad r2.xyz, cb5[1].xyzx, v3.xxxx, r2.xyzx
  mad r2.xyz, cb5[3].xyzx, v3.zzzz, r2.xyzx
  add r2.xyz, r2.xyzx, cb5[4].xyzx
  movc r2.xyz, r1.zzzz, r2.xyzx, v3.xyzx
  add r2.xyz, r2.xyzx, -cb5[6].xyzx
  mul r2.yzw, r2.xxyz, cb5[5].xxyz
  mad r1.z, r2.y, l(0.250000), l(0.750000)
  mad r1.w, cb5[0].z, l(0.500000), l(0.750000)
  max r2.x, r1.w, r1.z
  sample r2.xyzw, r2.xzwx, t4.xyzw, s0
else
  mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r1.z, r2.xyzw, cb2[46].xyzw
div r2.xy, v5.xyxx, v5.wwww
sample r2.xyzw, r2.xyxx, t2.xyzw, s1
add r1.z, r1.z, -r2.x
mad r0.w, r0.w, r1.z, r2.x
sample r1.xyzw, r1.xyxx, t3.xyzw, s2
mul r0.w, r0.w, r1.w
mul r1.xyz, r0.wwww, cb0[2].xyzx
dp3 r0.w, v2.xyzx, cb2[0].xyzx
max r0.w, r0.w, l(0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
mul o0.xyz, r0.wwww, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used