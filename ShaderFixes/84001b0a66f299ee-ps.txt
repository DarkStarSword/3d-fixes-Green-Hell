// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 84001b0a66f299ee-ps.txt
// 3DMigoto: 84001b0a66f299ee |    Unity headers extracted from Amplify_pan_texture_billboard
//    Shader "Amplify/pan_texture_billboard" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "QUEUE"="Transparent+0" "RenderType"="Transparent" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent+0" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_pan_texture_billboard:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 97 6 2
//   undeciphered1a: 7
//   Keywords { "DIRECTIONAL_COOKIE" }
//   undeciphered2: 1 3 4 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 240
//   Vector 96 [_LightColor0]
//   Vector 128 [_Albedo_color]
//   Float 144 [_opacity_power]
//   Float 148 [_R_power]
//   Vector 152 [_Red_channel_pan] 2
//   Float 160 [_R2_power]
//   Vector 164 [_Red2_channel_pan] 2
//   Float 172 [_G_power]
//   Vector 176 [_Green_channel_pan] 2
//   Float 184 [_B_power]
//   Vector 192 [_Blue_channel_pan] 2
//   Float 200 [_cuttopmaskpower]
//   Float 204 [_cuttopmaskcontrast]
//   Float 208 [_edgemaskcontrast]
//   Float 212 [_mask_range]
//   Float 216 [_mask_fallof]
//   Matrix 32 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_Texture_to_pan] 2D 2
//   SetTexture 1 [_LightTexture0] 2D 1
//   SetTexture 2 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:31:57 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 3     zw        1     NONE   float
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 84001b0a66f299ee-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v3.xyzx, r8.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xy, v1.xyxx, l(0.000000, 1.000000, 0.000000, 0.000000)
mad r2.zw, cb1[0].yyyy, cb0[9].zzzw, r2.xxxy
mad r3.xy, cb1[0].yyyy, cb0[10].yzyy, r2.xyxx
mad r3.zw, cb1[0].yyyy, cb0[11].xxxy, r2.xxxy
mad r2.xy, cb1[0].yyyy, cb0[12].xyxx, r2.xyxx
add r1.w, -v1.y, l(1.000000)
log r1.w, r1.w
mul r1.w, r1.w, cb0[12].z
exp r1.w, r1.w
mul_sat r1.w, r1.w, cb0[12].w
mul r4.xy, v1.xyxx, l(3.140000, 3.140000, 0.000000, 0.000000)
sincos r4.xy, null, r4.xyxx
mul r4.xy, r4.xyxx, r4.xyxx
mul r4.xy, r4.xyxx, cb0[13].xxxx
mul_sat r4.x, r4.y, r4.x
add r4.yzw, v3.xxyz, -r8.xxyz
dp3 r4.y, r4.yzwy, r4.yzwy
sqrt r4.y, r4.y
div r4.y, r4.y, cb0[13].y
log r4.y, r4.y
mul r4.y, r4.y, cb0[13].z
exp r4.y, r4.y
min r4.y, r4.y, l(1.000000)
sample r5.xyzw, r2.zwzz, t0.xyzw, s2
sample r6.xyzw, r3.xyxx, t0.xyzw, s2
mul r2.z, r6.x, cb0[10].x
mad r2.z, cb0[9].y, r5.x, r2.z
sample r3.xyzw, r3.zwzz, t0.xyzw, s2
mad r2.z, cb0[10].w, r3.y, r2.z
sample r3.xyzw, r2.xyxx, t0.xyzw, s2
mad r2.x, cb0[11].z, r3.z, r2.z
mul r1.w, r1.w, r2.x
mul r1.w, r4.x, r1.w
mul r1.w, r4.y, r1.w
mul_sat r2.w, r1.w, cb0[9].x
mul r3.xy, v3.yyyy, cb0[3].xyxx
mad r3.xy, cb0[2].xyxx, v3.xxxx, r3.xyxx
mad r3.xy, cb0[4].xyxx, v3.zzzz, r3.xyxx
add r3.xy, r3.xyxx, cb0[5].xyxx
eq r1.w, cb3[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb3[0].y, l(1.000000)
  mul r4.xyz, v3.yyyy, cb3[2].xyzx
  mad r4.xyz, cb3[1].xyzx, v3.xxxx, r4.xyzx
  mad r4.xyz, cb3[3].xyzx, v3.zzzz, r4.xyzx
  add r4.xyz, r4.xyzx, cb3[4].xyzx
  movc r4.xyz, r1.wwww, r4.xyzx, v3.xyzx
  add r4.xyz, r4.xyzx, -cb3[6].xyzx
  mul r4.yzw, r4.xxyz, cb3[5].xxyz
  mad r1.w, r4.y, l(0.250000), l(0.750000)
  mad r3.z, cb3[0].z, l(0.500000), l(0.750000)
  max r4.x, r1.w, r3.z
  sample r4.xyzw, r4.xzwx, t2.xyzw, s0
else
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
sample r3.xyzw, r3.xyxx, t1.xyzw, s1
mul r1.w, r1.w, r3.w
mul r3.xyz, r1.wwww, cb0[6].xyzx
dp3 r1.w, v2.xyzx, cb2[0].xyzx
max r1.w, -r1.w, l(0.000000)
mul r4.xyz, r3.xyzx, r1.wwww
mul r4.xyz, r4.xyzx, cb0[8].xyzx
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, v2.xyzx
mul r6.xyz, cb0[8].xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r5.xyzx, r1.xyzx
dp3_sat r1.x, r5.xyzx, cb2[0].xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
dp2 r0.y, r0.xxxx, r0.xxxx
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.x, l(1.000000)
mul r1.y, r0.z, r0.z
mul r1.y, r1.y, r1.y
mul r0.z, r0.z, r1.y
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.y, -|r0.w|, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
mad r0.y, r0.y, r1.y, l(1.000000)
mul r0.y, r0.y, r0.z
add r0.z, |r0.w|, r1.x
add r0.z, r0.z, l(0.000010)
div r0.z, l(0.500000), r0.z
mul r0.z, r0.z, l(0.999999881)
mul r0.yz, r1.xxxx, r0.yyzy
mul r1.xyz, r0.yyyy, r3.xyzx
mul r0.yzw, r3.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
mad r0.x, r0.x, l(0.960000), l(0.040000)
mul r0.xyz, r0.xxxx, r0.yzwy
mad r2.xyz, r6.xyzx, r1.xyzx, r0.xyzx
mov r4.w, l(0)
add o0.xyzw, r2.xyzw, r4.xyzw
ret
// Approximately 0 instruction slots used