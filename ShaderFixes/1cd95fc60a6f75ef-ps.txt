// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1cd95fc60a6f75ef-ps.txt
// 3DMigoto: 1cd95fc60a6f75ef | Matched 2 variants of 1 shaders: Amplify/rock_surface_lod
//
//       Unity headers extracted from Amplify_rock_surface_lod
//       Shader "Amplify/rock_surface_lod" {
//         CustomEditor "ASEMaterialInspector"
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           Tags { "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//           Pass 1/4 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Amplify_rock_surface_lod:
//      API d3d11
//      Shader model ps_5_0
//      undeciphered1: 201802150 187 7 8
//      undeciphered1a: 14
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
//      undeciphered2: 1 6 8 5 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 128
//      Vector 32 [_LightColor0]
//      Vector 64 [_Normal_ST]
//      Vector 80 [_Albedo_ST]
//      Float 96 [_moss_mask_source_switch]
//      Float 100 [_Moss_Mask_Size]
//      Float 104 [_Moss_Mask_power]
//      Float 108 [TERRAIN_GlobalWetness]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 624 [unity_SHAr]
//      Vector 640 [unity_SHAg]
//      Vector 656 [unity_SHAb]
//      Vector 736 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityShadows" 416
//      Vector 384 [_LightShadowData]
//      Vector 400 [unity_ShadowFadeCenterAndType]
//      ConstBuffer "UnityPerFrame" 368
//      Matrix 144 [unity_MatrixV]
//      ConstBuffer "UnityReflectionProbes" 128
//      Vector 0 [unity_SpecCube0_BoxMax]
//      Vector 16 [unity_SpecCube0_BoxMin]
//      Vector 32 [unity_SpecCube0_ProbePosition]
//      Vector 48 [unity_SpecCube0_HDR]
//      Vector 64 [unity_SpecCube1_BoxMax]
//      Vector 80 [unity_SpecCube1_BoxMin]
//      Vector 96 [unity_SpecCube1_ProbePosition]
//      Vector 112 [unity_SpecCube1_HDR]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      ConstBuffer "Amplifyrock_surface_lod" 16
//      Vector 0 [_Color0]
//      SetTexture 0 [_Normal] 2D 3
//      SetTexture 1 [_Albedo] 2D 4
//      SetTexture 2 [_ShadowMapTexture] 2D 2
//      SetTexture 3 [unity_SpecCube0] CUBE 0
//      SetTexture 4 [unity_SpecCube1] CUBE -1
//      SetTexture 5 [unity_ProbeVolumeSH] 3D 1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityShadows" 3
//      BindCB "UnityPerFrame" 4
//      BindCB "UnityReflectionProbes" 5
//      BindCB "UnityProbeVolume" 6
//      BindCB "Amplifyrock_surface_lod" 7
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:36:59 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_constantbuffer cb7[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyw
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 1cd95fc60a6f75ef-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r15.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r3.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t0.xywz, s3
mul r3.x, r3.z, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r3.z, r1.w
mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t1.xyzw, s4
add r1.w, -r4.z, r4.y
mad r1.w, cb0[6].x, r1.w, r4.z
mul r1.w, r1.w, cb0[6].y
log r1.w, r1.w
mul r1.w, r1.w, cb0[6].z
exp r1.w, r1.w
min r1.w, r1.w, l(1.000000)
add r4.xyz, r4.xyzx, -cb7[0].xyzx
mad r4.xyz, r1.wwww, r4.xyzx, cb7[0].xyzx
mov_sat r1.w, v3.z
mul r2.w, r1.w, cb0[6].w
max r2.w, r2.w, l(0.000000)
min r2.w, r2.w, l(0.400000)
add r2.w, -r2.w, l(1.000000)
mul r4.xyz, r2.wwww, r4.xyzx
add r2.w, cb0[6].w, cb0[6].w
max r2.w, r2.w, l(0.200000)
min r2.w, r2.w, l(0.800000)
mov r5.x, cb4[9].z
mov r5.y, cb4[10].z
mov r5.z, cb4[11].z
dp3 r3.w, r1.xyzx, r5.xyzx
add r5.xyz, r0.xyzx, -cb3[25].xyzx
dp3 r4.w, r5.xyzx, r5.xyzx
sqrt r4.w, r4.w
add r4.w, -r3.w, r4.w
mad r3.w, cb3[25].w, r4.w, r3.w
mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
eq r4.w, cb6[0].x, l(1.000000)
if_nz r4.w
  eq r5.x, cb6[0].y, l(1.000000)
  mul r5.yzw, v3.wwww, cb6[2].xxyz
  mad r5.yzw, cb6[1].xxyz, v2.wwww, r5.yyzw
  mad r5.yzw, cb6[3].xxyz, v4.wwww, r5.yyzw
  add r5.yzw, r5.yyzw, cb6[4].xxyz
  movc r5.xyz, r5.xxxx, r5.yzwy, r0.xyzx
  add r5.xyz, r5.xyzx, -cb6[6].xyzx
  mul r5.yzw, r5.xxyz, cb6[5].xxyz
  mad r5.y, r5.y, l(0.250000), l(0.750000)
  mad r6.x, cb6[0].z, l(0.500000), l(0.750000)
  max r5.x, r5.y, r6.x
  sample_indexable(texture3d)(float,float,float,float) r5.xyzw, r5.xzwx, t5.xyzw, s1
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
div r5.yz, v6.xxyx, v6.wwww
sample_indexable(texture2d)(float,float,float,float) r5.y, r5.yzyy, t2.yxzw, s2
add r5.x, -r5.y, r5.x
mad r3.w, r3.w, r5.x, r5.y
dp3 r5.x, v2.xyzx, r3.xyzx
dp3 r5.y, v3.xyzx, r3.xyzx
dp3 r5.z, v4.xyzx, r3.xyzx
dp3 r3.x, r5.xyzx, r5.xyzx
rsq r3.x, r3.x
mul r5.xyz, r3.xxxx, r5.xyzx
mad r3.x, -r1.w, r2.w, l(1.000000)
dp3 r3.y, -r2.xyzx, r5.xyzx
add r3.y, r3.y, r3.y
mad r6.xyz, r5.xyzx, -r3.yyyy, -r2.xyzx
mul r3.yzw, r3.wwww, cb0[2].xxyz
if_nz r4.w
  eq r4.w, cb6[0].y, l(1.000000)
  mul r7.xyz, v3.wwww, cb6[2].xyzx
  mad r7.xyz, cb6[1].xyzx, v2.wwww, r7.xyzx
  mad r7.xyz, cb6[3].xyzx, v4.wwww, r7.xyzx
  add r7.xyz, r7.xyzx, cb6[4].xyzx
  movc r7.xyz, r4.wwww, r7.xyzx, r0.xyzx
  add r7.xyz, r7.xyzx, -cb6[6].xyzx
  mul r7.yzw, r7.xxyz, cb6[5].xxyz
  mul r4.w, r7.y, l(0.250000)
  mul r6.w, cb6[0].z, l(0.500000)
  mad r7.y, -cb6[0].z, l(0.500000), l(0.250000)
  max r4.w, r4.w, r6.w
  min r7.x, r7.y, r4.w
  sample_indexable(texture3d)(float,float,float,float) r8.xyzw, r7.xzwx, t5.xyzw, s1
  add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample_indexable(texture3d)(float,float,float,float) r9.xyzw, r9.xyzx, t5.xyzw, s1
  add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample_indexable(texture3d)(float,float,float,float) r7.xyzw, r7.xyzx, t5.xyzw, s1
  mov r5.w, l(1.000000)
  dp4 r8.x, r8.xyzw, r5.xyzw
  dp4 r8.y, r9.xyzw, r5.xyzw
  dp4 r8.z, r7.xyzw, r5.xyzw
else
  mov r5.w, l(1.000000)
  dp4 r8.x, cb2[39].xyzw, r5.xyzw
  dp4 r8.y, cb2[40].xyzw, r5.xyzw
  dp4 r8.z, cb2[41].xyzw, r5.xyzw
endif
add r7.xyz, r8.xyzx, v5.xyzx
max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r4.w, l(0.000000), cb5[2].w
if_nz r4.w
  dp3 r4.w, r6.xyzx, r6.xyzx
  rsq r4.w, r4.w
  mul r8.xyz, r4.wwww, r6.xyzx
  add r9.xyz, -r0.xyzx, cb5[0].xyzx
  div r9.xyz, r9.xyzx, r8.xyzx
  add r10.xyz, -r0.xyzx, cb5[1].xyzx
  div r10.xyz, r10.xyzx, r8.xyzx
  lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  min r4.w, r9.y, r9.x
  min r4.w, r9.z, r4.w
  add r9.xyz, r0.xyzx, -cb5[2].xyzx
  mad r8.xyz, r8.xyzx, r4.wwww, r9.xyzx
else
  mov r8.xyz, r6.xyzx
endif
mad r4.w, -r3.x, l(0.700000), l(1.700000)
mul r4.w, r3.x, r4.w
mul r4.w, r4.w, l(6.000000)
sample_l_indexable(texturecube)(float,float,float,float) r8.xyzw, r8.xyzx, t3.xyzw, s0, r4.w
add r5.w, r8.w, l(-1.000000)
mad r5.w, cb5[3].w, r5.w, l(1.000000)
log r5.w, r5.w
mul r5.w, r5.w, cb5[3].y
exp r5.w, r5.w
mul r5.w, r5.w, cb5[3].x
mul r9.xyz, r8.xyzx, r5.wwww
lt r6.w, cb5[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb5[6].w
  if_nz r6.w
    dp3 r6.w, r6.xyzx, r6.xyzx
    rsq r6.w, r6.w
    mul r10.xyz, r6.wwww, r6.xyzx
    add r11.xyz, -r0.xyzx, cb5[4].xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    add r12.xyz, -r0.xyzx, cb5[5].xyzx
    div r12.xyz, r12.xyzx, r10.xyzx
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
    movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
    min r6.w, r11.y, r11.x
    min r6.w, r11.z, r6.w
    add r0.xyz, r0.xyzx, -cb5[6].xyzx
    mad r6.xyz, r10.xyzx, r6.wwww, r0.xyzx
  endif
  sample_l_indexable(texturecube)(float,float,float,float) r6.xyzw, r6.xyzx, t4.xyzw, s0, r4.w
  add r0.x, r6.w, l(-1.000000)
  mad r0.x, cb5[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb5[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb5[7].x
  mul r0.xyz, r6.xyzx, r0.xxxx
  mad r6.xyz, r5.wwww, r8.xyzx, -r0.xyzx
  mad r9.xyz, cb5[1].wwww, r6.xyzx, r0.xyzx
endif
mul r0.xyz, r4.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r5.xyzx, r2.xyzx
dp3_sat r2.x, r5.xyzx, cb2[0].xyzx
dp3_sat r2.y, r5.xyzx, r1.xyzx
dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
add r1.y, r1.x, r1.x
mul r1.y, r1.x, r1.y
mad r1.y, r1.y, r3.x, l(-0.500000)
add r1.z, -r2.x, l(1.000000)
mul r2.z, r1.z, r1.z
mul r2.z, r2.z, r2.z
mul r1.z, r1.z, r2.z
mad r1.z, r1.y, r1.z, l(1.000000)
add r2.z, -|r0.w|, l(1.000000)
mul r4.x, r2.z, r2.z
mul r4.x, r4.x, r4.x
mul r2.z, r2.z, r4.x
mad r1.y, r1.y, r2.z, l(1.000000)
mul r1.y, r1.y, r1.z
mul r1.y, r2.x, r1.y
mul r1.z, r3.x, r3.x
mad r3.x, -r3.x, r3.x, l(1.000000)
mad r4.x, |r0.w|, r3.x, r1.z
mad r3.x, r2.x, r3.x, r1.z
mul r0.w, |r0.w|, r3.x
mad r0.w, r2.x, r4.x, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r3.x, r1.z, r1.z
mad r4.x, r2.y, r3.x, -r2.y
mad r2.y, r4.x, r2.y, l(1.000000)
mul r3.x, r3.x, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r3.x, r2.y
mul r0.w, r0.w, r2.y
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.x, r0.w
mad r1.z, r1.z, r1.z, l(1.000000)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
mad r4.xyz, r3.yzwy, r1.yyyy, r7.xyzx
mul r3.xyz, r3.yzwy, r0.wwww
add r0.w, -r1.x, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.w, r0.w, r1.x
mad r0.w, r0.w, l(0.960000), l(0.040000)
mul r3.xyz, r0.wwww, r3.xyzx
mad r0.xyz, r0.xyzx, r4.xyzx, r3.xyzx
mul r1.xyz, r9.xyzx, r1.zzzz
mad r0.w, r1.w, r2.w, l(2.235174179E-008)
mad r0.w, r2.z, r0.w, l(0.040000)
mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used