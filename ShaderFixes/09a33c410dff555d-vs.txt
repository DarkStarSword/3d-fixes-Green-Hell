// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 09a33c410dff555d-vs.txt
// 3DMigoto: 09a33c410dff555d |    Unity headers extracted from SineVFX_LivingParticles_LivingParticleMaskedPbr
//    Shader "SineVFX/LivingParticles/LivingParticleMaskedPbr" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "QUEUE"="AlphaTest+0" "RenderType"="TransparentCutout" }
//        Pass 4/4 {
//          Name "ShadowCaster"
//          Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "LIGHTMODE"="SHADOWCASTER" "QUEUE"="AlphaTest+0" "RenderType"="TransparentCutout" "SHADOWSUPPORT"="true" }
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from SineVFX_LivingParticles_LivingParticleMaskedPbr:
//   API d3d11
//   Shader model vs_4_0
//   undeciphered1: 201802150 70 0 0
//   undeciphered1a: 6
//   Keywords { "SHADOWS_DEPTH" "_VERTEXDISTORTIONENABLED_ON" }
//   undeciphered2: 1 1 5 1 0 0
//   undeciphered3: 255 4 0 0 1 1 4 5 5 6
//   ConstBuffer "$Globals" 272
//   Vector 112 [_Emission_ST]
//   Vector 128 [_Affector]
//   Float 144 [_Distance]
//   Float 148 [_DistancePower]
//   Float 228 [_VertexDistortionPower]
//   Float 232 [_VertexDistortionTiling]
//   Float 244 [_OffsetPower]
//   Vector 256 [_texcoord_ST]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityShadows" 416
//   Vector 80 [unity_LightShadowBias]
//   ConstBuffer "UnityPerDraw" 176
//   Matrix 0 [unity_ObjectToWorld]
//   Matrix 64 [unity_WorldToObject]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 272 [unity_MatrixVP]
//   SetTexture 0 [_VertexOffsetTexture] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityLighting" 1
//   BindCB "UnityShadows" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityPerFrame" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:28:00 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   x
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float
// COLOR                    0   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy
// TEXCOORD                 2   xyz         2     NONE   float   xyz
//
vs_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_constantbuffer cb2[6], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_constantbuffer cb4[21], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xyzw
dcl_input v4.x
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyz
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

mad r0.z, v4.x, cb0[7].x, cb0[7].z
mov r0.xy, v3.zwzz
mov r0.w, l(0)
add r0.xyzw, r0.xyzw, -cb0[8].xyzw
dp4 r0.w, r0.xyzw, r0.xyzw
sqrt r1.x, r0.w
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r0.w, -r1.x, cb0[9].x
div_sat r0.w, r0.w, cb0[9].x
log r0.w, r0.w
mul r0.w, r0.w, cb0[9].y
exp r0.w, r0.w
mul r0.xyz, r0.xyzx, r0.wwww
mul r0.xyz, r0.xyzx, cb0[15].yyyy
mul r1.xyzw, v0.yyyy, cb3[1].zyxz
mad r1.xyzw, cb3[0].zyxz, v0.xxxx, r1.xyzw
mad r1.xyzw, cb3[2].zyxz, v0.zzzz, r1.xyzw
mad r1.xyzw, cb3[3].zyxz, v0.wwww, r1.xyzw
mul r2.xyzw, r1.xyzw, cb0[14].zzzz
mul r1.xy, r1.zyzz, cb0[14].zzzz
dp3 r3.x, v2.xyzx, cb3[4].xyzx
dp3 r3.y, v2.xyzx, cb3[5].xyzx
dp3 r3.z, v2.xyzx, cb3[6].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
lt r4.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzx
lt r5.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
iadd r4.xyz, -r4.xyzx, r5.xyzx
itof r4.xyz, r4.xyzx
mov r4.w, l(1.000000)
mul r2.xyzw, r2.xyzw, r4.xwyw
mul r1.zw, r4.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000)
mul r1.xy, r1.zwzz, r1.xyxx
sample_l r1.xyzw, r1.xyxx, t0.xyzw, s0, l(0.000000)
sample_l r4.xyzw, r2.zwzz, t0.xyzw, s0, l(0.000000)
sample_l r2.xyzw, r2.xyxx, t0.xyzw, s0, l(0.000000)
add r0.w, |r3.y|, |r3.x|
add r0.w, |r3.z|, r0.w
div r5.xyz, |r3.xyzx|, r0.wwww
mul r4.xyz, r4.xyzx, r5.yyyy
mad r2.xyz, r2.xyzx, r5.xxxx, r4.xyzx
mad r1.xyz, r1.xyzx, r5.zzzz, r2.xyzx
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r0.xyz, cb0[14].yyyy, r1.xyzx, r0.xyzx
add r0.xyz, r0.xyzx, v0.xyzx
mul r1.xyzw, r0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb3[2].xyzw, r0.zzzz, r1.xyzw
mad r1.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
mad r2.xyz, -r1.xyzx, cb1[0].wwww, cb1[0].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, r3.xyzx, r2.xyzx
mad r0.w, -r0.w, r0.w, l(1.000000)
sqrt r0.w, r0.w
mul r0.w, r0.w, cb2[5].z
mad r2.xyz, -r3.xyzx, r0.wwww, r1.xyzx
ne r0.w, cb2[5].z, l(0.000000)
movc r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
mul r2.xyzw, r1.yyyy, cb4[18].xyzw
mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw

// Relocated to here with asmtool.py
mov o0.xyw, r1.xyxw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 09a33c410dff555d-vs.txt
ne r6.w, r1.w, l(1.0)
if_nz r6.w
  add r6.w, r1.w, -r6.y
  mad r1.x, r6.w, r6.x, r1.x
endif

div r0.w, cb2[5].x, r1.w
min r0.w, r0.w, l(0.000000)
max r0.w, r0.w, l(-1.000000)
add r0.w, r0.w, r1.z
min r1.z, r1.w, r0.w

// mov o0.xyw, r1.xyxw // Relocated from here with asmtool.py

add r1.x, -r0.w, r1.z
mad o0.z, cb2[5].y, r1.x, r0.w
mad o1.xy, v3.xyxx, cb0[16].xyxx, cb0[16].zwzz
mul r1.xyz, r0.yyyy, cb3[1].xyzx
mad r0.xyw, cb3[0].xyxz, r0.xxxx, r1.xyxz
mad r0.xyz, cb3[2].xyzx, r0.zzzz, r0.xywx
mad o2.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
ret
// Approximately 0 instruction slots used