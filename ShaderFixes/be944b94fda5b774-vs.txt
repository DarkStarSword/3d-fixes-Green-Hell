// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed be944b94fda5b774-vs.txt
// 3DMigoto: be944b94fda5b774 | Matched 16 variants of 1 shaders: Lux Water/WaterSurface
//
//          Unity headers extracted from Lux Water_WaterSurface
//          Shader "Lux Water/WaterSurface" {
//            CustomEditor "LuxWaterMaterialEditor"
//            SubShader 1/1 {
//              LOD 200
//              Tags { "FORCENOSHADOWCASTING"="true" "QUEUE"="Transparent-1" "RenderType"="Opaque" }
//              Pass 4/4 {
//                Name "ShadowCaster"
//                Tags { "FORCENOSHADOWCASTING"="true" "LIGHTMODE"="SHADOWCASTER" "QUEUE"="Transparent-1" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//                Program "vp" {
//                  SubProgram "d3d11" {
//                  }
//                }
//              }
//            }
//          }
//
//       Unity 5.3 headers extracted from Lux Water_WaterSurface:
//         API d3d11
//         Shader model vs_4_0
//         undeciphered1: 201802150 41 0 0
//         undeciphered1a: 4
// 4000:   Keywords { "SHADOWS_CUBE" "GEOM_TYPE_BRANCH" "GEOM_TYPE_BRANCH_DETAIL" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 0040:   Keywords { "SHADOWS_CUBE" "GEOM_TYPE_BRANCH" "GEOM_TYPE_BRANCH_DETAIL" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" }
// 0400:   Keywords { "SHADOWS_CUBE" "GEOM_TYPE_BRANCH" "GEOM_TYPE_BRANCH_DETAIL" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 0004:   Keywords { "SHADOWS_CUBE" "GEOM_TYPE_BRANCH" "GEOM_TYPE_BRANCH_DETAIL" "USINGWATERPROJECTORS" }
// 1000:   Keywords { "SHADOWS_CUBE" "GEOM_TYPE_BRANCH" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 0010:   Keywords { "SHADOWS_CUBE" "GEOM_TYPE_BRANCH" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" }
// 0100:   Keywords { "SHADOWS_CUBE" "GEOM_TYPE_BRANCH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 0001:   Keywords { "SHADOWS_CUBE" "GEOM_TYPE_BRANCH" "USINGWATERPROJECTORS" }
// 2000:   Keywords { "SHADOWS_CUBE" "GEOM_TYPE_BRANCH_DETAIL" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 0020:   Keywords { "SHADOWS_CUBE" "GEOM_TYPE_BRANCH_DETAIL" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" }
// 0200:   Keywords { "SHADOWS_CUBE" "GEOM_TYPE_BRANCH_DETAIL" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 0002:   Keywords { "SHADOWS_CUBE" "GEOM_TYPE_BRANCH_DETAIL" "USINGWATERPROJECTORS" }
// 8000:   Keywords { "SHADOWS_CUBE" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 0080:   Keywords { "SHADOWS_CUBE" "GEOM_TYPE_MESH" "USINGWATERPROJECTORS" }
// 0800:   Keywords { "SHADOWS_CUBE" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
// 0008:   Keywords { "SHADOWS_CUBE" "USINGWATERPROJECTORS" }
//         undeciphered2: 1 0 5 0 0 0
//         undeciphered3: 255 2 0 0 1 1
// 0f0f:   ConstBuffer "$Globals" 528
// f0f0:   ConstBuffer "$Globals" 544
//         Vector 160 [_BumpTiling]
//         ConstBuffer "UnityLighting" 768
//         Vector 0 [_WorldSpaceLightPos0]
//         ConstBuffer "UnityShadows" 416
//         Vector 80 [unity_LightShadowBias]
//         ConstBuffer "UnityPerDraw" 176
//         Matrix 0 [unity_ObjectToWorld]
//         Matrix 64 [unity_WorldToObject]
//         ConstBuffer "UnityPerFrame" 368
//         Matrix 144 [unity_MatrixV]
//         Matrix 272 [unity_MatrixVP]
//         BindCB "$Globals" 0
//         BindCB "UnityLighting" 1
//         BindCB "UnityShadows" 2
//         BindCB "UnityPerDraw" 3
//         BindCB "UnityPerFrame" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:05:16 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float
// TEXCOORD                 1   xyzw        4     NONE   float
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float
// COLOR                    0   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xyz         1     NONE   float   xyz
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// TEXCOORD                 5   xyzw        5     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_constantbuffer cb2[6], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_constantbuffer cb4[21], immediateIndexed
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_temps 5

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw

dp3 r0.x, v2.xyzx, cb3[4].xyzx
dp3 r0.y, v2.xyzx, cb3[5].xyzx
dp3 r0.z, v2.xyzx, cb3[6].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyzw, v0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, v0.xxxx, r1.xyzw
mad r1.xyzw, cb3[2].xyzw, v0.zzzz, r1.xyzw
mad r2.xyzw, cb3[3].xyzw, v0.wwww, r1.xyzw
mad r3.xyz, -r2.xyzx, cb1[0].wwww, cb1[0].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, r0.xyzx, r3.xyzx
mad r0.w, -r0.w, r0.w, l(1.000000)
sqrt r0.w, r0.w
mul r0.w, r0.w, cb2[5].z
mad r0.xyz, -r0.xyzx, r0.wwww, r2.xyzx
ne r0.w, cb2[5].z, l(0.000000)
movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
mul r3.xyzw, r0.yyyy, cb4[18].xyzw
mad r3.xyzw, cb4[17].xyzw, r0.xxxx, r3.xyzw
mad r0.xyzw, cb4[19].xyzw, r0.zzzz, r3.xyzw
mad r0.xyzw, cb4[20].xyzw, r2.wwww, r0.xyzw

// Relocated to here with asmtool.py
mov o0.xyw, r0.xyxw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed be944b94fda5b774-vs.txt
ne r4.w, r0.w, l(1.0)
if_nz r4.w
  add r4.w, r0.w, -r4.y
  mad r0.x, r4.w, r4.x, r0.x
endif

min r2.x, r0.w, r0.z
add r2.x, -r0.z, r2.x
mad o0.z, cb2[5].y, r2.x, r0.z

// mov o0.xyw, r0.xyxw // Relocated from here with asmtool.py

mad o1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
add r0.xyzw, r1.xyzw, cb3[3].xyzw
mov o2.zw, l(0,0,0,0)
mul o2.xy, r0.xzxx, cb0[10].wwww
mul r1.xyzw, r0.yyyy, cb4[18].xyzw
mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
mad r1.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
mul r2.xyz, r1.xwyx, l(0.500000, 0.500000, -0.500000, 0.000000)
mov o3.zw, r1.zzzw
add o3.xy, r2.yyyy, r2.xzxx
mul r1.xyz, r0.yyyy, cb4[10].xyzx
mad r1.xyz, cb4[9].xyzx, r0.xxxx, r1.xyzx
mad r1.xyz, cb4[11].xyzx, r0.zzzz, r1.xyzx
mad r0.xzw, cb4[12].xxyz, r0.wwww, r1.xxyz
mov o4.w, r0.y
mul o4.xyz, r0.xzwx, l(-1.000000, -1.000000, 1.000000, 0.000000)
mov o5.xyzw, l(0,0,0,0)
ret
// Approximately 0 instruction slots used