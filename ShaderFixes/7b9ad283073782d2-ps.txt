// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7b9ad283073782d2-ps.txt
// 3DMigoto: 7b9ad283073782d2 |    Unity headers extracted from Hidden_PostProcessing_ScreenSpaceReflections
//    Shader "Hidden/PostProcessing/ScreenSpaceReflections" {
//      SubShader 1/1 {
//        Pass 1/4 {
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_PostProcessing_ScreenSpaceReflections:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 201802150 76 1 8
//   undeciphered1a: 9
//   undeciphered2: 1 3 2 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 384
//   Vector 80 [_Test_TexelSize]
//   Vector 352 [_Params]
//   Vector 368 [_Params2]
//   Matrix 96 [_ViewMatrix]
//   Matrix 224 [_InverseProjectionMatrix]
//   Matrix 288 [_ScreenSpaceProjectionMatrix]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 0
//   SetTexture 1 [_CameraGBufferTexture2] 2D 1
//   SetTexture 2 [_Noise] 2D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:27:03 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[24], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 7b9ad283073782d2-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.zwzz, t1.xyzw, s1
dp4 r0.w, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
eq r0.w, r0.w, l(0.000000)
if_nz r0.w
  mov o0.xyzw, l(0,0,0,0)
  ret
endif
sample_l_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t0.yzwx, s0, l(0.000000)
mad r1.xy, v1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xyzw, r1.yyyy, cb0[15].xyzw
mad r1.xyzw, cb0[14].xyzw, r1.xxxx, r2.xyzw
mad r1.xyzw, cb0[16].xyzw, r0.wwww, r1.xyzw
add r1.xyzw, r1.xyzw, cb0[17].xyzw
div r1.xyz, r1.xyzx, r1.wwww
lt r0.w, r1.z, -cb0[22].z
if_nz r0.w
  mov o0.xyzw, l(0,0,0,0)
  ret
endif
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r2.xyz, r0.yyyy, cb0[7].xyzx
mad r0.xyw, cb0[6].xyxz, r0.xxxx, r2.xyxz
mad r0.xyz, cb0[8].xyzx, r0.zzzz, r0.xywx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r2.xyzx, r0.xyzx
add r0.w, r0.w, r0.w
mad r0.xyz, r0.xyzx, -r0.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
lt r0.w, l(0.000000), r0.z
if_nz r0.w
  mov o0.xyzw, l(0,0,0,0)
  ret
endif
mad r0.w, r0.z, cb0[22].z, r1.z
lt r0.w, -cb1[5].y, r0.w
add r1.w, -r1.z, -cb1[5].y
div r1.w, r1.w, r0.z
movc r0.w, r0.w, r1.w, cb0[22].z
mad r0.xyz, r0.xyzx, r0.wwww, r1.xyzx
mul r2.xyz, r1.zzzz, cb0[20].xywx
mad r3.z, cb0[18].x, r1.x, r2.x
mad r3.w, cb0[19].y, r1.y, r2.y
mul r1.xyw, r0.zzzz, cb0[20].xyxw
mad r3.x, cb0[18].x, r0.x, r1.x
mad r3.y, cb0[19].y, r0.y, r1.y
rcp r2.zw, r2.zzzz
rcp r2.xy, r1.wwww
mul r4.w, r1.z, r2.w
mul r5.xyzw, r2.wzxy, r3.wzxy
mad r0.xy, r3.zwzz, r2.zwzz, -r5.zwzz
dp2 r0.x, r0.xyxx, r0.xyxx
ge r0.x, l(0.000100), r0.x
and r0.x, r0.x, l(0x3f800000)
max r0.y, cb0[5].y, cb0[5].x
mad r0.xy, r0.xxxx, r0.yyyy, r5.wzww
mad r5.zw, -r3.wwwz, r2.wwwz, r0.xxxy
lt r0.x, |r5.w|, |r5.z|
movc r3.xyzw, r0.xxxx, r5.xyzw, r5.yxwz
lt r0.y, l(0.000000), r3.z
lt r0.w, r3.z, l(0.000000)
iadd r0.y, -r0.y, r0.w
itof r5.x, r0.y
div r0.y, r5.x, r3.z
mad r0.z, r0.z, r2.y, -r4.w
mul r5.w, r0.y, r0.z
mul r5.y, r0.y, r3.w
add r0.z, -r2.w, r2.y
mul r5.z, r0.y, r0.z
mul r0.y, r1.z, l(-0.010000)
min r0.y, r0.y, l(1.000000)
add r0.y, -r0.y, l(1.000000)
mul r1.xy, v1.xyxx, cb0[23].yyyy
mul r1.z, r1.y, cb0[23].x
add r0.zw, r1.xxxz, r10.xxxz
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t2.xywz, s2, l(0.000000)
mul r0.y, r0.y, cb0[23].z
mul r1.xyzw, r0.yyyy, r5.xyzw
mov r4.xy, r3.xyxx
mov r4.z, r2.w
mad r2.xyzw, r1.xyzw, r0.zzzz, r4.xyzw
mov r3.x, l(-1)
mov r4.xyzw, l(0,0,0,0)
mov r6.xyzw, r2.xyzw
mov r7.xyzw, l(0,0,0,0)
mov r0.zw, l(0,0,0,0)
mov r8.x, l(0)
loop
  itof r1.x, r0.w
  ge r1.x, r1.x, cb0[23].w
  mov r8.x, l(0)
  breakc_nz r1.x
  mad r6.xyzw, r5.xyzw, r0.yyyy, r6.xyzw
  mad r1.xy, r1.wzww, l(0.500000, 0.500000, 0.000000, 0.000000), r6.wzww
  div r1.x, r1.x, r1.y
  lt r1.y, r0.z, r1.x
  movc r0.z, r1.y, r0.z, r1.x
  movc r1.xy, r0.xxxx, r6.yxyy, r6.xyxx
  mul r3.yz, r1.xxyx, cb0[5].xxyx
  sample_l_indexable(texture2d)(float,float,float,float) r1.x, r3.yzyy, t0.xyzw, s0, l(0.000000)
  mad r1.x, cb1[7].z, r1.x, cb1[7].w
  div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
  lt r1.x, r0.z, -r1.x
  iadd r3.w, r0.w, l(1)
  and r8.xyzw, r1.xxxx, r3.xyzw
  mov r4.xyzw, r8.xyzw
  mov r7.xyzw, r8.xyzw
  breakc_nz r1.x
  mov r8.x, r1.x
  iadd r0.w, r0.w, l(1)
  mov r4.xyzw, l(0,0,0,0)
  mov r7.xyzw, l(0,0,0,0)
endloop
movc r0.xyzw, r8.xxxx, r4.xyzw, r7.xyzw
itof r0.w, r0.w
div o0.z, r0.w, cb0[23].w
and o0.w, r0.x, l(0x3f800000)
mov o0.xy, r0.yzyy
ret
// Approximately 0 instruction slots used