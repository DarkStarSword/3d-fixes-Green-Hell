// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8b517f9fe77ca2a8-ps.txt
// 3DMigoto: 8b517f9fe77ca2a8 |    Unity headers extracted from NatureManufacture Shaders_Water_Water River Tesseled
//    Shader "NatureManufacture Shaders/Water/Water River Tesseled" {
//      SubShader 1/1 {
//        Tags { "IsEmissive"="true" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//        Pass 3/5 {
//          Name "FORWARD"
//          Tags { "IsEmissive"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from NatureManufacture Shaders_Water_Water River Tesseled:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 201802150 294 17 2
//   undeciphered1a: 9
//   Keywords { "POINT_COOKIE" "FOG_LINEAR" }
//   undeciphered2: 1 12 5 12 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 576
//   Vector 32 [_LightColor0]
//   ScalarInt 132 [_UVVDirection1UDirection0]
//   Vector 136 [_WaterMixSpeed] 2
//   Vector 144 [_WaterNormal_ST]
//   Float 160 [_GlobalTiling]
//   Vector 164 [_WaterMainSpeed] 2
//   Vector 176 [_SmallCascadeMixSpeed] 2
//   Vector 192 [_SmallCascadeNormal_ST]
//   Vector 212 [_SmallCascadeMainSpeed] 2
//   Float 220 [_SmallCascadeAngle]
//   Float 224 [_SmallCascadeAngleFalloff]
//   Float 228 [_BigCascadeAngle]
//   Float 232 [_BigCascadeAngleFalloff]
//   Vector 240 [_BigCascadeMixSpeed] 2
//   Vector 256 [_BigCascadeNormal_ST]
//   Vector 272 [_BigCascadeMainSpeed] 2
//   Float 280 [_NormalScale]
//   Float 284 [_SmallCascadeNormalScale]
//   Float 288 [_BigCascadeNormalScale]
//   Float 292 [_Distortion]
//   Vector 304 [_DeepColor]
//   Vector 320 [_ShalowColor]
//   Float 336 [_ShalowDepth]
//   Float 340 [_ShalowFalloff]
//   Float 344 [_BigCascadeTransparency]
//   Vector 352 [_FoamColor] 3
//   Float 364 [_FoamDepth]
//   Float 368 [_FoamFalloff]
//   Vector 372 [_FoamSpeed] 2
//   Vector 384 [_Foam_ST]
//   Vector 400 [_NoiseSpeed] 2
//   Vector 416 [_Noise_ST]
//   Float 432 [_SmallCascadeNoisePower]
//   Vector 436 [_SmallCascadeColor] 3
//   Float 448 [_SmallCascadeFoamFalloff]
//   Float 452 [_BigCascadeNoisePower]
//   Vector 464 [_BigCascadeColor] 3
//   Float 476 [_BigCascadeFoamFalloff]
//   Float 488 [_WaterSpecularFar]
//   Float 492 [_WaterSpecularClose]
//   Float 496 [_WaterSpecularThreshold]
//   Float 500 [_FoamSpecular]
//   Float 504 [_SmallCascadeSpecular]
//   Float 508 [_BigCascadeSpecular]
//   Float 512 [_WaterSmoothness]
//   Float 516 [_FoamSmoothness]
//   Float 520 [_SmallCascadeSmoothness]
//   Float 524 [_BigCascadeSmoothness]
//   Float 532 [_WaterDepth]
//   Float 536 [_WaterFalloffBorder]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 16 [_SinTime]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_WaterNormal] 2D 3
//   SetTexture 1 [_SmallCascadeNormal] 2D 4
//   SetTexture 2 [_BigCascadeNormal] 2D 5
//   SetTexture 3 [_WaterGrab] 2D 6
//   SetTexture 4 [_CameraDepthTexture] 2D 7
//   SetTexture 5 [_Foam] 2D 8
//   SetTexture 6 [_SmallCascade] 2D 9
//   SetTexture 7 [_Noise] 2D 10
//   SetTexture 8 [_BigCascade] 2D 11
//   SetTexture 9 [_LightTextureB0] 2D 2
//   SetTexture 10 [_LightTexture0] CUBE 1
//   SetTexture 11 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:36:27 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 7     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 6   xyz         7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[34], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_sampler s11, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texturecube (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t11
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyw
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8b517f9fe77ca2a8-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v5.xyzx, r10.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mad r3.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[10].x
mul r3.xy, r1.wwww, r3.xyxx
itof r2.w, cb0[8].y
eq r2.w, r2.w, l(1.000000)
movc r3.zw, r2.wwww, cb0[8].zzzw, cb0[8].wwwz
mad r3.zw, cb1[0].yyyy, r3.zzzw, r3.xxxy
movc r4.xy, r2.wwww, cb0[10].yzyy, cb0[10].zyzz
mad r3.xy, cb1[0].yyyy, r4.xyxx, r3.xyxx
mad r4.xy, v1.xyxx, cb0[12].xyxx, cb0[12].zwzz
mul r4.xy, r1.wwww, r4.xyxx
movc r4.zw, r2.wwww, cb0[11].xxxy, cb0[11].yyyx
mad r4.zw, cb1[0].yyyy, r4.zzzw, r4.xxxy
movc r5.xy, r2.wwww, cb0[13].yzyy, cb0[13].zyzz
mad r4.xy, cb1[0].yyyy, r5.xyxx, r4.xyxx
mov_sat r5.x, v3.z
mul r5.y, cb0[13].w, l(0.0222222228)
mad r5.z, -cb0[13].w, l(0.0222222228), l(1.000000)
add r5.z, -r5.z, r5.x
max r5.z, r5.z, l(0.000000)
min r5.z, r5.z, l(2.000000)
div r5.y, l(1.000000, 1.000000, 1.000000, 1.000000), r5.y
mul_sat r5.y, r5.y, r5.z
mul r5.z, cb0[14].y, l(0.0222222228)
mad r5.w, -cb0[14].y, l(0.0222222228), l(1.000000)
add r5.x, -r5.w, r5.x
max r5.x, r5.x, l(0.000000)
min r5.x, r5.x, l(2.000000)
div r5.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.z
mul_sat r5.x, r5.z, r5.x
add r5.xy, -r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
log r5.x, r5.x
mul r5.x, r5.x, cb0[14].z
exp r5.x, r5.x
min r5.x, r5.x, l(1.000000)
log r5.y, r5.y
mul r5.y, r5.y, cb0[14].x
exp r5.y, r5.y
add_sat r5.y, -r5.x, r5.y
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r3.zwzz, t0.xywz, s3
mul r3.z, cb0[17].z, l(1.200000)
mul r6.x, r6.z, r6.x
mad r5.zw, r6.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r6.xy, r3.zzzz, r5.zwzz
dp2 r3.w, r6.xyxx, r6.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r3.w, r3.w
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r3.xyxx, t0.xywz, s3
mul r6.x, r6.z, r6.x
mad r3.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, cb0[17].zzzz
dp2 r6.x, r3.xyxx, r3.xyxx
min r6.x, r6.x, l(1.000000)
add r6.x, -r6.x, l(1.000000)
sqrt r6.x, r6.x
mad r3.xy, r5.zwzz, r3.zzzz, r3.xyxx
mul r3.z, r3.w, r6.x
dp3 r3.w, r3.xyzx, r3.xyzx
rsq r3.w, r3.w
mul r3.xyz, r3.wwww, r3.xyzx
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r4.zwzz, t1.xywz, s4
mul r6.x, r6.z, r6.x
mad r4.zw, r6.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r5.zw, r4.zzzw, cb0[17].wwww
dp2 r3.w, r5.zwzz, r5.zwzz
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r3.w, r3.w
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r4.xyxx, t1.xywz, s4
mul r6.x, r6.z, r6.x
mad r5.zw, r6.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r5.zw, r5.zzzw, cb0[17].wwww
dp2 r6.x, r5.zwzz, r5.zwzz
min r6.x, r6.x, l(1.000000)
add r6.x, -r6.x, l(1.000000)
sqrt r6.x, r6.x
mad r7.xy, r4.zwzz, cb0[17].wwww, r5.zwzz
mul r7.z, r3.w, r6.x
dp3 r3.w, r7.xyzx, r7.xyzx
rsq r3.w, r3.w
mad r6.xyz, r7.xyzx, r3.wwww, -r3.xyzx
mad r3.xyz, r5.yyyy, r6.xyzx, r3.xyzx
mad r4.zw, v1.xxxy, cb0[16].xxxy, cb0[16].zzzw
mul r4.zw, r1.wwww, r4.zzzw
movc r5.zw, r2.wwww, cb0[15].xxxy, cb0[15].yyyx
mad r5.zw, cb1[0].yyyy, r5.zzzw, r4.zzzw
movc r6.xy, r2.wwww, cb0[17].xyxx, cb0[17].yxyy
mad r4.zw, cb1[0].yyyy, r6.xxxy, r4.zzzw
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r5.zwzz, t2.xywz, s5
mul r6.x, r6.z, r6.x
mad r5.zw, r6.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r6.xy, r5.zwzz, cb0[18].xxxx
dp2 r3.w, r6.xyxx, r6.xyxx
min r3.w, r3.w, l(1.000000)
add r3.w, -r3.w, l(1.000000)
sqrt r3.w, r3.w
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r4.zwzz, t2.xywz, s5
mul r6.x, r6.z, r6.x
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xy, r6.xyxx, cb0[18].xxxx
dp2 r6.z, r6.xyxx, r6.xyxx
min r6.z, r6.z, l(1.000000)
add r6.z, -r6.z, l(1.000000)
sqrt r6.z, r6.z
mad r7.xy, r5.zwzz, cb0[18].xxxx, r6.xyxx
mul r7.z, r3.w, r6.z
dp3 r3.w, r7.xyzx, r7.xyzx
rsq r3.w, r3.w
mad r6.xyz, r7.xyzx, r3.wwww, -r3.xyzx
mad r3.xyz, r5.xxxx, r6.xyzx, r3.xyzx
add r6.xyw, v6.wxww, l(9.999999960E-012, 0.000000, 0.000000, 9.999999960E-012)
mul r3.w, r6.x, l(0.500000)
mad r5.z, -r6.x, l(0.500000), v6.y
mad r6.z, -r5.z, cb1[5].x, r3.w
div r6.yzw, r6.yyzw, r6.xxxx
div r5.zw, r6.yyyz, r6.wwww
mad r5.zw, r3.xxxy, cb0[18].yyyy, r5.zzzw
sample_indexable(texture2d)(float,float,float,float) r6.yzw, r5.zwzz, t3.wxyz, s6
div r5.zw, v6.xxxy, r6.xxxx
sample_indexable(texture2d)(float,float,float,float) r3.w, r5.zwzz, t4.yzwx, s7
mad r3.w, cb1[7].z, r3.w, cb1[7].w
div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
add r3.w, -r6.x, r3.w
add r5.z, |r3.w|, cb0[21].x
log r5.z, r5.z
mul r5.zw, r5.zzzx, cb0[21].yyyz
exp r5.z, r5.z
add r6.x, -r5.z, l(100.000000)
mad_sat r5.z, r5.w, r6.x, r5.z
add r7.xyz, -cb0[19].xyzx, cb0[20].xyzx
mad r7.xyz, r5.zzzz, r7.xyzx, cb0[19].xyzx
add r5.w, |r3.w|, cb0[22].w
log r5.w, r5.w
mul r5.w, r5.w, cb0[23].x
exp r5.w, r5.w
min r5.w, r5.w, l(1.000000)
mad r8.xy, v1.xyxx, cb0[24].xyxx, cb0[24].zwzz
movc r8.zw, r2.wwww, cb0[23].yyyz, cb0[23].zzzy
mul r8.xy, r1.wwww, r8.xyxx
mad r8.xy, cb1[0].yyyy, r8.zwzz, r8.xyxx
sample_indexable(texture2d)(float,float,float,float) r6.x, r8.xyxx, t5.wxyz, s8
mul r6.x, r5.w, r6.x
add r8.xyz, -r7.xyzx, cb0[22].xyzx
mad r8.xyz, r6.xxxx, r8.xyzx, r7.xyzx
add r8.xyz, -r6.yzwy, r8.xyzx
mad r6.yzw, r5.wwww, r8.xxyz, r6.yyzw
add r5.w, -r5.z, l(1.000000)
add r7.xyz, -r6.yzwy, r7.xyzx
mad r6.yzw, r5.wwww, r7.xxyz, r6.yyzw
sample_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t6.wxyz, s9
movc r7.xy, r2.wwww, cb0[25].xyxx, cb0[25].yxyy
mad r7.zw, v1.xxxy, cb0[26].xxxy, cb0[26].zzzw
mul r7.zw, r1.wwww, r7.zzzw
mul r8.xy, r7.xyxx, cb1[1].xxxx
mad r8.xy, r8.xyxx, l(-1.200000, -0.900000, 0.000000, 0.000000), r7.zwzz
sample_indexable(texture2d)(float,float,float,float) r1.w, r8.xyxx, t7.xyzw, s10
mad r7.xy, r7.xyxx, cb1[1].xxxx, r7.zwzz
sample_indexable(texture2d)(float,float,float,float) r2.w, r7.xyxx, t7.xyzw, s10
min r2.w, r1.w, r2.w
log r2.w, r2.w
mul r2.w, r2.w, cb0[27].x
exp r2.w, r2.w
mul r2.w, r2.w, l(20.000000)
min r2.w, r2.w, l(1.000000)
mul r2.w, r4.x, r2.w
log r4.x, r4.x
mul r4.x, r4.x, cb0[28].x
exp r4.x, r4.x
min r4.x, r4.x, l(1.000000)
mul r4.x, r4.x, r5.y
mad r8.xyz, r2.wwww, cb0[27].yzwy, -r6.yzwy
mad r6.yzw, r4.xxxx, r8.xxyz, r6.yyzw
sample_indexable(texture2d)(float,float,float,float) r2.w, r4.zwzz, t8.xyzw, s11
add r4.yz, r7.xxyx, l(0.000000, -0.470000, 0.370000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r4.y, r4.yzyy, t7.xwyz, s10
min r1.w, r1.w, r4.y
log r1.w, r1.w
mul r1.w, r1.w, cb0[28].y
exp r1.w, r1.w
mul r1.w, r1.w, l(20.000000)
min r1.w, r1.w, l(1.000000)
mul r4.y, r2.w, l(0.500000)
mad r1.w, r1.w, r4.y, r4.y
log r2.w, r2.w
mul r2.w, r2.w, cb0[29].w
exp r2.w, r2.w
min r2.w, r2.w, l(1.000000)
mul r2.w, r2.w, r5.x
mad r4.yzw, r1.wwww, cb0[29].xxyz, -r6.yyzw
mad r4.yzw, r2.wwww, r4.yyzw, r6.yyzw
log r1.w, r5.z
mul r1.w, r1.w, cb0[31].x
exp r1.w, r1.w
add r5.z, -cb0[30].z, cb0[30].w
mad r1.w, r1.w, r5.z, cb0[30].z
add r5.z, -r1.w, cb0[31].y
mad r1.w, r6.x, r5.z, r1.w
mul r4.x, r5.y, r4.x
add r5.y, -r1.w, cb0[31].z
mad r1.w, r4.x, r5.y, r1.w
mul r2.w, r5.x, r2.w
add r5.x, -r1.w, cb0[31].w
mad r1.w, r2.w, r5.x, r1.w
add r5.x, -cb0[32].x, cb0[32].y
mad r5.x, r6.x, r5.x, cb0[32].x
add r5.y, -r5.x, cb0[32].z
mad r4.x, r4.x, r5.y, r5.x
add r5.x, -r4.x, cb0[32].w
mad r2.w, r2.w, r5.x, r4.x
log r3.w, |r3.w|
mul r3.w, r3.w, cb0[33].y
exp r3.w, r3.w
min r3.w, r3.w, l(1.000000)
log r3.w, r3.w
mul r3.w, r3.w, cb0[33].z
exp o0.w, r3.w
mul r5.xyz, v5.yyyy, cb0[5].xyzx
mad r5.xyz, cb0[4].xyzx, v5.xxxx, r5.xyzx
mad r5.xyz, cb0[6].xyzx, v5.zzzz, r5.xyzx
add r5.xyz, r5.xyzx, cb0[7].xyzx
eq r3.w, cb4[0].x, l(1.000000)
if_nz r3.w
  eq r3.w, cb4[0].y, l(1.000000)
  mul r6.xyz, v5.yyyy, cb4[2].xyzx
  mad r6.xyz, cb4[1].xyzx, v5.xxxx, r6.xyzx
  mad r6.xyz, cb4[3].xyzx, v5.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb4[4].xyzx
  movc r6.xyz, r3.wwww, r6.xyzx, v5.xyzx
  add r6.xyz, r6.xyzx, -cb4[6].xyzx
  mul r6.yzw, r6.xxyz, cb4[5].xxyz
  mad r3.w, r6.y, l(0.250000), l(0.750000)
  mad r4.x, cb4[0].z, l(0.500000), l(0.750000)
  max r6.x, r3.w, r4.x
  sample_indexable(texture3d)(float,float,float,float) r6.xyzw, r6.xzwx, t11.xyzw, s0
else
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r3.w, r6.xyzw, cb2[46].xyzw
dp3 r4.x, r5.xyzx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.x, r4.xxxx, t9.xyzw, s2
sample_indexable(texturecube)(float,float,float,float) r5.x, r5.xyzx, t10.wxyz, s1
mul r4.x, r4.x, r5.x
mul r3.w, r3.w, r4.x
dp3 r5.x, v2.xyzx, r3.xyzx
dp3 r5.y, v3.xyzx, r3.xyzx
dp3 r5.z, v4.xyzx, r3.xyzx
dp3 r3.x, r5.xyzx, r5.xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, r5.xyzx
mul r5.xyz, r3.wwww, cb0[2].xyzx
max r3.w, r1.w, r1.w
max r3.w, r1.w, r3.w
add r3.w, -r3.w, l(1.000000)
mul r4.xyz, r3.wwww, r4.yzwy
add r2.w, -r2.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.xyzx, r2.xyzx
dp3_sat r2.x, r3.xyzx, r1.xyzx
dp3_sat r2.y, r3.xyzx, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r2.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r2.x, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r2.w, r2.w
max r0.z, r0.z, l(0.002000)
add r1.x, -r0.z, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r2.x, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r2.x, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r2.y, r0.z, -r2.y
mad r1.x, r1.x, r2.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r2.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r1.wwww, r1.wwww
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r5.xyzx
mul r0.yzw, r5.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r2.x, r0.x, r0.x
mul r2.x, r2.x, r2.x
mul r0.x, r0.x, r2.x
add r2.x, -r1.w, l(1.000000)
mad r0.x, r2.x, r0.x, r1.w
mul r0.xyz, r0.xxxx, r0.yzwy
mad r0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
mul o0.xyz, r0.xyzx, r0.wwww
ret
// Approximately 0 instruction slots used