// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 25dccf41d6e095ec-ps.txt
// 3DMigoto: 25dccf41d6e095ec |    Unity headers extracted from Amplify_mia_disappear_hair
//    Shader "Amplify/mia_disappear_hair" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "QUEUE"="Geometry+0" "RenderType"="Transparent" }
//        Pass 3/5 {
//          Name "DEFERRED"
//          Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "LIGHTMODE"="DEFERRED" "QUEUE"="Geometry+0" "RenderType"="Transparent" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_mia_disappear_hair:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 122 7 2
//   undeciphered1a: 9
//   Keywords { "LIGHTPROBE_SH" "UNITY_HDR_ON" "INSTANCING_ON" "_USE_ALBO_HAIR_ANISTROPY_ON" "_USE_ANISTROPY_HAIR_OPACITY_MASK_ON" "_USE_SPECULAR_HAIR_ANISTROPY_ON" }
//   undeciphered2: 1 5 8 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 160
//   Vector 64 [_Normal_ST]
//   Vector 96 [_Albedo_ST]
//   Float 116 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   ConstBuffer "UnityDrawCallInfo" 16
//   ScalarInt 0 [unity_BaseInstanceID]
//   ConstBuffer "UnityInstancing_PerDraw0" 256
//   Struct 0 [unity_Builtins0Array] 2 128
//   Matrix 0 [unity_ObjectToWorldArray]
//   Matrix 64 [unity_WorldToObjectArray]
//   ConstBuffer "UnityInstancing_PerDraw2" 224
//   Struct 0 [unity_Builtins2Array] 2 112
//   Vector 0 [unity_SHArArray]
//   Vector 16 [unity_SHAgArray]
//   Vector 32 [unity_SHAbArray]
//   Vector 48 [unity_SHBrArray]
//   Vector 64 [unity_SHBgArray]
//   Vector 80 [unity_SHBbArray]
//   Vector 96 [unity_SHCArray]
//   ConstBuffer "UnityInstancing_Amplifymia_disappear_hair" 256
//   Struct 0 [Amplifymia_disappear_hairArray] 2 128
//   Vector 0 [_Albedo_color_multiply]
//   Vector 16 [_AlbedoTint]
//   Vector 32 [_AdditionalTint]
//   Vector 48 [_emmisive]
//   Vector 64 [_SpecularTint]
//   Float 80 [_main_normal_scale]
//   Float 84 [_detail_normal_scale]
//   Float 88 [_detail_tiling]
//   Float 92 [_anistropyX]
//   Float 96 [_anistropyy]
//   Float 100 [_specularintensity]
//   Float 104 [_smooothnes]
//   Float 108 [_disappear_mask_multiply]
//   Float 112 [_disolve_texture_tile]
//   Float 116 [_disappear_mask_size]
//   SetTexture 0 [_Normal] 2D 1
//   SetTexture 1 [_Normal_detail] 2D 2
//   SetTexture 2 [_Albedo] 2D 3
//   SetTexture 3 [_dissolveguide] 2D 4
//   SetTexture 4 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityProbeVolume" 3
//   BindCB "UnityDrawCallInfo" 4
//   BindCB "UnityInstancing_PerDraw0" 5
//   BindCB "UnityInstancing_PerDraw2" 6
//   BindCB "UnityInstancing_Amplifymia_disappear_hair" 7
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:41:09 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   x
// TEXCOORD                 4   xyzw        6     NONE   float   xy w
// TEXCOORD                 6   xyzw        7     NONE   float
// TEXCOORD                 7   xyz         8     NONE   float   xyz
// SV_InstanceID            0   x           9     NONE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 9.000000, 0, 0, 0},
                              { 3.000000, 0, 0, 0},
                              { 11.000000, 0, 0, 0},
                              { 13.000000, 0, 0, 0},
                              { 5.000000, 0, 0, 0},
                              { 15.000000, 0, 0, 0},
                              { 7.000000, 0, 0, 0},
                              { 4.000000, 0, 0, 0},
                              { 12.000000, 0, 0, 0},
                              { 2.000000, 0, 0, 0},
                              { 10.000000, 0, 0, 0},
                              { 16.000000, 0, 0, 0},
                              { 8.000000, 0, 0, 0},
                              { 14.000000, 0, 0, 0},
                              { 6.000000, 0, 0, 0} }
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_constantbuffer cb5[16], dynamicIndexed
dcl_constantbuffer cb6[14], dynamicIndexed
dcl_constantbuffer cb7[16], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.x
dcl_input_ps linear v6.xyw
dcl_input_ps linear v8.xyz
dcl_input_ps constant v9.x
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 25dccf41d6e095ec-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

iadd r0.x, v9.x, cb4[0].x
ishl r0.y, r0.x, l(3)
mad r0.zw, v1.xxxy, cb0[4].xxxy, cb0[4].zzzw
mul r1.xy, v1.xyxx, cb7[r0.y + 5].zzzz
sample r2.xyzw, r0.zwzz, t0.xyzw, s1
mul r2.x, r2.w, r2.x
mad r0.zw, r2.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r1.zw, r0.zzzw, cb7[r0.y + 5].xxxx
dp2 r1.z, r1.zwzz, r1.zwzz
min r1.z, r1.z, l(1.000000)
add r1.z, -r1.z, l(1.000000)
sample r2.xyzw, r1.xyxx, t1.xyzw, s2
mul r2.x, r2.w, r2.x
mad r1.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, cb7[r0.y + 5].yyyy
dp2 r1.w, r1.xyxx, r1.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.zw, r1.zzzw
mad r2.xy, r0.zwzz, cb7[r0.y + 5].xxxx, r1.xyxx
mul r2.z, r1.w, r1.z
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r1.xyz, r0.zzzz, r2.xyzx
mad r0.zw, v1.xxxy, cb0[6].xxxy, cb0[6].zzzw
sample r2.xyzw, r0.zwzz, t2.xyzw, s3
mul r3.xyz, r2.xxxx, cb7[r0.y + 1].xyzx
mad r4.xyz, r2.xxxx, cb7[r0.y + 2].xyzx, -r3.xyzx
mad r3.xyz, r2.yyyy, r4.xyzx, r3.xyzx
mov r4.y, v2.w
mov r4.z, v3.w
mov r4.w, v4.w
mad r5.xyz, -r4.yzwy, cb2[0].wwww, cb2[0].xyzx
dp3 r0.z, r5.xyzx, r5.xyzx
max r0.z, r0.z, l(0.001000)
rsq r0.z, r0.z
mul r5.xyz, r0.zzzz, r5.xyzx
add r6.xyz, -r4.yzwy, r10.xyzx
dp3 r0.z, r6.xyzx, r6.xyzx
rsq r0.z, r0.z
mad r6.xyz, r6.xyzx, r0.zzzz, r5.xyzx
dp3 r0.z, r6.xyzx, r6.xyzx
rsq r0.z, r0.z
mul r6.xyz, r0.zzzz, r6.xyzx
dp3 r7.x, v2.xyzx, r1.xyzx
dp3 r7.y, v3.xyzx, r1.xyzx
dp3 r7.z, v4.xyzx, r1.xyzx
dp3 r0.z, r7.xyzx, r7.xyzx
rsq r0.z, r0.z
mul r1.xyz, r0.zzzz, r7.xyzx
mov r7.y, v4.x
mov r7.z, v2.x
mov r7.x, v3.x
mul r8.xyz, r1.zxyz, r7.xyzx
mad r7.xyz, r1.yzxy, r7.yzxy, -r8.xyzx
dp3 r0.z, r7.xyzx, r7.xyzx
rsq r0.z, r0.z
mul r7.xyz, r0.zzzz, r7.xyzx
dp3 r0.z, r6.xyzx, r7.xyzx
div r0.w, r0.z, cb7[r0.y + 5].w
div r0.z, r0.z, cb7[r0.y + 6].x
dp3 r3.w, r1.xyzx, r6.xyzx
dp3 r4.x, r1.xyzx, r5.xyzx
mul r5.xyz, r2.zzzz, cb7[r0.y + 4].xyzx
mul r0.z, r0.z, r0.z
mad r0.z, r0.w, r0.w, r0.z
add r0.w, r3.w, l(1.000000)
div r0.z, r0.z, r0.w
mul r0.z, r0.z, l(-2.885390)
exp r0.z, r0.z
max r0.w, r4.x, l(0.000000)
mul r0.z, r0.w, r0.z
mul r5.xyz, r0.zzzz, r5.xyzx
mul r5.xyz, r5.xyzx, v5.xxxx
mul r5.xyz, r5.xyzx, cb7[r0.y + 6].yyyy
mul r6.xyz, v3.wwww, cb5[r0.y + 5].xyzx
mad r6.xyz, cb5[r0.y + 4].xyzx, v2.wwww, r6.xyzx
mad r6.xyz, cb5[r0.y + 6].xyzx, v4.wwww, r6.xyzx
add r6.xyz, r6.xyzx, cb5[r0.y + 7].xyzx
mul r0.z, r6.y, cb5[r0.y + 1].y
mad r0.z, cb5[r0.y + 0].y, r6.x, r0.z
mad r0.z, cb5[r0.y + 2].y, r6.z, r0.z
mul r6.xy, v1.xyxx, cb7[r0.y + 7].xxxx
sample r6.xyzw, r6.xyxx, t3.xyzw, s4
mad r0.z, r6.x, cb7[r0.y + 7].y, r0.z
ge r0.z, r0.z, cb7[r0.y + 6].w
movc r0.z, r0.z, l(0), l(1.000000)
div r6.xy, v6.xyxx, v6.wwww
mul r6.xy, r6.xyxx, cb1[6].xyxx
mul r6.xy, r6.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
ge r6.zw, r6.xxxy, -r6.xxxy
frc r6.xy, |r6.xyxx|
movc r6.xy, r6.zwzz, r6.xyxx, -r6.xyxx
mul r6.xy, r6.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000)
ftoi r6.xy, r6.xyxx
ishl r0.w, r6.y, l(2)
iadd r0.w, r6.x, r0.w
mul r0.w, l(0.062500), icb[r0.w + 0].x
mul r0.z, r0.z, r2.w
ge r0.w, r0.z, r0.w
and r2.w, r0.w, l(0x3f800000)
movc r0.w, r0.w, l(0), l(1.000000)
mad r0.z, r0.z, r0.w, r2.w
add r0.z, r0.z, -cb0[7].y
lt r0.z, r0.z, l(0.000000)
discard_nz r0.z
eq r0.z, cb3[0].x, l(1.000000)
if_nz r0.z
  eq r0.z, cb3[0].y, l(1.000000)
  mul r6.xyz, v3.wwww, cb3[2].xyzx
  mad r6.xyz, cb3[1].xyzx, v2.wwww, r6.xyzx
  mad r6.xyz, cb3[3].xyzx, v4.wwww, r6.xyzx
  add r6.xyz, r6.xyzx, cb3[4].xyzx
  movc r4.xyz, r0.zzzz, r6.xyzx, r4.yzwy
  add r4.xyz, r4.xyzx, -cb3[6].xyzx
  mul r4.yzw, r4.xxyz, cb3[5].xxyz
  mul r0.z, r4.y, l(0.250000)
  mul r0.w, cb3[0].z, l(0.500000)
  mad r2.w, -cb3[0].z, l(0.500000), l(0.250000)
  max r0.z, r0.w, r0.z
  min r4.x, r2.w, r0.z
  sample r6.xyzw, r4.xzwx, t4.xyzw, s0
  add r7.xyz, r4.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r7.xyzw, r7.xyzx, t4.xyzw, s0
  add r4.xyz, r4.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r4.xyzw, r4.xyzx, t4.xyzw, s0
  mov r1.w, l(1.000000)
  dp4 r6.x, r6.xyzw, r1.xyzw
  dp4 r6.y, r7.xyzw, r1.xyzw
  dp4 r6.z, r4.xyzw, r1.xyzw
else
  imul null, r0.x, r0.x, l(7)
  mov r1.w, l(1.000000)
  dp4 r6.x, cb6[r0.x + 0].xyzw, r1.xyzw
  dp4 r6.y, cb6[r0.x + 1].xyzw, r1.xyzw
  dp4 r6.z, cb6[r0.x + 2].xyzw, r1.xyzw
endif
add r0.xzw, r6.xxyz, v8.xxyz
max r0.xzw, r0.xxzw, l(0.000000, 0.000000, 0.000000, 0.000000)
max r1.w, r5.y, r5.x
max r1.w, r5.z, r1.w
add r1.w, -r1.w, l(1.000000)
mul r3.xyz, r1.wwww, r3.xyzx
mul r0.xzw, r0.xxzw, r3.xxyz
mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad o3.xyz, r2.xyzx, cb7[r0.y + 3].xyzx, r0.xzwx
mov o0.xyz, r3.xyzx
mov o0.w, l(1.000000)
mov o1.w, cb7[r0.y + 6].z
mov o1.xyz, r5.xyzx
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret
// Approximately 0 instruction slots used