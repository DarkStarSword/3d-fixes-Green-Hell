// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 7bf8e6ed57d36ee2-vs.txt
// 3DMigoto: 7bf8e6ed57d36ee2 |    Unity headers extracted from Hidden_ATG-Internal-DepthNormalsTexture
//    Shader "Hidden/ATG-Internal-DepthNormalsTexture" {
//      SubShader 1/13 {
//        Tags { "RenderType"="ATGrass" }
//        Pass 1/1 {
//          Tags { "RenderType"="ATGrass" }
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_ATG-Internal-DepthNormalsTexture:
//   API d3d11
//   Shader model vs_5_0
//   undeciphered1: 201802150 80 0 4
//   undeciphered1a: 8
//   undeciphered2: 1 2 5 1 0 0
//   undeciphered3: 255 4 0 0 1 1 4 5 3 3
//   ConstBuffer "$Globals" 128
//   Float 32 [_Clip]
//   Float 36 [_WindLOD]
//   Float 40 [_NormalBend]
//   Vector 48 [_MinMaxScales] 2
//   Vector 64 [_HealthyColor]
//   Vector 80 [_DryColor]
//   Vector 96 [_WindMultiplier] 2
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityPerDraw" 176
//   Matrix 64 [unity_WorldToObject]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   Matrix 272 [unity_MatrixVP]
//   ConstBuffer "AtgGrass" 80
//   Vector 0 [_AtgWindDirSize]
//   Vector 16 [_AtgWindStrengthMultipliers]
//   Vector 32 [_AtgSinTime]
//   Vector 48 [_AtgGrassFadeProps]
//   SetTexture 0 [_AtgWindRT] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerDraw" 2
//   BindCB "UnityPerFrame" 3
//   BindCB "AtgGrass" 4
//   SetBuffer 1 [GrassMatrixBuffer]
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:27:17 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xy
// TEXCOORD                 1   xyzw        4     NONE   float
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float
// COLOR                    0   xyzw        7     NONE   float   x  w
// SV_InstanceID            0   x           8   INSTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[7], immediateIndexed
dcl_constantbuffer cb3[23], immediateIndexed
dcl_constantbuffer cb4[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_structured t1, 64
dcl_input v0.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v7.xw
dcl_input_sgv v8.x, instance_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 7bf8e6ed57d36ee2-vs.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r0.xyz, v8.x, l(0), t1.xyzx
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r1.xyz, v8.x, l(16), t1.xyzx
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r2.xyz, v8.x, l(32), t1.xyzx
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r3.xyzw, v8.x, l(48), t1.xywz
frc r0.w, r3.z
mad r4.xyz, r0.wwww, l(400.000000, 400.000000, 400.000000, 0.000000), r3.xywx
add r4.xyz, r4.xyzx, -r9.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
add r2.w, -r1.w, cb4[3].x
mul_sat r2.w, r2.w, cb4[3].y
eq r4.x, r2.w, l(0.000000)
add r4.y, v0.y, l(-10000.000000)
movc r5.y, r4.x, r4.y, v0.y
if_z r4.x
  dp2 r4.x, r3.xwxx, l(12.989800, 78.233002, 0.000000, 0.000000)
  frc r4.y, r4.x
  add r1.w, r1.w, -cb4[3].z
  mul_sat r1.w, r1.w, cb4[3].w
  lt r4.z, r4.y, cb0[2].x
  and r4.z, r4.z, l(0x3f800000)
  mad r1.w, -r1.w, r4.z, l(1.000000)
  eq r4.z, r1.w, l(0.000000)
  add r4.w, r5.y, l(-10000.000000)
  movc r5.y, r4.z, r4.w, r5.y
  if_z r4.z
    mad r4.z, r0.w, l(100.000000), -cb0[3].x
    mul_sat r4.z, r4.z, cb0[3].y
    add r4.w, -cb0[4].w, cb0[5].w
    mad r4.z, r4.z, r4.w, cb0[4].w
    mul r4.z, r4.z, v7.w
    mad r1.w, -r2.w, r1.w, l(1.000000)
    mov r5.xzw, v0.xxzw
    mad r5.xyz, r1.wwww, -r5.xyzx, r5.xyzx
    mov r6.x, r0.x
    mov r6.y, r1.x
    mov r6.z, r2.x
    mov r6.w, r3.x
    dp4 r6.x, r6.xyzw, r5.xyzw
    mov r7.x, r0.z
    mov r7.y, r1.z
    mov r7.z, r2.z
    mov r7.w, r3.w
    dp4 r6.y, r7.xyzw, r5.xyzw
    add r1.w, -v7.x, l(1.000000)
    mad r6.xy, r6.xyxx, cb4[0].wwww, r1.wwww
    mad r6.xy, r0.wwww, l(2.500000, 2.500000, 0.000000, 0.000000), r6.xyxx
    sample_l_indexable(texture2d)(float,float,float,float) r6.xy, r6.xyxx, t0.xyzw, s0, cb0[2].y
    mad r0.w, r6.y, l(2.000000), l(-0.243760)
    mul r0.w, r0.w, r6.x
    mul r0.w, r0.w, cb4[1].x
    mul r0.w, r0.w, cb0[6].x
    mul r4.x, r4.z, -r0.w
    mov r6.x, -cb2[4].x
    mov r6.y, cb2[5].x
    mov r6.z, cb2[6].x
    dp3 r6.x, r6.xyzx, cb4[0].xyzx
    mov r7.x, cb2[4].y
    mov r7.y, -cb2[5].y
    mov r7.z, cb2[6].y
    dp3 r6.y, r7.xyzx, cb4[0].xyzx
    mov r7.x, cb2[4].z
    mov r7.y, cb2[5].z
    mov r7.z, -cb2[6].z
    dp3 r6.z, r7.xyzx, cb4[0].xyzx
    dp3 r0.w, r6.xyzx, r6.xyzx
    rsq r0.w, r0.w
    mul r4.zw, r0.wwww, r6.xxxz
    mul r6.xy, r4.xxxx, r4.zwzz
    mad r4.zw, r4.zzzw, r4.xxxx, r5.xxxz
    mov r7.x, cb4[2].x
    mov r7.y, l(0)
    add r6.zw, -r7.xxxy, cb4[2].yyyz
    mad r6.zw, r4.yyyx, r6.zzzw, r7.xxxy
    add r0.w, cb4[2].w, l(0.075000)
    mov_sat r4.x, r4.x
    mul r0.w, r0.w, r4.x
    mul r1.w, r6.w, cb0[6].y
    mad r4.xy, r1.wwww, r0.wwww, r4.zwzz
    mad r5.xz, -r6.zzzz, r0.wwww, r4.xxyx
    mul r4.xy, r6.xyxx, cb0[2].zzzz
    mul r4.xy, r4.xyxx, l(3.14159274, 3.14159274, 0.000000, 0.000000)
    mov r4.xz, -r4.xxyx
    mov r4.y, l(1.000000)
  else
    mov r5.xz, v0.xxzx
    mov r4.xyz, v2.xyzx
  endif
else
  mov r5.xz, v0.xxzx
  mov r4.xyz, v2.xyzx
endif
mov r6.x, r0.x
mov r6.y, r1.x
mov r6.z, r2.x
mov r6.w, r3.x
mov r5.w, l(1.000000)
dp4 r0.x, r6.xyzw, r5.xyzw
mov r7.x, r0.y
mov r7.y, r1.y
mov r7.z, r2.y
mov r7.w, r3.y
dp4 r0.y, r7.xyzw, r5.xyzw
mov r3.x, r0.z
mov r3.y, r1.z
mov r3.z, r2.z
dp4 r0.z, r3.xyzw, r5.xyzw
mul r1.xyzw, r0.yyyy, cb3[18].xyzw
mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
add o0.xyzw, r1.xyzw, cb3[20].xyzw
dp3 r1.x, r6.xyzx, r4.xyzx
dp3 r1.y, r7.xyzx, r4.xyzx
dp3 r1.z, r3.xyzx, r4.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.xyz, r1.yyyy, cb3[10].xyzx
mad r1.xyw, cb3[9].xyxz, r1.xxxx, r2.xyxz
mad r1.xyz, cb3[11].xyzx, r1.zzzz, r1.xywx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r1.xyzx
mul r0.y, r0.y, cb3[10].z
mad r0.x, cb3[9].z, r0.x, r0.y
mad r0.x, cb3[11].z, r0.z, r0.x
add r0.x, r0.x, cb3[12].z
mul r0.x, r0.x, cb1[5].w
mov o2.w, -r0.x
mov o1.xy, v3.xyxx
ret
// Approximately 0 instruction slots used