// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0ff63667ab4e80c5-ps.txt
// 3DMigoto: 0ff63667ab4e80c5 |    Unity headers extracted from Amplify_mia_disappear_hair
//    Shader "Amplify/mia_disappear_hair" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "QUEUE"="Geometry+0" "RenderType"="Transparent" }
//        Pass 3/5 {
//          Name "DEFERRED"
//          Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "LIGHTMODE"="DEFERRED" "QUEUE"="Geometry+0" "RenderType"="Transparent" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_mia_disappear_hair:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 120 7 2
//   undeciphered1a: 8
//   Keywords { "LIGHTPROBE_SH" "_USE_ALBO_HAIR_ANISTROPY_ON" "_USE_ANISTROPY_HAIR_OPACITY_MASK_ON" "_USE_SPECULAR_HAIR_ANISTROPY_ON" }
//   undeciphered2: 1 5 6 5 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 160
//   Vector 64 [_Normal_ST]
//   Vector 96 [_Albedo_ST]
//   Float 116 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   ConstBuffer "UnityPerDraw" 176
//   Matrix 0 [unity_ObjectToWorld]
//   Matrix 64 [unity_WorldToObject]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   ConstBuffer "Amplifymia_disappear_hair" 128
//   Vector 16 [_AlbedoTint]
//   Vector 32 [_AdditionalTint]
//   Vector 48 [_emmisive]
//   Vector 64 [_SpecularTint]
//   Float 80 [_main_normal_scale]
//   Float 84 [_detail_normal_scale]
//   Float 88 [_detail_tiling]
//   Float 92 [_anistropyX]
//   Float 96 [_anistropyy]
//   Float 100 [_specularintensity]
//   Float 104 [_smooothnes]
//   Float 108 [_disappear_mask_multiply]
//   Float 112 [_disolve_texture_tile]
//   Float 116 [_disappear_mask_size]
//   SetTexture 0 [_Normal] 2D 1
//   SetTexture 1 [_Normal_detail] 2D 2
//   SetTexture 2 [_Albedo] 2D 3
//   SetTexture 3 [_dissolveguide] 2D 4
//   SetTexture 4 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityProbeVolume" 4
//   BindCB "Amplifymia_disappear_hair" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:31:00 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// COLOR                    0   xyzw        5     NONE   float   x
// TEXCOORD                 4   xyzw        6     NONE   float   xy w
// TEXCOORD                 6   xyzw        7     NONE   float
// TEXCOORD                 7   xyz         8     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_4_0
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 9.000000, 0, 0, 0},
                              { 3.000000, 0, 0, 0},
                              { 11.000000, 0, 0, 0},
                              { 13.000000, 0, 0, 0},
                              { 5.000000, 0, 0, 0},
                              { 15.000000, 0, 0, 0},
                              { 7.000000, 0, 0, 0},
                              { 4.000000, 0, 0, 0},
                              { 12.000000, 0, 0, 0},
                              { 2.000000, 0, 0, 0},
                              { 10.000000, 0, 0, 0},
                              { 16.000000, 0, 0, 0},
                              { 8.000000, 0, 0, 0},
                              { 14.000000, 0, 0, 0},
                              { 6.000000, 0, 0, 0} }
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[42], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.x
dcl_input_ps linear v6.xyw
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 0ff63667ab4e80c5-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

mad r0.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
mul r0.zw, v1.xxxy, cb5[5].zzzz
sample r1.xyzw, r0.xyxx, t0.xyzw, s1
mul r1.x, r1.w, r1.x
mad r0.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.xy, r0.xyxx, cb5[5].xxxx
dp2 r1.x, r1.xyxx, r1.xyxx
min r1.x, r1.x, l(1.000000)
add r1.x, -r1.x, l(1.000000)
sample r2.xyzw, r0.zwzz, t1.xyzw, s2
mul r2.x, r2.w, r2.x
mad r0.zw, r2.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r0.zw, r0.zzzw, cb5[5].yyyy
dp2 r1.y, r0.zwzz, r0.zwzz
min r1.y, r1.y, l(1.000000)
add r1.y, -r1.y, l(1.000000)
sqrt r1.xy, r1.xyxx
mad r0.xy, r0.xyxx, cb5[5].xxxx, r0.zwzz
mul r0.z, r1.y, r1.x
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mad r1.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
sample r1.xyzw, r1.xyxx, t2.xyzw, s3
mul r2.xyz, r1.xxxx, cb5[1].xyzx
mad r3.xyz, r1.xxxx, cb5[2].xyzx, -r2.xyzx
mad r2.xyz, r1.yyyy, r3.xyzx, r2.xyzx
mov r3.y, v2.w
mov r3.z, v3.w
mov r3.w, v4.w
mad r4.xyz, -r3.yzwy, cb2[0].wwww, cb2[0].xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
add r5.xyz, -r3.yzwy, r9.xyzx
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mad r5.xyz, r5.xyzx, r0.wwww, r4.xyzx
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, r5.xyzx
dp3 r6.x, v2.xyzx, r0.xyzx
dp3 r6.y, v3.xyzx, r0.xyzx
dp3 r6.z, v4.xyzx, r0.xyzx
dp3 r0.x, r6.xyzx, r6.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r6.xyzx
mov r6.y, v4.x
mov r6.z, v2.x
mov r6.x, v3.x
mul r7.xyz, r0.zxyz, r6.xyzx
mad r6.xyz, r0.yzxy, r6.yzxy, -r7.xyzx
dp3 r2.w, r6.xyzx, r6.xyzx
rsq r2.w, r2.w
mul r6.xyz, r2.wwww, r6.xyzx
dp3 r2.w, r5.xyzx, r6.xyzx
div r3.x, r2.w, cb5[5].w
div r2.w, r2.w, cb5[6].x
dp3 r4.w, r0.xyzx, r5.xyzx
dp3 r4.x, r0.xyzx, r4.xyzx
mul r5.xyz, r1.zzzz, cb5[4].xyzx
mul r2.w, r2.w, r2.w
mad r2.w, r3.x, r3.x, r2.w
add r3.x, r4.w, l(1.000000)
div r2.w, r2.w, r3.x
mul r2.w, r2.w, l(-2.885390)
exp r2.w, r2.w
max r3.x, r4.x, l(0.000000)
mul r2.w, r2.w, r3.x
mul r4.xyz, r2.wwww, r5.xyzx
mul r4.xyz, r4.xyzx, v5.xxxx
mul r4.xyz, r4.xyzx, cb5[6].yyyy
mul r5.xyz, v3.wwww, cb3[5].xyzx
mad r5.xyz, cb3[4].xyzx, v2.wwww, r5.xyzx
mad r5.xyz, cb3[6].xyzx, v4.wwww, r5.xyzx
add r5.xyz, r5.xyzx, cb3[7].xyzx
mul r2.w, r5.y, cb3[1].y
mad r2.w, cb3[0].y, r5.x, r2.w
mad r2.w, cb3[2].y, r5.z, r2.w
mul r5.xy, v1.xyxx, cb5[7].xxxx
sample r5.xyzw, r5.xyxx, t3.xyzw, s4
mad r2.w, r5.x, cb5[7].y, r2.w
ge r2.w, r2.w, cb5[6].w
movc r2.w, r2.w, l(0), l(1.000000)
div r5.xy, v6.xyxx, v6.wwww
mul r5.xy, r5.xyxx, cb1[6].xyxx
mul r5.xy, r5.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
ge r5.zw, r5.xxxy, -r5.xxxy
frc r5.xy, |r5.xyxx|
movc r5.xy, r5.zwzz, r5.xyxx, -r5.xyxx
mul r5.xy, r5.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000)
ftoi r5.xy, r5.xyxx
ishl r3.x, r5.y, l(2)
iadd r3.x, r5.x, r3.x
mul r3.x, l(0.062500), icb[r3.x + 0].x
mul r1.w, r1.w, r2.w
ge r2.w, r1.w, r3.x
and r3.x, r2.w, l(0x3f800000)
movc r2.w, r2.w, l(0), l(1.000000)
mad r1.w, r1.w, r2.w, r3.x
add r1.w, r1.w, -cb0[7].y
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
eq r1.w, cb4[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb4[0].y, l(1.000000)
  mul r5.xyz, v3.wwww, cb4[2].xyzx
  mad r5.xyz, cb4[1].xyzx, v2.wwww, r5.xyzx
  mad r5.xyz, cb4[3].xyzx, v4.wwww, r5.xyzx
  add r5.xyz, r5.xyzx, cb4[4].xyzx
  movc r3.xyz, r1.wwww, r5.xyzx, r3.yzwy
  add r3.xyz, r3.xyzx, -cb4[6].xyzx
  mul r3.yzw, r3.xxyz, cb4[5].xxyz
  mul r1.w, r3.y, l(0.250000)
  mul r2.w, cb4[0].z, l(0.500000)
  mad r3.y, -cb4[0].z, l(0.500000), l(0.250000)
  max r1.w, r1.w, r2.w
  min r3.x, r3.y, r1.w
  sample r5.xyzw, r3.xzwx, t4.xyzw, s0
  add r6.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r6.xyzw, r6.xyzx, t4.xyzw, s0
  add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r3.xyzw, r3.xyzx, t4.xyzw, s0
  mov r0.w, l(1.000000)
  dp4 r5.x, r5.xyzw, r0.xyzw
  dp4 r5.y, r6.xyzw, r0.xyzw
  dp4 r5.z, r3.xyzw, r0.xyzw
else
  mov r0.w, l(1.000000)
  dp4 r5.x, cb2[39].xyzw, r0.xyzw
  dp4 r5.y, cb2[40].xyzw, r0.xyzw
  dp4 r5.z, cb2[41].xyzw, r0.xyzw
endif
add r3.xyz, r5.xyzx, v8.xyzx
max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
max r0.w, r4.y, r4.x
max r0.w, r4.z, r0.w
add r0.w, -r0.w, l(1.000000)
mul r2.xyz, r0.wwww, r2.xyzx
mul r3.xyz, r3.xyzx, r2.xyzx
mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad r0.xyz, r1.xyzx, cb5[3].xyzx, r3.xyzx
exp o3.xyz, -r0.xyzx
mov o0.xyz, r2.xyzx
mov o0.w, l(1.000000)
mov o1.w, cb5[6].z
mov o1.xyz, r4.xyzx
mov o2.w, l(1.000000)
mov o3.w, l(1.000000)
ret
// Approximately 0 instruction slots used