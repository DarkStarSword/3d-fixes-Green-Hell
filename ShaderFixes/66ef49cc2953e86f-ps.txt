// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 66ef49cc2953e86f-ps.txt
// 3DMigoto: 66ef49cc2953e86f | Matched 3 variants of 3 shaders: ASESampleShaders/Simple/SimpleRefraction, AVP/Rain_SimpleRefraction, Amplify/lab_analyzer_screen
//
// 2:    Unity headers extracted from ASESampleShaders_Simple_SimpleRefraction
// 4:    Unity headers extracted from AVP_Rain_SimpleRefraction
// 1:    Unity headers extracted from Amplify_lab_analyzer_screen
// 2:    Shader "ASESampleShaders/Simple/SimpleRefraction" {
// 4:    Shader "AVP/Rain_SimpleRefraction" {
// 1:    Shader "Amplify/lab_analyzer_screen" {
//         CustomEditor "ASEMaterialInspector"
//         Fallback "Diffuse"
//         SubShader 1/1 {
// 1:        Tags { "IsEmissive"="true" "QUEUE"="Geometry+0" "RenderType"="Opaque" }
// 6:        Tags { "IsEmissive"="true" "QUEUE"="Transparent+0" "RenderType"="Opaque" }
// 1:        Pass 2/5 {
// 6:        Pass 3/6 {
//             Name "FORWARD"
// 1:          Tags { "IsEmissive"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
// 6:          Tags { "IsEmissive"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
// 2: Unity 5.3 headers extracted from ASESampleShaders_Simple_SimpleRefraction:
// 4: Unity 5.3 headers extracted from AVP_Rain_SimpleRefraction:
// 1: Unity 5.3 headers extracted from Amplify_lab_analyzer_screen:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 51 2 2
//      undeciphered1a: 4
//      Keywords { "DIRECTIONAL_COOKIE" "FOG_LINEAR" }
//      undeciphered2: 1 2 5 2 0 0
//      undeciphered3: 0 0
// 6:   ConstBuffer "$Globals" 160
// 1:   ConstBuffer "$Globals" 176
//      Vector 32 [_LightColor0]
//      Matrix 64 [unity_WorldToLight]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 736 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityFog" 32
//      Vector 16 [unity_FogParams]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_LightTexture0] 2D 1
//      SetTexture 1 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityFog" 3
//      BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:14:35 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xy          3     NONE   float
// TEXCOORD                 4     z         3     NONE   float     z
// TEXCOORD                 3   xyzw        4     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.z
dcl_output o0.xyzw
dcl_temps 6
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r4.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 66ef49cc2953e86f-ps.txt

mul r4.w, -r4.x, r4.y
mad r5.xyz, -r4.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v2.xyzx, r5.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
mul r2.xy, v2.yyyy, cb0[5].xyxx
mad r2.xy, cb0[4].xyxx, v2.xxxx, r2.xyxx
mad r2.xy, cb0[6].xyxx, v2.zzzz, r2.xyxx
add r2.xy, r2.xyxx, cb0[7].xyxx
eq r1.w, cb4[0].x, l(1.000000)
if_nz r1.w
  eq r1.w, cb4[0].y, l(1.000000)
  mul r3.xyz, v2.yyyy, cb4[2].xyzx
  mad r3.xyz, cb4[1].xyzx, v2.xxxx, r3.xyzx
  mad r3.xyz, cb4[3].xyzx, v2.zzzz, r3.xyzx
  add r3.xyz, r3.xyzx, cb4[4].xyzx
  movc r3.xyz, r1.wwww, r3.xyzx, v2.xyzx
  add r3.xyz, r3.xyzx, -cb4[6].xyzx
  mul r3.yzw, r3.xxyz, cb4[5].xxyz
  mad r1.w, r3.y, l(0.250000), l(0.750000)
  mad r2.z, cb4[0].z, l(0.500000), l(0.750000)
  max r3.x, r1.w, r2.z
  sample r3.xyzw, r3.xzwx, t1.xyzw, s0
else
  mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r1.w, r3.xyzw, cb2[46].xyzw
sample r2.xyzw, r2.xyxx, t0.xyzw, s1
mul r1.w, r1.w, r2.w
mul r2.xyz, r1.wwww, cb0[2].xyzx
dp3 r1.w, v1.xyzx, v1.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v1.xyzx
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.xyzx, r1.xyzx
dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
add r0.y, |r0.w|, r1.x
add r0.y, r0.y, l(0.000010)
div r0.y, l(0.500000), r0.y
mul r0.y, r0.y, l(0.999999881)
mul r0.y, r1.x, r0.y
mul r0.yzw, r2.xxyz, r0.yyyy
add r0.x, -r0.x, l(1.000000)
mul r1.x, r0.x, r0.x
mul r1.x, r1.x, r1.x
mul r0.x, r0.x, r1.x
mad r0.x, r0.x, l(0.960000), l(0.040000)
mul r0.xyz, r0.xxxx, r0.yzwy
div r0.w, v3.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used