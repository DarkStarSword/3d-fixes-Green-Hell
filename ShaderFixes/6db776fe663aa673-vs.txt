// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 6db776fe663aa673-vs.txt
// 3DMigoto: 6db776fe663aa673 |    Unity headers extracted from Hidden_ATG-Internal-DepthNormalsTexture
//    Shader "Hidden/ATG-Internal-DepthNormalsTexture" {
//      SubShader 3/13 {
//        Tags { "RenderType"="ATGFoliage" }
//        Pass 1/1 {
//          Tags { "RenderType"="ATGFoliage" }
//          Program "vp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_ATG-Internal-DepthNormalsTexture:
//   API d3d11
//   Shader model vs_5_0
//   undeciphered1: 201802150 93 0 2
//   undeciphered1a: 9
//   Keywords { "_METALLICGLOSSMAP" }
//   undeciphered2: 1 2 4 1 0 0
//   undeciphered3: 255 4 0 0 1 1 4 5 3 3
//   ConstBuffer "$Globals" 128
//   Vector 48 [_WindMultiplier] 2
//   Vector 56 [_MinMaxScales] 2
//   Vector 64 [_HealthyColor]
//   Vector 80 [_DryColor]
//   Float 96 [_NormalBend]
//   Float 100 [_WindLOD]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   Matrix 272 [unity_MatrixVP]
//   ConstBuffer "AtgGrass" 80
//   Vector 0 [_AtgWindDirSize]
//   Vector 16 [_AtgWindStrengthMultipliers]
//   Vector 32 [_AtgSinTime] 2
//   Vector 48 [_AtgGrassFadeProps]
//   SetTexture 0 [_AtgWindRT] 2D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerFrame" 2
//   BindCB "AtgGrass" 3
//   SetBuffer 1 [GrassMatrixBuffer]
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:19:01 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz
// TANGENT                  0   xyzw        1     NONE   float
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xy
// TEXCOORD                 1   xyzw        4     NONE   float
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float
// COLOR                    0   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8   INSTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[7], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[23], immediateIndexed
dcl_constantbuffer cb3[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_structured t1, 64
dcl_input v0.xyz
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v7.xyzw
dcl_input_sgv v8.x, instance_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 6db776fe663aa673-vs.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r0.xyz, v8.x, l(0), t1.xyzx
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r1.xyz, v8.x, l(16), t1.xyzx
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r2.xyz, v8.x, l(32), t1.xyzx
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r3.xyzw, v8.x, l(48), t1.xywz
frc r0.w, r3.z
mad r4.xyz, r0.wwww, l(400.000000, 400.000000, 400.000000, 0.000000), r3.xywx
add r4.xyz, r4.xyzx, -r10.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
add r1.w, -r1.w, cb3[3].x
mul_sat r1.w, r1.w, cb3[3].y
eq r2.w, r1.w, l(0.000000)
add r4.x, v0.y, l(-10000.000000)
movc r4.y, r2.w, r4.x, v0.y
if_z r2.w
  mul r2.w, r0.w, l(2.500000)
  mov r5.x, r0.x
  mov r6.y, r1.y
  mov r7.z, r2.z
  add r1.w, -r1.w, l(1.000000)
  mov r4.xz, v0.xxzx
  mad r8.xyz, r1.wwww, -r4.xyzx, r4.xyzx
  mad r0.w, r0.w, l(100.000000), -cb0[3].z
  mul r0.w, r0.w, cb0[3].w
  add r1.w, -cb0[4].w, cb0[5].w
  mad r0.w, r0.w, r1.w, cb0[4].w
  dp3 r1.w, r8.xyzx, r8.xyzx
  sqrt r1.w, r1.w
  mov r5.x, -r5.x
  mov r5.y, r1.x
  mov r5.z, r2.x
  dp3 r5.x, r5.xyzx, cb3[0].xyzx
  mov r6.x, r0.y
  mov r6.y, -r6.y
  mov r6.z, r2.y
  dp3 r5.y, r6.xyzx, cb3[0].xyzx
  mov r7.x, r0.z
  mov r7.y, r1.z
  mov r7.z, -r7.z
  dp3 r5.z, r7.xyzx, cb3[0].xyzx
  dp3 r5.w, r5.xyzx, r5.xyzx
  rsq r5.w, r5.w
  mul r5.xyz, r5.wwww, r5.xyzx
  mad r6.xy, -r0.wwww, r5.xzxx, r3.xwxx
  mad r6.xy, r6.xyxx, cb3[0].wwww, r2.wwww
  sample_l_indexable(texture2d)(float,float,float,float) r6.xy, r6.xyxx, t0.xyzw, s0, cb0[6].y
  mad r2.w, r6.y, l(2.000000), l(-0.243760)
  mul r2.w, r2.w, r6.x
  mul r5.w, r0.w, cb3[1].y
  mul r2.w, r2.w, r5.w
  mul r6.xyz, r3.xywx, l(3.000000, 3.000000, 3.000000, 0.000000)
  frc r6.xyz, r6.xyzx
  add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  dp3 r5.w, |r6.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r5.xyz, r5.xyzx, v7.wwww
  mul r6.x, -r2.w, cb0[3].x
  add r0.w, r0.w, v7.x
  add r0.w, r0.w, r5.w
  add r0.w, r0.w, cb1[0].y
  mul r6.yz, r0.wwww, l(0.000000, 0.375000, 0.193000, 0.000000)
  frc r6.yz, r6.yyzy
  mad r6.yz, r6.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -0.500000, -0.500000, 0.000000)
  frc r6.yz, r6.yyzy
  mad r6.yz, r6.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  mul r7.xy, |r6.yzyy|, |r6.yzyy|
  mad r6.yz, -|r6.yyzy|, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
  mul r6.yz, r6.yyzy, r7.xxyx
  add r0.w, r6.z, r6.y
  mul r7.xz, v7.yyzy, l(0.100000, 0.000000, 0.300000, 0.000000)
  mul r7.yw, r7.xxxx, v2.xxxz
  mul r0.w, -r2.w, r0.w
  mul r0.w, r0.w, cb0[3].y
  mul r6.yzw, r0.wwww, r7.yyzw
  mad r5.xyz, r5.xyzx, r6.xxxx, r6.yzwy
  add r6.xyz, r5.xyzx, r8.xyzx
  mul r5.xy, r5.xyxx, cb0[6].xxxx
  mad r5.xy, r5.xyxx, l(3.14159274, 3.14159274, 0.000000, 0.000000), v2.xzxx
  dp2 r0.w, r3.xwxx, l(12.989800, 78.233002, 0.000000, 0.000000)
  frc r0.w, r0.w
  add r5.w, -cb3[2].x, cb3[2].y
  mad r0.w, r0.w, r5.w, cb3[2].x
  mul r0.w, r0.w, l(0.250000)
  mul r0.w, r0.w, v7.z
  mul r0.w, r0.w, cb0[3].y
  mov_sat r2.w, -r2.w
  mad r6.xz, -r0.wwww, r2.wwww, r6.xxzx
  dp3 r0.w, r6.xyzx, r6.xyzx
  rsq r0.w, r0.w
  mul r6.xyz, r0.wwww, r6.xyzx
  mul r4.xyz, r1.wwww, r6.xyzx
else
  mov r4.xz, v0.xxzx
  mov r5.xy, v2.xzxx
endif
mov r6.x, r0.x
mov r6.y, r1.x
mov r6.z, r2.x
mov r6.w, r3.x
mov r4.w, l(1.000000)
dp4 r0.x, r6.xyzw, r4.xyzw
mov r7.x, r0.y
mov r7.y, r1.y
mov r7.z, r2.y
mov r7.w, r3.y
dp4 r0.y, r7.xyzw, r4.xyzw
mov r3.x, r0.z
mov r3.y, r1.z
mov r3.z, r2.z
dp4 r0.z, r3.xyzw, r4.xyzw
mul r1.xyzw, r0.yyyy, cb2[18].xyzw
mad r1.xyzw, cb2[17].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb2[19].xyzw, r0.zzzz, r1.xyzw
add o0.xyzw, r1.xyzw, cb2[20].xyzw
mov r5.z, v2.y
dp3 r1.x, r6.xzyx, r5.xyzx
dp3 r1.y, r7.xzyx, r5.xyzx
dp3 r1.z, r3.xzyx, r5.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.xyz, r1.yyyy, cb2[10].xyzx
mad r1.xyw, cb2[9].xyxz, r1.xxxx, r2.xyxz
mad r1.xyz, cb2[11].xyzx, r1.zzzz, r1.xywx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r1.xyzx
mul r0.y, r0.y, cb2[10].z
mad r0.x, cb2[9].z, r0.x, r0.y
mad r0.x, cb2[11].z, r0.z, r0.x
add r0.x, r0.x, cb2[12].z
mul r0.x, r0.x, cb1[5].w
mov o2.w, -r0.x
mov o1.xy, v3.xyxx
ret
// Approximately 0 instruction slots used