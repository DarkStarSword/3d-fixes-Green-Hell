// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 83200d5c0ef524c2-ps.txt
// 3DMigoto: 83200d5c0ef524c2 |    Unity headers extracted from Amplify_item_selection
//    Shader "Amplify/item_selection" {
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IsEmissive"="true" "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "IsEmissive"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_item_selection:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 144 6 4
//   undeciphered1a: 10
//   Keywords { "POINT" "SHADOWS_CUBE" "SHADOWS_SOFT" }
//   undeciphered2: 1 7 6 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 320
//   Vector 96 [_LightColor0]
//   Vector 128 [_Normals_ST]
//   Float 144 [_DetailNormalPower]
//   Vector 160 [_Detail_Normal_ST]
//   Vector 176 [_Albedo_ST]
//   Vector 272 [_Metallic_ST]
//   Float 288 [_SmoothnessfromMetalic]
//   Float 292 [_SmthPower]
//   Matrix 32 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 16 [_LightPositionRange]
//   Vector 32 [_LightProjectionParams]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_Normals] 2D 3
//   SetTexture 1 [_Detail_Normal] 2D 4
//   SetTexture 2 [_Albedo] 2D 5
//   SetTexture 3 [_Metallic] 2D 6
//   SetTexture 4 [_LightTexture0] 2D 2
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//   SetTexture 6 [_ShadowMapTexture] CUBE 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:31:21 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyz         6     NONE   float
// TEXCOORD                 6   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[19], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 83200d5c0ef524c2-ps.txt

mul r10.w, -r10.x, r10.y
mad r11.xyz, -r10.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v5.xyzx, r11.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r2.xyzx
mad r4.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
sample r4.xyzw, r4.xyxx, t0.xyzw, s3
mul r4.x, r4.w, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r4.xyxx, r4.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.w, r1.w
mad r4.zw, v1.xxxy, cb0[10].xxxy, cb0[10].zzzw
sample r5.xyzw, r4.zwzz, t1.xyzw, s4
mul r5.x, r5.w, r5.x
mad r4.zw, r5.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r5.xy, r4.zwzz, cb0[9].xxxx
dp2 r2.w, r5.xyxx, r5.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r2.w, r2.w
mad r4.xy, r4.zwzz, cb0[9].xxxx, r4.xyxx
mul r4.z, r1.w, r2.w
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx
mad r5.xy, v1.xyxx, cb0[11].xyxx, cb0[11].zwzz
sample r5.xyzw, r5.xyxx, t2.xyzw, s5
mad r6.xy, v1.xyxx, cb0[17].xyxx, cb0[17].zwzz
sample r6.xyzw, r6.xyxx, t3.xyzw, s6
add r1.w, -r5.w, r6.w
mad r1.w, cb0[18].x, r1.w, r5.w
mul r6.yzw, v5.yyyy, cb0[3].xxyz
mad r6.yzw, cb0[2].xxyz, v5.xxxx, r6.yyzw
mad r6.yzw, cb0[4].xxyz, v5.zzzz, r6.yyzw
add r6.yzw, r6.yyzw, cb0[5].xxyz
mov r7.x, cb4[9].z
mov r7.y, cb4[10].z
mov r7.z, cb4[11].z
dp3 r2.x, r2.xyzx, r7.xyzx
add r2.yzw, v5.xxyz, -cb3[25].xxyz
dp3 r2.y, r2.yzwy, r2.yzwy
sqrt r2.y, r2.y
add r2.y, -r2.x, r2.y
mad r2.x, cb3[25].w, r2.y, r2.x
mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
eq r2.y, cb5[0].x, l(1.000000)
if_nz r2.y
  eq r2.y, cb5[0].y, l(1.000000)
  mul r7.xyz, v5.yyyy, cb5[2].xyzx
  mad r7.xyz, cb5[1].xyzx, v5.xxxx, r7.xyzx
  mad r7.xyz, cb5[3].xyzx, v5.zzzz, r7.xyzx
  add r7.xyz, r7.xyzx, cb5[4].xyzx
  movc r2.yzw, r2.yyyy, r7.xxyz, v5.xxyz
  add r2.yzw, r2.yyzw, -cb5[6].xxyz
  mul r7.yzw, r2.yyzw, cb5[5].xxyz
  mad r2.y, r7.y, l(0.250000), l(0.750000)
  mad r2.z, cb5[0].z, l(0.500000), l(0.750000)
  max r7.x, r2.z, r2.y
  sample r7.xyzw, r7.xzwx, t5.xyzw, s0
else
  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.y, r7.xyzw, cb2[46].xyzw
lt r2.z, r2.x, l(0.990000)
if_nz r2.z
  add r7.xyz, v5.xyzx, -cb2[1].xyzx
  max r2.z, |r7.y|, |r7.x|
  max r2.z, |r7.z|, r2.z
  add r2.z, r2.z, -cb2[2].z
  max r2.z, r2.z, l(0.000010)
  mul r2.z, r2.z, cb2[2].w
  div r2.z, cb2[2].y, r2.z
  add r2.z, r2.z, -cb2[2].x
  add r2.z, -r2.z, l(1.000000)
  add r8.xyz, r7.xyzx, l(0.00781250000, 0.00781250000, 0.00781250000, 0.000000)
  sample_c_lz r8.x, r8.xyzx, t6.xxxx, s1, r2.z
  add r9.xyz, r7.xyzx, l(-0.00781250000, -0.00781250000, 0.00781250000, 0.000000)
  sample_c_lz r8.y, r9.xyzx, t6.xxxx, s1, r2.z
  add r9.xyz, r7.xyzx, l(-0.00781250000, 0.00781250000, -0.00781250000, 0.000000)
  sample_c_lz r8.z, r9.xyzx, t6.xxxx, s1, r2.z
  add r7.xyz, r7.xyzx, l(0.00781250000, -0.00781250000, -0.00781250000, 0.000000)
  sample_c_lz r8.w, r7.xyzx, t6.xxxx, s1, r2.z
  dp4 r2.z, r8.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  add r2.w, -cb3[24].x, l(1.000000)
  mad r2.z, r2.z, r2.w, cb3[24].x
else
  mov r2.z, l(1.000000)
endif
add r2.y, -r2.z, r2.y
mad r2.x, r2.x, r2.y, r2.z
dp3 r2.y, r6.yzwy, r6.yzwy
sample r7.xyzw, r2.yyyy, t4.xyzw, s2
mul r2.x, r2.x, r7.x
dp3 r7.x, v2.xyzx, r4.xyzx
dp3 r7.y, v3.xyzx, r4.xyzx
dp3 r7.z, v4.xyzx, r4.xyzx
dp3 r2.y, r7.xyzx, r7.xyzx
rsq r2.y, r2.y
mul r2.yzw, r2.yyyy, r7.xxyz
mul r4.xyz, r2.xxxx, cb0[6].xyzx
add r6.yzw, r5.xxyz, l(0.000000, -0.040000, -0.040000, -0.040000)
mad r6.yzw, r6.xxxx, r6.yyzw, l(0.000000, 0.040000, 0.040000, 0.040000)
mad r2.x, -r6.x, l(0.960000), l(0.960000)
mul r5.xyz, r2.xxxx, r5.xyzx
mad r1.w, -r1.w, cb0[18].y, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r2.yzwy, r3.xyzx
dp3_sat r2.x, r2.yzwy, r1.xyzx
dp3_sat r2.y, r2.yzwy, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r2.x, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
max r0.z, r0.z, l(0.002000)
add r1.x, -r0.z, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r2.x, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r2.x, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r2.y, r0.z, -r2.y
mad r1.x, r1.x, r2.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r2.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r6.yzwy, r6.yzwy
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r4.xyzx
mul r0.yzw, r4.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r2.xyz, -r6.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r6.yzwy
mul r0.xyz, r0.yzwy, r2.xyzx
mad o0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used