// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 9253d1fced07444e-vs.txt
// 3DMigoto: 9253d1fced07444e | Matched 2 variants of 1 shaders: SineVFX/LivingParticles/LivingParticleMaskedPbrArray
//
//       Unity headers extracted from SineVFX_LivingParticles_LivingParticleMaskedPbrArray
//       Shader "SineVFX/LivingParticles/LivingParticleMaskedPbrArray" {
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "QUEUE"="AlphaTest+0" "RenderType"="TransparentCutout" }
//           Pass 1/4 {
//             Name "FORWARD"
//             Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="AlphaTest+0" "RenderType"="TransparentCutout" "SHADOWSUPPORT"="true" }
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from SineVFX_LivingParticles_LivingParticleMaskedPbrArray:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201802150 75 0 3
//      undeciphered1a: 7
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
//      undeciphered2: 1 0 5 0 0 0
//      undeciphered3: 255 6 0 0 2 2 1 1 4 5 5 6 3 3
//      ConstBuffer "$Globals" 624
//      Vector 112 [_Emission_ST]
//      Float 144 [_Distance]
//      Float 148 [_DistancePower]
//      Float 244 [_OffsetPower]
//      ScalarInt 252 [_AffectorCount]
//      Vector 256 [_Affectors0]
//      Vector 272 [_Affectors1]
//      Vector 288 [_Affectors2]
//      Vector 304 [_Affectors3]
//      Vector 320 [_Affectors4]
//      Vector 336 [_Affectors5]
//      Vector 352 [_Affectors6]
//      Vector 368 [_Affectors7]
//      Vector 384 [_Affectors8]
//      Vector 400 [_Affectors9]
//      Vector 416 [_Affectors10]
//      Vector 432 [_Affectors11]
//      Vector 448 [_Affectors12]
//      Vector 464 [_Affectors13]
//      Vector 480 [_Affectors14]
//      Vector 496 [_Affectors15]
//      Vector 512 [_Affectors16]
//      Vector 528 [_Affectors17]
//      Vector 544 [_Affectors18]
//      Vector 560 [_Affectors19]
//      Vector 576 [_texcoord_ST]
//      Vector 592 [_tex4coord_ST]
//      Vector 608 [_tex4coord2_ST]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      ConstBuffer "UnityLighting" 768
//      Vector 672 [unity_SHBr]
//      Vector 688 [unity_SHBg]
//      Vector 704 [unity_SHBb]
//      Vector 720 [unity_SHC]
//      ConstBuffer "UnityPerDraw" 176
//      Vector 144 [unity_WorldTransformParams]
//      Matrix 0 [unity_ObjectToWorld]
//      Matrix 64 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 368
//      Matrix 272 [unity_MatrixVP]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityPerDraw" 3
//      BindCB "UnityPerFrame" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:40:38 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyzw        4     NONE   float   xyzw
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// COLOR                    0   xyzw        7     NONE   float   xyzw
// TEXCOORD                 6   xyz         8     NONE   float   xyz
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[39], dynamicIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[10], immediateIndexed
dcl_constantbuffer cb4[21], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_input v7.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyz
dcl_output o9.xyzw
dcl_temps 8

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw

mad r0.z, v4.x, cb0[7].x, cb0[7].z
mov r0.xy, v3.zwzz
mov r0.w, l(0)
add r1.xyzw, r0.xyzw, -cb0[16].xyzw
dp4 r2.x, r1.xyzw, r1.xyzw
sqrt r2.y, r2.x
rsq r2.x, r2.x
mul r1.xyzw, r1.xyzw, r2.xxxx
add r2.x, -r2.y, l(1.000000)
add r2.z, cb0[9].x, l(-1.000000)
add r2.x, r2.z, r2.x
div_sat r2.x, r2.x, cb0[9].x
add r2.x, r2.x, l(0.000010)
mul r1.xyzw, r1.xyzw, r2.xxxx
mov r3.xyzw, l(0,0,0,0)
mov r2.xw, l(0,0,0,0)
loop
  ige r4.x, r2.w, cb0[15].w
  breakc_nz r4.x
  if_z r2.w
    mov r2.x, r2.y
    mov r3.xyzw, r1.xyzw
  else
    add r4.xyzw, r0.xyzw, -cb0[r2.w + 16].xyzw
    dp4 r5.x, r4.xyzw, r4.xyzw
    sqrt r5.y, r5.x
    min r2.x, r2.x, r5.y
    rsq r5.x, r5.x
    mul r4.xyzw, r4.xyzw, r5.xxxx
    add r5.x, r2.z, -r5.y
    add r5.x, r5.x, l(1.000000)
    div_sat r5.x, r5.x, cb0[9].x
    add r5.x, r5.x, l(0.000010)
    mad r3.xyzw, r4.xyzw, r5.xxxx, r3.xyzw
  endif
  iadd r2.w, r2.w, l(1)
endloop
add r0.x, -r2.x, r2.z
dp4 r0.y, r3.xyzw, r3.xyzw
rsq r0.y, r0.y
mul r0.yzw, r0.yyyy, r3.xxyz
add r0.x, r0.x, l(1.000000)
div_sat r0.x, r0.x, cb0[9].x
log r0.x, r0.x
mul r0.x, r0.x, cb0[9].y
exp r0.x, r0.x
mul r0.xyz, r0.yzwy, r0.xxxx
mad r0.xyz, r0.xyzx, cb0[15].yyyy, v0.xyzx
mul r1.xyzw, r0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb3[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r0.xyzw, cb3[3].xyzw
mul r2.xyzw, r1.yyyy, cb4[18].xyzw
mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
mad o1.xy, v3.xyxx, cb0[36].xyxx, cb0[36].zwzz
mad o2.xy, v3.xyxx, cb0[37].xyxx, cb0[37].zwzz
mad o3.xy, v4.xyxx, cb0[38].xyxx, cb0[38].zwzz
mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
dp3 r2.x, v2.xyzx, cb3[4].xyzx
dp3 r2.y, v2.xyzx, cb3[5].xyzx
dp3 r2.z, v2.xyzx, cb3[6].xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyzw, r0.wwww, r2.xyzz
mul r3.xyz, v1.yyyy, cb3[1].yzxy
mad r3.xyz, cb3[0].yzxy, v1.xxxx, r3.xyzx
mad r3.xyz, cb3[2].yzxy, v1.zzzz, r3.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
mul r0.w, v1.w, cb3[9].w
mul r4.xyz, r2.wxyw, r3.xyzx
mad r4.xyz, r2.ywxy, r3.yzxy, -r4.xyzx
mul r4.xyz, r0.wwww, r4.xyzx
mul r5.xyzw, r2.ywzx, r2.xyzw
dp4 r6.x, cb2[42].xyzw, r5.xyzw
dp4 r6.y, cb2[43].xyzw, r5.xyzw
dp4 r6.z, cb2[44].xyzw, r5.xyzw
mul r0.w, r2.y, r2.y
mad r0.w, r2.x, r2.x, -r0.w
mad o8.xyz, cb2[45].xyzx, r0.wwww, r6.xyzx

// Relocated to here with asmtool.py
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 9253d1fced07444e-vs.txt
ne r7.w, r1.w, l(1.0)
if_nz r7.w
  add r7.w, r1.w, -r7.y
  mad r1.x, r7.w, r7.x, r1.x
endif

mul r5.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mul r0.w, r1.y, cb1[5].x
mul r5.w, r0.w, l(0.500000)
add o9.xy, r5.zzzz, r5.xwxx

// mov o0.xyzw, r1.xyzw // Relocated from here with asmtool.py

mov o2.zw, v3.zzzw
mov o3.zw, v4.zzzw
mov o4.x, r3.z
mov o4.y, r4.x
mov o4.z, r2.x
mov o4.w, r0.x
mov o5.x, r3.x
mov o5.y, r4.y
mov o5.z, r2.y
mov o5.w, r0.y
mov o6.x, r3.y
mov o6.y, r4.z
mov o6.z, r2.w
mov o6.w, r0.z
mov o7.xyzw, v7.xyzw
mov o9.zw, r1.zzzw
ret
// Approximately 0 instruction slots used