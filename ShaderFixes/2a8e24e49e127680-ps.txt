// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2a8e24e49e127680-ps.txt
// 3DMigoto: 2a8e24e49e127680 | Matched 2 variants of 1 shaders: Imperial Fur/Simple/Blinn Skin/ 5 Shell
//
//       Unity headers extracted from Imperial Fur_Simple_Blinn Skin_ 5 Shell
//       Shader "Imperial Fur/Simple/Blinn Skin/ 5 Shell" {
//         CustomEditor "ImperialFurShaderSimpleGUI"
//         Fallback "VertexLit"
//         SubShader 1/1 {
//           LOD 200
//           Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Opaque" }
//           Pass 7/11 {
//             Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Imperial Fur_Simple_Blinn Skin_ 5 Shell:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 66 6 7
//      undeciphered1a: 8
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
//      undeciphered2: 1 6 4 6 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 208
//      Vector 64 [_FurColor]
//      Vector 80 [_FurSpecular] 3
//      Float 92 [_FurGlossiness]
//      Float 96 [_ShadowStrength]
//      Float 108 [_RimLightMode]
//      Float 112 [_StrandThickness]
//      Float 116 [_Reflectivity]
//      Float 120 [_ReflectionMode]
//      Vector 128 [_LightColor0]
//      Float 144 [_UseFurSecondMap]
//      Float 152 [_UseHeightMap]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      ConstBuffer "UnityPerFrame" 368
//      Vector 0 [glstate_lightmodel_ambient]
//      SetTexture 0 [_MainTex] 2D 1
//      SetTexture 1 [_NoiseTex] 2D 3
//      SetTexture 2 [_ControlTex] 2D 2
//      SetTexture 3 [_ShadowMapTexture] 2D 0
//      SetTexture 4 [_FurSpecularMap] 2D 4
//      SetTexture 5 [_Cube] CUBE 5
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:43:23 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 2     zw        1     NONE   float
// TEXCOORD                 3   xyz         2     NONE   float   xyz
// COLOR                    0      w        2     NONE   float      w
// TEXCOORD                 4   xyz         3     NONE   float   xyz
// TEXCOORD                 5   xyzw        4     NONE   float   xyz
// TEXCOORD                 6   xyz         5     NONE   float   xyz
// TEXCOORD                 7   xyz         6     NONE   float   xyz
// TEXCOORD                 9   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyw
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 2a8e24e49e127680-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s1
mul r0.xyzw, r0.xyzw, cb0[4].xyzw
mul r1.xy, v1.xyxx, cb0[7].xxxx
sample r1.xyzw, r1.xyxx, t1.xyzw, s3
mul r1.x, r1.x, l(20.000000)
mul r0.w, r0.w, r1.x
ne r1.x, cb0[9].z, l(0.000000)
if_nz r1.x
  sample r1.xyzw, v1.xyxx, t2.xyzw, s2
  lt r1.y, r1.x, l(0.200000)
  movc r1.y, r1.y, l(0), r0.w
  lt r1.z, l(0.000000), r1.y
  mul r1.w, r1.y, l(0.200000)
  movc r0.w, r1.z, r1.w, r1.y
else
  mov r1.x, l(1.000000)
endif
eq r1.y, r0.w, l(0.000000)
if_nz r1.y
  mov o0.xyz, r0.xyzx
  mov o0.w, l(0)
  ret
endif
mul r2.w, r0.w, v2.w
div r0.w, l(0.200000), r1.x
add r0.w, r0.w, l(-1.000000)
mad r0.w, cb0[6].x, r0.w, l(1.000000)
mul r0.xyz, r0.wwww, r0.xyzx
add r1.xyz, -v4.xyzx, r9.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
div r3.xy, v7.xyxx, v7.wwww
sample r3.xyzw, r3.xyxx, t3.yzwx, s0
eq r0.w, cb2[0].w, l(0.000000)
dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, cb2[0].xyzx
add r5.xyz, -v4.xyzx, cb2[0].xyzx
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r5.xyzx
mov r4.w, l(1.000000)
movc r3.xyzw, r0.wwww, r4.xyzw, r3.xyzw
mul r4.xyz, r0.xyzx, cb3[0].xyzx
mul r5.xyz, r3.wwww, cb0[8].xyzx
mul r0.xyz, r0.xyzx, r5.xyzx
dp3 r0.w, v3.xyzx, r3.xyzx
max r1.w, r0.w, l(0.000000)
mul r6.xyz, r0.xyzx, r1.wwww
ne r0.x, cb0[9].x, l(0.000000)
if_nz r0.x
  sample r7.xyzw, v1.xyxx, t4.xyzw, s4
else
  mov r7.xyzw, cb0[5].xyzw
endif
lt r0.x, r0.w, l(0.000000)
mul r0.yzw, r5.xxyz, r7.xxyz
dp3 r1.w, -r3.xyzx, v3.xyzx
add r1.w, r1.w, r1.w
mad r3.xyz, v3.xyzx, -r1.wwww, -r3.xyzx
dp3 r1.x, r3.xyzx, r1.xyzx
max r1.x, r1.x, l(0.000000)
log r1.x, r1.x
mul r1.x, r1.x, r7.w
exp r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
mul r0.yzw, r0.yyzw, l(0.000000, 0.200000, 0.200000, 0.200000)
movc r0.xyz, r0.xxxx, l(0,0,0,0), r0.yzwy
mad r2.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), v2.xyzx
mov r6.w, l(0)
add r1.xyzw, r2.xyzw, r6.xyzw
mov r0.w, l(0)
add r0.xyzw, r0.xyzw, r1.xyzw
ne r2.x, cb0[6].w, l(0.000000)
eq r2.y, cb0[6].w, l(1.000000)
mov r3.xyz, v5.xyzx
mov r3.w, l(0)
mad r4.xyzw, r0.xyzw, r3.xyzw, r0.xyzw
mov r1.xyz, r0.xyzx
add r1.xyzw, r3.xyzw, r1.xyzw
movc r1.xyzw, r2.yyyy, r4.xyzw, r1.xyzw
movc r0.xyzw, r2.xxxx, r1.xyzw, r0.xyzw
ne r1.x, cb0[7].z, l(0.000000)
if_nz r1.x
  dp3 r1.x, v3.xyzx, v3.xyzx
  rsq r1.x, r1.x
  mul r1.xyz, r1.xxxx, v3.xyzx
  dp3 r1.w, -v6.xyzx, r1.xyzx
  add r1.w, r1.w, r1.w
  mad r1.xyz, r1.xyzx, -r1.wwww, -v6.xyzx
  sample r1.xyzw, r1.xyzx, t5.xyzw, s5
  eq r2.x, cb0[7].z, l(1.000000)
  mul r1.w, r1.w, l(8.000000)
  mul r2.yzw, r1.wwww, r1.xxyz
  movc r1.xyz, r2.xxxx, r2.yzwy, r1.xyzx
  mul r1.xyz, r7.wwww, r1.xyzx
  mul r1.xyz, r1.xyzx, cb0[7].yyyy
  mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
endif
mov o0.xyzw, r0.xyzw
ret
// Approximately 0 instruction slots used