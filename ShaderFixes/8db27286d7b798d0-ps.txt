// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8db27286d7b798d0-ps.txt
// 3DMigoto: 8db27286d7b798d0 |    Unity headers extracted from Lux Water_WaterSurface
//    Shader "Lux Water/WaterSurface" {
//      CustomEditor "LuxWaterMaterialEditor"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "FORCENOSHADOWCASTING"="true" "QUEUE"="Transparent-1" "RenderType"="Opaque" }
//        Pass 3/4 {
//          Name "FORWARD"
//          Tags { "FORCENOSHADOWCASTING"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent-1" "RenderType"="Opaque" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Lux Water_WaterSurface:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 259 9 2
//   undeciphered1a: 11
//   Keywords { "POINT_COOKIE" "GEOM_TYPE_BRANCH" "GEOM_TYPE_BRANCH_DETAIL" }
//   undeciphered2: 1 6 5 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 592
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Float 128 [_FresnelPower]
//   Float 164 [_WaterIOR]
//   Float 192 [_ScatteringPower]
//   Vector 196 [_TranslucencyColor] 3
//   Vector 208 [_FarBumpSampleParams] 2
//   Vector 240 [_BumpScale]
//   Vector 256 [_FinalBumpSpeed01]
//   Float 404 [_Glossiness]
//   Float 408 [_InvFade]
//   Vector 432 [_Color]
//   Vector 448 [_DepthAtten] 3
//   Float 460 [_Density]
//   Float 468 [_FogAbsorptionCancellation]
//   Float 472 [_AbsorptionHeight]
//   Float 476 [_AbsorptionMaxHeight]
//   Float 480 [_AbsorptionDepth]
//   Float 484 [_AbsorptionColorStrength]
//   Float 488 [_AbsorptionStrength]
//   Float 492 [_Refraction]
//   Vector 496 [_FoamColor]
//   Float 512 [_FoamScale]
//   Float 516 [_FoamSpeed]
//   Float 520 [_FoamParallax]
//   Float 524 [_FoamSoftIntersectionFactor]
//   Float 528 [_FoamTiling]
//   Float 532 [_FoamNormalScale]
//   Vector 560 [_GrabTexture_TexelSize]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_BumpMap] 2D 4
//   SetTexture 1 [_CameraDepthTexture] 2D 5
//   SetTexture 2 [_MainTex] 2D 3
//   SetTexture 3 [_LightTextureB0] 2D 2
//   SetTexture 4 [_LightTexture0] CUBE 1
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//   BindCB "UnityLighting" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:37:51 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xy
// TEXCOORD                 8   xyz         9     NONE   float
// TEXCOORD                 9   xyzw       10     NONE   float
// SV_IsFrontFace           0   x          11    FFACE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[36], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[47], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.xy
dcl_input_ps_sgv v11.x, is_front_face
dcl_output o0.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 8db27286d7b798d0-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

movc r0.x, v11.x, l(1.000000), l(-1.000000)
add r0.yzw, -v4.xxyz, cb3[0].xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r1.yzw, r0.yyzw, r1.xxxx
add r2.xyz, -v4.xyzx, r12.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mul r3.xy, cb0[16].xyxx, cb1[0].xxxx
mul r3.xy, r3.xyxx, cb0[13].xxxx
mad r3.xy, v5.xyxx, cb0[13].xxxx, r3.xyxx
sample r3.xyzw, r3.xyxx, t0.xyzw, s4
mad r3.xz, r3.wwyw, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
mad r3.xz, r3.xxzx, l(0.050000, 0.000000, 0.050000, 0.000000), v5.xxyx
sample r4.xyzw, r3.xzxx, t0.xyzw, s4
mul_sat r2.w, v6.w, cb0[13].y
add r3.xy, r3.wyww, -r4.wyww
mad r3.xy, r2.wwww, r3.xyxx, r4.wyww
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, cb0[15].xxxx
mad r3.zw, r3.xxxy, l(0.000000, 0.000000, 0.050000, 0.050000), v5.zzzw
sample r4.xyzw, r3.zwzz, t0.xyzw, s4
sample r5.xyzw, v8.xyxx, t0.xyzw, s4
mad r3.zw, r4.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mad r3.xy, r3.zwzz, cb0[15].yyyy, r3.xyxx
mad r3.zw, r5.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mad r3.xy, r3.zwzz, cb0[15].zzzz, r3.xyxx
dp2 r2.w, r3.xyxx, r3.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r3.z, r2.w
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
mul r3.xyz, r0.xxxx, r3.xyzx
dp3 r4.x, v1.xyzx, r3.xyzx
dp3 r4.y, v3.xyzx, r3.xyzx
add r5.xyz, v4.xyzx, -r12.xyzx
dp3 r2.w, r5.xyzx, r5.xyzx
rsq r2.w, r2.w
mul r4.zw, r2.wwww, r5.xxxz
div r5.xy, v6.xyxx, v6.wwww
sample r5.xyzw, r5.xyxx, t1.xyzw, s5
mad r2.w, cb1[7].z, r5.x, cb1[7].w
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
add r2.w, r2.w, -v6.w
mul_sat r2.w, r2.w, cb0[25].z
add r3.w, -v6.z, l(1.000000)
mul r5.yz, cb0[30].wwww, cb0[35].xxyx
mul r5.yz, r3.wwww, r5.yyzy
mul r5.yz, r2.wwww, r5.yyzy
mad r5.yz, r4.xxyx, r5.yyzy, v6.xxyx
div r5.yz, r5.yyzy, v6.wwww
mul r5.yz, r5.yyzy, cb0[35].zzwz
round_ni r5.yz, r5.yyzy
add r5.yz, r5.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
div r5.yz, r5.yyzy, cb0[35].zzwz
sample_l r6.xyzw, r5.yzyy, t1.xyzw, s5, l(0.000000)
mad r3.w, cb1[7].z, r6.x, cb1[7].w
div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
lt r3.w, r3.w, v6.w
movc r3.w, r3.w, r5.x, r6.x
mad r5.xy, cb1[7].zxzz, r3.wwww, cb1[7].wyww
div r5.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r5.xyxx
add r3.w, r5.x, -v6.w
mul_sat r4.x, r3.w, cb0[25].z
div r5.x, cb1[5].z, v7.z
mul r5.xzw, r5.xxxx, v7.xxyz
mul r5.xyz, r5.yyyy, r5.xzwx
mul r5.y, r5.y, cb2[19].y
mad r5.x, cb2[18].y, r5.x, r5.y
mad r5.x, cb2[20].y, r5.z, r5.x
add r5.x, r5.x, cb2[21].y
add r5.x, -r5.x, v7.w
add r5.y, r5.x, -cb0[28].x
div_sat r5.y, r5.y, cb0[28].y
mul r5.y, r5.y, l(-11.541560)
exp r5.y, r5.y
add r5.y, -r5.y, l(1.000000)
mov_sat r5.z, cb0[28].z
mul r5.y, r5.z, r5.y
movc r5.z, v11.x, r3.w, v6.w
mul r5.w, -r5.z, cb0[28].w
mul r5.w, r5.w, l(1.442695)
exp r5.w, r5.w
add r5.w, -r5.w, l(1.000000)
max r5.w, r5.w, l(0.000000)
max r5.y, r5.w, r5.y
div_sat r5.x, r5.x, cb0[29].w
mul r5.x, r5.x, -r5.x
mul r5.x, r5.x, cb0[29].z
exp r5.x, r5.x
mul r5.z, -r5.z, cb0[30].x
mul r5.z, r5.z, l(1.442695)
exp r5.z, r5.z
mul r5.x, r5.x, r5.z
min r5.x, r5.x, l(1.000000)
add r5.x, r5.x, l(-1.000000)
mad r5.x, cb0[30].z, r5.x, l(1.000000)
mad_sat r5.x, r5.y, cb0[29].y, r5.x
add r6.xyzw, -r5.xxxx, l(1.000000, -0.450000, -0.029000, -0.018000)
mul r5.z, r6.x, cb0[30].y
mad_sat r5.xzw, r5.zzzz, r6.yyzw, r5.xxxx
mul r4.y, r4.y, cb0[32].z
mul r6.x, cb0[32].y, cb1[0].x
mul r6.xy, r6.xxxx, cb0[16].xyxx
mad r6.xy, v5.xyxx, cb0[33].xxxx, r6.xyxx
mad r4.yz, r4.zzwz, r4.yyyy, r6.xxyx
sample r6.xyzw, r4.yzyy, t2.xyzw, s3
add r4.y, r3.z, r3.z
mul_sat r3.w, r3.w, cb0[32].w
mad_sat r4.y, -r3.w, r4.y, l(1.000000)
mad r3.w, -r3.w, r3.w, r3.w
max r3.w, r3.w, l(0.000000)
mul r3.w, r3.w, r4.y
dp2 r4.y, r3.xxxx, r3.zzzz
add_sat r4.y, r4.y, l(0.600000)
mul r3.w, r3.w, r4.y
mul_sat r3.w, r3.w, cb0[32].x
add r4.y, -r6.w, l(0.800000)
add r4.y, r3.w, -r4.y
mul_sat r4.y, r4.y, l(1.250000)
mad r4.z, r4.y, l(-2.000000), l(3.000000)
mul r4.y, r4.y, r4.y
mul r4.y, r4.y, r4.z
mul r3.w, r3.w, r4.y
mul r3.w, r3.w, cb0[32].x
mul_sat r3.w, r3.w, cb0[31].w
mul r4.y, r3.w, cb0[33].y
mul r6.x, r6.x, r6.x
mad r4.zw, r6.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r6.xy, r4.yyyy, r4.zwzz
dp2 r4.y, r6.xyxx, r6.xyxx
min r4.y, r4.y, l(1.000000)
add r4.y, -r4.y, l(1.000000)
sqrt r6.z, r4.y
add r4.y, -r3.w, l(1.000000)
mad r6.xyz, r6.xyzx, r0.xxxx, -r3.xyzx
mad r3.xyz, r3.wwww, r6.xyzx, r3.xyzx
add r0.x, -cb0[25].y, l(0.100000)
mad r0.x, r3.w, r0.x, cb0[25].y
mul r6.xyz, v4.yyyy, cb0[5].xyzx
mad r6.xyz, cb0[4].xyzx, v4.xxxx, r6.xyzx
mad r6.xyz, cb0[6].xyzx, v4.zzzz, r6.xyzx
add r6.xyz, r6.xyzx, cb0[7].xyzx
eq r4.z, cb4[0].x, l(1.000000)
if_nz r4.z
  eq r4.z, cb4[0].y, l(1.000000)
  mul r7.xyz, v4.yyyy, cb4[2].xyzx
  mad r7.xyz, cb4[1].xyzx, v4.xxxx, r7.xyzx
  mad r7.xyz, cb4[3].xyzx, v4.zzzz, r7.xyzx
  add r7.xyz, r7.xyzx, cb4[4].xyzx
  movc r7.xyz, r4.zzzz, r7.xyzx, v4.xyzx
  add r7.xyz, r7.xyzx, -cb4[6].xyzx
  mul r7.yzw, r7.xxyz, cb4[5].xxyz
  mad r4.z, r7.y, l(0.250000), l(0.750000)
  mad r4.w, cb4[0].z, l(0.500000), l(0.750000)
  max r7.x, r4.w, r4.z
  sample r7.xyzw, r7.xzwx, t5.xyzw, s0
else
  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r4.z, r7.xyzw, cb3[46].xyzw
dp3 r4.w, r6.xyzx, r6.xyzx
sample r7.xyzw, r4.wwww, t3.xyzw, s2
sample r6.xyzw, r6.xyzx, t4.xyzw, s1
mul r4.w, r6.w, r7.x
mul r4.z, r4.z, r4.w
dp3 r6.x, v1.xyzx, r3.xyzx
dp3 r6.y, v2.xyzx, r3.xyzx
dp3 r6.z, v3.xyzx, r3.xyzx
dp3 r3.x, r6.xyzx, r6.xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, r6.xyzx
mul r6.xyz, r4.zzzz, cb0[2].xyzx
max r4.z, cb0[3].y, cb0[3].x
max r4.z, r4.z, cb0[3].z
add r4.z, -r4.z, l(1.000000)
add r4.w, -r0.x, l(1.000000)
mad r0.yzw, r0.yyzw, r1.xxxx, r2.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
max r1.x, r1.x, l(0.001000)
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
dp3 r1.x, r3.xyzx, r2.xyzx
dp3_sat r6.w, r3.xyzx, r1.yzwy
dp3_sat r7.x, r3.xyzx, r0.yzwy
dp3_sat r0.y, r1.yzwy, r0.yzwy
mul r0.z, r4.w, r4.w
mad r0.w, -r4.w, r4.w, l(1.000000)
mad r7.y, |r1.x|, r0.w, r0.z
mad r0.w, r6.w, r0.w, r0.z
mul r0.w, r0.w, |r1.x|
mad r0.w, r6.w, r7.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r7.y, r7.x, r0.z, -r7.x
mad r7.x, r7.y, r7.x, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r7.x, r7.x, r7.x, l(1.000000012E-007)
div r0.z, r0.z, r7.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.z, r6.w, r0.z
max r0.z, r0.z, l(0.000000)
mul r7.xyz, r6.xyzx, r0.zzzz
add r0.z, -r0.y, l(1.000000)
mul r0.w, r0.z, r0.z
mul r0.w, r0.w, r0.w
mul r0.z, r0.z, r0.w
add r8.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r8.xyz, r8.xyzx, r0.zzzz, cb0[3].xyzx
mul r7.xyz, r7.xyzx, r8.xyzx
add r0.x, r0.x, -r4.z
add_sat r0.x, r0.x, l(1.000000)
mul r0.z, cb0[10].y, l(0.999707043)
mul r0.z, r0.z, r0.z
mad r0.w, -|r1.x|, |r1.x|, l(1.000000)
mul r4.z, r0.w, r0.z
ge r4.z, l(1.000000), r4.z
mad r0.z, -r0.z, r0.w, l(1.000000)
sqrt r0.z, r0.z
add r0.z, -r0.z, l(1.000000)
mul r0.w, r0.z, r0.z
mul r0.w, r0.w, r0.w
mul r0.z, r0.z, r0.w
add r0.w, r0.x, l(-0.020370)
mad r0.z, r0.z, r0.w, l(0.020370)
movc r0.z, r4.z, r0.z, l(1.000000)
add r0.w, -|r1.x|, l(1.000000)
log r1.x, r0.w
mul r1.x, r1.x, cb0[8].x
exp r1.x, r1.x
add r8.xyz, r0.xxxx, -cb0[3].xyzx
mad r8.xyz, r1.xxxx, r8.xyzx, cb0[3].xyzx
movc r8.xyz, v11.xxxx, r8.xyzx, r0.zzzz
mul r0.x, r0.y, r0.y
dp2 r0.x, r0.xxxx, r4.wwww
add r0.x, r0.x, l(-0.500000)
add r0.y, -r6.w, l(1.000000)
mul r0.z, r0.y, r0.y
mul r0.z, r0.z, r0.z
mul r0.y, r0.y, r0.z
mad r0.y, r0.x, r0.y, l(1.000000)
mul r0.z, r0.w, r0.w
mul r0.z, r0.z, r0.z
mul r0.z, r0.w, r0.z
mad r0.x, r0.x, r0.z, l(1.000000)
mul r0.x, r0.x, r0.y
mul r0.x, r6.w, r0.x
mul r0.yzw, r3.wwww, cb0[31].xxyz
mul r9.xyz, r0.xxxx, r6.xyzx
mul r0.xyz, r0.yzwy, r9.xyzx
mov_sat r0.w, r1.z
mul r9.xyz, r0.wwww, r6.xyzx
mul r9.xyz, r9.xyzx, cb0[27].xyzx
add r0.w, -r5.y, l(1.000000)
mul r10.xyz, r0.wwww, r0.xyzx
movc r0.xyz, v11.xxxx, r0.xyzx, r10.xyzx
mul r9.xyz, r5.yyyy, r9.xyzx
mul r10.xyz, r5.xzwx, r9.xyzx
mad r5.xyz, r9.xyzx, r5.xzwx, r0.xyzx
mul r9.xyz, r0.wwww, r7.xyzx
mul r10.xyz, r4.yyyy, r10.xyzx
add r8.xyz, -r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r10.xyzx, r8.xyzx, r0.xyzx
movc r0.xyz, v11.xxxx, r0.xyzx, r5.xyzx
movc r5.xyz, v11.xxxx, r7.xyzx, r9.xyzx
add r0.xyz, r0.xyzx, r5.xyzx
mad r1.xyz, -r3.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), r1.yzwy
dp3_sat r0.w, -r1.xyzx, r2.xyzx
mad r0.w, r0.w, cb0[12].x, -cb0[12].x
exp r0.w, r0.w
add r1.x, -|r3.y|, l(1.000000)
add_sat r1.x, r1.x, r1.x
mul r0.w, r0.w, r1.x
mul r1.xyz, r6.xyzx, r0.wwww
mul r1.xyz, r4.yyyy, r1.xyzx
mul r1.xyz, r1.xyzx, cb0[12].yzwy
mul_sat r1.xyz, r1.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
add r0.xyz, r0.xyzx, r1.xyzx
mul o0.xyz, r0.xyzx, r4.xxxx
mov o0.w, r2.w
ret
// Approximately 0 instruction slots used