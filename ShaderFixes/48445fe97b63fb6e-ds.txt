// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 48445fe97b63fb6e-ds.txt
// 3DMigoto: 48445fe97b63fb6e |    Unity headers extracted from NatureManufacture Shaders_Water_Water River Tesseled Vertex Color Flow
//    Shader "NatureManufacture Shaders/Water/Water River Tesseled Vertex Color Flow" {
//      SubShader 1/1 {
//        Tags { "IsEmissive"="true" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "IsEmissive"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+999" "RenderType"="Transparent" }
//          Program "dp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from NatureManufacture Shaders_Water_Water River Tesseled Vertex Color Flow:
//   API d3d11
//   Shader model ds_5_0
//   undeciphered1: 201802150 148 0 0
//   undeciphered1a: 7
//   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "FOG_LINEAR" }
//   undeciphered2: 1 3 5 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 528
//   Float 64 [_WaterTessScale]
//   ScalarInt 68 [_UVVDirection1UDirection0]
//   Vector 72 [_WaterMixSpeed] 2
//   Vector 80 [_WaterNormal_ST]
//   Float 96 [_GlobalTiling]
//   Vector 100 [_WaterMainSpeed] 2
//   Vector 112 [_SmallCascadeMixSpeed] 2
//   Vector 128 [_SmallCascadeNormal_ST]
//   Float 144 [_SmallCascadeWaterTessScale]
//   Vector 148 [_SmallCascadeMainSpeed] 2
//   Float 156 [_SmallCascadeAngle]
//   Float 160 [_SmallCascadeAngleFalloff]
//   Float 164 [_BigCascadeAngle]
//   Float 168 [_BigCascadeAngleFalloff]
//   Float 172 [_BigCascadeWaterTessScale]
//   Vector 176 [_BigCascadeMixSpeed] 2
//   Vector 192 [_BigCascadeNormal_ST]
//   Vector 208 [_BigCascadeMainSpeed] 2
//   Float 484 [_TessPhongStrength]
//   Vector 496 [_texcoord_ST]
//   Vector 512 [_texcoord4_ST]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 672 [unity_SHBr]
//   Vector 688 [unity_SHBg]
//   Vector 704 [unity_SHBb]
//   Vector 720 [unity_SHC]
//   ConstBuffer "UnityPerDraw" 176
//   Vector 144 [unity_WorldTransformParams]
//   Matrix 0 [unity_ObjectToWorld]
//   Matrix 64 [unity_WorldToObject]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 272 [unity_MatrixVP]
//   SetTexture 0 [_WaterTesselation] 2D 0
//   SetTexture 1 [_SmallCascadeWaterTess] 2D 1
//   SetTexture 2 [_BigCascadeWaterTess] 2D 2
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityPerFrame" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:57:49 2019
//
//
// Patch Constant signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TessFactor            0   x           0  TRIEDGE   float
// SV_TessFactor            1   x           1  TRIEDGE   float
// SV_TessFactor            2   x           2  TRIEDGE   float
// SV_InsideTessFactor      0   x           3   TRIINT   float
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// INTERNALTESSPOS          0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xy
// TEXCOORD                 1   xyzw        4     NONE   float
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float   xy
// COLOR                    0   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// COLOR                    0   xyzw        6     NONE   float   xyzw
// TEXCOORD                 5   xyz         7     NONE   float   xyz
// TEXCOORD                 6      w        7     NONE   float      w
// TEXCOORD                 8   xyzw        8     NONE   float   xyzw
//
ds_5_0
dcl_input_control_point_count 3
dcl_tessellator_domain domain_tri
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[33], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[10], immediateIndexed
dcl_constantbuffer cb4[21], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input vDomain.xyz
dcl_input vicp[3][0].xyzw
dcl_input vicp[3][1].xyzw
dcl_input vicp[3][2].xyz
dcl_input vicp[3][3].xy
dcl_input vicp[3][6].xy
dcl_input vicp[3][7].xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyz
dcl_output o7.w
dcl_output o8.xyzw
dcl_temps 8

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.x, cb0[9].w, l(0.0222222228)
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
mad r0.y, -cb0[9].w, l(0.0222222228), l(1.000000)
mul r1.xyz, vDomain.yyyy, vicp[1][2].xyzx
mad r1.xyz, vicp[0][2].xyzx, vDomain.xxxx, r1.xyzx
mad r1.xyz, vicp[2][2].xyzx, vDomain.zzzz, r1.xyzx
dp3 r2.x, r1.xyzx, cb3[4].xyzx
dp3 r2.z, r1.xyzx, cb3[6].xyzx
dp3 r2.y, r1.xyzx, cb3[5].xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul_sat r0.w, r0.z, r2.y
mul r2.xyzw, r0.zzzz, r2.xyzz
add r0.y, -r0.y, r0.w
max r0.y, r0.y, l(0.000000)
min r0.y, r0.y, l(2.000000)
mul_sat r0.x, r0.x, r0.y
add r0.x, -r0.x, l(1.000000)
log r0.x, r0.x
mul r0.x, r0.x, cb0[10].x
exp r0.x, r0.x
mad r0.y, -cb0[10].y, l(0.0222222228), l(1.000000)
add r0.y, -r0.y, r0.w
max r0.y, r0.y, l(0.000000)
min r0.y, r0.y, l(2.000000)
mul r0.z, cb0[10].y, l(0.0222222228)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
mul_sat r0.y, r0.z, r0.y
add r0.y, -r0.y, l(1.000000)
log r0.y, r0.y
mul r0.y, r0.y, cb0[10].z
exp r0.y, r0.y
min r0.y, r0.y, l(1.000000)
add_sat r0.x, -r0.y, r0.x
mad r3.xyz, cb1[0].yyyy, l(0.150000, 0.250000, 0.600000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
frc r3.xyz, r3.xyzx
mul r0.zw, vDomain.yyyy, vicp[1][3].xxxy
mad r0.zw, vicp[0][3].xxxy, vDomain.xxxx, r0.zzzw
mad r0.zw, vicp[2][3].xxxy, vDomain.zzzz, r0.zzzw
mad r4.xy, r0.zwzz, cb0[8].xyxx, cb0[8].zwzz
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[6].x
mul r4.xy, r1.wwww, r4.xyxx
mul r4.zw, vDomain.yyyy, vicp[1][6].xxxy
mad r4.zw, vicp[0][6].xxxy, vDomain.xxxx, r4.zzzw
mad r4.zw, vicp[2][6].xxxy, vDomain.zzzz, r4.zzzw
itof r3.w, cb0[4].y
eq r3.w, r3.w, l(1.000000)
movc r5.xy, r3.wwww, cb0[9].yzyy, cb0[9].zyzz
mul r5.xy, r4.zwzz, r5.xyxx
mad r5.zw, r5.xxxy, r3.yyyy, r4.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r3.y, r5.zwzz, t1.xwyz, s1, l(0.000000)
mul r6.xyz, cb1[0].yyyy, l(0.150000, 0.250000, 0.600000, 0.000000)
frc r6.xyz, r6.xyzx
mad r5.xy, r5.xyxx, r6.yyyy, r4.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t1.wxyz, s1, l(1.000000)
add r3.y, r3.y, -r5.x
add r5.yzw, r6.xxyz, l(0.000000, -0.500000, -0.500000, -0.500000)
add r5.yzw, r5.yyzw, r5.yyzw
mad r3.y, |r5.z|, r3.y, r5.x
mul r3.y, r3.y, cb0[9].x
movc r5.xz, r3.wwww, cb0[7].xxyx, cb0[7].yyxy
mad r4.xy, cb1[0].yyyy, r5.xzxx, r4.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t1.wxyz, s1, l(1.000000)
mad r3.y, r4.x, cb0[9].x, r3.y
mad r4.xy, r0.zwzz, cb0[5].xyxx, cb0[5].zwzz
mul r4.xy, r1.wwww, r4.xyxx
movc r5.xz, r3.wwww, cb0[6].yyzy, cb0[6].zzyz
mul r5.xz, r4.zzwz, r5.xxzx
mad r6.yw, r5.xxxz, r3.xxxx, r4.xxxy
mad r5.xz, r5.xxzx, r6.xxxx, r4.xxyx
sample_l_indexable(texture2d)(float,float,float,float) r3.x, r5.xzxx, t0.wxyz, s0, l(1.000000)
sample_l_indexable(texture2d)(float,float,float,float) r5.x, r6.ywyy, t0.wxyz, s0, l(1.000000)
add r5.x, -r3.x, r5.x
mad r3.x, |r5.y|, r5.x, r3.x
mul r3.x, r3.x, cb0[4].x
movc r5.xy, r3.wwww, cb0[4].zwzz, cb0[4].wzww
mad r4.xy, cb1[0].yyyy, r5.xyxx, r4.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t0.wxyz, s0, l(1.000000)
mad r3.x, cb0[4].x, r4.x, r3.x
mad r4.x, r3.y, r0.x, -r3.x
mad r0.x, r0.x, r4.x, r3.x
movc r4.xy, r3.wwww, cb0[13].xyxx, cb0[13].yxyy
movc r5.xy, r3.wwww, cb0[11].xyxx, cb0[11].yxyy
mul r4.xy, r4.zwzz, r4.xyxx
mad o1.zw, r4.zzzw, cb0[32].xxxy, cb0[32].zzzw
mad r4.zw, r0.zzzw, cb0[12].xxxy, cb0[12].zzzw
mad o1.xy, r0.zwzz, cb0[31].xyxx, cb0[31].zwzz
mul r0.zw, r1.wwww, r4.zzzw
mad r3.zw, r4.xxxy, r3.zzzz, r0.zzzw
mad r4.xy, r4.xyxx, r6.zzzz, r0.zwzz
mad r0.zw, cb1[0].yyyy, r5.xxxy, r0.zzzw
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t2.xywz, s2, l(1.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t2.xyzw, s2, l(1.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r3.zwzz, t2.xyzw, s2, l(1.000000)
add r1.w, -r0.w, r1.w
mad r0.w, |r5.w|, r1.w, r0.w
mul r0.w, r0.w, cb0[10].w
mad r0.z, cb0[10].w, r0.z, r0.w
mad r0.w, r0.z, r0.y, -r0.x
mad r0.x, r0.y, r0.w, r0.x
add r0.y, -r0.x, r3.x
mul r4.xyzw, vDomain.yyyy, vicp[1][7].xyzw
mad r4.xyzw, vicp[0][7].xyzw, vDomain.xxxx, r4.xyzw
mad r4.xyzw, vicp[2][7].xyzw, vDomain.zzzz, r4.xyzw
mad r0.x, r4.x, r0.y, r0.x
add r0.y, -r0.x, r3.y
mad r0.x, r4.y, r0.y, r0.x
add r0.y, -r0.x, r0.z
mad r0.x, r4.z, r0.y, r0.x
mov o6.xyzw, r4.xyzw
dp3 r0.y, vicp[1][0].xyzx, vicp[1][2].xyzx
mul r3.xyzw, vDomain.yyyy, vicp[1][0].xyzw
mad r3.xyzw, vicp[0][0].xyzw, vDomain.xxxx, r3.xyzw
mad r3.xyzw, vicp[2][0].xyzw, vDomain.zzzz, r3.xyzw
dp3 r0.z, r3.xyzx, vicp[1][2].xyzx
add r0.y, -r0.y, r0.z
mad r0.yzw, -vicp[1][2].xxyz, r0.yyyy, r3.xxyz
mul r0.yzw, r0.yyzw, vDomain.yyyy
dp3 r1.w, vicp[0][0].xyzx, vicp[0][2].xyzx
dp3 r4.x, r3.xyzx, vicp[0][2].xyzx
add r1.w, -r1.w, r4.x
mad r4.xyz, -vicp[0][2].xyzx, r1.wwww, r3.xyzx
mad r0.yzw, r4.xxyz, vDomain.xxxx, r0.yyzw
dp3 r1.w, vicp[2][0].xyzx, vicp[2][2].xyzx
dp3 r4.x, r3.xyzx, vicp[2][2].xyzx
add r1.w, -r1.w, r4.x
mad r4.xyz, -vicp[2][2].xyzx, r1.wwww, r3.xyzx
mad r0.yzw, r4.xxyz, vDomain.zzzz, r0.yyzw
add r1.w, -cb0[30].y, l(1.000000)
mul r3.xyz, r3.xyzx, r1.wwww
mad r0.yzw, cb0[30].yyyy, r0.yyzw, r3.xxyz
mad r0.xyz, r0.xxxx, r1.xyzx, r0.yzwy
mul r1.xyzw, r0.yyyy, cb3[1].xyzw
mad r1.xyzw, cb3[0].xyzw, r0.xxxx, r1.xyzw
mad r0.xyzw, cb3[2].xyzw, r0.zzzz, r1.xyzw
add r1.xyzw, r0.xyzw, cb3[3].xyzw
mad r0.xyz, cb3[3].xyzx, r3.wwww, r0.xyzx
mul r3.xyzw, r1.yyyy, cb4[18].xyzw
mad r3.xyzw, cb4[17].xyzw, r1.xxxx, r3.xyzw
mad r3.xyzw, cb4[19].xyzw, r1.zzzz, r3.xyzw
mad r1.xyzw, cb4[20].xyzw, r1.wwww, r3.xyzw
mov o0.xyzw, r1.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 48445fe97b63fb6e-ds.txt
ne r7.w, r1.w, l(1.0)
if_nz r7.w
  add r7.w, r1.w, -r7.y
  mad r1.x, r7.w, r7.x, r1.x
endif

mov o2.w, r0.x
mul r3.xyzw, vDomain.yyyy, vicp[1][1].xyzw
mad r3.xyzw, vicp[0][1].xyzw, vDomain.xxxx, r3.xyzw
mad r3.xyzw, vicp[2][1].xyzw, vDomain.zzzz, r3.xyzw
mul r4.xyz, r3.yyyy, cb3[1].yzxy
mad r4.xyz, cb3[0].yzxy, r3.xxxx, r4.xyzx
mad r3.xyz, cb3[2].yzxy, r3.zzzz, r4.xyzx
mul r0.x, r3.w, cb3[9].w
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
mul r4.xyz, r2.wxyw, r3.xyzx
mad r4.xyz, r2.ywxy, r3.yzxy, -r4.xyzx
mul r4.xyz, r0.xxxx, r4.xyzx
mov o2.y, r4.x
mov o2.x, r3.z
mov o2.z, r2.x
mov o3.w, r0.y
mov o4.w, r0.z
mov o3.x, r3.x
mov o4.x, r3.y
mov o3.y, r4.y
mov o4.y, r4.z
mov o3.z, r2.y
mov o4.z, r2.w
mul r0.x, r1.y, cb1[5].x
mul r0.w, r0.x, l(0.500000)
mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
add o5.xy, r0.zzzz, r0.xwxx
mov o5.zw, r1.zzzw
mov o7.w, r1.z
mul r0.x, r2.y, r2.y
mad r0.x, r2.x, r2.x, -r0.x
mul r1.xyzw, r2.ywzx, r2.xyzw
dp4 r2.x, cb2[42].xyzw, r1.xyzw
dp4 r2.y, cb2[43].xyzw, r1.xyzw
dp4 r2.z, cb2[44].xyzw, r1.xyzw
mad o7.xyz, cb2[45].xyzx, r0.xxxx, r2.xyzx
mov o8.xyzw, l(0,0,0,0)
ret
// Approximately 0 instruction slots used