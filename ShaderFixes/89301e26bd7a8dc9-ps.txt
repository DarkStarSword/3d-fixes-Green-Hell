// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 89301e26bd7a8dc9-ps.txt
// 3DMigoto: 89301e26bd7a8dc9 |    Unity headers extracted from Standard
//    Shader "Standard" {
//      CustomEditor "StandardShaderGUI"
//      Fallback "VertexLit"
//      SubShader 1/2 {
//        LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//        Pass 2/5 {
//          Name "FORWARD_DELTA"
//          Tags { "LIGHTMODE"="FORWARDADD" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 117 7 2
//   undeciphered1a: 7
//   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "_DETAIL_MULX2" "_SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A" "_METALLICGLOSSMAP" }
//   undeciphered2: 1 8 6 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 240
//   Vector 32 [_LightColor0]
//   Vector 64 [_Color]
//   Float 144 [_GlossMapScale]
//   Matrix 176 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 16 [_LightPositionRange]
//   Vector 32 [_LightProjectionParams]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MetallicGlossMap] 2D 5
//   SetTexture 1 [_MainTex] 2D 2
//   SetTexture 2 [_DetailMask] 2D 4
//   SetTexture 3 [_DetailAlbedoMap] 2D 3
//   SetTexture 4 [_LightTextureB0] 2D 7
//   SetTexture 5 [_LightTexture0] CUBE 6
//   SetTexture 6 [unity_ProbeVolumeSH] 3D 0
//   SetTexture 7 [_ShadowMapTexture] CUBE 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:35:08 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyz
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 6   xyz         7     NONE   float
// TEXCOORD                 7   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.w
dcl_input_ps linear v4.w
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 89301e26bd7a8dc9-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s5
sample r1.xyzw, v1.xyxx, t1.xyzw, s2
mul r0.yzw, r1.xxyz, cb0[4].xxyz
sample r2.xyzw, v1.xyxx, t2.xyzw, s4
sample r3.xyzw, v1.zwzz, t3.xyzw, s3
mul r1.xyz, r2.wwww, r3.xyzx
add r2.x, -r2.w, l(1.000000)
mad r1.xyz, r1.xyzx, l(4.594794, 4.594794, 4.594794, 0.000000), r2.xxxx
mul r2.xyz, r0.yzwy, r1.xyzx
mad r0.yzw, r0.yyzw, r1.xxyz, l(0.000000, -0.040000, -0.040000, -0.040000)
mad r0.yzw, r0.xxxx, r0.yyzw, l(0.000000, 0.040000, 0.040000, 0.040000)
mad r0.x, -r0.x, l(0.960000), l(0.960000)
mul r1.xyz, r0.xxxx, r2.xyzx
dp3 r0.x, v5.xyzx, v5.xyzx
rsq r0.x, r0.x
mul r2.xyz, r0.xxxx, v5.xyzx
dp3 r0.x, v2.xyzx, v2.xyzx
rsq r0.x, r0.x
mul r3.xyz, r0.xxxx, v2.xyzx
mul r4.xyz, v6.yyyy, cb0[12].xyzx
mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
add r4.xyz, r4.xyzx, cb0[14].xyzx
add r5.xyz, -v6.xyzx, r8.xyzx
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r0.x, r5.xyzx, r6.xyzx
add r5.xyz, v6.xyzx, -cb3[25].xyzx
dp3 r2.w, r5.xyzx, r5.xyzx
sqrt r2.w, r2.w
add r2.w, -r0.x, r2.w
mad r0.x, cb3[25].w, r2.w, r0.x
mad_sat r0.x, r0.x, cb3[24].z, cb3[24].w
eq r2.w, cb5[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb5[0].y, l(1.000000)
  mul r5.xyz, v6.yyyy, cb5[2].xyzx
  mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  add r5.xyz, r5.xyzx, cb5[4].xyzx
  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  add r5.xyz, r5.xyzx, -cb5[6].xyzx
  mul r5.yzw, r5.xxyz, cb5[5].xxyz
  mad r2.w, r5.y, l(0.250000), l(0.750000)
  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  max r5.x, r2.w, r3.w
  sample r5.xyzw, r5.xzwx, t6.xyzw, s0
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
add r5.xyz, v6.xyzx, -cb2[1].xyzx
max r3.w, |r5.y|, |r5.x|
max r3.w, |r5.z|, r3.w
add r3.w, r3.w, -cb2[2].z
max r3.w, r3.w, l(0.000010)
mul r3.w, r3.w, cb2[2].w
div r3.w, cb2[2].y, r3.w
add r3.w, r3.w, -cb2[2].x
add r3.w, -r3.w, l(1.000000)
sample_c_lz r3.w, r5.xyzx, t7.xxxx, s1, r3.w
add r4.w, -cb3[24].x, l(1.000000)
mad r3.w, r3.w, r4.w, cb3[24].x
add r2.w, r2.w, -r3.w
mad r0.x, r0.x, r2.w, r3.w
dp3 r2.w, r4.xyzx, r4.xyzx
sample r5.xyzw, r2.wwww, t4.xyzw, s7
sample r4.xyzw, r4.xyzx, t5.xyzw, s6
mul r2.w, r4.w, r5.x
mul r0.x, r0.x, r2.w
mov r4.x, v3.w
mov r4.y, v4.w
mov r4.z, v5.w
dp3 r2.w, r4.xyzx, r4.xyzx
rsq r2.w, r2.w
mul r5.xyz, r2.wwww, r4.xyzx
mul r6.xyz, r0.xxxx, cb0[2].xyzx
mad r0.x, -r1.w, cb0[9].x, l(1.000000)
mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
max r1.w, r1.w, l(0.001000)
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx
dp3 r1.w, r2.xyzx, -r3.xyzx
dp3_sat r2.w, r2.xyzx, r5.xyzx
dp3_sat r2.x, r2.xyzx, r4.xyzx
dp3_sat r2.y, r5.xyzx, r4.xyzx
mul r2.z, r2.y, r2.y
dp2 r2.z, r2.zzzz, r0.xxxx
add r2.z, r2.z, l(-0.500000)
add r3.x, -r2.w, l(1.000000)
mul r3.y, r3.x, r3.x
mul r3.y, r3.y, r3.y
mul r3.x, r3.x, r3.y
mad r3.x, r2.z, r3.x, l(1.000000)
add r3.y, -|r1.w|, l(1.000000)
mul r3.z, r3.y, r3.y
mul r3.z, r3.z, r3.z
mul r3.y, r3.y, r3.z
mad r2.z, r2.z, r3.y, l(1.000000)
mul r2.z, r2.z, r3.x
mul r2.z, r2.w, r2.z
mul r0.x, r0.x, r0.x
max r0.x, r0.x, l(0.002000)
add r3.x, -r0.x, l(1.000000)
mad r3.y, |r1.w|, r3.x, r0.x
mad r3.x, r2.w, r3.x, r0.x
mul r1.w, |r1.w|, r3.x
mad r1.w, r2.w, r3.y, r1.w
add r1.w, r1.w, l(0.000010)
div r1.w, l(0.500000), r1.w
mul r0.x, r0.x, r0.x
mad r3.x, r2.x, r0.x, -r2.x
mad r2.x, r3.x, r2.x, l(1.000000)
mul r0.x, r0.x, l(0.318309873)
mad r2.x, r2.x, r2.x, l(1.000000012E-007)
div r0.x, r0.x, r2.x
mul r0.x, r0.x, r1.w
mul r0.x, r0.x, l(3.14159274)
mul r0.x, r2.w, r0.x
max r0.x, r0.x, l(0.000000)
dp3 r1.w, r0.yzwy, r0.yzwy
ne r1.w, r1.w, l(0.000000)
and r1.w, r1.w, l(0x3f800000)
mul r0.x, r0.x, r1.w
mul r2.xzw, r2.zzzz, r6.xxyz
mul r3.xyz, r6.xyzx, r0.xxxx
add r0.x, -r2.y, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r4.xyz, -r0.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r4.xyzx, r0.xxxx, r0.yzwy
mul r0.xyz, r0.xyzx, r3.xyzx
mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used