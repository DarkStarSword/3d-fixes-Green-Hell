// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 834a2191c66b8384-ps.txt
// 3DMigoto: 834a2191c66b8384 |    Unity headers extracted from Imperial Fur_Simple_Blinn Skin_ 5 Shell
//    Shader "Imperial Fur/Simple/Blinn Skin/ 5 Shell" {
//      CustomEditor "ImperialFurShaderSimpleGUI"
//      Fallback "VertexLit"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Opaque" }
//        Pass 2/11 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Imperial Fur_Simple_Blinn Skin_ 5 Shell:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 89 6 6
//   undeciphered1a: 9
//   Keywords { "POINT_COOKIE" "SHADOWS_CUBE" "SHADOWS_SOFT" "FOG_LINEAR" }
//   undeciphered2: 1 7 7 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 32 [_LightColor0]
//   Float 128 [_Specular]
//   Float 132 [_UseSkinSecondMap]
//   Float 156 [_BumpScale]
//   Float 160 [_Glossiness]
//   Vector 176 [_Color]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 16 [_LightPositionRange]
//   Vector 32 [_LightProjectionParams]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_SkinTex] 2D 4
//   SetTexture 1 [_SpecGlossMap] 2D 5
//   SetTexture 2 [_BumpMap] 2D 6
//   SetTexture 3 [_LightTextureB0] 2D 3
//   SetTexture 4 [_LightTexture0] CUBE 2
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//   SetTexture 6 [_ShadowMapTexture] CUBE 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:31:29 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 7     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyz         6     NONE   float
// TEXCOORD                 6   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 834a2191c66b8384-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r1.xyz, -v5.xyzx, r10.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
sample r2.xyzw, v1.xyxx, t0.xyzw, s4
mul r2.xyz, r2.xyzx, cb0[11].xyzx
ne r1.w, cb0[8].y, l(0.000000)
if_nz r1.w
  sample r3.xyzw, v1.xyxx, t1.xwyz, s5
else
  mov r3.x, cb0[8].x
  mov r3.y, cb0[10].x
endif
sample r4.xyzw, v1.xyxx, t2.xyzw, s6
mul r4.x, r4.w, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r4.xyxx, r4.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r4.z, r1.w
mul r4.xyz, r4.xyzx, cb0[9].wwww
mul r5.xyz, v5.yyyy, cb0[5].xyzx
mad r5.xyz, cb0[4].xyzx, v5.xxxx, r5.xyzx
mad r5.xyz, cb0[6].xyzx, v5.zzzz, r5.xyzx
add r5.xyz, r5.xyzx, cb0[7].xyzx
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r1.w, r1.xyzx, r6.xyzx
add r6.xyz, v5.xyzx, -cb3[25].xyzx
dp3 r2.w, r6.xyzx, r6.xyzx
sqrt r2.w, r2.w
add r2.w, -r1.w, r2.w
mad r1.w, cb3[25].w, r2.w, r1.w
mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
eq r2.w, cb6[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb6[0].y, l(1.000000)
  mul r6.xyz, v5.yyyy, cb6[2].xyzx
  mad r6.xyz, cb6[1].xyzx, v5.xxxx, r6.xyzx
  mad r6.xyz, cb6[3].xyzx, v5.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb6[4].xyzx
  movc r6.xyz, r2.wwww, r6.xyzx, v5.xyzx
  add r6.xyz, r6.xyzx, -cb6[6].xyzx
  mul r6.yzw, r6.xxyz, cb6[5].xxyz
  mad r2.w, r6.y, l(0.250000), l(0.750000)
  mad r3.z, cb6[0].z, l(0.500000), l(0.750000)
  max r6.x, r2.w, r3.z
  sample r6.xyzw, r6.xzwx, t5.xyzw, s0
else
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r6.xyzw, cb2[46].xyzw
lt r3.z, r1.w, l(0.990000)
if_nz r3.z
  add r6.xyz, v5.xyzx, -cb2[1].xyzx
  max r3.z, |r6.y|, |r6.x|
  max r3.z, |r6.z|, r3.z
  add r3.z, r3.z, -cb2[2].z
  max r3.z, r3.z, l(0.000010)
  mul r3.z, r3.z, cb2[2].w
  div r3.z, cb2[2].y, r3.z
  add r3.z, r3.z, -cb2[2].x
  add r3.z, -r3.z, l(1.000000)
  add r7.xyz, r6.xyzx, l(0.00781250000, 0.00781250000, 0.00781250000, 0.000000)
  sample_c_lz r7.x, r7.xyzx, t6.xxxx, s1, r3.z
  add r8.xyz, r6.xyzx, l(-0.00781250000, -0.00781250000, 0.00781250000, 0.000000)
  sample_c_lz r7.y, r8.xyzx, t6.xxxx, s1, r3.z
  add r8.xyz, r6.xyzx, l(-0.00781250000, 0.00781250000, -0.00781250000, 0.000000)
  sample_c_lz r7.z, r8.xyzx, t6.xxxx, s1, r3.z
  add r6.xyz, r6.xyzx, l(0.00781250000, -0.00781250000, -0.00781250000, 0.000000)
  sample_c_lz r7.w, r6.xyzx, t6.xxxx, s1, r3.z
  dp4 r3.z, r7.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  add r3.w, -cb3[24].x, l(1.000000)
  mad r3.z, r3.z, r3.w, cb3[24].x
else
  mov r3.z, l(1.000000)
endif
add r2.w, r2.w, -r3.z
mad r1.w, r1.w, r2.w, r3.z
dp3 r2.w, r5.xyzx, r5.xyzx
sample r6.xyzw, r2.wwww, t3.xyzw, s3
sample r5.xyzw, r5.xyzx, t4.xyzw, s2
mul r2.w, r5.w, r6.x
mul r1.w, r1.w, r2.w
dp3 r5.x, v2.xyzx, r4.xyzx
dp3 r5.y, v3.xyzx, r4.xyzx
dp3 r5.z, v4.xyzx, r4.xyzx
dp3 r2.w, r5.xyzx, r5.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, r5.xyzx
mul r5.xyz, r1.wwww, cb0[2].xyzx
mad r1.xyz, r1.xyzx, r0.wwww, r0.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.x, r4.xyzx, r0.xyzx
dp3 r0.y, r4.xyzx, r1.xyzx
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r3.x, l(128.000000)
log r0.y, r0.y
mul r0.y, r0.y, r0.z
exp r0.y, r0.y
mul r0.y, r3.y, r0.y
mul r1.xyz, r2.xyzx, r5.xyzx
mul r0.yzw, r0.yyyy, r5.xxyz
mad r0.xyz, r1.xyzx, r0.xxxx, r0.yzwy
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used