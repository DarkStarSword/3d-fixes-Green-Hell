// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3fe092c3ed2f2099-ps.txt
// 3DMigoto: 3fe092c3ed2f2099 |    Unity headers extracted from Standard (Specular setup)
//    Shader "Standard (Specular setup)" {
//      CustomEditor "StandardShaderGUI"
//      Fallback "VertexLit"
//      SubShader 1/2 {
//        LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//        Pass 2/5 {
//          Name "FORWARD_DELTA"
//          Tags { "LIGHTMODE"="FORWARDADD" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard (Specular setup):
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 159 6 4
//   undeciphered1a: 11
//   Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "FOG_LINEAR" "_NORMALMAP" "_SPECGLOSSMAP" }
//   undeciphered2: 1 7 7 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 320
//   Vector 32 [_LightColor0]
//   Vector 128 [_ShadowMapTexture_TexelSize]
//   Vector 144 [_Color]
//   Float 208 [_BumpScale]
//   Float 224 [_GlossMapScale]
//   Matrix 256 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   Matrix 128 [unity_WorldToShadow0]
//   Matrix 192 [unity_WorldToShadow1]
//   Matrix 256 [unity_WorldToShadow2]
//   Matrix 320 [unity_WorldToShadow3]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_SpecGlossMap] 2D 4
//   SetTexture 2 [_BumpMap] 2D 3
//   SetTexture 3 [_LightTexture0] 2D 5
//   SetTexture 4 [_LightTextureB0] 2D 6
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//   SetTexture 6 [_ShadowMapTexture] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:53:31 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 6   xyzw        7     NONE   float
// TEXCOORD                 7   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[20], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 13
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r11.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 3fe092c3ed2f2099-ps.txt

mul r11.w, -r11.x, r11.y
mad r12.xyz, -r11.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t1.xyzw, s4
sample r1.xyzw, v1.xyxx, t0.xyzw, s2
mul r1.xyz, r1.xyzx, cb0[9].xyzx
max r1.w, r0.y, r0.x
max r1.w, r0.z, r1.w
add r1.w, -r1.w, l(1.000000)
mul r1.xyz, r1.wwww, r1.xyzx
sample r2.xyzw, v1.xyxx, t2.xyzw, s3
mul r2.x, r2.w, r2.x
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, cb0[13].xxxx
dp2 r1.w, r2.xyxx, r2.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.w, r1.w
mul r2.yzw, r2.yyyy, v4.xxyz
mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r1.w, v2.xyzx, v2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v2.xyzx
mul r4.xyzw, v6.yyyy, cb0[17].xyzw
mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
add r4.xyzw, r4.xyzw, cb0[19].xyzw
add r5.xyz, -v6.xyzx, r12.xyzx
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r1.w, r5.xyzx, r6.xyzx
add r5.xyz, v6.xyzx, -cb3[25].xyzx
dp3 r2.w, r5.xyzx, r5.xyzx
sqrt r2.w, r2.w
add r2.w, -r1.w, r2.w
mad r1.w, cb3[25].w, r2.w, r1.w
mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
eq r2.w, cb6[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb6[0].y, l(1.000000)
  mul r5.xyz, v6.yyyy, cb6[2].xyzx
  mad r5.xyz, cb6[1].xyzx, v6.xxxx, r5.xyzx
  mad r5.xyz, cb6[3].xyzx, v6.zzzz, r5.xyzx
  add r5.xyz, r5.xyzx, cb6[4].xyzx
  movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  add r5.xyz, r5.xyzx, -cb6[6].xyzx
  mul r5.yzw, r5.xxyz, cb6[5].xxyz
  mad r2.w, r5.y, l(0.250000), l(0.750000)
  mad r3.w, cb6[0].z, l(0.500000), l(0.750000)
  max r5.x, r2.w, r3.w
  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
lt r3.w, r1.w, l(0.990000)
if_nz r3.w
  mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  add r5.xyzw, r5.xyzw, cb3[11].xyzw
  div r5.xyz, r5.xyzx, r5.wwww
  mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  round_ni r6.xy, r6.xyxx
  mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
  add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  mul r8.xw, r7.xxxz, r7.xxxz
  mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
  add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
  max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
  mov r9.x, r6.z
  mov r9.y, r7.x
  mov r9.z, r5.x
  mov r9.w, r8.x
  mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  mov r8.x, r6.w
  mov r8.y, r7.z
  mov r8.z, r5.y
  mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  add r8.xyzw, r9.ywyw, r9.xzxz
  add r10.xyzw, r7.yyww, r7.xxzz
  div r5.xy, r9.ywyy, r8.zwzz
  add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  div r6.zw, r7.yyyw, r10.yyyw
  add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  mul r7.xy, r5.xyxx, cb0[8].xxxx
  mul r7.zw, r6.zzzw, cb0[8].yyyy
  mul r8.xyzw, r8.xyzw, r10.xyzw
  mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
  sample_c_lz r3.w, r9.xyxx, t6.xxxx, s1, r5.z
  sample_c_lz r5.x, r9.zwzz, t6.xxxx, s1, r5.z
  mul r5.x, r5.x, r8.y
  mad r3.w, r8.x, r3.w, r5.x
  mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
  sample_c_lz r5.x, r6.xyxx, t6.xxxx, s1, r5.z
  mad r3.w, r8.z, r5.x, r3.w
  sample_c_lz r5.x, r6.zwzz, t6.xxxx, s1, r5.z
  mad r3.w, r8.w, r5.x, r3.w
  add r5.x, -cb3[24].x, l(1.000000)
  mad r3.w, r3.w, r5.x, cb3[24].x
else
  mov r3.w, l(1.000000)
endif
add r2.w, r2.w, -r3.w
mad r1.w, r1.w, r2.w, r3.w
lt r2.w, l(0.000000), r4.z
and r2.w, r2.w, l(0x3f800000)
div r5.xy, r4.xyxx, r4.wwww
add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample r5.xyzw, r5.xyxx, t3.xyzw, s5
mul r2.w, r2.w, r5.w
dp3 r3.w, r4.xyzx, r4.xyzx
sample r4.xyzw, r3.wwww, t4.xyzw, s6
mul r2.w, r2.w, r4.x
mul r1.w, r1.w, r2.w
mov r4.x, v3.w
mov r4.y, v4.w
mov r4.z, v5.w
dp3 r2.w, r4.xyzx, r4.xyzx
rsq r2.w, r2.w
mul r5.xyz, r2.wwww, r4.xyzx
mul r6.xyz, r1.wwww, cb0[2].xyzx
mad r0.w, -r0.w, cb0[14].x, l(1.000000)
mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
max r1.w, r1.w, l(0.001000)
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx
dp3 r1.w, r2.xyzx, -r3.xyzx
dp3_sat r2.w, r2.xyzx, r5.xyzx
dp3_sat r2.x, r2.xyzx, r4.xyzx
dp3_sat r2.y, r5.xyzx, r4.xyzx
mul r2.z, r2.y, r2.y
dp2 r2.z, r2.zzzz, r0.wwww
add r2.z, r2.z, l(-0.500000)
add r3.x, -r2.w, l(1.000000)
mul r3.y, r3.x, r3.x
mul r3.y, r3.y, r3.y
mul r3.x, r3.x, r3.y
mad r3.x, r2.z, r3.x, l(1.000000)
add r3.y, -|r1.w|, l(1.000000)
mul r3.z, r3.y, r3.y
mul r3.z, r3.z, r3.z
mul r3.y, r3.y, r3.z
mad r2.z, r2.z, r3.y, l(1.000000)
mul r2.z, r2.z, r3.x
mul r2.z, r2.w, r2.z
mul r0.w, r0.w, r0.w
max r0.w, r0.w, l(0.002000)
add r3.x, -r0.w, l(1.000000)
mad r3.y, |r1.w|, r3.x, r0.w
mad r3.x, r2.w, r3.x, r0.w
mul r1.w, |r1.w|, r3.x
mad r1.w, r2.w, r3.y, r1.w
add r1.w, r1.w, l(0.000010)
div r1.w, l(0.500000), r1.w
mul r0.w, r0.w, r0.w
mad r3.x, r2.x, r0.w, -r2.x
mad r2.x, r3.x, r2.x, l(1.000000)
mul r0.w, r0.w, l(0.318309873)
mad r2.x, r2.x, r2.x, l(1.000000012E-007)
div r0.w, r0.w, r2.x
mul r0.w, r0.w, r1.w
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.w, r0.w
max r0.w, r0.w, l(0.000000)
dp3 r1.w, r0.xyzx, r0.xyzx
ne r1.w, r1.w, l(0.000000)
and r1.w, r1.w, l(0x3f800000)
mul r0.w, r0.w, r1.w
mul r2.xzw, r2.zzzz, r6.xxyz
mul r3.xyz, r6.xyzx, r0.wwww
add r0.w, -r2.y, l(1.000000)
mul r1.w, r0.w, r0.w
mul r1.w, r1.w, r1.w
mul r0.w, r0.w, r1.w
add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
mul r0.xyz, r0.xyzx, r3.xyzx
mad r0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
div r0.w, v2.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used