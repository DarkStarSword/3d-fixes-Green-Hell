// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 77f16343cce2bfd6-ps.txt
// 3DMigoto: 77f16343cce2bfd6 |    Unity headers extracted from Amplify_botfly_wound_shader
//    Shader "Amplify/botfly_wound_shader" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="AlphaTest+0" "RenderType"="Transparent" }
//        Pass 2/4 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="AlphaTest+0" "RenderType"="Transparent" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_botfly_wound_shader:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 159 8 2
//   undeciphered1a: 7
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" }
//   undeciphered2: 1 7 8 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 160
//   Vector 32 [_LightColor0]
//   Vector 64 [_main_base_nrm_ST]
//   Vector 80 [_Masks_ST]
//   Vector 96 [_Color1]
//   Vector 112 [_albedo_ST]
//   Float 128 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   ConstBuffer "Amplifybotfly_wound_shader" 80
//   Vector 0 [_albedo_falki1_color]
//   Vector 16 [_kierunekrobala1] 2
//   Vector 24 [_kierunekrobala2] 2
//   Float 32 [_main_mask_power]
//   Float 36 [_albedo_falki1]
//   Float 40 [_Float0]
//   Float 44 [_smoothnes2]
//   Float 48 [_smoothnes]
//   Float 52 [_detail_sking_tiling]
//   Float 56 [_tiling_falek]
//   Float 60 [_szybkosc_robala]
//   Float 64 [_normal_scale_falek]
//   Float 68 [_detail_skin_intensity]
//   Float 72 [_mask_power]
//   Float 76 [_main_base_scale_nrm]
//   SetTexture 0 [_nrm_do_ruszania] 2D 2
//   SetTexture 1 [_main_base_nrm] 2D 3
//   SetTexture 2 [_Masks] 2D 4
//   SetTexture 3 [_detail_normal] 2D 5
//   SetTexture 4 [_albedo] 2D 6
//   SetTexture 5 [_ShadowMapTexture] 2D 1
//   SetTexture 6 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityProbeVolume" 6
//   BindCB "Amplifybotfly_wound_shader" 7
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:24:56 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 7     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyzw        6     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[9], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_constantbuffer cb7[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyw
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 77f16343cce2bfd6-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, r8.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
mul r2.xy, v1.xyxx, cb7[3].yyyy
mad r3.xyzw, v1.xyxy, cb7[3].zzzz, l(0.000000, 1.000000, 0.000000, 1.000000)
mul r4.xyzw, cb7[1].zwxy, cb7[3].wwww
mad r3.xyzw, cb1[0].yyyy, r4.xyzw, r3.xyzw
sample r4.xyzw, r3.xyxx, t0.xyzw, s2
mul r5.x, r4.w, r4.x
mov r5.yz, r4.yyyy
mad r4.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r2.zw, r4.xxxz, cb7[4].xxxx
dp2 r1.w, r2.zwzz, r2.zwzz
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.w, r1.w
sample r3.xyzw, r3.zwzz, t0.xyzw, s2
mul r5.x, r3.w, r3.x
mov r5.yz, r3.yyyy
mad r3.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r3.xyz, r3.xyzx, cb7[4].xxxx
dp2 r2.z, r3.xzxx, r3.xzxx
min r2.z, r2.z, l(1.000000)
add r2.z, -r2.z, l(1.000000)
sqrt r2.z, r2.z
mad r5.xy, v1.xyxx, cb0[4].xyxx, cb0[4].zwzz
sample r5.xyzw, r5.xyxx, t1.xyzw, s3
mul r5.x, r5.w, r5.x
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r5.xy, r5.xyxx, cb7[4].wwww
dp2 r2.w, r5.xyxx, r5.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r5.z, r2.w
mad r6.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r6.xyzw, r6.xyxx, t2.xyzw, s4
mad r3.xyz, r4.xyzx, cb7[4].xxxx, r3.xyzx
mul r3.w, r1.w, r2.z
dp3 r1.w, r3.xywx, r3.xywx
rsq r1.w, r1.w
mul r2.z, r1.w, r3.w
mad r4.xy, r3.xyxx, r1.wwww, r5.xyxx
mul r4.z, r5.z, r2.z
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r3.xyw, r1.wwww, r4.xyxz
add r2.z, -r6.y, l(1.000000)
log r2.z, r2.z
mul r2.z, r2.z, cb7[4].z
exp r2.z, r2.z
mad r4.xyz, -r4.xyzx, r1.wwww, r5.xyzx
mad r3.xyw, r2.zzzz, r4.xyxz, r3.xyxw
sample r2.xyzw, r2.xyxx, t3.xyzw, s5
mul r2.x, r2.w, r2.x
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.zw, r2.xxxy, cb7[4].yyyy
dp2 r1.w, r2.zwzz, r2.zwzz
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.w, r1.w
mad r2.xy, r2.xyxx, cb7[4].yyyy, r3.xyxx
mul r2.z, r1.w, r3.w
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mad r3.xy, v1.xyxx, cb0[7].xyxx, cb0[7].zwzz
sample r4.xyzw, r3.xyxx, t4.xyzw, s6
mul_sat r3.xyw, r4.xyxz, cb0[6].xyxz
mul r4.xyz, r6.xyxx, cb7[2].xzyx
mul_sat r1.w, r3.z, r4.z
mul_sat r5.xyz, r3.xywx, cb7[0].xyzx
add r5.xyz, -r3.xywx, r5.xyzx
mad r3.xyz, r1.wwww, r5.xyzx, r3.xywx
mov_sat r4.xy, r4.xyxx
mul r3.xyz, r3.xyzx, r4.xxxx
add r1.w, cb7[2].w, -cb7[3].x
mad r1.w, r4.y, r1.w, cb7[3].x
add r2.w, r4.x, -cb0[8].x
lt r2.w, r2.w, l(0.000000)
discard_nz r2.w
mov r5.x, cb4[9].z
mov r5.y, cb4[10].z
mov r5.z, cb4[11].z
dp3 r2.w, r0.xyzx, r5.xyzx
add r4.yzw, v5.xxyz, -cb3[25].xxyz
dp3 r3.w, r4.yzwy, r4.yzwy
sqrt r3.w, r3.w
add r3.w, -r2.w, r3.w
mad r2.w, cb3[25].w, r3.w, r2.w
mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
eq r3.w, cb6[0].x, l(1.000000)
if_nz r3.w
  eq r3.w, cb6[0].y, l(1.000000)
  mul r4.yzw, v5.yyyy, cb6[2].xxyz
  mad r4.yzw, cb6[1].xxyz, v5.xxxx, r4.yyzw
  mad r4.yzw, cb6[3].xxyz, v5.zzzz, r4.yyzw
  add r4.yzw, r4.yyzw, cb6[4].xxyz
  movc r4.yzw, r3.wwww, r4.yyzw, v5.xxyz
  add r4.yzw, r4.yyzw, -cb6[6].xxyz
  mul r5.yzw, r4.yyzw, cb6[5].xxyz
  mad r3.w, r5.y, l(0.250000), l(0.750000)
  mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
  max r5.x, r3.w, r4.y
  sample r5.xyzw, r5.xzwx, t6.xyzw, s0
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
div r4.yz, v6.xxyx, v6.wwww
sample r5.xyzw, r4.yzyy, t5.xyzw, s1
add r3.w, r3.w, -r5.x
mad r2.w, r2.w, r3.w, r5.x
dp3 r5.x, v2.xyzx, r2.xyzx
dp3 r5.y, v3.xyzx, r2.xyzx
dp3 r5.z, v4.xyzx, r2.xyzx
dp3 r2.x, r5.xyzx, r5.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, r5.xyzx
mul r4.yzw, r2.wwww, cb0[2].xxyz
mul r3.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
add r1.w, -r1.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r2.xyzx, r1.xyzx
dp3_sat r1.x, r2.xyzx, cb2[0].xyzx
dp3_sat r1.y, r2.xyzx, r0.xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.x, l(1.000000)
mul r1.z, r0.z, r0.z
mul r1.z, r1.z, r1.z
mul r0.z, r0.z, r1.z
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.z, -|r0.w|, l(1.000000)
mul r2.x, r1.z, r1.z
mul r2.x, r2.x, r2.x
mul r1.z, r1.z, r2.x
mad r0.y, r0.y, r1.z, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
max r0.z, r0.z, l(0.002000)
add r1.z, -r0.z, l(1.000000)
mad r1.w, |r0.w|, r1.z, r0.z
mad r1.z, r1.x, r1.z, r0.z
mul r0.w, |r0.w|, r1.z
mad r0.w, r1.x, r1.w, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.z, r1.y, r0.z, -r1.y
mad r1.y, r1.z, r1.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.y, r1.y, r1.y, l(1.000000012E-007)
div r0.z, r0.z, r1.y
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r1.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
mul r1.xyz, r0.yyyy, r4.yzwy
mul r0.yzw, r4.yyzw, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
mad r0.x, r0.x, l(0.960000), l(0.040000)
mul r0.xyz, r0.xxxx, r0.yzwy
mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, r4.x
ret
// Approximately 0 instruction slots used