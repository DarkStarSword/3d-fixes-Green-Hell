// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 53129d5be5767be5-ps.txt
// 3DMigoto: 53129d5be5767be5 |    Unity headers extracted from Amplify_mia_disappear_hair
//    Shader "Amplify/mia_disappear_hair" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "QUEUE"="Geometry+0" "RenderType"="Transparent" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+0" "RenderType"="Transparent" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_mia_disappear_hair:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 180 7 2
//   undeciphered1a: 10
//   Keywords { "POINT_COOKIE" "FOG_LINEAR" "_USE_ALBO_HAIR_ANISTROPY_ON" "_USE_ANISTROPY_HAIR_OPACITY_MASK_ON" "_USE_SPECULAR_HAIR_ANISTROPY_ON" }
//   undeciphered2: 1 7 7 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 96 [_LightColor0]
//   Vector 128 [_Normal_ST]
//   Vector 160 [_Albedo_ST]
//   Float 180 [_Cutoff]
//   Matrix 32 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 96 [_ScreenParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityPerDraw" 176
//   Matrix 0 [unity_ObjectToWorld]
//   Matrix 64 [unity_WorldToObject]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   ConstBuffer "Amplifymia_disappear_hair" 128
//   Vector 16 [_AlbedoTint]
//   Vector 32 [_AdditionalTint]
//   Vector 64 [_SpecularTint]
//   Float 80 [_main_normal_scale]
//   Float 84 [_detail_normal_scale]
//   Float 88 [_detail_tiling]
//   Float 92 [_anistropyX]
//   Float 96 [_anistropyy]
//   Float 100 [_specularintensity]
//   Float 104 [_smooothnes]
//   Float 108 [_disappear_mask_multiply]
//   Float 112 [_disolve_texture_tile]
//   Float 116 [_disappear_mask_size]
//   SetTexture 0 [_Normal] 2D 3
//   SetTexture 1 [_Normal_detail] 2D 4
//   SetTexture 2 [_Albedo] 2D 5
//   SetTexture 3 [_dissolveguide] 2D 6
//   SetTexture 4 [_LightTextureB0] 2D 2
//   SetTexture 5 [_LightTexture0] CUBE 1
//   SetTexture 6 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityPerDraw" 3
//   BindCB "UnityFog" 4
//   BindCB "UnityProbeVolume" 5
//   BindCB "Amplifymia_disappear_hair" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:02:55 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 8     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// COLOR                    0   xyzw        6     NONE   float   x
// TEXCOORD                 5   xyzw        7     NONE   float   xy w
// TEXCOORD                 6   xyz         8     NONE   float
// TEXCOORD                 7   xyzw        9     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 9.000000, 0, 0, 0},
                              { 3.000000, 0, 0, 0},
                              { 11.000000, 0, 0, 0},
                              { 13.000000, 0, 0, 0},
                              { 5.000000, 0, 0, 0},
                              { 15.000000, 0, 0, 0},
                              { 7.000000, 0, 0, 0},
                              { 4.000000, 0, 0, 0},
                              { 12.000000, 0, 0, 0},
                              { 2.000000, 0, 0, 0},
                              { 10.000000, 0, 0, 0},
                              { 16.000000, 0, 0, 0},
                              { 8.000000, 0, 0, 0},
                              { 14.000000, 0, 0, 0},
                              { 6.000000, 0, 0, 0} }
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb4[2], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_constantbuffer cb6[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.x
dcl_input_ps linear v7.xyw
dcl_output o0.xyzw
dcl_temps 12
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r10.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 53129d5be5767be5-ps.txt

mul r10.w, -r10.x, r10.y
mad r11.xyz, -r10.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r1.x, r0.w
mul r1.yzw, r0.xxyz, r1.xxxx
add r2.xyz, -v5.xyzx, r11.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mad r3.xy, v1.xyxx, cb0[8].xyxx, cb0[8].zwzz
mul r3.zw, v1.xxxy, cb6[5].zzzz
sample r4.xyzw, r3.xyxx, t0.xyzw, s3
mul r4.x, r4.w, r4.x
mad r3.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xy, r3.xyxx, cb6[5].xxxx
dp2 r2.w, r4.xyxx, r4.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r2.w, r2.w
sample r4.xyzw, r3.zwzz, t1.xyzw, s4
mul r4.x, r4.w, r4.x
mad r3.zw, r4.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r3.zw, r3.zzzw, cb6[5].yyyy
dp2 r4.x, r3.zwzz, r3.zwzz
min r4.x, r4.x, l(1.000000)
add r4.x, -r4.x, l(1.000000)
sqrt r4.x, r4.x
mad r3.xy, r3.xyxx, cb6[5].xxxx, r3.zwzz
mul r3.z, r2.w, r4.x
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
mad r4.xy, v1.xyxx, cb0[10].xyxx, cb0[10].zwzz
sample r4.xyzw, r4.xyxx, t2.xyzw, s5
mul r5.xyz, r4.xxxx, cb6[1].xyzx
mad r6.xyz, r4.xxxx, cb6[2].xyzx, -r5.xyzx
mad r5.xyz, r4.yyyy, r6.xyzx, r5.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r6.xyz, r0.wwww, r0.xyzx
mad r7.xyz, r0.xyzx, r0.wwww, r2.xyzx
dp3 r0.w, r7.xyzx, r7.xyzx
rsq r0.w, r0.w
mul r7.xyz, r0.wwww, r7.xyzx
dp3 r8.x, v2.xyzx, r3.xyzx
dp3 r8.y, v3.xyzx, r3.xyzx
dp3 r8.z, v4.xyzx, r3.xyzx
dp3 r0.w, r8.xyzx, r8.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r8.xyzx
mov r8.y, v4.x
mov r8.z, v2.x
mov r8.x, v3.x
mul r9.xyz, r3.zxyz, r8.xyzx
mad r8.xyz, r3.yzxy, r8.yzxy, -r9.xyzx
dp3 r0.w, r8.xyzx, r8.xyzx
rsq r0.w, r0.w
mul r8.xyz, r0.wwww, r8.xyzx
dp3 r0.w, r7.xyzx, r8.xyzx
div r2.w, r0.w, cb6[5].w
div r0.w, r0.w, cb6[6].x
dp3 r3.w, r3.xyzx, r7.xyzx
dp3 r4.x, r3.xyzx, r6.xyzx
mul r6.xyz, r4.zzzz, cb6[4].xyzx
mul r0.w, r0.w, r0.w
mad r0.w, r2.w, r2.w, r0.w
add r2.w, r3.w, l(1.000000)
div r0.w, r0.w, r2.w
mul r0.w, r0.w, l(-2.885390)
exp r0.w, r0.w
max r2.w, r4.x, l(0.000000)
mul r0.w, r0.w, r2.w
mul r4.xyz, r0.wwww, r6.xyzx
mul r4.xyz, r4.xyzx, v6.xxxx
mul r6.xyz, r4.xyzx, cb6[6].yyyy
mul r7.xyz, v5.yyyy, cb3[5].xyzx
mad r7.xyz, cb3[4].xyzx, v5.xxxx, r7.xyzx
mad r7.xyz, cb3[6].xyzx, v5.zzzz, r7.xyzx
add r7.xyz, r7.xyzx, cb3[7].xyzx
mul r0.w, r7.y, cb3[1].y
mad r0.w, cb3[0].y, r7.x, r0.w
mad r0.w, cb3[2].y, r7.z, r0.w
mul r7.xy, v1.xyxx, cb6[7].xxxx
sample r7.xyzw, r7.xyxx, t3.xyzw, s6
mad r0.w, r7.x, cb6[7].y, r0.w
ge r0.w, r0.w, cb6[6].w
movc r0.w, r0.w, l(0), l(1.000000)
div r7.xy, v7.xyxx, v7.wwww
mul r7.xy, r7.xyxx, cb1[6].xyxx
mul r7.xy, r7.xyxx, l(0.250000, 0.250000, 0.000000, 0.000000)
ge r7.zw, r7.xxxy, -r7.xxxy
frc r7.xy, |r7.xyxx|
movc r7.xy, r7.zwzz, r7.xyxx, -r7.xyxx
mul r7.xy, r7.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000)
ftoi r7.xy, r7.xyxx
ishl r2.w, r7.y, l(2)
iadd r2.w, r7.x, r2.w
mul r2.w, l(0.062500), icb[r2.w + 0].x
mul r0.w, r0.w, r4.w
ge r2.w, r0.w, r2.w
and r3.w, r2.w, l(0x3f800000)
movc r2.w, r2.w, l(0), l(1.000000)
mad r0.w, r0.w, r2.w, r3.w
add r0.w, r0.w, -cb0[11].y
lt r0.w, r0.w, l(0.000000)
discard_nz r0.w
mul r7.xyz, v5.yyyy, cb0[3].xyzx
mad r7.xyz, cb0[2].xyzx, v5.xxxx, r7.xyzx
mad r7.xyz, cb0[4].xyzx, v5.zzzz, r7.xyzx
add r7.xyz, r7.xyzx, cb0[5].xyzx
eq r0.w, cb5[0].x, l(1.000000)
if_nz r0.w
  eq r0.w, cb5[0].y, l(1.000000)
  mul r8.xyz, v5.yyyy, cb5[2].xyzx
  mad r8.xyz, cb5[1].xyzx, v5.xxxx, r8.xyzx
  mad r8.xyz, cb5[3].xyzx, v5.zzzz, r8.xyzx
  add r8.xyz, r8.xyzx, cb5[4].xyzx
  movc r8.xyz, r0.wwww, r8.xyzx, v5.xyzx
  add r8.xyz, r8.xyzx, -cb5[6].xyzx
  mul r8.yzw, r8.xxyz, cb5[5].xxyz
  mad r0.w, r8.y, l(0.250000), l(0.750000)
  mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  max r8.x, r0.w, r2.w
  sample r8.xyzw, r8.xzwx, t6.xyzw, s0
else
  mov r8.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r0.w, r8.xyzw, cb2[46].xyzw
dp3 r2.w, r7.xyzx, r7.xyzx
sample r8.xyzw, r2.wwww, t4.xyzw, s2
sample r7.xyzw, r7.xyzx, t5.xyzw, s1
mul r2.w, r7.w, r8.x
mul r0.w, r0.w, r2.w
mul r7.xyz, r0.wwww, cb0[6].xyzx
max r0.w, r6.y, r6.x
max r0.w, r6.z, r0.w
add r0.w, -r0.w, l(1.000000)
mul r5.xyz, r0.wwww, r5.xyzx
add r0.w, -cb6[6].z, l(1.000000)
mad r0.xyz, r0.xyzx, r1.xxxx, r2.xyzx
dp3 r1.x, r0.xyzx, r0.xyzx
max r1.x, r1.x, l(0.001000)
rsq r1.x, r1.x
mul r0.xyz, r0.xyzx, r1.xxxx
dp3 r1.x, r3.xyzx, r2.xyzx
dp3_sat r2.x, r3.xyzx, r1.yzwy
dp3_sat r2.y, r3.xyzx, r0.xyzx
dp3_sat r0.x, r1.yzwy, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r0.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r2.x, l(1.000000)
mul r1.y, r0.z, r0.z
mul r1.y, r1.y, r1.y
mul r0.z, r0.z, r1.y
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.y, -|r1.x|, l(1.000000)
mul r1.z, r1.y, r1.y
mul r1.z, r1.z, r1.z
mul r1.y, r1.y, r1.z
mad r0.y, r0.y, r1.y, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r0.w, r0.w
max r0.z, r0.z, l(0.002000)
add r0.w, -r0.z, l(1.000000)
mad r1.y, |r1.x|, r0.w, r0.z
mad r0.w, r2.x, r0.w, r0.z
mul r0.w, r0.w, |r1.x|
mad r0.w, r2.x, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r2.y, r0.z, -r2.y
mad r1.x, r1.x, r2.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r2.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r6.xyzx, r6.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r7.xyzx
mul r0.yzw, r7.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
mad r2.xyz, -r4.xyzx, cb6[6].yyyy, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad r0.xyz, r5.xyzx, r1.xyzx, r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb4[1].z, cb4[1].w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used