// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e3ebb6299a673a99-ps.txt
// 3DMigoto: e3ebb6299a673a99 |    Unity headers extracted from Amplify_rock_surface
//    Shader "Amplify/rock_surface" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_rock_surface:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 201802150 238 7 6
//   undeciphered1a: 13
//   Keywords { "DIRECTIONAL" "FOG_LINEAR" "_USE_MOSS_ALBEDO_ON" }
//   undeciphered2: 1 9 7 8 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 144
//   Vector 32 [_LightColor0]
//   Vector 64 [_Normal_ST]
//   Float 80 [_moss_mask_source_switch]
//   Vector 96 [_Albedo_ST]
//   Float 112 [_Moss_Mask_Size]
//   Float 116 [_Moss_Mask_power]
//   Float 120 [TERRAIN_RainIntensity]
//   Float 124 [TERRAIN_GlobalWetness]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   ConstBuffer "Amplifyrock_surface" 16
//   Float 0 [_detail_normal_scale]
//   Float 4 [_detail_tiling]
//   SetTexture 0 [_Normal] 2D 3
//   SetTexture 1 [_Albedo] 2D 4
//   SetTexture 2 [_Moss_Normal] 2D 2
//   SetTexture 3 [_terrain_wetmask_gh] 2D 6
//   SetTexture 4 [_Rain_droplets_normal_map] 2D 5
//   SetTexture 5 [_Moss_Albedo] 2D 7
//   SetTexture 6 [unity_SpecCube0] CUBE 0
//   SetTexture 7 [unity_SpecCube1] CUBE -1
//   SetTexture 8 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityReflectionProbes" 4
//   BindCB "UnityProbeVolume" 5
//   BindCB "Amplifyrock_surface" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:22:41 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 5     z         1     NONE   float     z
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 6   xyzw        5     NONE   float
// TEXCOORD                 7   xyzw        6     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[8], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_constantbuffer cb6[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texturecube (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e3ebb6299a673a99-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v2.w
mov r0.y, v3.w
mov r0.z, v4.w
add r1.xyz, -r0.xyzx, r14.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mul r3.xy, v1.xyxx, cb6[0].yyyy
mad r3.zw, v1.xxxy, cb0[4].xxxy, cb0[4].zzzw
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.zwzz, t0.xywz, s3
mul r4.x, r4.z, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r4.xyxx, r4.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r4.z, r1.w
mad r3.zw, v1.xxxy, cb0[6].xxxy, cb0[6].zzzw
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r3.zwzz, t1.xyzw, s4
add r1.w, -r5.z, r5.y
mad r1.w, cb0[5].x, r1.w, r5.z
mul r1.w, r1.w, cb0[7].x
log r1.w, r1.w
mul r1.w, r1.w, cb0[7].y
exp r1.w, r1.w
min r1.w, r1.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r3.xyxx, t2.xywz, s2
mul r6.x, r6.z, r6.x
mad r3.zw, r6.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r6.xy, r3.zwzz, cb6[0].xxxx
dp2 r2.w, r6.xyxx, r6.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r2.w, r2.w
mad r6.xy, r3.zwzz, cb6[0].xxxx, r4.xyxx
mul r6.z, r4.z, r2.w
dp3 r2.w, r6.xyzx, r6.xyzx
rsq r2.w, r2.w
mul r7.xyz, r2.wwww, r6.xyzx
mad r4.xyz, -r6.xyzx, r2.wwww, r4.xyzx
mad r4.xyz, r1.wwww, r4.xyzx, r7.xyzx
add r6.xyz, -r4.xyzx, l(0.494117588, 0.494117588, 1.000000, 0.000000)
mad r6.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r4.xyzx
mul r2.w, cb0[7].z, l(1.500000)
max r2.w, r2.w, l(0.000000)
min r2.w, r2.w, l(1.300000)
mul r7.yz, v2.wwww, l(0.000000, 1.600000, 0.000488281250, 0.000000)
mul r7.xw, v4.wwww, l(1.600000, 0.000000, 0.000000, 0.000488281250)
frc r3.zw, r7.yyyx
mul r4.w, cb1[0].y, l(0.625000)
ge r5.w, r4.w, -r4.w
frc r4.w, |r4.w|
movc r4.w, r5.w, r4.w, -r4.w
mul r4.w, r4.w, l(64.000000)
round_ne r4.w, r4.w
lt r5.w, r4.w, l(0.000000)
and r5.w, r5.w, l(0x42800000)
add r4.w, r4.w, r5.w
mul r5.w, r4.w, l(0.125000)
ge r6.w, r5.w, -r5.w
frc r5.w, |r5.w|
movc r5.w, r6.w, r5.w, -r5.w
mul r5.w, r5.w, l(8.000000)
round_ne r5.w, r5.w
mul r7.x, r5.w, l(0.125000)
add r4.w, r4.w, -r5.w
mul r4.w, r4.w, l(0.015625)
ge r5.w, r4.w, -r4.w
frc r4.w, |r4.w|
movc r4.w, r5.w, r4.w, -r4.w
mul r4.w, r4.w, l(8.000000)
round_ne r4.w, r4.w
add r4.w, -r4.w, l(7.000000)
mul r7.y, r4.w, l(0.125000)
mad r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.125000, 0.125000), r7.xxxy
add_sat r4.w, cb0[7].w, cb0[7].w
sample_indexable(texture2d)(float,float,float,float) r5.w, r7.zwzz, t3.xyzw, s6
log r5.w, r5.w
mul r5.w, r5.w, l(1.500000)
exp r5.w, r5.w
min r5.w, r5.w, l(1.000000)
mov_sat r6.w, v3.z
add r5.w, -r5.w, r6.w
mul r6.w, r4.w, r5.w
mad r5.w, -r5.w, r4.w, l(1.000000)
mad r4.w, r5.w, l(-2.000000), r4.w
add_sat r5.w, r4.w, r4.w
sample_indexable(texture2d)(float,float,float,float) r7.xyz, r3.zwzz, t4.xywz, s5
mul r7.x, r7.z, r7.x
mad r3.zw, r7.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r7.xy, r2.wwww, r3.zwzz
dp2 r7.x, r7.xyxx, r7.xyxx
min r7.x, r7.x, l(1.000000)
add r7.x, -r7.x, l(1.000000)
sqrt r7.x, r7.x
mad r8.xy, r3.zwzz, r2.wwww, r6.xyxx
mul r8.z, r6.z, r7.x
dp3 r2.w, r8.xyzx, r8.xyzx
rsq r2.w, r2.w
mad r6.xyz, r8.xyzx, r2.wwww, -r4.xyzx
mad r4.xyz, r5.wwww, r6.xyzx, r4.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t5.xyzw, s7
add r5.xyz, -r3.xyzx, r5.xyzx
mad r3.xyz, r1.wwww, r5.xyzx, r3.xyzx
max r5.xy, r6.wwww, l(0.000000, 0.200000, 0.000000, 0.000000)
min r5.xy, r5.xyxx, l(0.450000, 0.850000, 0.000000, 0.000000)
mad r3.xyz, r5.xxxx, -r3.xyzx, r3.xyzx
max r1.w, r4.w, l(0.000000)
min r1.w, r1.w, l(0.100000)
eq r2.w, cb5[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb5[0].y, l(1.000000)
  mul r5.xzw, v3.wwww, cb5[2].xxyz
  mad r5.xzw, cb5[1].xxyz, v2.wwww, r5.xxzw
  mad r5.xzw, cb5[3].xxyz, v4.wwww, r5.xxzw
  add r5.xzw, r5.xxzw, cb5[4].xxyz
  movc r5.xzw, r2.wwww, r5.xxzw, r0.xxyz
  add r5.xzw, r5.xxzw, -cb5[6].xxyz
  mul r6.yzw, r5.xxzw, cb5[5].xxyz
  mad r2.w, r6.y, l(0.250000), l(0.750000)
  mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  max r6.x, r2.w, r3.w
  sample_indexable(texture3d)(float,float,float,float) r6.xyzw, r6.xzwx, t8.xyzw, s1
else
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r6.xyzw, cb2[46].xyzw
dp3 r6.x, v2.xyzx, r4.xyzx
dp3 r6.y, v3.xyzx, r4.xyzx
dp3 r6.z, v4.xyzx, r4.xyzx
dp3 r3.w, r6.xyzx, r6.xyzx
rsq r3.w, r3.w
mul r4.xyz, r3.wwww, r6.xyzx
add r3.w, -r5.y, l(1.000000)
dp3 r4.w, -r2.xyzx, r4.xyzx
add r4.w, r4.w, r4.w
mad r5.xzw, r4.xxyz, -r4.wwww, -r2.xxyz
mul r6.xyz, r2.wwww, cb0[2].xyzx
lt r2.w, l(0.000000), cb4[2].w
if_nz r2.w
  dp3 r2.w, r5.xzwx, r5.xzwx
  rsq r2.w, r2.w
  mul r7.xyz, r2.wwww, r5.xzwx
  add r8.xyz, -r0.xyzx, cb4[0].xyzx
  div r8.xyz, r8.xyzx, r7.xyzx
  add r9.xyz, -r0.xyzx, cb4[1].xyzx
  div r9.xyz, r9.xyzx, r7.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r2.w, r8.y, r8.x
  min r2.w, r8.z, r2.w
  add r8.xyz, r0.xyzx, -cb4[2].xyzx
  mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
else
  mov r7.xyz, r5.xzwx
endif
mad r2.w, -r3.w, l(0.700000), l(1.700000)
mul r2.w, r2.w, r3.w
mul r2.w, r2.w, l(6.000000)
sample_l_indexable(texturecube)(float,float,float,float) r7.xyzw, r7.xyzx, t6.xyzw, s0, r2.w
add r4.w, r7.w, l(-1.000000)
mad r4.w, cb4[3].w, r4.w, l(1.000000)
log r4.w, r4.w
mul r4.w, r4.w, cb4[3].y
exp r4.w, r4.w
mul r4.w, r4.w, cb4[3].x
mul r8.xyz, r7.xyzx, r4.wwww
lt r6.w, cb4[1].w, l(0.999990)
if_nz r6.w
  lt r6.w, l(0.000000), cb4[6].w
  if_nz r6.w
    dp3 r6.w, r5.xzwx, r5.xzwx
    rsq r6.w, r6.w
    mul r9.xyz, r5.xzwx, r6.wwww
    add r10.xyz, -r0.xyzx, cb4[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -r0.xyzx, cb4[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r6.w, r10.y, r10.x
    min r6.w, r10.z, r6.w
    add r0.xyz, r0.xyzx, -cb4[6].xyzx
    mad r5.xzw, r9.xxyz, r6.wwww, r0.xxyz
  endif
  sample_l_indexable(texturecube)(float,float,float,float) r9.xyzw, r5.xzwx, t7.xyzw, s0, r2.w
  add r0.x, r9.w, l(-1.000000)
  mad r0.x, cb4[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb4[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb4[7].x
  mul r0.xyz, r9.xyzx, r0.xxxx
  mad r5.xzw, r4.wwww, r7.xxyz, -r0.xxyz
  mad r8.xyz, cb4[1].wwww, r5.xzwx, r0.xyzx
endif
add r0.xyz, r3.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r0.xyz, r1.wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -r1.w, l(0.960000), l(0.960000)
mul r3.xyz, r1.wwww, r3.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r4.xyzx, r2.xyzx
dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
dp3_sat r2.y, r4.xyzx, r1.xyzx
dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
mul r1.y, r1.x, r1.x
dp2 r1.y, r1.yyyy, r3.wwww
add r1.y, r1.y, l(-0.500000)
add r1.z, -r2.x, l(1.000000)
mul r2.z, r1.z, r1.z
mul r2.z, r2.z, r2.z
mul r1.z, r1.z, r2.z
mad r1.z, r1.y, r1.z, l(1.000000)
add r2.z, -|r0.w|, l(1.000000)
mul r2.w, r2.z, r2.z
mul r2.w, r2.w, r2.w
mul r2.z, r2.z, r2.w
mad r1.y, r1.y, r2.z, l(1.000000)
mul r1.y, r1.y, r1.z
mul r1.y, r2.x, r1.y
mul r1.z, r3.w, r3.w
mad r2.w, -r3.w, r3.w, l(1.000000)
mad r3.w, |r0.w|, r2.w, r1.z
mad r2.w, r2.x, r2.w, r1.z
mul r0.w, |r0.w|, r2.w
mad r0.w, r2.x, r3.w, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r2.w, r1.z, r1.z
mad r3.w, r2.y, r2.w, -r2.y
mad r2.y, r3.w, r2.y, l(1.000000)
mul r2.w, r2.w, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r2.w, r2.y
mul r0.w, r0.w, r2.y
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.x, r0.w
mad r1.z, r1.z, r1.z, l(1.000000)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
dp3 r2.x, r0.xyzx, r0.xyzx
ne r2.x, r2.x, l(0.000000)
and r2.x, r2.x, l(0x3f800000)
mul r0.w, r0.w, r2.x
add r1.w, -r1.w, r5.y
add r1.w, r1.w, l(1.000000)
mul r2.xyw, r1.yyyy, r6.xyxz
mul r4.xyz, r6.xyzx, r0.wwww
add r0.w, -r1.x, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.w, r0.w, r1.x
add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r5.xyz, r5.xyzx, r0.wwww, r0.xyzx
mul r4.xyz, r4.xyzx, r5.xyzx
mad r2.xyw, r3.xyxz, r2.xyxw, r4.xyxz
mul r1.xyz, r8.xyzx, r1.zzzz
add r3.xyz, -r0.xyzx, r1.wwww
mad r0.xyz, r2.zzzz, r3.xyzx, r0.xyzx
mad r0.xyz, r1.xyzx, r0.xyzx, r2.xywx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
add r0.xyz, r0.xyzx, -cb3[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb3[0].xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used