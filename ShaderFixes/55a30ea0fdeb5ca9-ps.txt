// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 55a30ea0fdeb5ca9-ps.txt
// 3DMigoto: 55a30ea0fdeb5ca9 |    Unity headers extracted from Lux Water_WaterSurface
//    Shader "Lux Water/WaterSurface" {
//      CustomEditor "LuxWaterMaterialEditor"
//      SubShader 1/1 {
//        LOD 200
//        Tags { "FORCENOSHADOWCASTING"="true" "QUEUE"="Transparent-1" "RenderType"="Opaque" }
//        Pass 3/4 {
//          Name "FORWARD"
//          Tags { "FORCENOSHADOWCASTING"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Transparent-1" "RenderType"="Opaque" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Lux Water_WaterSurface:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 194 7 2
//   undeciphered1a: 8
//   Keywords { "DIRECTIONAL" "GEOM_TYPE_BRANCH" "USINGWATERPROJECTORS" "USINGWATERVOLUME" }
//   undeciphered2: 1 4 5 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 528
//   Vector 32 [_LightColor0]
//   Vector 48 [_SpecColor]
//   Float 64 [_FresnelPower]
//   Float 100 [_WaterIOR]
//   Float 128 [_ScatteringPower]
//   Vector 132 [_TranslucencyColor] 3
//   Vector 144 [_FarBumpSampleParams] 2
//   Vector 160 [_BumpTiling]
//   Vector 176 [_BumpScale]
//   Vector 192 [_FinalBumpSpeed01]
//   Vector 208 [_FinalBumpSpeed23] 2
//   Float 216 [_WaterSurfaceYPos]
//   Float 340 [_Glossiness]
//   Float 344 [_InvFade]
//   Vector 368 [_Color]
//   Vector 384 [_DepthAtten] 3
//   Float 396 [_Density]
//   Float 404 [_FogAbsorptionCancellation]
//   Float 408 [_AbsorptionHeight]
//   Float 412 [_AbsorptionMaxHeight]
//   Float 416 [_AbsorptionDepth]
//   Float 420 [_AbsorptionColorStrength]
//   Float 424 [_AbsorptionStrength]
//   Float 428 [_Refraction]
//   Vector 496 [_GrabTexture_TexelSize]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   Vector 112 [_ZBufferParams]
//   ConstBuffer "UnityPerCameraRare" 352
//   Matrix 288 [unity_CameraToWorld]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_BumpMap] 2D 1
//   SetTexture 1 [_LuxWater_NormalOverlay] 2D 2
//   SetTexture 2 [_CameraDepthTexture] 2D 3
//   SetTexture 3 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityPerCameraRare" 2
//   BindCB "UnityLighting" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:04:15 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyzw        5     NONE   float   xy
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 6   xyzw        7     NONE   float   xyz
// TEXCOORD                 7   xyzw        8     NONE   float
// TEXCOORD                 9   xyzw        9     NONE   float
// SV_IsFrontFace           0   x          10    FFACE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[32], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[22], immediateIndexed
dcl_constantbuffer cb3[47], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.xyzw
dcl_input_ps linear v7.xyz
dcl_input_ps_sgv v10.x, is_front_face
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 55a30ea0fdeb5ca9-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

movc r0.x, v10.x, l(1.000000), l(-1.000000)
add r0.yzw, -v4.xxyz, r9.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r1.yzw, r0.yyzw, r1.xxxx
div r2.xy, v6.xyxx, v6.wwww
mul r3.xyzw, cb0[12].xyzw, cb1[0].xxxx
mad r4.xyzw, v5.xyxy, cb0[10].xxyy, r3.xyzw
mul r2.zw, cb0[13].xxxy, cb1[0].xxxx
mad r2.zw, v5.xxxy, cb0[10].zzzz, r2.zzzw
mul r3.xy, r3.xyxx, cb0[9].xxxx
mad r3.xy, r4.xyxx, cb0[9].xxxx, r3.xyxx
sample r3.xyzw, r3.xyxx, t0.xyzw, s1
mad r3.xz, r3.wwyw, l(2.000000, 0.000000, 2.000000, 0.000000), l(-1.000000, 0.000000, -1.000000, 0.000000)
mad r3.xz, r3.xxzx, l(0.050000, 0.000000, 0.050000, 0.000000), r4.xxyx
sample r5.xyzw, r3.xzxx, t0.xyzw, s1
mul_sat r3.x, v6.w, cb0[9].y
add r3.yz, r3.wwyw, -r5.wwyw
mad r3.xy, r3.xxxx, r3.yzyy, r5.wyww
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, cb0[11].xxxx
mad r3.zw, r3.xxxy, l(0.000000, 0.000000, 0.050000, 0.050000), r4.zzzw
sample r4.xyzw, r3.zwzz, t0.xyzw, s1
sample r5.xyzw, r2.zwzz, t0.xyzw, s1
mad r2.zw, r4.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mad r2.zw, r2.zzzw, cb0[11].yyyy, r3.xxxy
mad r3.xy, r5.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r3.xy, r3.xyxx, cb0[11].zzzz, r2.zwzz
dp2 r2.z, r3.xyxx, r3.xyxx
min r2.z, r2.z, l(1.000000)
add r2.z, -r2.z, l(1.000000)
sqrt r3.z, r2.z
dp3 r2.z, r3.xyzx, r3.xyzx
rsq r2.z, r2.z
mul r2.w, r2.z, r3.z
sample r4.xyzw, r2.xyxx, t1.xyzw, s2
add r4.xyz, r4.xyzx, l(-0.000000, -0.000000, -1.000000, 0.000000)
mad r4.xyz, r4.wwww, r4.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
mad r3.xy, r3.xyxx, r2.zzzz, r4.xyxx
mul r3.z, r2.w, r4.z
dp3 r2.z, r3.xyzx, r3.xyzx
rsq r2.z, r2.z
mul r3.xyz, r2.zzzz, r3.xyzx
mul r3.xyz, r0.xxxx, r3.xyzx
dp3 r4.x, v1.xyzx, r3.xyzx
dp3 r4.z, v3.xyzx, r3.xyzx
sample r2.xyzw, r2.xyxx, t2.xyzw, s3
mad r0.x, cb1[7].z, r2.x, cb1[7].w
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r0.x, r0.x, -v6.w
mul_sat r0.x, r0.x, cb0[21].z
add r2.y, -v6.z, l(1.000000)
mul r2.zw, cb0[26].wwww, cb0[31].xxxy
mul r2.yz, r2.yyyy, r2.zzwz
mul r2.yz, r0.xxxx, r2.yyzy
mad r2.yz, r4.xxzx, r2.yyzy, v6.xxyx
div r2.yz, r2.yyzy, v6.wwww
mul r2.yz, r2.yyzy, cb0[31].zzwz
round_ni r2.yz, r2.yyzy
add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
div r2.yz, r2.yyzy, cb0[31].zzwz
sample_l r5.xyzw, r2.yzyy, t2.xyzw, s3, l(0.000000)
mad r2.y, cb1[7].z, r5.x, cb1[7].w
div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
lt r2.y, r2.y, v6.w
movc r2.x, r2.y, r2.x, r5.x
mad r2.xy, cb1[7].zxzz, r2.xxxx, cb1[7].wyww
div r2.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyxx
add r2.x, r2.x, -v6.w
mul_sat r2.z, r2.x, cb0[21].z
div r2.w, cb1[5].z, v7.z
mul r5.xyz, r2.wwww, v7.xyzx
mul r5.xyz, r2.yyyy, r5.xyzx
mul r2.y, r5.y, cb2[19].y
mad r2.y, cb2[18].y, r5.x, r2.y
mad r2.y, cb2[20].y, r5.z, r2.y
add r2.y, r2.y, cb2[21].y
add r2.y, -r2.y, cb0[13].z
add r2.w, r2.y, -cb0[24].x
div_sat r2.w, r2.w, cb0[24].y
mul r2.w, r2.w, l(-11.541560)
exp r2.w, r2.w
add r2.w, -r2.w, l(1.000000)
mov_sat r3.w, cb0[24].z
mul r2.w, r2.w, r3.w
movc r2.x, v10.x, r2.x, v6.w
mul r3.w, -r2.x, cb0[24].w
mul r3.w, r3.w, l(1.442695)
exp r3.w, r3.w
add r3.w, -r3.w, l(1.000000)
max r3.w, r3.w, l(0.000000)
max r2.w, r2.w, r3.w
div_sat r2.y, r2.y, cb0[25].w
mul r2.y, r2.y, -r2.y
mul r2.y, r2.y, cb0[25].z
exp r2.y, r2.y
mul r2.x, -r2.x, cb0[26].x
mul r2.x, r2.x, l(1.442695)
exp r2.x, r2.x
mul r2.x, r2.y, r2.x
min r2.x, r2.x, l(1.000000)
add r2.x, r2.x, l(-1.000000)
mad r2.x, cb0[26].z, r2.x, l(1.000000)
mad_sat r2.x, r2.w, cb0[25].y, r2.x
add r5.xyzw, -r2.xxxx, l(1.000000, -0.450000, -0.029000, -0.018000)
mul r2.y, r5.x, cb0[26].y
mad_sat r5.xyz, r2.yyyy, r5.yzwy, r2.xxxx
eq r2.x, cb4[0].x, l(1.000000)
if_nz r2.x
  eq r2.x, cb4[0].y, l(1.000000)
  mul r6.xyz, v4.yyyy, cb4[2].xyzx
  mad r6.xyz, cb4[1].xyzx, v4.xxxx, r6.xyzx
  mad r6.xyz, cb4[3].xyzx, v4.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb4[4].xyzx
  movc r6.xyz, r2.xxxx, r6.xyzx, v4.xyzx
  add r6.xyz, r6.xyzx, -cb4[6].xyzx
  mul r6.yzw, r6.xxyz, cb4[5].xxyz
  mad r2.x, r6.y, l(0.250000), l(0.750000)
  mad r2.y, cb4[0].z, l(0.500000), l(0.750000)
  max r6.x, r2.y, r2.x
  sample r6.xyzw, r6.xzwx, t3.xyzw, s0
else
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.x, r6.xyzw, cb3[46].xyzw
dp3 r4.y, v2.xyzx, r3.xyzx
dp3 r2.y, r4.xyzx, r4.xyzx
rsq r2.y, r2.y
mul r3.xyz, r2.yyyy, r4.xyzx
mul r4.xyz, r2.xxxx, cb0[2].xyzx
max r2.x, cb0[3].y, cb0[3].x
max r2.x, r2.x, cb0[3].z
add r2.x, -r2.x, l(1.000000)
add r2.y, -cb0[21].y, l(1.000000)
mad r0.yzw, r0.yyzw, r1.xxxx, cb3[0].xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
max r1.x, r1.x, l(0.001000)
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
dp3 r1.x, r3.xyzx, r1.yzwy
dp3_sat r3.w, r3.xyzx, cb3[0].xyzx
dp3_sat r4.w, r3.xyzx, r0.yzwy
dp3_sat r0.y, cb3[0].xyzx, r0.yzwy
mul r0.z, r2.y, r2.y
mad r0.w, -r2.y, r2.y, l(1.000000)
mad r2.y, |r1.x|, r0.w, r0.z
mad r0.w, r3.w, r0.w, r0.z
mul r0.w, r0.w, |r1.x|
mad r0.w, r3.w, r2.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r2.y, r4.w, r0.z, -r4.w
mad r2.y, r2.y, r4.w, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r0.z, r0.z, r2.y
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.z, r3.w, r0.z
max r0.z, r0.z, l(0.000000)
mul r6.xyz, r4.xyzx, r0.zzzz
add r0.y, -r0.y, l(1.000000)
mul r0.z, r0.y, r0.y
mul r0.z, r0.z, r0.z
mul r0.y, r0.y, r0.z
add r7.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.yzw, r7.xxyz, r0.yyyy, cb0[3].xxyz
mul r0.yzw, r0.yyzw, r6.xxyz
add r2.x, -r2.x, cb0[21].y
add_sat r2.x, r2.x, l(1.000000)
mul r2.y, cb0[6].y, l(0.999707043)
mul r2.y, r2.y, r2.y
mad r3.w, -|r1.x|, |r1.x|, l(1.000000)
mul r4.w, r2.y, r3.w
ge r4.w, l(1.000000), r4.w
mad r2.y, -r2.y, r3.w, l(1.000000)
sqrt r2.y, r2.y
add r2.y, -r2.y, l(1.000000)
mul r3.w, r2.y, r2.y
mul r3.w, r3.w, r3.w
mul r2.y, r2.y, r3.w
add r3.w, r2.x, l(-0.020370)
mad r2.y, r2.y, r3.w, l(0.020370)
movc r2.y, r4.w, r2.y, l(1.000000)
add r1.x, -|r1.x|, l(1.000000)
log r1.x, r1.x
mul r1.x, r1.x, cb0[4].x
exp r1.x, r1.x
add r6.xyz, r2.xxxx, -cb0[3].xyzx
mad r6.xyz, r1.xxxx, r6.xyzx, cb0[3].xyzx
movc r6.xyz, v10.xxxx, r6.xyzx, r2.yyyy
mov_sat r1.x, cb3[0].y
mul r7.xyz, r1.xxxx, r4.xyzx
mul r7.xyz, r7.xyzx, cb0[23].xyzx
mul r7.xyz, r2.wwww, r7.xyzx
mul r5.xyz, r5.xyzx, r7.xyzx
add r1.x, -r2.w, l(1.000000)
mul r2.xyw, r0.yzyw, r1.xxxx
add r6.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r6.xyz, r5.xyzx, r6.xyzx
movc r5.xyz, v10.xxxx, r6.xyzx, r5.xyzx
movc r0.yzw, v10.xxxx, r0.yyzw, r2.xxyw
add r0.yzw, r0.yyzw, r5.xxyz
mad r2.xyw, -r3.xyxz, l(0.100000, 0.100000, 0.000000, 0.100000), cb3[0].xyxz
dp3_sat r1.x, -r2.xywx, r1.yzwy
mad r1.x, r1.x, cb0[8].x, -cb0[8].x
exp r1.x, r1.x
add r1.y, -|r3.y|, l(1.000000)
add_sat r1.y, r1.y, r1.y
mul r1.x, r1.y, r1.x
mul r1.xyz, r4.xyzx, r1.xxxx
mul r1.xyz, r1.xyzx, cb0[8].yzwy
mul_sat r1.xyz, r1.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000)
add r0.yzw, r0.yyzw, r1.xxyz
mul o0.xyz, r0.yzwy, r2.zzzz
mov o0.w, r0.x
ret
// Approximately 0 instruction slots used