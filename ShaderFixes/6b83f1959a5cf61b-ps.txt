// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6b83f1959a5cf61b-ps.txt
// 3DMigoto: 6b83f1959a5cf61b |    Unity headers extracted from Standard_2Sided
//    Shader "Standard_2Sided" {
//      CustomEditor "StandardShaderGUI"
//      Fallback "VertexLit"
// 1:   SubShader 1/2 {
// 2:   SubShader 2/2 {
// 2:     LOD 150
// 1:     LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
// 2:     Pass 1/4 {
// 1:     Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite [_ZWrite]
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard_2Sided:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 74 4 2
//   undeciphered1a: 7
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "_SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A" "_SPECULARHIGHLIGHTS_OFF" "_GLOSSYREFLECTIONS_OFF" }
//   undeciphered2: 1 4 6 4 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 176
//   Vector 32 [_LightColor0]
//   Vector 64 [_Color]
//   Float 136 [_Metallic]
//   Float 144 [_GlossMapScale]
//   Float 148 [_OcclusionStrength]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Vector 64 [unity_IndirectSpecColor]
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_MainTex] 2D 1
//   SetTexture 1 [_ShadowMapTexture] 2D 3
//   SetTexture 2 [_OcclusionMap] 2D 2
//   SetTexture 3 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityProbeVolume" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:17:36 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyz
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.w
dcl_input_ps linear v4.w
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v7.xyw
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6b83f1959a5cf61b-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.xyxx, t0.xyzw, s1
mul r1.xyz, r0.xyzx, cb0[4].xyzx
mad r0.xyz, cb0[4].xyzx, r0.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r0.xyz, cb0[8].zzzz, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -cb0[8].z, l(0.960000), l(0.960000)
mul r1.xyz, r1.wwww, r1.xyzx
dp3 r2.x, v5.xyzx, v5.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, v5.xyzx
dp3 r2.w, v2.xyzx, v2.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, v2.xyzx
mov r4.y, v3.w
mov r4.z, v4.w
mov r4.w, v5.w
add r5.xyz, -r4.yzwy, r8.xyzx
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r3.w, r5.xyzx, r6.xyzx
add r5.xyz, r4.yzwy, -cb3[25].xyzx
dp3 r4.x, r5.xyzx, r5.xyzx
sqrt r4.x, r4.x
add r4.x, -r3.w, r4.x
mad r3.w, cb3[25].w, r4.x, r3.w
mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
eq r4.x, cb5[0].x, l(1.000000)
if_nz r4.x
  eq r4.x, cb5[0].y, l(1.000000)
  mul r5.xyz, v4.wwww, cb5[2].xyzx
  mad r5.xyz, cb5[1].xyzx, v3.wwww, r5.xyzx
  mad r5.xyz, cb5[3].xyzx, v5.wwww, r5.xyzx
  add r5.xyz, r5.xyzx, cb5[4].xyzx
  movc r4.xyz, r4.xxxx, r5.xyzx, r4.yzwy
  add r4.xyz, r4.xyzx, -cb5[6].xyzx
  mul r4.yzw, r4.xxyz, cb5[5].xxyz
  mad r4.y, r4.y, l(0.250000), l(0.750000)
  mad r5.x, cb5[0].z, l(0.500000), l(0.750000)
  max r4.x, r4.y, r5.x
  sample r4.xyzw, r4.xzwx, t3.xyzw, s0
else
  mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r4.x, r4.xyzw, cb2[46].xyzw
div r4.yz, v7.xxyx, v7.wwww
sample r5.xyzw, r4.yzyy, t1.xyzw, s3
add r4.x, r4.x, -r5.x
mad r3.w, r3.w, r4.x, r5.x
sample r4.xyzw, v1.xyxx, t2.xyzw, s2
add r4.x, -cb0[9].y, l(1.000000)
mad r4.x, r4.y, cb0[9].y, r4.x
mul r4.yzw, r3.wwww, cb0[2].xxyz
mul r5.xyz, r4.xxxx, cb4[4].xyzx
mad r3.w, -r0.w, cb0[9].x, l(1.000000)
mad r6.xyz, -v2.xyzx, r2.wwww, cb2[0].xyzx
dp3 r2.w, r6.xyzx, r6.xyzx
max r2.w, r2.w, l(0.001000)
rsq r2.w, r2.w
mul r6.xyz, r2.wwww, r6.xyzx
dp3 r2.w, r2.xyzx, -r3.xyzx
dp3_sat r2.x, r2.xyzx, cb2[0].xyzx
dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
mul r2.y, r2.y, r2.y
dp2 r2.y, r2.yyyy, r3.wwww
add r2.y, r2.y, l(-0.500000)
add r2.z, -r2.x, l(1.000000)
mul r3.x, r2.z, r2.z
mul r3.x, r3.x, r3.x
mul r2.z, r2.z, r3.x
mad r2.z, r2.y, r2.z, l(1.000000)
add r2.w, -|r2.w|, l(1.000000)
mul r3.x, r2.w, r2.w
mul r3.x, r3.x, r3.x
mul r2.w, r2.w, r3.x
mad r2.y, r2.y, r2.w, l(1.000000)
mul r2.y, r2.y, r2.z
mul r2.x, r2.x, r2.y
mul r2.y, r3.w, r3.w
max r2.y, r2.y, l(0.002000)
mad r2.y, r2.y, r2.y, l(1.000000)
div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
mad r0.w, r0.w, cb0[9].x, -r1.w
add_sat r0.w, r0.w, l(1.000000)
mul r3.xyz, r2.xxxx, r4.yzwy
mul r2.xyz, r5.xyzx, r2.yyyy
add r4.xyz, -r0.xyzx, r0.wwww
mad r0.xyz, r2.wwww, r4.xyzx, r0.xyzx
mul r0.xyz, r0.xyzx, r2.xyzx
mad o0.xyz, r1.xyzx, r3.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used