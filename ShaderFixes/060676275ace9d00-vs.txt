// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 060676275ace9d00-vs.txt
// 3DMigoto: 060676275ace9d00 | Matched 2 variants of 1 shaders: AdvancedTerrainGrass/Grass Base Shader
//
//       Unity headers extracted from AdvancedTerrainGrass_Grass Base Shader
//       Shader "AdvancedTerrainGrass/Grass Base Shader" {
//         SubShader 1/1 {
//           LOD 200
//           Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "QUEUE"="Geometry+200" "RenderType"="ATGrass" }
//           Pass 1/4 {
//             Name "FORWARD"
//             Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+200" "RenderType"="ATGrass" "SHADOWSUPPORT"="true" }
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from AdvancedTerrainGrass_Grass Base Shader:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201802150 78 0 4
//      undeciphered1a: 6
// 2:   Keywords { "DIRECTIONAL" "FOG_LINEAR" "INSTANCING_ON" "_SPECULARHIGHLIGHTS_OFF" }
// 1:   Keywords { "DIRECTIONAL" "FOG_LINEAR" "INSTANCING_ON" }
//      undeciphered2: 1 1 8 1 0 0
//      undeciphered3: 27 4 0 0 1 1 4 5 3 3
//      ConstBuffer "$Globals" 224
//      Float 68 [_Clip]
//      Float 72 [_WindLOD]
//      Vector 80 [_MinMaxScales] 2
//      Vector 96 [_HealthyColor]
//      Vector 112 [_DryColor]
//      Float 144 [InstanceScale]
//      Float 148 [_NormalBend]
//      Vector 152 [_WindMultiplier] 2
//      Vector 208 [_MainTex_ST]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 768
//      Vector 672 [unity_SHBr]
//      Vector 688 [unity_SHBg]
//      Vector 704 [unity_SHBb]
//      Vector 720 [unity_SHC]
//      ConstBuffer "UnityPerFrame" 368
//      Matrix 272 [unity_MatrixVP]
//      ConstBuffer "UnityDrawCallInfo" 16
//      ScalarInt 0 [unity_BaseInstanceID]
//      ConstBuffer "UnityInstancing_PerDraw0" 128
//      Struct 0 [unity_Builtins0Array] 2 64
//      Matrix 0 [unity_ObjectToWorldArray]
//      ConstBuffer "UnityInstancing_PerDraw1" 128
//      Struct 0 [unity_Builtins1Array] 2 64
//      Matrix 0 [unity_WorldToObjectArray]
//      ConstBuffer "AtgGrass" 80
//      Vector 0 [_AtgWindDirSize]
//      Vector 16 [_AtgWindStrengthMultipliers]
//      Vector 32 [_AtgSinTime]
//      Vector 48 [_AtgGrassFadeProps]
//      SetTexture 0 [_AtgWindRT] 2D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityPerFrame" 3
//      BindCB "UnityDrawCallInfo" 4
//      BindCB "UnityInstancing_PerDraw0" 5
//      BindCB "UnityInstancing_PerDraw1" 6
//      BindCB "AtgGrass" 7
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:26:11 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz
// TEXCOORD                 0   xy          2     NONE   float   xy
// COLOR                    0   xyzw        3     NONE   float   x  w
// SV_InstanceID            0   x           4   INSTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 6     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// SV_InstanceID            0   x           8     NONE    uint   x
//
vs_4_0
dcl_constantbuffer cb0[14], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[46], immediateIndexed
dcl_constantbuffer cb3[23], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_constantbuffer cb5[8], dynamicIndexed
dcl_constantbuffer cb6[7], dynamicIndexed
dcl_constantbuffer cb7[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xw
dcl_input_sgv v4.x, instance_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyzw
dcl_output o6.xyz
dcl_output o7.xyzw
dcl_output o8.x
dcl_temps 8
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 060676275ace9d00-vs.txt

mul r6.w, -r6.x, r6.y
mad r7.xyz, -r6.wwww, cb10[0].xyzw, cb1[4].xyzw

iadd r0.x, v4.x, cb4[0].x
ishl r0.x, r0.x, l(2)
mad r0.yzw, cb0[9].xxxx, l(0.000000, 4.000000, 4.000000, 4.000000), cb5[r0.x + 3].xxyz
add r0.yzw, r0.yyzw, -r7.xxyz
dp3 r0.y, r0.yzwy, r0.yzwy
add r0.z, -r0.y, cb7[3].x
mul_sat r0.z, r0.z, cb7[3].y
eq r0.w, r0.z, l(0.000000)
add r1.x, v0.y, l(-10000.000000)
movc r1.x, r0.w, r1.x, v0.y
if_z r0.w
  dp2 r0.w, cb5[r0.x + 3].xzxx, l(12.989800, 78.233002, 0.000000, 0.000000)
  frc r2.y, r0.w
  add r0.y, r0.y, -cb7[3].z
  mul_sat r0.y, r0.y, cb7[3].w
  lt r0.w, r2.y, cb0[4].y
  and r0.w, r0.w, l(0x3f800000)
  mad r0.y, -r0.y, r0.w, l(1.000000)
  eq r0.w, r0.y, l(0.000000)
  add r1.w, r1.x, l(-10000.000000)
  movc r1.x, r0.w, r1.w, r1.x
  if_z r0.w
    add r0.w, -cb0[5].x, cb0[9].x
    mul_sat r0.w, r0.w, cb0[5].y
    add r3.xyzw, -cb0[6].xyzw, cb0[7].xyzw
    mad r3.xyzw, r0.wwww, r3.xyzw, cb0[6].xyzw
    mul r0.w, r3.w, v3.w
    mad r0.y, -r0.z, r0.y, l(1.000000)
    mov r1.yz, v0.xxzx
    mad r1.xyz, r0.yyyy, -r1.xyzx, r1.xyzx
    mul r0.yz, r1.xxxx, cb5[r0.x + 1].xxzx
    mad r0.yz, cb5[r0.x + 0].xxzx, r1.yyyy, r0.yyzy
    mad r0.yz, cb5[r0.x + 2].xxzx, r1.zzzz, r0.yyzy
    mad r0.yz, cb5[r0.x + 3].xxzx, v0.wwww, r0.yyzy
    add r1.w, -v3.x, l(1.000000)
    mad r0.yz, r0.yyzy, cb7[0].wwww, r1.wwww
    mad r0.yz, cb0[9].xxxx, l(0.000000, 0.025000, 0.025000, 0.000000), r0.yyzy
    sample_l r4.xyzw, r0.yzyy, t0.xyzw, s0, cb0[4].z
    mad r0.y, r4.y, l(2.000000), l(-0.243760)
    mul r0.y, r0.y, r4.x
    mul r0.y, r0.y, cb7[1].x
    mul r0.y, r0.y, cb0[9].z
    mul r2.x, r0.w, -r0.y
    mul r0.yzw, cb7[0].yyyy, cb6[r0.x + 1].xxyz
    mad r0.yzw, cb6[r0.x + 0].xxyz, cb7[0].xxxx, r0.yyzw
    mad r0.yzw, cb6[r0.x + 2].xxyz, cb7[0].zzzz, r0.yyzw
    dp3 r0.z, r0.yzwy, r0.yzwy
    rsq r0.z, r0.z
    mul r0.yz, r0.zzzz, r0.yywy
    mul r2.zw, r2.xxxx, r0.yyyz
    mad r0.yz, -r0.yyzy, r2.xxxx, r1.yyzy
    mov r4.x, cb7[2].x
    mov r4.y, l(0)
    add r1.yz, -r4.xxyx, cb7[2].yyzy
    mad r1.yz, r2.yyxy, r1.yyzy, r4.xxyx
    mad r0.w, r1.z, cb0[9].w, r1.y
    add r1.y, cb7[2].w, l(0.075000)
    mul r0.w, r0.w, r1.y
    mov_sat r2.x, r2.x
    mad r0.yz, r0.wwww, r2.xxxx, r0.yyzy
    mul r1.yz, r2.zzwz, l(0.000000, 3.14159274, 3.14159274, 0.000000)
    mul r1.yz, r1.yyzy, cb0[9].yyyy
    add_sat r4.y, v3.w, l(0.850000)
    mad r4.x, r2.y, l(0.399999976), l(0.600000)
    mov o5.xyz, r3.xyzx
    mov o5.w, v3.w
    mov r0.w, l(1.000000)
    mov r1.yz, -r1.yyzy
  else
    mov o5.xyzw, l(0,0,0,0)
    mov r4.xy, l(0,0,0,0)
    mov r0.yz, v0.xxzx
    mov r0.w, v1.y
    mov r1.yz, v1.xxzx
  endif
else
  mov o5.xyzw, l(0,0,0,0)
  mov r4.xy, l(0,0,0,0)
  mov r0.yz, v0.xxzx
  mov r0.w, v1.y
  mov r1.yz, v1.xxzx
endif
mul r2.xyzw, r1.xxxx, cb5[r0.x + 1].xyzw
mad r2.xyzw, cb5[r0.x + 0].xyzw, r0.yyyy, r2.xyzw
mad r2.xyzw, cb5[r0.x + 2].xyzw, r0.zzzz, r2.xyzw
add r3.xyzw, r2.xyzw, cb5[r0.x + 3].xyzw
mul r5.xyzw, r3.yyyy, cb3[18].xyzw
mad r5.xyzw, cb3[17].xyzw, r3.xxxx, r5.xyzw
mad r5.xyzw, cb3[19].xyzw, r3.zzzz, r5.xyzw
mad r3.xyzw, cb3[20].xyzw, r3.wwww, r5.xyzw
mad o1.xy, v2.xyxx, cb0[13].xyxx, cb0[13].zwzz
mad o3.xyz, cb5[r0.x + 3].xyzx, v0.wwww, r2.xyzx
mul r0.yzw, r0.wwww, cb5[r0.x + 1].xxyz
mad r0.yzw, cb5[r0.x + 0].xxyz, r1.yyyy, r0.yyzw
mad r0.xyz, cb5[r0.x + 2].xyzx, r1.zzzz, r0.yzwy
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyzw, r0.yzzx, r0.xyzz
dp4 r2.x, cb2[42].xyzw, r1.xyzw
dp4 r2.y, cb2[43].xyzw, r1.xyzw
dp4 r2.z, cb2[44].xyzw, r1.xyzw
mul r0.w, r0.y, r0.y
mad r0.w, r0.x, r0.x, -r0.w
mad o6.xyz, cb2[45].xyzx, r0.wwww, r2.xyzx
mov o0.xyzw, r3.xyzw
mov o7.xyzw, l(0,0,0,0)
mov o1.z, r3.z
mov o2.xyz, r0.xyzx
mov o4.xy, r4.xyxx
mov o4.z, l(0)
mov o8.x, v4.x
ret
// Approximately 0 instruction slots used