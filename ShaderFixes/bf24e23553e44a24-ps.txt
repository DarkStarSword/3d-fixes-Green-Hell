// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed bf24e23553e44a24-ps.txt
// 3DMigoto: bf24e23553e44a24 | Matched 2 variants of 2 shaders: Custom/WindLeavesC2Standard, Custom/WindLeavesC2Standard_not_moving
//
// 2:    Unity headers extracted from Custom_WindLeavesC2Standard
// 1:    Unity headers extracted from Custom_WindLeavesC2Standard_not_moving
// 2:    Shader "Custom/WindLeavesC2Standard" {
// 1:    Shader "Custom/WindLeavesC2Standard_not_moving" {
//         SubShader 1/2 {
//           LOD 200
//           Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Geometry+200" "RenderType"="Grass" }
//           Pass 2/5 {
//             Name "FORWARD"
//             Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+200" "RenderType"="Grass" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
// 2: Unity 5.3 headers extracted from Custom_WindLeavesC2Standard:
// 1: Unity 5.3 headers extracted from Custom_WindLeavesC2Standard_not_moving:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 107 5 2
//      undeciphered1a: 8
//      Keywords { "POINT" }
//      undeciphered2: 1 5 4 5 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 256
//      Vector 32 [_LightColor0]
//      Float 144 [_Cutoff]
//      Float 196 [_Wetness]
//      Float 240 [_Cutoff2]
//      Matrix 64 [unity_WorldToLight]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      Vector 736 [unity_OcclusionMaskSelector]
//      ConstBuffer "UnityProbeVolume" 112
//      Vector 0 [unity_ProbeVolumeParams]
//      Vector 80 [unity_ProbeVolumeSizeInv] 3
//      Vector 96 [unity_ProbeVolumeMin] 3
//      Matrix 16 [unity_ProbeVolumeWorldToObject]
//      SetTexture 0 [_MainTex] 2D 2
//      SetTexture 1 [_RoughTex] 2D 3
//      SetTexture 2 [_BumpMap] 2D 4
//      SetTexture 3 [_LightTexture0] 2D 1
//      SetTexture 4 [unity_ProbeVolumeSH] 3D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:05:30 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// COLOR                    0   xyzw        6     NONE   float   xyz
// TEXCOORD                 5   xyz         7     NONE   float
// TEXCOORD                 6   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[16], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed bf24e23553e44a24-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v5.xyzx, r9.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
sample r3.xyzw, v1.xyxx, t0.xyzw, s2
mul r4.xyz, r3.xyzx, v6.xyzx
sample r5.xyzw, v1.xyxx, t1.xyzw, s3
add r1.w, r3.w, -cb0[9].x
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
mul r1.w, cb0[12].y, l(0.085000)
mad r2.w, cb0[12].y, l(0.610000), l(1.000000)
sample r6.xyzw, v1.zwzz, t2.xyzw, s4
mul r6.x, r6.w, r6.x
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r6.xyxx, r6.xyxx
min r4.w, r4.w, l(1.000000)
add r4.w, -r4.w, l(1.000000)
sqrt r6.z, r4.w
add r4.w, r3.w, -cb0[15].x
lt r4.w, r4.w, l(0.000000)
discard_nz r4.w
mul r5.yzw, v5.yyyy, cb0[5].xxyz
mad r5.yzw, cb0[4].xxyz, v5.xxxx, r5.yyzw
mad r5.yzw, cb0[6].xxyz, v5.zzzz, r5.yyzw
add r5.yzw, r5.yyzw, cb0[7].xxyz
eq r4.w, cb3[0].x, l(1.000000)
if_nz r4.w
  eq r4.w, cb3[0].y, l(1.000000)
  mul r7.xyz, v5.yyyy, cb3[2].xyzx
  mad r7.xyz, cb3[1].xyzx, v5.xxxx, r7.xyzx
  mad r7.xyz, cb3[3].xyzx, v5.zzzz, r7.xyzx
  add r7.xyz, r7.xyzx, cb3[4].xyzx
  movc r7.xyz, r4.wwww, r7.xyzx, v5.xyzx
  add r7.xyz, r7.xyzx, -cb3[6].xyzx
  mul r7.yzw, r7.xxyz, cb3[5].xxyz
  mad r4.w, r7.y, l(0.250000), l(0.750000)
  mad r6.w, cb3[0].z, l(0.500000), l(0.750000)
  max r7.x, r4.w, r6.w
  sample r7.xyzw, r7.xzwx, t4.xyzw, s0
else
  mov r7.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r4.w, r7.xyzw, cb2[46].xyzw
dp3 r5.y, r5.yzwy, r5.yzwy
sample r7.xyzw, r5.yyyy, t3.xyzw, s1
mul r4.w, r4.w, r7.x
dp3 r7.x, v2.xyzx, r6.xyzx
dp3 r7.y, v3.xyzx, r6.xyzx
dp3 r7.z, v4.xyzx, r6.xyzx
dp3 r5.y, r7.xyzx, r7.xyzx
rsq r5.y, r5.y
mul r5.yzw, r5.yyyy, r7.xxyz
mul r6.xyz, r4.wwww, cb0[2].xyzx
mad r3.xyz, r3.xyzx, v6.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -cb0[12].y, l(0.0815999955), l(0.960000)
mul r4.xyz, r1.wwww, r4.xyzx
mad r1.w, -r5.x, r2.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r5.yzwy, r2.xyzx
dp3_sat r2.x, r5.yzwy, r1.xyzx
dp3_sat r2.y, r5.yzwy, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r2.x, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
max r0.z, r0.z, l(0.002000)
add r1.x, -r0.z, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r2.x, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r2.x, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r2.y, r0.z, -r2.y
mad r1.x, r1.x, r2.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r2.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r3.xyzx, r3.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r6.xyzx
mul r0.yzw, r6.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r2.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r3.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad o0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
mov o0.w, r3.w
ret
// Approximately 0 instruction slots used