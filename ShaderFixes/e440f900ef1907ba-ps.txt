// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e440f900ef1907ba-ps.txt
// 3DMigoto: e440f900ef1907ba |    Unity headers extracted from Amplify_rock_surface_norain
//    Shader "Amplify/rock_surface_norain" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_rock_surface_norain:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 201802150 175 6 6
//   undeciphered1a: 13
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "INSTANCING_ON" }
//   undeciphered2: 1 8 9 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 144
//   Vector 32 [_LightColor0]
//   Vector 64 [_Normal_ST]
//   Float 80 [_moss_mask_source_switch]
//   Vector 96 [_Albedo_ST]
//   Float 112 [_Moss_Mask_Size]
//   Float 116 [_Moss_Mask_power]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   ConstBuffer "UnityDrawCallInfo" 16
//   ScalarInt 0 [unity_BaseInstanceID]
//   ConstBuffer "UnityInstancing_Amplifyrock_surface_norain" 32
//   Struct 0 [Amplifyrock_surface_norainArray] 2 16
//   Float 0 [_smoothness]
//   SetTexture 0 [_Normal] 2D 4
//   SetTexture 1 [_Albedo] 2D 5
//   SetTexture 2 [_Moss_Normal] 2D 3
//   SetTexture 3 [_Moss_Albedo] 2D 6
//   SetTexture 4 [_ShadowMapTexture] 2D 2
//   SetTexture 5 [unity_SpecCube0] CUBE 0
//   SetTexture 6 [unity_SpecCube1] CUBE -1
//   SetTexture 7 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityReflectionProbes" 5
//   BindCB "UnityProbeVolume" 6
//   BindCB "UnityDrawCallInfo" 7
//   BindCB "UnityInstancing_Amplifyrock_surface_norain" 8
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:22:50 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 6   xyzw        5     NONE   float   xy w
// TEXCOORD                 7   xyzw        6     NONE   float
// SV_InstanceID            0   x           7     NONE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[8], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_constantbuffer cb7[1], immediateIndexed
dcl_constantbuffer cb8[2], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyw
dcl_input_ps constant v7.x
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e440f900ef1907ba-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

iadd r0.x, v7.x, cb7[0].x
mov r1.x, v2.w
mov r1.y, v3.w
mov r1.z, v4.w
add r0.yzw, -r1.xxyz, r14.xxyz
dp3 r1.w, r0.yzwy, r0.yzwy
rsq r1.w, r1.w
mul r2.xyz, r0.yzwy, r1.wwww
mul r3.xy, v1.xyxx, l(3.000000, 3.000000, 0.000000, 0.000000)
mad r3.zw, v1.xxxy, cb0[4].xxxy, cb0[4].zzzw
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.zwzz, t0.xywz, s4
mul r4.x, r4.z, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r4.xyxx, r4.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r4.z, r2.w
mad r3.zw, v1.xxxy, cb0[6].xxxy, cb0[6].zzzw
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r3.zwzz, t1.xyzw, s5
add r2.w, -r5.z, r5.y
mad r2.w, cb0[5].x, r2.w, r5.z
mul r2.w, r2.w, cb0[7].x
log r2.w, r2.w
mul r2.w, r2.w, cb0[7].y
exp r2.w, r2.w
min r2.w, r2.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r3.xyxx, t2.xywz, s3
mul r6.x, r6.z, r6.x
mad r3.zw, r6.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r4.w, r3.zwzz, r3.zwzz
min r4.w, r4.w, l(1.000000)
add r4.w, -r4.w, l(1.000000)
sqrt r4.w, r4.w
add r6.xy, r4.xyxx, r3.zwzz
mul r6.z, r4.z, r4.w
dp3 r3.z, r6.xyzx, r6.xyzx
rsq r3.z, r3.z
mul r7.xyz, r3.zzzz, r6.xyzx
mad r4.xyz, -r6.xyzx, r3.zzzz, r4.xyzx
mad r4.xyz, r2.wwww, r4.xyzx, r7.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t3.xyzw, s6
add r5.xyz, -r3.xyzx, r5.xyzx
mad r3.xyz, r2.wwww, r5.xyzx, r3.xyzx
mov r5.x, cb4[9].z
mov r5.y, cb4[10].z
mov r5.z, cb4[11].z
dp3 r2.w, r0.yzwy, r5.xyzx
add r5.xyz, r1.xyzx, -cb3[25].xyzx
dp3 r3.w, r5.xyzx, r5.xyzx
sqrt r3.w, r3.w
add r3.w, -r2.w, r3.w
mad r2.w, cb3[25].w, r3.w, r2.w
mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
eq r3.w, cb6[0].x, l(1.000000)
if_nz r3.w
  eq r3.w, cb6[0].y, l(1.000000)
  mul r5.xyz, v3.wwww, cb6[2].xyzx
  mad r5.xyz, cb6[1].xyzx, v2.wwww, r5.xyzx
  mad r5.xyz, cb6[3].xyzx, v4.wwww, r5.xyzx
  add r5.xyz, r5.xyzx, cb6[4].xyzx
  movc r5.xyz, r3.wwww, r5.xyzx, r1.xyzx
  add r5.xyz, r5.xyzx, -cb6[6].xyzx
  mul r5.yzw, r5.xxyz, cb6[5].xxyz
  mad r3.w, r5.y, l(0.250000), l(0.750000)
  mad r4.w, cb6[0].z, l(0.500000), l(0.750000)
  max r5.x, r3.w, r4.w
  sample_indexable(texture3d)(float,float,float,float) r5.xyzw, r5.xzwx, t7.xyzw, s1
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
div r5.xy, v5.xyxx, v5.wwww
sample_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t4.yzwx, s2
add r3.w, r3.w, -r4.w
mad r2.w, r2.w, r3.w, r4.w
dp3 r5.x, v2.xyzx, r4.xyzx
dp3 r5.y, v3.xyzx, r4.xyzx
dp3 r5.z, v4.xyzx, r4.xyzx
dp3 r3.w, r5.xyzx, r5.xyzx
rsq r3.w, r3.w
mul r4.xyz, r3.wwww, r5.xyzx
add r3.w, l(1.000000), -cb8[r0.x + 0].x
dp3 r4.w, -r2.xyzx, r4.xyzx
add r4.w, r4.w, r4.w
mad r5.xyz, r4.xyzx, -r4.wwww, -r2.xyzx
mul r6.xyz, r2.wwww, cb0[2].xyzx
lt r2.w, l(0.000000), cb5[2].w
if_nz r2.w
  dp3 r2.w, r5.xyzx, r5.xyzx
  rsq r2.w, r2.w
  mul r7.xyz, r2.wwww, r5.xyzx
  add r8.xyz, -r1.xyzx, cb5[0].xyzx
  div r8.xyz, r8.xyzx, r7.xyzx
  add r9.xyz, -r1.xyzx, cb5[1].xyzx
  div r9.xyz, r9.xyzx, r7.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r2.w, r8.y, r8.x
  min r2.w, r8.z, r2.w
  add r8.xyz, r1.xyzx, -cb5[2].xyzx
  mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
else
  mov r7.xyz, r5.xyzx
endif
mad r2.w, -r3.w, l(0.700000), l(1.700000)
mul r2.w, r2.w, r3.w
mul r2.w, r2.w, l(6.000000)
sample_l_indexable(texturecube)(float,float,float,float) r7.xyzw, r7.xyzx, t5.xyzw, s0, r2.w
add r4.w, r7.w, l(-1.000000)
mad r4.w, cb5[3].w, r4.w, l(1.000000)
log r4.w, r4.w
mul r4.w, r4.w, cb5[3].y
exp r4.w, r4.w
mul r4.w, r4.w, cb5[3].x
mul r8.xyz, r7.xyzx, r4.wwww
lt r5.w, cb5[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb5[6].w
  if_nz r5.w
    dp3 r5.w, r5.xyzx, r5.xyzx
    rsq r5.w, r5.w
    mul r9.xyz, r5.wwww, r5.xyzx
    add r10.xyz, -r1.xyzx, cb5[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -r1.xyzx, cb5[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r5.w, r10.y, r10.x
    min r5.w, r10.z, r5.w
    add r1.xyz, r1.xyzx, -cb5[6].xyzx
    mad r5.xyz, r9.xyzx, r5.wwww, r1.xyzx
  endif
  sample_l_indexable(texturecube)(float,float,float,float) r5.xyzw, r5.xyzx, t6.xyzw, s0, r2.w
  add r1.x, r5.w, l(-1.000000)
  mad r1.x, cb5[7].w, r1.x, l(1.000000)
  log r1.x, r1.x
  mul r1.x, r1.x, cb5[7].y
  exp r1.x, r1.x
  mul r1.x, r1.x, cb5[7].x
  mul r1.xyz, r5.xyzx, r1.xxxx
  mad r5.xyz, r4.wwww, r7.xyzx, -r1.xyzx
  mad r8.xyz, cb5[1].wwww, r5.xyzx, r1.xyzx
endif
mul r1.xyz, r3.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r0.yzw, r0.yyzw, r1.wwww, cb2[0].xxyz
dp3 r1.w, r0.yzwy, r0.yzwy
max r1.w, r1.w, l(0.001000)
rsq r1.w, r1.w
mul r0.yzw, r0.yyzw, r1.wwww
dp3 r1.w, r4.xyzx, r2.xyzx
dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
dp3_sat r2.y, r4.xyzx, r0.yzwy
dp3_sat r0.y, cb2[0].xyzx, r0.yzwy
mul r0.z, r0.y, r0.y
dp2 r0.z, r0.zzzz, r3.wwww
add r0.z, r0.z, l(-0.500000)
add r0.w, -r2.x, l(1.000000)
mul r2.z, r0.w, r0.w
mul r2.z, r2.z, r2.z
mul r0.w, r0.w, r2.z
mad r0.w, r0.z, r0.w, l(1.000000)
add r2.z, -|r1.w|, l(1.000000)
mul r2.w, r2.z, r2.z
mul r2.w, r2.w, r2.w
mul r2.z, r2.z, r2.w
mad r0.z, r0.z, r2.z, l(1.000000)
mul r0.z, r0.z, r0.w
mul r0.z, r2.x, r0.z
mul r0.w, r3.w, r3.w
max r0.w, r0.w, l(0.002000)
add r2.w, -r0.w, l(1.000000)
mad r3.x, |r1.w|, r2.w, r0.w
mad r2.w, r2.x, r2.w, r0.w
mul r1.w, |r1.w|, r2.w
mad r1.w, r2.x, r3.x, r1.w
add r1.w, r1.w, l(0.000010)
div r1.w, l(0.500000), r1.w
mul r2.w, r0.w, r0.w
mad r3.x, r2.y, r2.w, -r2.y
mad r2.y, r3.x, r2.y, l(1.000000)
mul r2.w, r2.w, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r2.w, r2.y
mul r1.w, r1.w, r2.y
mul r1.w, r1.w, l(3.14159274)
mul r1.w, r2.x, r1.w
max r1.w, r1.w, l(0.000000)
mad r0.w, r0.w, r0.w, l(1.000000)
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
add_sat r0.x, l(0.0400000215), cb8[r0.x + 0].x
mul r2.xyw, r0.zzzz, r6.xyxz
mul r3.xyz, r6.xyzx, r1.wwww
add r0.y, -r0.y, l(1.000000)
mul r0.z, r0.y, r0.y
mul r0.z, r0.z, r0.z
mul r0.y, r0.y, r0.z
mad r0.y, r0.y, l(0.960000), l(0.040000)
mul r3.xyz, r0.yyyy, r3.xyzx
mad r1.xyz, r1.xyzx, r2.xywx, r3.xyzx
mul r0.yzw, r8.xxyz, r0.wwww
add r0.x, r0.x, l(-0.040000)
mad r0.x, r2.z, r0.x, l(0.040000)
mad o0.xyz, r0.yzwy, r0.xxxx, r1.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used