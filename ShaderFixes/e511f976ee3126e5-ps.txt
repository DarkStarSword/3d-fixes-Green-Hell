// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e511f976ee3126e5-ps.txt
// 3DMigoto: e511f976ee3126e5 |    Unity headers extracted from AdvancedTerrainGrass_Grass Base Shader
//    Shader "AdvancedTerrainGrass/Grass Base Shader" {
//      SubShader 1/1 {
//        LOD 200
//        Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "QUEUE"="Geometry+200" "RenderType"="ATGrass" }
//        Pass 1/4 {
//          Name "FORWARD"
//          Tags { "DisableBatching"="true" "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+200" "RenderType"="ATGrass" "SHADOWSUPPORT"="true" }
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from AdvancedTerrainGrass_Grass Base Shader:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 110 2 4
//   undeciphered1a: 12
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "INSTANCING_ON" }
//   undeciphered2: 1 4 8 3 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 224
//   Vector 32 [_LightColor0]
//   Float 164 [_TransStrength]
//   Float 196 [_Cutoff]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityDrawCallInfo" 16
//   ScalarInt 0 [unity_BaseInstanceID]
//   ConstBuffer "UnityInstancing_PerDraw2" 224
//   Struct 0 [unity_Builtins2Array] 2 112
//   Vector 0 [unity_SHArArray]
//   Vector 16 [unity_SHAgArray]
//   Vector 32 [unity_SHAbArray]
//   Vector 48 [unity_SHBrArray]
//   Vector 64 [unity_SHBgArray]
//   Vector 80 [unity_SHBbArray]
//   Vector 96 [unity_SHCArray]
//   SetTexture 0 [_MainTex] 2D 2
//   SetTexture 1 [_ShadowMapTexture] 2D 1
//   SetTexture 2 [unity_SpecCube0] CUBE 0
//   SetTexture 3 [unity_SpecCube1] CUBE -1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityReflectionProbes" 5
//   BindCB "UnityDrawCallInfo" 6
//   BindCB "UnityInstancing_PerDraw2" 7
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:23:13 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float
// TEXCOORD                 4   xyzw        5     NONE   float   xyz
// TEXCOORD                 5   xyz         6     NONE   float   xyz
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
// SV_InstanceID            0   x           8     NONE    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[8], immediateIndexed
dcl_constantbuffer cb6[1], immediateIndexed
dcl_constantbuffer cb7[14], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texturecube (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyw
dcl_input_ps constant v8.x
dcl_output o0.xyzw
dcl_temps 14
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r12.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed e511f976ee3126e5-ps.txt

mul r12.w, -r12.x, r12.y
mad r13.xyz, -r12.wwww, cb10[0].xyzw, cb1[4].xyzw

iadd r0.x, v8.x, cb6[0].x
add r0.yzw, -v3.xxyz, r13.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r1.yzw, r0.yyzw, r1.xxxx
sample r2.xyzw, v1.xyxx, t0.xyzw, s2
add r2.w, r2.w, -cb0[12].y
lt r2.w, r2.w, l(0.000000)
discard_nz r2.w
mul r2.xyz, r2.xyzx, v5.xyzx
mul r2.w, r2.y, cb0[10].y
mov r3.x, cb4[9].z
mov r3.y, cb4[10].z
mov r3.z, cb4[11].z
dp3 r3.x, r0.yzwy, r3.xyzx
add r3.yzw, v3.xxyz, -cb3[25].xxyz
dp3 r3.y, r3.yzwy, r3.yzwy
sqrt r3.y, r3.y
add r3.y, -r3.x, r3.y
mad r3.x, cb3[25].w, r3.y, r3.x
mad_sat r3.x, r3.x, cb3[24].z, cb3[24].w
imul null, r0.x, r0.x, l(7)
div r3.yz, v7.xxyx, v7.wwww
sample r4.xyzw, r3.yzyy, t1.xyzw, s1
add r3.y, -r4.x, cb7[r0.x + 6].w
mad r3.x, r3.x, r3.y, r4.x
dp3 r3.y, -r1.yzwy, v2.xyzx
add r3.y, r3.y, r3.y
mad r3.yzw, v2.xxyz, -r3.yyyy, -r1.yyzw
mul r4.xyz, r3.xxxx, cb0[2].xyzx
mov r5.xyz, v2.xyzx
mov r5.w, l(1.000000)
dp4 r6.x, cb7[r0.x + 0].xyzw, r5.xyzw
dp4 r6.y, cb7[r0.x + 1].xyzw, r5.xyzw
dp4 r6.z, cb7[r0.x + 2].xyzw, r5.xyzw
add r5.xyz, r6.xyzx, v6.xyzx
max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r0.x, l(0.000000), cb5[2].w
if_nz r0.x
  dp3 r0.x, r3.yzwy, r3.yzwy
  rsq r0.x, r0.x
  mul r6.xyz, r0.xxxx, r3.yzwy
  add r7.xyz, -v3.xyzx, cb5[0].xyzx
  div r7.xyz, r7.xyzx, r6.xyzx
  add r8.xyz, -v3.xyzx, cb5[1].xyzx
  div r8.xyz, r8.xyzx, r6.xyzx
  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  min r0.x, r7.y, r7.x
  min r0.x, r7.z, r0.x
  add r7.xyz, v3.xyzx, -cb5[2].xyzx
  mad r6.xyz, r6.xyzx, r0.xxxx, r7.xyzx
else
  mov r6.xyz, r3.yzwy
endif
sample_l r6.xyzw, r6.xyzx, t2.xyzw, s0, l(6.000000)
add r0.x, r6.w, l(-1.000000)
mad r0.x, cb5[3].w, r0.x, l(1.000000)
log r0.x, r0.x
mul r0.x, r0.x, cb5[3].y
exp r0.x, r0.x
mul r0.x, r0.x, cb5[3].x
mul r7.xyz, r6.xyzx, r0.xxxx
lt r3.x, cb5[1].w, l(0.999990)
if_nz r3.x
  lt r3.x, l(0.000000), cb5[6].w
  if_nz r3.x
    dp3 r3.x, r3.yzwy, r3.yzwy
    rsq r3.x, r3.x
    mul r8.xyz, r3.xxxx, r3.yzwy
    add r9.xyz, -v3.xyzx, cb5[4].xyzx
    div r9.xyz, r9.xyzx, r8.xyzx
    add r10.xyz, -v3.xyzx, cb5[5].xyzx
    div r10.xyz, r10.xyzx, r8.xyzx
    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
    movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
    min r3.x, r9.y, r9.x
    min r3.x, r9.z, r3.x
    add r9.xyz, v3.xyzx, -cb5[6].xyzx
    mad r3.yzw, r8.xxyz, r3.xxxx, r9.xxyz
  endif
  sample_l r3.xyzw, r3.yzwy, t3.xyzw, s0, l(6.000000)
  add r3.w, r3.w, l(-1.000000)
  mad r3.w, cb5[7].w, r3.w, l(1.000000)
  log r3.w, r3.w
  mul r3.w, r3.w, cb5[7].y
  exp r3.w, r3.w
  mul r3.w, r3.w, cb5[7].x
  mul r3.xyz, r3.xyzx, r3.wwww
  mad r6.xyz, r0.xxxx, r6.xyzx, -r3.xyzx
  mad r7.xyz, cb5[1].wwww, r6.xyzx, r3.xyzx
endif
dp3 r0.x, v2.xyzx, v2.xyzx
rsq r0.x, r0.x
mul r3.xyz, r0.xxxx, v2.xyzx
mad r0.xyz, r0.yzwy, r1.xxxx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.xyzx, r1.yzwy
dp3_sat r1.x, r3.xyzx, cb2[0].xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
dp2 r0.x, r0.xxxx, r0.xxxx
add r0.x, r0.x, l(-0.500000)
add r0.y, -r1.x, l(1.000000)
mul r0.z, r0.y, r0.y
mul r0.z, r0.z, r0.z
mul r0.y, r0.y, r0.z
mad r0.y, r0.x, r0.y, l(1.000000)
add r0.z, -|r0.w|, l(1.000000)
mul r0.w, r0.z, r0.z
mul r0.w, r0.w, r0.w
mul r0.z, r0.z, r0.w
mad r0.x, r0.x, r0.z, l(1.000000)
mul r0.x, r0.x, r0.y
mul r0.x, r1.x, r0.x
mad r0.xyw, r4.xyxz, r0.xxxx, r5.xyxz
mul r5.xyz, r7.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
mad r0.z, r0.z, l(2.235174179E-008), l(0.040000)
mul r5.xyz, r0.zzzz, r5.xyzx
mad r0.xyz, r2.xyzx, r0.xywx, r5.xyzx
mad r3.xyz, r3.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000), cb2[0].xyzx
dp3_sat r0.w, -r3.xyzx, r1.yzwy
mad r0.w, r0.w, l(6.000000), l(-6.000000)
exp r0.w, r0.w
mul r1.xyz, r4.xyzx, r0.wwww
mul r2.xyz, r2.wwww, r2.xyzx
mul r1.xyz, r1.xyzx, r2.xyzx
mad o0.xyz, r1.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000), r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used