// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 80e3513ff6eaeb99-ps.txt
// 3DMigoto: 80e3513ff6eaeb99 |    Unity headers extracted from Nature_Terrain_Standard
//    Shader "Nature/Terrain/Standard" {
//      Fallback "Nature/Terrain/Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry-100" "RenderType"="Opaque" }
//        Pass 2/7 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry-100" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Nature_Terrain_Standard:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 162 12 2
//   undeciphered1a: 8
//   Keywords { "SPOT" "FOG_LINEAR" "_NORMALMAP" }
//   undeciphered2: 1 12 5 12 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 272
//   Vector 32 [_LightColor0]
//   Vector 144 [_Control_TexelSize]
//   Vector 160 [_Splat0_ST]
//   Vector 176 [_Splat1_ST]
//   Vector 192 [_Splat2_ST]
//   Vector 208 [_Splat3_ST]
//   Float 224 [_NormalScale0]
//   Float 228 [_NormalScale1]
//   Float 232 [_NormalScale2]
//   Float 236 [_NormalScale3]
//   Float 240 [_Metallic0]
//   Float 244 [_Metallic1]
//   Float 248 [_Metallic2]
//   Float 252 [_Metallic3]
//   Float 256 [_Smoothness0]
//   Float 260 [_Smoothness1]
//   Float 264 [_Smoothness2]
//   Float 268 [_Smoothness3]
//   Matrix 64 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_Control] 2D 3
//   SetTexture 1 [_Splat0] 2D 4
//   SetTexture 2 [_Splat1] 2D 5
//   SetTexture 3 [_Splat2] 2D 6
//   SetTexture 4 [_Splat3] 2D 7
//   SetTexture 5 [_Normal0] 2D 8
//   SetTexture 6 [_Normal1] 2D 9
//   SetTexture 7 [_Normal2] 2D 10
//   SetTexture 8 [_Normal3] 2D 11
//   SetTexture 9 [_LightTexture0] 2D 1
//   SetTexture 10 [_LightTextureB0] 2D 2
//   SetTexture 11 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityProbeVolume" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:30:06 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 5      w        1     NONE   float      w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyzw        5     NONE   float   xy
// TEXCOORD                 6   xyzw        6     NONE   float
// TEXCOORD                 7   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[17], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_sampler s11, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t11
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xy
dcl_output o0.xyzw
dcl_temps 10
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r8.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 80e3513ff6eaeb99-ps.txt

mul r8.w, -r8.x, r8.y
mad r9.xyz, -r8.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v4.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v4.xyzx, r9.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
add r3.xy, cb0[9].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r3.xy, v5.xyxx, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, cb0[9].xyxx
sample r3.xyzw, r3.xyxx, t0.xyzw, s3
dp4 r1.w, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r2.w, r1.w, l(0.001000)
div r3.xyzw, r3.xyzw, r2.wwww
mad r4.xy, v5.xyxx, cb0[10].xyxx, cb0[10].zwzz
mad r4.zw, v5.xxxy, cb0[11].xxxy, cb0[11].zzzw
mad r5.xy, v5.xyxx, cb0[12].xyxx, cb0[12].zwzz
mad r5.zw, v5.xxxy, cb0[13].xxxy, cb0[13].zzzw
sample r6.xyzw, r4.xyxx, t1.xyzw, s4
mul r6.xyzw, r3.xxxx, r6.xyzw
mul r6.w, r6.w, cb0[16].x
sample r7.xyzw, r4.zwzz, t2.xyzw, s5
mul r7.xyzw, r3.yyyy, r7.xyzw
mul r7.w, r7.w, cb0[16].y
add r6.xyzw, r6.xyzw, r7.xyzw
sample r7.xyzw, r5.xyxx, t3.xyzw, s6
mul r7.xyzw, r3.zzzz, r7.xyzw
mul r7.w, r7.w, cb0[16].z
add r6.xyzw, r6.xyzw, r7.xyzw
sample r7.xyzw, r5.zwzz, t4.xyzw, s7
mul r7.xyzw, r3.wwww, r7.xyzw
mul r7.w, r7.w, cb0[16].w
add r6.xyzw, r6.xyzw, r7.xyzw
sample r7.xyzw, r4.xyxx, t5.xyzw, s8
mul r7.x, r7.w, r7.x
mad r4.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r7.xy, r4.xyxx, cb0[14].xxxx
dp2 r2.w, r7.xyxx, r7.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r7.z, r2.w
sample r4.xyzw, r4.zwzz, t6.xyzw, s9
mul r4.x, r4.w, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, cb0[14].yyyy
dp2 r2.w, r4.xyxx, r4.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r4.z, r2.w
mul r4.xyz, r3.yyyy, r4.xyzx
mad r4.xyz, r7.xyzx, r3.xxxx, r4.xyzx
sample r7.xyzw, r5.xyxx, t7.xyzw, s10
mul r7.x, r7.w, r7.x
mad r5.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r7.xy, r5.xyxx, cb0[14].zzzz
dp2 r2.w, r7.xyxx, r7.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r7.z, r2.w
mad r4.xyz, r7.xyzx, r3.zzzz, r4.xyzx
sample r5.xyzw, r5.zwzz, t8.xyzw, s11
mul r5.x, r5.w, r5.x
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r5.xy, r5.xyxx, cb0[14].wwww
dp2 r2.w, r5.xyxx, r5.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r5.z, r2.w
mad r4.xyz, r5.xyzx, r3.wwww, r4.xyzx
dp4 r2.w, r3.xyzw, cb0[15].xyzw
mul r3.xyzw, v4.yyyy, cb0[5].xyzw
mad r3.xyzw, cb0[4].xyzw, v4.xxxx, r3.xyzw
mad r3.xyzw, cb0[6].xyzw, v4.zzzz, r3.xyzw
add r3.xyzw, r3.xyzw, cb0[7].xyzw
eq r5.x, cb4[0].x, l(1.000000)
if_nz r5.x
  eq r5.x, cb4[0].y, l(1.000000)
  mul r5.yzw, v4.yyyy, cb4[2].xxyz
  mad r5.yzw, cb4[1].xxyz, v4.xxxx, r5.yyzw
  mad r5.yzw, cb4[3].xxyz, v4.zzzz, r5.yyzw
  add r5.yzw, r5.yyzw, cb4[4].xxyz
  movc r5.xyz, r5.xxxx, r5.yzwy, v4.xyzx
  add r5.xyz, r5.xyzx, -cb4[6].xyzx
  mul r5.yzw, r5.xxyz, cb4[5].xxyz
  mad r5.y, r5.y, l(0.250000), l(0.750000)
  mad r7.x, cb4[0].z, l(0.500000), l(0.750000)
  max r5.x, r5.y, r7.x
  sample r5.xyzw, r5.xzwx, t11.xyzw, s0
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r5.x, r5.xyzw, cb2[46].xyzw
lt r5.y, l(0.000000), r3.z
and r5.y, r5.y, l(0x3f800000)
div r5.zw, r3.xxxy, r3.wwww
add r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
sample r7.xyzw, r5.zwzz, t9.xyzw, s1
mul r3.w, r5.y, r7.w
dp3 r3.x, r3.xyzx, r3.xyzx
sample r7.xyzw, r3.xxxx, t10.xyzw, s2
mul r3.x, r3.w, r7.x
mul r3.x, r5.x, r3.x
add r4.w, r4.z, l(0.000010)
dp3 r5.x, v1.xyzx, r4.xywx
dp3 r5.y, v2.xyzx, r4.xywx
dp3 r5.z, v3.xyzx, r4.xywx
dp3 r3.y, r5.xyzx, r5.xyzx
rsq r3.y, r3.y
mul r3.yzw, r3.yyyy, r5.xxyz
mul r4.xyz, r3.xxxx, cb0[2].xyzx
add r5.xyz, r6.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r5.xyz, r2.wwww, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r2.w, -r2.w, l(0.960000), l(0.960000)
mul r6.xyz, r2.wwww, r6.xyzx
add r2.w, -r6.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r3.yzwy, r2.xyzx
dp3_sat r2.x, r3.yzwy, r1.xyzx
dp3_sat r2.y, r3.yzwy, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r2.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r2.x, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r2.w, r2.w
max r0.z, r0.z, l(0.002000)
add r1.x, -r0.z, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r2.x, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r2.x, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r2.y, r0.z, -r2.y
mad r1.x, r1.x, r2.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r2.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r5.xyzx, r5.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r4.xyzx
mul r0.yzw, r4.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r2.x, r0.x, r0.x
mul r2.x, r2.x, r2.x
mul r0.x, r0.x, r2.x
add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
mul r0.xyz, r1.wwww, r0.xyzx
div r0.w, v1.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used