// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed fc5e02f8d963ff50-ps.txt
// 3DMigoto: fc5e02f8d963ff50 |    Unity headers extracted from Amplify_mud_buildings_rain
//    Shader "Amplify/mud_buildings_rain" {
//      CustomEditor "ASEMaterialInspector"
//      Fallback "Diffuse"
//      SubShader 1/1 {
//        Tags { "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//        Pass 2/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Amplify_mud_buildings_rain:
//   API d3d11
//   Shader model ps_5_0
//   undeciphered1: 201802150 196 11 2
//   undeciphered1a: 9
//   Keywords { "POINT_COOKIE" "FOG_LINEAR" "_LIGHTEN_ON" }
//   undeciphered2: 1 11 6 11 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 96 [_LightColor0]
//   Float 128 [_Tilingdetail]
//   Float 132 [_Tilingdetail2]
//   Float 136 [_MaskContrast]
//   Float 140 [_cracknrmpower]
//   Float 144 [_cracktilling]
//   Float 148 [_splaszczenienrm]
//   Float 152 [TERRAIN_RainIntensity]
//   Float 156 [TERRAIN_GlobalWetness]
//   Float 160 [_AlbedoVariabletilling]
//   Float 164 [_variablepower]
//   Vector 176 [_AlbedoColor]
//   Matrix 32 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 0 [_Time]
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   ConstBuffer "Amplifymud_buildings_rain" 16
//   Float 0 [_dry_smoothness]
//   SetTexture 0 [_mask] 2D 5
//   SetTexture 1 [_nrm1] 2D 3
//   SetTexture 2 [_nrm2] 2D 4
//   SetTexture 3 [_cracknrm] 2D 6
//   SetTexture 4 [_TextureSample11] 2D 7
//   SetTexture 5 [_Albedovariable] 2D 8
//   SetTexture 6 [_albedo1] 2D 9
//   SetTexture 7 [_albedo2] 2D 10
//   SetTexture 8 [_LightTextureB0] 2D 2
//   SetTexture 9 [_LightTexture0] CUBE 1
//   SetTexture 10 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityFog" 3
//   BindCB "UnityProbeVolume" 4
//   BindCB "Amplifymud_buildings_rain" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:34:05 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 7     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyz         6     NONE   float
// TEXCOORD                 6   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_constantbuffer cb5[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texturecube (float,float,float,float) t9
dcl_resource_texture3d (float,float,float,float) t10
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed fc5e02f8d963ff50-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v5.xyzx, r10.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r3.xyzw, v1.xyxy, cb0[8].xxyy
sample_indexable(texture2d)(float,float,float,float) r1.w, v1.xyxx, t0.yzwx, s5
mul r2.w, r1.w, cb0[8].z
mad r1.w, -r1.w, cb0[8].z, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xyxx, t1.xywz, s3
mul r4.x, r4.z, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r4.xyxx, r4.xyxx
min r4.w, r4.w, l(1.000000)
add r4.w, -r4.w, l(1.000000)
sqrt r4.z, r4.w
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r3.zwzz, t2.xywz, s4
mul r5.x, r5.z, r5.x
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r5.xyxx, r5.xyxx
min r4.w, r4.w, l(1.000000)
add r4.w, -r4.w, l(1.000000)
sqrt r5.z, r4.w
add r5.xyz, -r4.xyzx, r5.xyzx
mad r4.xyz, r2.wwww, r5.xyzx, r4.xyzx
mul r5.xy, v1.xyxx, cb0[9].xxxx
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyxx, t3.xywz, s6
mul r5.x, r5.z, r5.x
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r5.zw, r5.xxxy, cb0[8].wwww
dp2 r4.w, r5.zwzz, r5.zwzz
min r4.w, r4.w, l(1.000000)
add r4.w, -r4.w, l(1.000000)
sqrt r4.w, r4.w
mad r5.xy, r5.xyxx, cb0[8].wwww, r4.xyxx
mul r5.z, r4.w, r4.z
dp3 r4.x, r5.xyzx, r5.xyzx
rsq r4.x, r4.x
mul r4.yzw, r4.xxxx, r5.xxyz
mad r5.xyz, -r5.xyzx, r4.xxxx, l(0.490196109, 0.490196109, 1.000000, 0.000000)
mad r5.xyz, cb0[9].yyyy, r5.xyzx, r4.yzwy
mul r6.xy, v5.xzxx, l(1.800000, 1.800000, 0.000000, 0.000000)
frc r6.xy, r6.xyxx
mul r4.x, cb1[0].y, l(0.625000)
ge r5.w, r4.x, -r4.x
frc r4.x, |r4.x|
movc r4.x, r5.w, r4.x, -r4.x
mul r4.x, r4.x, l(64.000000)
round_ne r4.x, r4.x
lt r5.w, r4.x, l(0.000000)
and r5.w, r5.w, l(0x42800000)
add r4.x, r4.x, r5.w
mul r5.w, r4.x, l(0.125000)
ge r6.z, r5.w, -r5.w
frc r5.w, |r5.w|
movc r5.w, r6.z, r5.w, -r5.w
mul r5.w, r5.w, l(8.000000)
round_ne r5.w, r5.w
mul r7.x, r5.w, l(0.125000)
add r4.x, r4.x, -r5.w
mul r4.x, r4.x, l(0.015625)
ge r5.w, r4.x, -r4.x
frc r4.x, |r4.x|
movc r4.x, r5.w, r4.x, -r4.x
mul r4.x, r4.x, l(8.000000)
round_ne r4.x, r4.x
add r4.x, -r4.x, l(7.000000)
mul r7.y, r4.x, l(0.125000)
mad r6.xy, r6.xyxx, l(0.125000, 0.125000, 0.000000, 0.000000), r7.xyxx
mov_sat r4.x, v3.z
add r4.x, -r4.x, l(1.000000)
mul r5.w, r4.x, l(-2.000000)
mad_sat r6.z, r4.x, l(-2.000000), l(1.350000)
add r6.w, cb0[9].w, cb0[9].w
max r6.w, r6.w, l(0.000000)
min r7.xy, r6.wwww, l(1.000000, 0.200000, 0.000000, 0.000000)
mul r6.z, r6.z, r7.x
sample_indexable(texture2d)(float,float,float,float) r6.xyw, r6.xyxx, t4.xyzw, s7
mul r6.x, r6.w, r6.x
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r7.zw, r6.xxxy, cb0[9].zzzz
dp2 r6.w, r7.zwzz, r7.zwzz
min r6.w, r6.w, l(1.000000)
add r6.w, -r6.w, l(1.000000)
sqrt r6.w, r6.w
mad r8.xy, r6.xyxx, cb0[9].zzzz, r5.xyxx
mul r8.z, r5.z, r6.w
dp3 r5.x, r8.xyzx, r8.xyzx
rsq r5.x, r5.x
mad r5.xyz, r8.xyzx, r5.xxxx, -r4.yzwy
mad r4.yzw, r6.zzzz, r5.xxyz, r4.yyzw
mul r5.xy, v1.xyxx, cb0[10].xxxx
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyxx, t5.xyzw, s8
add r5.xyz, r5.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r5.xyz, cb0[10].yyyy, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r6.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r5.xyz, r1.wwww, r6.xyzx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r3.xyxx, t6.xyzw, s9
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t7.xyzw, s10
add r3.xyz, -r6.xyzx, r3.xyzx
mad r3.xyz, r2.wwww, r3.xyzx, r6.xyzx
add r6.xyz, -cb0[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r3.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad_sat r3.xyz, -r6.xyzx, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r3.xyz, r3.xyzx, r5.xyzx
mad r1.w, r7.x, l(2.000000), r5.w
max r1.w, r1.w, l(0.000000)
min r1.w, r1.w, l(0.450000)
mad r3.xyz, r1.wwww, -r3.xyzx, r3.xyzx
mul r1.w, r7.x, l(1.500000)
mad r1.w, r4.x, l(-2.000000), r1.w
max r1.w, r1.w, cb5[0].x
min r1.w, r1.w, l(0.800000)
mul r5.xyz, v5.yyyy, cb0[3].xyzx
mad r5.xyz, cb0[2].xyzx, v5.xxxx, r5.xyzx
mad r5.xyz, cb0[4].xyzx, v5.zzzz, r5.xyzx
add r5.xyz, r5.xyzx, cb0[5].xyzx
eq r2.w, cb4[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb4[0].y, l(1.000000)
  mul r6.xyz, v5.yyyy, cb4[2].xyzx
  mad r6.xyz, cb4[1].xyzx, v5.xxxx, r6.xyzx
  mad r6.xyz, cb4[3].xyzx, v5.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb4[4].xyzx
  movc r6.xyz, r2.wwww, r6.xyzx, v5.xyzx
  add r6.xyz, r6.xyzx, -cb4[6].xyzx
  mul r6.yzw, r6.xxyz, cb4[5].xxyz
  mad r2.w, r6.y, l(0.250000), l(0.750000)
  mad r3.w, cb4[0].z, l(0.500000), l(0.750000)
  max r6.x, r2.w, r3.w
  sample_indexable(texture3d)(float,float,float,float) r6.xyzw, r6.xzwx, t10.xyzw, s0
else
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r6.xyzw, cb2[46].xyzw
dp3 r3.w, r5.xyzx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.w, r3.wwww, t8.yzwx, s2
sample_indexable(texturecube)(float,float,float,float) r4.x, r5.xyzx, t9.wxyz, s1
mul r3.w, r3.w, r4.x
mul r2.w, r2.w, r3.w
dp3 r5.x, v2.xyzx, r4.yzwy
dp3 r5.y, v3.xyzx, r4.yzwy
dp3 r5.z, v4.xyzx, r4.yzwy
dp3 r3.w, r5.xyzx, r5.xyzx
rsq r3.w, r3.w
mul r4.xyz, r3.wwww, r5.xyzx
mul r5.xyz, r2.wwww, cb0[6].xyzx
add r6.xyz, r3.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r6.xyz, r7.yyyy, r6.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r2.w, -r7.y, l(0.960000), l(0.960000)
mul r3.xyz, r2.wwww, r3.xyzx
add r1.w, -r1.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r4.xyzx, r2.xyzx
dp3_sat r2.x, r4.xyzx, r1.xyzx
dp3_sat r2.y, r4.xyzx, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r2.x, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
mad r1.x, -r1.w, r1.w, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r2.x, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r2.x, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r2.y, r0.z, -r2.y
mad r1.x, r1.x, r2.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r2.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r6.xyzx, r6.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r5.xyzx
mul r0.yzw, r5.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r2.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r6.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad r0.xyz, r3.xyzx, r1.xyzx, r0.xyzx
div r0.w, v1.z, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb3[1].z, cb3[1].w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used