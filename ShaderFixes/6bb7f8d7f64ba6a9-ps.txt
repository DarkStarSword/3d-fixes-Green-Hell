// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6bb7f8d7f64ba6a9-ps.txt
// 3DMigoto: 6bb7f8d7f64ba6a9 | Matched 9 variants of 1 shaders: SineVFX/LivingParticles/LivingParticleMaskedMorphPbr
//
//         Unity headers extracted from SineVFX_LivingParticles_LivingParticleMaskedMorphPbr
//         Shader "SineVFX/LivingParticles/LivingParticleMaskedMorphPbr" {
//           CustomEditor "ASEMaterialInspector"
//           Fallback "Diffuse"
//           SubShader 1/1 {
//             Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "QUEUE"="Geometry+0" "RenderType"="Opaque" }
//             Pass 2/4 {
//               Name "FORWARD"
//               Tags { "IGNOREPROJECTOR"="true" "IsEmissive"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//               ZWrite Off
//               Program "fp" {
//                 SubProgram "d3d11" {
//                 }
//               }
//             }
//           }
//         }
//
//      Unity 5.3 headers extracted from SineVFX_LivingParticles_LivingParticleMaskedMorphPbr:
//        API d3d11
//        Shader model ps_4_0
//        undeciphered1: 201802150 100 5 2
//        undeciphered1a: 7
// 040:   Keywords { "DIRECTIONAL_COOKIE" "_CENTERMASKENABLED_ON" "_FLIPEMISSIONMASK_ON" }
// 008:   Keywords { "DIRECTIONAL_COOKIE" "_CENTERMASKENABLED_ON" "_FLIPMORPHMASK_ON" "_FLIPOFFSETMASK_ON" }
// 010:   Keywords { "DIRECTIONAL_COOKIE" "_CENTERMASKENABLED_ON" "_FLIPMORPHMASK_ON" "_USEGAMMARENDERING_ON" }
// 002:   Keywords { "DIRECTIONAL_COOKIE" "_CENTERMASKENABLED_ON" "_FLIPMORPHMASK_ON" }
// 080:   Keywords { "DIRECTIONAL_COOKIE" "_CENTERMASKENABLED_ON" "_USEGAMMARENDERING_ON" "_FLIPEMISSIONMASK_ON" }
// 020:   Keywords { "DIRECTIONAL_COOKIE" "_RAMPENABLED_ON" "_CENTERMASKENABLED_ON" "_FLIPMORPHMASK_ON" "_USEGAMMARENDERING_ON" }
// 004:   Keywords { "DIRECTIONAL_COOKIE" "_RAMPENABLED_ON" "_CENTERMASKENABLED_ON" "_FLIPMORPHMASK_ON" }
// 001:   Keywords { "DIRECTIONAL_COOKIE" "_RAMPENABLED_ON" "_CENTERMASKENABLED_ON" }
// 100:   Keywords { "DIRECTIONAL_COOKIE" }
//        undeciphered2: 1 5 4 5 0 0
//        undeciphered3: 0 0
//        ConstBuffer "$Globals" 368
//        Vector 32 [_LightColor0]
//        Vector 192 [_Normal_ST]
//        Vector 208 [_ColorTint]
//        Vector 224 [_Albedo_ST]
//        Float 304 [_Metallic]
//        Vector 320 [_MetallicSmoothness_ST]
//        Float 336 [_Smoothness]
//        Matrix 64 [unity_WorldToLight]
//        ConstBuffer "UnityPerCamera" 144
//        Vector 64 [_WorldSpaceCameraPos] 3
//        ConstBuffer "UnityLighting" 768
//        Vector 0 [_WorldSpaceLightPos0]
//        Vector 736 [unity_OcclusionMaskSelector]
//        ConstBuffer "UnityProbeVolume" 112
//        Vector 0 [unity_ProbeVolumeParams]
//        Vector 80 [unity_ProbeVolumeSizeInv] 3
//        Vector 96 [unity_ProbeVolumeMin] 3
//        Matrix 16 [unity_ProbeVolumeWorldToObject]
//        SetTexture 0 [_Normal] 2D 2
//        SetTexture 1 [_Albedo] 2D 3
//        SetTexture 2 [_MetallicSmoothness] 2D 4
//        SetTexture 3 [_LightTexture0] 2D 1
//        SetTexture 4 [unity_ProbeVolumeSH] 3D 0
//        BindCB "$Globals" 0
//        BindCB "UnityPerCamera" 1
//        BindCB "UnityLighting" 2
//        BindCB "UnityProbeVolume" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:17:43 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 5     zw        1     NONE   float
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyzw        6     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[22], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_output o0.xyzw
dcl_temps 9
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r7.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6bb7f8d7f64ba6a9-ps.txt

mul r7.w, -r7.x, r7.y
mad r8.xyz, -r7.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v5.xyzx, r8.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
mad r2.xy, v1.xyxx, cb0[12].xyxx, cb0[12].zwzz
sample r2.xyzw, r2.xyxx, t0.xyzw, s2
mul r2.x, r2.w, r2.x
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r2.xyxx, r2.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r2.z, r1.w
mad r3.xy, v1.xyxx, cb0[14].xyxx, cb0[14].zwzz
sample r3.xyzw, r3.xyxx, t1.xyzw, s3
mul r4.xyz, r3.xyzx, cb0[13].xyzx
mad r5.xy, v1.xyxx, cb0[20].xyxx, cb0[20].zwzz
sample r5.xyzw, r5.xyxx, t2.xyzw, s4
mul r1.w, r5.x, cb0[19].x
mul r5.xy, v5.yyyy, cb0[5].xyxx
mad r5.xy, cb0[4].xyxx, v5.xxxx, r5.xyxx
mad r5.xy, cb0[6].xyxx, v5.zzzz, r5.xyxx
add r5.xy, r5.xyxx, cb0[7].xyxx
eq r2.w, cb3[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb3[0].y, l(1.000000)
  mul r6.xyz, v5.yyyy, cb3[2].xyzx
  mad r6.xyz, cb3[1].xyzx, v5.xxxx, r6.xyzx
  mad r6.xyz, cb3[3].xyzx, v5.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb3[4].xyzx
  movc r6.xyz, r2.wwww, r6.xyzx, v5.xyzx
  add r6.xyz, r6.xyzx, -cb3[6].xyzx
  mul r6.yzw, r6.xxyz, cb3[5].xxyz
  mad r2.w, r6.y, l(0.250000), l(0.750000)
  mad r3.w, cb3[0].z, l(0.500000), l(0.750000)
  max r6.x, r2.w, r3.w
  sample r6.xyzw, r6.xzwx, t4.xyzw, s0
else
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r6.xyzw, cb2[46].xyzw
sample r6.xyzw, r5.xyxx, t3.xyzw, s1
mul r2.w, r2.w, r6.w
dp3 r5.x, v2.xyzx, r2.xyzx
dp3 r5.y, v3.xyzx, r2.xyzx
dp3 r5.z, v4.xyzx, r2.xyzx
dp3 r2.x, r5.xyzx, r5.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, r5.xyzx
mul r5.xyz, r2.wwww, cb0[2].xyzx
mad r3.xyz, cb0[13].xyzx, r3.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r3.xyz, r1.wwww, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -r1.w, l(0.960000), l(0.960000)
mul r4.xyz, r1.wwww, r4.xyzx
mad r1.w, -r5.w, cb0[21].x, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r2.xyzx, r1.xyzx
dp3_sat r1.x, r2.xyzx, cb2[0].xyzx
dp3_sat r1.y, r2.xyzx, r0.xyzx
dp3_sat r0.x, cb2[0].xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r1.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r1.x, l(1.000000)
mul r1.z, r0.z, r0.z
mul r1.z, r1.z, r1.z
mul r0.z, r0.z, r1.z
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.z, -|r0.w|, l(1.000000)
mul r2.x, r1.z, r1.z
mul r2.x, r2.x, r2.x
mul r1.z, r1.z, r2.x
mad r0.y, r0.y, r1.z, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r1.w, r1.w
max r0.z, r0.z, l(0.002000)
add r1.z, -r0.z, l(1.000000)
mad r1.w, |r0.w|, r1.z, r0.z
mad r1.z, r1.x, r1.z, r0.z
mul r0.w, |r0.w|, r1.z
mad r0.w, r1.x, r1.w, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.z, r1.y, r0.z, -r1.y
mad r1.y, r1.z, r1.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.y, r1.y, r1.y, l(1.000000012E-007)
div r0.z, r0.z, r1.y
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r1.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r3.xyzx, r3.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r5.xyzx
mul r0.yzw, r5.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r1.w, r0.x, r0.x
mul r1.w, r1.w, r1.w
mul r0.x, r0.x, r1.w
add r2.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r3.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad o0.xyz, r4.xyzx, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used