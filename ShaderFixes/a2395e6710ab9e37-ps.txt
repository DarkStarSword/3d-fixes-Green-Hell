// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a2395e6710ab9e37-ps.txt
// 3DMigoto: a2395e6710ab9e37 |    Unity headers extracted from Relief Pack - GeometryBlend_ Basic
//    Shader "Relief Pack - GeometryBlend/ Basic" {
//      SubShader 1/1 {
//        LOD 700
//        Tags { "QUEUE"="Geometry+12" "RenderType"="Opaque" }
//        Pass 1/3 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="Geometry+12" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Relief Pack - GeometryBlend_ Basic:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 199 6 6
//   undeciphered1a: 13
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "FOG_LINEAR" "RTP_SIMPLE_SHADING" }
//   undeciphered2: 1 8 8 7 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 208
//   Vector 32 [_LightColor0]
//   Vector 80 [_Color] 3
//   Float 92 [_GlossMin]
//   Float 96 [_GlossMax]
//   Float 100 [_Metalness]
//   Float 108 [_BumpMapGlobalScale]
//   Float 112 [_BumpMapPerlinBlend]
//   Float 116 [rtp_perlin_start_val]
//   Float 120 [_TERRAIN_distance_start]
//   Float 124 [_TERRAIN_distance_transition]
//   Float 128 [_TERRAIN_distance_start_bumpglobal]
//   Float 132 [_TERRAIN_distance_transition_bumpglobal]
//   Vector 176 [_GlobalColorMapBlendValues]
//   Float 192 [_GlobalColorMapSaturation]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityReflectionProbes" 128
//   Vector 0 [unity_SpecCube0_BoxMax]
//   Vector 16 [unity_SpecCube0_BoxMin]
//   Vector 32 [unity_SpecCube0_ProbePosition]
//   Vector 48 [unity_SpecCube0_HDR]
//   Vector 64 [unity_SpecCube1_BoxMax]
//   Vector 80 [unity_SpecCube1_BoxMin]
//   Vector 96 [unity_SpecCube1_ProbePosition]
//   Vector 112 [unity_SpecCube1_HDR]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_ColorMapGlobal] 2D 5
//   SetTexture 1 [_MainTex] 2D 3
//   SetTexture 2 [_BumpMap] 2D 4
//   SetTexture 3 [_BumpMapPerlin] 2D 6
//   SetTexture 4 [_ShadowMapTexture] 2D 2
//   SetTexture 5 [unity_SpecCube0] CUBE 0
//   SetTexture 6 [unity_SpecCube1] CUBE -1
//   SetTexture 7 [unity_ProbeVolumeSH] 3D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityReflectionProbes" 6
//   BindCB "UnityProbeVolume" 7
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:50:09 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// COLOR                    0   xyzw        4     NONE   float      w
// TEXCOORD                 3   xyzw        5     NONE   float   xyzw
// TEXCOORD                 4   xyz         6     NONE   float     z
// TEXCOORD                 6      w        6     NONE   float      w
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
// TEXCOORD                 8   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[13], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[8], immediateIndexed
dcl_constantbuffer cb7[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.w
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.z
dcl_input_ps linear v6.w
dcl_input_ps linear v7.xyw
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed a2395e6710ab9e37-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v1.w
mov r0.y, v2.w
mov r0.z, v3.w
add r1.xyz, -r0.xyzx, r14.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
add r1.w, v6.z, -cb0[7].z
div_sat r1.w, r1.w, cb0[7].w
add r1.w, -r1.w, l(1.000000)
add r2.w, v6.z, -cb0[8].x
div_sat r2.w, r2.w, cb0[8].y
mul r1.w, r1.w, r1.w
add r3.x, -cb0[11].y, cb0[11].x
mad r1.w, r1.w, r3.x, cb0[11].y
add r3.x, -r1.w, cb0[11].z
mad r1.w, r2.w, r3.x, r1.w
sample r3.xyzw, v5.zwzz, t0.xyzw, s5
dp3 r3.w, r3.xyzx, l(0.350000, 0.350000, 0.350000, 0.000000)
add r3.xyz, -r3.wwww, r3.xyzx
mad r3.xyz, cb0[12].xxxx, r3.xyzx, r3.wwww
sample r4.xyzw, v5.xyxx, t1.xyzw, s3
mul r4.xyz, r4.xyzx, cb0[5].xyzx
add r4.xyz, r4.xyzx, r4.xyzx
add r3.w, -cb0[5].w, cb0[6].x
mad r3.w, r4.w, r3.w, cb0[5].w
mul r3.xyz, r3.xyzx, r4.xyzx
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r4.xyzx
mad r3.xyz, r1.wwww, r3.xyzx, r4.xyzx
sample r4.xyzw, v5.xyxx, t2.xyzw, s4
mul r4.x, r4.w, r4.x
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r4.xyxx, r4.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r4.z, r1.w
mul r5.xy, v5.xyxx, cb0[6].wwww
sample r5.xyzw, r5.xyxx, t3.xyzw, s6
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r5.xyxx, r5.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r5.z, r1.w
add r1.w, -cb0[7].y, l(1.000000)
mad r1.w, r2.w, r1.w, cb0[7].y
mul r5.xyz, r1.wwww, r5.xyzx
mad r4.xyz, r5.xyzx, cb0[7].xxxx, r4.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx
add o0.w, -v4.w, l(1.000000)
mov r5.x, cb4[9].z
mov r5.y, cb4[10].z
mov r5.z, cb4[11].z
dp3 r1.w, r1.xyzx, r5.xyzx
add r5.xyz, r0.xyzx, -cb3[25].xyzx
dp3 r2.w, r5.xyzx, r5.xyzx
sqrt r2.w, r2.w
add r2.w, -r1.w, r2.w
mad r1.w, cb3[25].w, r2.w, r1.w
mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
eq r2.w, cb7[0].x, l(1.000000)
if_nz r2.w
  eq r2.w, cb7[0].y, l(1.000000)
  mul r5.xyz, v2.wwww, cb7[2].xyzx
  mad r5.xyz, cb7[1].xyzx, v1.wwww, r5.xyzx
  mad r5.xyz, cb7[3].xyzx, v3.wwww, r5.xyzx
  add r5.xyz, r5.xyzx, cb7[4].xyzx
  movc r5.xyz, r2.wwww, r5.xyzx, r0.xyzx
  add r5.xyz, r5.xyzx, -cb7[6].xyzx
  mul r5.yzw, r5.xxyz, cb7[5].xxyz
  mad r2.w, r5.y, l(0.250000), l(0.750000)
  mad r4.w, cb7[0].z, l(0.500000), l(0.750000)
  max r5.x, r2.w, r4.w
  sample r5.xyzw, r5.xzwx, t7.xyzw, s1
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
div r5.xy, v7.xyxx, v7.wwww
sample r5.xyzw, r5.xyxx, t4.xyzw, s2
add r2.w, r2.w, -r5.x
mad r1.w, r1.w, r2.w, r5.x
dp3 r5.x, v1.xyzx, r4.xyzx
dp3 r5.y, v2.xyzx, r4.xyzx
dp3 r5.z, v3.xyzx, r4.xyzx
dp3 r2.w, r5.xyzx, r5.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, r5.xyzx
add r2.w, -r3.w, l(1.000000)
dp3 r4.w, -r2.xyzx, r4.xyzx
add r4.w, r4.w, r4.w
mad r5.xyz, r4.xyzx, -r4.wwww, -r2.xyzx
mul r6.xyz, r1.wwww, cb0[2].xyzx
lt r1.w, l(0.000000), cb6[2].w
if_nz r1.w
  dp3 r1.w, r5.xyzx, r5.xyzx
  rsq r1.w, r1.w
  mul r7.xyz, r1.wwww, r5.xyzx
  add r8.xyz, -r0.xyzx, cb6[0].xyzx
  div r8.xyz, r8.xyzx, r7.xyzx
  add r9.xyz, -r0.xyzx, cb6[1].xyzx
  div r9.xyz, r9.xyzx, r7.xyzx
  lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  min r1.w, r8.y, r8.x
  min r1.w, r8.z, r1.w
  add r8.xyz, r0.xyzx, -cb6[2].xyzx
  mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
else
  mov r7.xyz, r5.xyzx
endif
mad r1.w, -r2.w, l(0.700000), l(1.700000)
mul r1.w, r1.w, r2.w
mul r1.w, r1.w, l(6.000000)
sample_l r7.xyzw, r7.xyzx, t5.xyzw, s0, r1.w
add r4.w, r7.w, l(-1.000000)
mad r4.w, cb6[3].w, r4.w, l(1.000000)
log r4.w, r4.w
mul r4.w, r4.w, cb6[3].y
exp r4.w, r4.w
mul r4.w, r4.w, cb6[3].x
mul r8.xyz, r7.xyzx, r4.wwww
lt r5.w, cb6[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb6[6].w
  if_nz r5.w
    dp3 r5.w, r5.xyzx, r5.xyzx
    rsq r5.w, r5.w
    mul r9.xyz, r5.wwww, r5.xyzx
    add r10.xyz, -r0.xyzx, cb6[4].xyzx
    div r10.xyz, r10.xyzx, r9.xyzx
    add r11.xyz, -r0.xyzx, cb6[5].xyzx
    div r11.xyz, r11.xyzx, r9.xyzx
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
    movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
    min r5.w, r10.y, r10.x
    min r5.w, r10.z, r5.w
    add r0.xyz, r0.xyzx, -cb6[6].xyzx
    mad r5.xyz, r9.xyzx, r5.wwww, r0.xyzx
  endif
  sample_l r5.xyzw, r5.xyzx, t6.xyzw, s0, r1.w
  add r0.x, r5.w, l(-1.000000)
  mad r0.x, cb6[7].w, r0.x, l(1.000000)
  log r0.x, r0.x
  mul r0.x, r0.x, cb6[7].y
  exp r0.x, r0.x
  mul r0.x, r0.x, cb6[7].x
  mul r0.xyz, r5.xyzx, r0.xxxx
  mad r5.xyz, r4.wwww, r7.xyzx, -r0.xyzx
  mad r8.xyz, cb6[1].wwww, r5.xyzx, r0.xyzx
endif
add r0.xyz, r3.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r0.xyz, cb0[6].yyyy, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r1.w, -cb0[6].y, l(0.960000), l(0.960000)
mul r3.xyz, r1.wwww, r3.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r4.xyzx, r2.xyzx
dp3_sat r2.x, r4.xyzx, cb2[0].xyzx
dp3_sat r2.y, r4.xyzx, r1.xyzx
dp3_sat r1.x, cb2[0].xyzx, r1.xyzx
add r1.y, r1.x, r1.x
mul r1.y, r1.x, r1.y
mad r1.y, r1.y, r2.w, l(-0.500000)
add r1.z, -r2.x, l(1.000000)
mul r2.z, r1.z, r1.z
mul r2.z, r2.z, r2.z
mul r1.z, r1.z, r2.z
mad r1.z, r1.y, r1.z, l(1.000000)
add r2.z, -|r0.w|, l(1.000000)
mul r4.x, r2.z, r2.z
mul r4.x, r4.x, r4.x
mul r2.z, r2.z, r4.x
mad r1.y, r1.y, r2.z, l(1.000000)
mul r1.y, r1.y, r1.z
mul r1.y, r2.x, r1.y
mul r1.z, r2.w, r2.w
max r1.z, r1.z, l(0.002000)
add r2.w, -r1.z, l(1.000000)
mad r4.x, |r0.w|, r2.w, r1.z
mad r2.w, r2.x, r2.w, r1.z
mul r0.w, |r0.w|, r2.w
mad r0.w, r2.x, r4.x, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r2.w, r1.z, r1.z
mad r4.x, r2.y, r2.w, -r2.y
mad r2.y, r4.x, r2.y, l(1.000000)
mul r2.w, r2.w, l(0.318309873)
mad r2.y, r2.y, r2.y, l(1.000000012E-007)
div r2.y, r2.w, r2.y
mul r0.w, r0.w, r2.y
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r2.x, r0.w
max r0.w, r0.w, l(0.000000)
mad r1.z, r1.z, r1.z, l(1.000000)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
dp3 r2.x, r0.xyzx, r0.xyzx
ne r2.x, r2.x, l(0.000000)
and r2.x, r2.x, l(0x3f800000)
mul r0.w, r0.w, r2.x
add r1.w, -r1.w, l(1.000000)
add_sat r1.w, r1.w, r3.w
mul r2.xyw, r1.yyyy, r6.xyxz
mul r4.xyz, r6.xyzx, r0.wwww
add r0.w, -r1.x, l(1.000000)
mul r1.x, r0.w, r0.w
mul r1.x, r1.x, r1.x
mul r0.w, r0.w, r1.x
add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r5.xyz, r5.xyzx, r0.wwww, r0.xyzx
mul r4.xyz, r4.xyzx, r5.xyzx
mad r2.xyw, r3.xyxz, r2.xyxw, r4.xyxz
mul r1.xyz, r8.xyzx, r1.zzzz
add r3.xyz, -r0.xyzx, r1.wwww
mad r0.xyz, r2.zzzz, r3.xyzx, r0.xyzx
mad r0.xyz, r1.xyzx, r0.xyzx, r2.xywx
div r0.w, v6.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
add r0.xyz, r0.xyzx, -cb5[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
ret
// Approximately 0 instruction slots used