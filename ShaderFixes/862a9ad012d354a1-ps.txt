// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 862a9ad012d354a1-ps.txt
// 3DMigoto: 862a9ad012d354a1 | Matched 3 variants of 1 shaders: Shader Forge/Basic_2uv
//
//       Unity headers extracted from Shader Forge_Basic_2uv
//       Shader "Shader Forge/Basic_2uv" {
//         CustomEditor "ShaderForgeMaterialInspector"
//         Fallback "Diffuse"
//         SubShader 1/1 {
//           Tags { "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" }
//           Pass 1/4 {
//             Name "FORWARD"
//             Tags { "LIGHTMODE"="FORWARDBASE" "QUEUE"="AlphaTest" "RenderType"="TransparentCutout" "SHADOWSUPPORT"="true" }
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Shader Forge_Basic_2uv:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 167 5 4
//      undeciphered1a: 15
// 2:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_COMBINED" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 4:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "DIRLIGHTMAP_SEPARATE" "LIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
// 1:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "DYNAMICLIGHTMAP_OFF" }
//      undeciphered2: 1 7 4 6 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 192
//      Vector 32 [_LightColor0]
//      Float 64 [_Smth]
//      Vector 80 [_Diffuse_ST]
//      Vector 96 [_Normal_ST]
//      Vector 112 [_Diffuse_2uv_ST]
//      Float 128 [_InvAlbedoOpacity]
//      Vector 144 [_MetSmth_ST]
//      Float 160 [_MetfromSlider]
//      Float 164 [_Metalic]
//      Float 168 [_Smthfromalbedo]
//      Float 172 [_Smthfromslider]
//      Float 176 [_emissive]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 64 [_WorldSpaceCameraPos] 3
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      ConstBuffer "UnityReflectionProbes" 128
//      Vector 0 [unity_SpecCube0_BoxMax]
//      Vector 16 [unity_SpecCube0_BoxMin]
//      Vector 32 [unity_SpecCube0_ProbePosition]
//      Vector 48 [unity_SpecCube0_HDR]
//      Vector 64 [unity_SpecCube1_BoxMax]
//      Vector 80 [unity_SpecCube1_BoxMin]
//      Vector 96 [unity_SpecCube1_ProbePosition]
//      Vector 112 [unity_SpecCube1_HDR]
//      SetTexture 0 [_Normal] 2D 3
//      SetTexture 1 [_Diffuse] 2D 2
//      SetTexture 2 [_Diffuse_2uv] 2D 4
//      SetTexture 3 [_ShadowMapTexture] 2D 1
//      SetTexture 4 [_MetSmth] 2D 5
//      SetTexture 5 [unity_SpecCube0] CUBE 0
//      SetTexture 6 [unity_SpecCube1] CUBE -1
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityReflectionProbes" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:33:15 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xy          2     NONE   float
// TEXCOORD                 3   xyzw        3     NONE   float   xyz
// TEXCOORD                 4   xyz         4     NONE   float   xyz
// TEXCOORD                 5   xyz         5     NONE   float   xyz
// TEXCOORD                 6   xyz         6     NONE   float   xyz
// TEXCOORD                 8   xyzw        7     NONE   float   xy w
// TEXCOORD                 9   xyzw        8     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[12], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texturecube (float,float,float,float) t5
dcl_resource_texturecube (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyw
dcl_output o0.xyzw
dcl_temps 17
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r15.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 862a9ad012d354a1-ps.txt

mul r15.w, -r15.x, r15.y
mad r16.xyz, -r15.wwww, cb10[0].xyzw, cb1[4].xyzw

dp3 r0.x, v4.xyzx, v4.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v4.xyzx
add r1.xyz, -v3.xyzx, r16.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r3.xy, v1.xyxx, cb0[6].xyxx, cb0[6].zwzz
sample r3.xyzw, r3.xyxx, t0.xyzw, s3
mul r3.x, r3.w, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r3.xyxx, r3.xyxx
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
sqrt r1.w, r1.w
mul r3.yzw, r3.yyyy, v6.xxyz
mad r3.xyz, r3.xxxx, v5.xyzx, r3.yzwy
mad r0.xyz, r1.wwww, r0.xyzx, r3.xyzx
dp3 r1.w, r0.xyzx, r0.xyzx
rsq r1.w, r1.w
mul r0.xyz, r0.xyzx, r1.wwww
dp3 r1.w, -r2.xyzx, r0.xyzx
add r1.w, r1.w, r1.w
mad r3.xyz, r0.xyzx, -r1.wwww, -r2.xyzx
mad r4.xy, v1.xyxx, cb0[5].xyxx, cb0[5].zwzz
sample r4.xyzw, r4.xyxx, t1.xyzw, s2
mad r5.xy, v1.zwzz, cb0[7].xyxx, cb0[7].zwzz
sample r5.xyzw, r5.xyxx, t2.xyzw, s4
add r6.xyzw, r5.xyzw, l(-1.000000, -1.000000, -1.000000, -1.000000)
mad r5.xyzw, r5.wwww, r6.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r6.xyz, r4.xyzx, r5.xyzx
mad r1.w, -r4.w, r5.w, l(1.000000)
mad r2.w, r4.w, r5.w, -r1.w
mad r1.w, cb0[8].x, r2.w, r1.w
add r1.w, r1.w, l(-0.500000)
lt r1.w, r1.w, l(0.000000)
discard_nz r1.w
dp3 r1.w, cb2[0].xyzx, cb2[0].xyzx
rsq r1.w, r1.w
mul r7.xyz, r1.wwww, cb2[0].xyzx
mad r1.xyz, r1.xyzx, r0.wwww, r7.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
div r8.xy, v7.xyxx, v7.wwww
sample r8.xyzw, r8.xyxx, t3.xyzw, s1
mul r8.yzw, r8.xxxx, cb0[2].xxyz
mad r9.xy, v1.xyxx, cb0[9].xyxx, cb0[9].zwzz
sample r9.xyzw, r9.xyxx, t4.xyzw, s5
mad r0.w, r4.w, r5.w, -r9.w
mad r0.w, cb0[10].z, r0.w, r9.w
add r1.w, -r0.w, cb0[4].x
mad r0.w, cb0[10].w, r1.w, r0.w
add r1.w, -r0.w, l(1.000000)
mul r2.w, r1.w, r1.w
lt r3.w, l(0.000000), cb3[2].w
if_nz r3.w
  dp3 r3.w, r3.xyzx, r3.xyzx
  rsq r3.w, r3.w
  mul r9.yzw, r3.wwww, r3.xxyz
  add r10.xyz, -v3.xyzx, cb3[0].xyzx
  div r10.xyz, r10.xyzx, r9.yzwy
  add r11.xyz, -v3.xyzx, cb3[1].xyzx
  div r11.xyz, r11.xyzx, r9.yzwy
  lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.yzwy
  movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  min r3.w, r10.y, r10.x
  min r3.w, r10.z, r3.w
  add r10.xyz, v3.xyzx, -cb3[2].xyzx
  mad r9.yzw, r9.yyzw, r3.wwww, r10.xxyz
else
  mov r9.yzw, r3.xxyz
endif
mad r3.w, -r1.w, l(0.700000), l(1.700000)
mul r3.w, r1.w, r3.w
mul r3.w, r3.w, l(6.000000)
sample_l r10.xyzw, r9.yzwy, t5.xyzw, s0, r3.w
add r4.w, r10.w, l(-1.000000)
mad r4.w, cb3[3].w, r4.w, l(1.000000)
log r4.w, r4.w
mul r4.w, r4.w, cb3[3].y
exp r4.w, r4.w
mul r4.w, r4.w, cb3[3].x
mul r9.yzw, r10.xxyz, r4.wwww
lt r5.w, cb3[1].w, l(0.999990)
if_nz r5.w
  lt r5.w, l(0.000000), cb3[6].w
  if_nz r5.w
    dp3 r5.w, r3.xyzx, r3.xyzx
    rsq r5.w, r5.w
    mul r11.xyz, r3.xyzx, r5.wwww
    add r12.xyz, -v3.xyzx, cb3[4].xyzx
    div r12.xyz, r12.xyzx, r11.xyzx
    add r13.xyz, -v3.xyzx, cb3[5].xyzx
    div r13.xyz, r13.xyzx, r11.xyzx
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
    min r5.w, r12.y, r12.x
    min r5.w, r12.z, r5.w
    add r12.xyz, v3.xyzx, -cb3[6].xyzx
    mad r3.xyz, r11.xyzx, r5.wwww, r12.xyzx
  endif
  sample_l r3.xyzw, r3.xyzx, t6.xyzw, s0, r3.w
  add r3.w, r3.w, l(-1.000000)
  mad r3.w, cb3[7].w, r3.w, l(1.000000)
  log r3.w, r3.w
  mul r3.w, r3.w, cb3[7].y
  exp r3.w, r3.w
  mul r3.w, r3.w, cb3[7].x
  mul r3.xyz, r3.xyzx, r3.wwww
  mad r10.xyz, r4.wwww, r10.xyzx, -r3.xyzx
  mad r9.yzw, cb3[1].wwww, r10.xxyz, r3.xxyz
endif
dp3 r3.x, r0.xyzx, r7.xyzx
max r3.y, r3.x, l(0.000000)
min r3.z, r3.y, l(1.000000)
dp3_sat r3.w, r7.xyzx, r1.xyzx
add r4.w, -r9.x, cb0[10].y
mad r4.w, cb0[10].x, r4.w, r9.x
mad r4.xyz, r4.xyzx, r5.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r4.xyz, r4.wwww, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r4.w, -r4.w, l(0.960000), l(0.960000)
mul r5.xyz, r4.wwww, r6.xyzx
add r4.w, -r4.w, l(1.000000)
dp3 r2.x, r0.xyzx, r2.xyzx
dp3_sat r0.x, r0.xyzx, r1.xyzx
mad r0.y, -r1.w, r1.w, l(1.000000)
mad r0.z, |r2.x|, r0.y, r2.w
mad r0.y, r3.z, r0.y, r2.w
mul r0.y, r0.y, |r2.x|
mad r0.y, r3.z, r0.z, r0.y
add r0.y, r0.y, l(0.000010)
div r0.y, l(0.500000), r0.y
mul r0.z, r2.w, r2.w
mad r1.x, r0.x, r0.z, -r0.x
mad r0.x, r1.x, r0.x, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r0.x, r0.x, r0.x, l(1.000000012E-007)
div r0.x, r0.z, r0.x
mul r0.x, r0.x, r0.y
mul r0.x, r3.z, r0.x
mul r0.x, r0.x, l(3.14159274)
max r0.x, r0.x, l(0.000000)
mad r0.y, r2.w, r2.w, l(1.000000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
dp3 r0.z, r4.xyzx, r4.xyzx
ne r0.z, r0.z, l(0.000000)
and r0.z, r0.z, l(0x3f800000)
mul r0.x, r0.z, r0.x
round_ni r0.z, r8.x
mul r1.xyz, r0.zzzz, cb0[2].xyzx
mul r1.xyz, r0.xxxx, r1.xyzx
add r0.x, -r3.w, l(1.000000)
mul r0.z, r0.x, r0.x
mul r0.z, r0.z, r0.z
mul r0.x, r0.x, r0.z
add r2.yzw, -r4.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
mad r2.yzw, r2.yyzw, r0.xxxx, r4.xxyz
add_sat r0.x, r0.w, r4.w
add r0.z, -|r2.x|, l(1.000000)
mul r0.w, r0.z, r0.z
mul r0.w, r0.w, r0.w
mul r0.z, r0.z, r0.w
add r6.xyz, -r4.xyzx, r0.xxxx
mad r4.xyz, r0.zzzz, r6.xyzx, r4.xyzx
mul r4.xyz, r4.xyzx, r9.yzwy
mul r0.xyw, r0.yyyy, r4.xyxz
mad r0.xyw, r1.xyxz, r2.yzyw, r0.xyxw
mad r1.x, -cb0[11].x, l(0.500000), l(1.000000)
mul r1.y, r1.x, r3.x
mad r1.y, cb0[11].x, l(0.500000), r1.y
max r1.y, r1.y, l(0.000000)
add r1.z, r3.w, r3.w
mul r1.z, r3.w, r1.z
mad r1.x, -r3.x, r1.x, l(1.000000)
mul r2.x, r1.x, r1.x
mul r2.x, r2.x, r2.x
mul r1.x, r1.x, r2.x
mad r1.z, r1.z, r1.w, l(-0.500000)
mad r1.x, r1.z, r1.x, l(1.000000)
mad r0.z, r1.z, r0.z, l(1.000000)
mul r0.z, r0.z, r1.x
mad r0.z, r0.z, r3.y, r1.y
mul r1.xyz, r8.yzwy, r0.zzzz
mad o0.xyz, r1.xyzx, r5.xyzx, r0.xywx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used