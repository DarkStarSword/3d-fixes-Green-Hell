// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 734edfaa0b83555b-ps.txt
// 3DMigoto: 734edfaa0b83555b | Matched 4 variants of 1 shaders: Water/Clear_Water
//
//       Unity headers extracted from Water_Clear_Water
//       Shader "Water/Clear_Water" {
//         CustomEditor "ShaderForgeMaterialInspector"
//         SubShader 1/1 {
//           LOD 3000
//           Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Transparent" "RenderType"="Transparent" }
//           Pass 2/3 {
//             Name "FORWARD"
//             Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDBASE" "QUEUE"="Transparent" "RenderType"="Transparent" "SHADOWSUPPORT"="true" }
//             ZWrite Off
//             Program "fp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Water_Clear_Water:
//      API d3d11
//      Shader model ps_4_0
//      undeciphered1: 201802150 131 6 0
//      undeciphered1a: 5
// 2:   Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
// 8:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" }
// 4:   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
// 1:   Keywords { "DIRECTIONAL" }
//      undeciphered2: 1 4 5 4 0 0
//      undeciphered3: 0 0
//      ConstBuffer "$Globals" 176
//      Vector 32 [_LightColor0]
//      Vector 64 [_TimeEditor]
//      Float 80 [_RefractionAmount]
//      Float 84 [_ShoreBlend]
//      Vector 96 [_FogColor]
//      Float 112 [_DepthRefractionBlend]
//      Vector 128 [_Water01_ST]
//      Vector 144 [_Water02_ST]
//      Float 160 [_FogHeight]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 0 [_Time]
//      Vector 64 [_WorldSpaceCameraPos] 3
//      Vector 80 [_ProjectionParams]
//      Vector 112 [_ZBufferParams]
//      ConstBuffer "UnityLighting" 768
//      Vector 0 [_WorldSpaceLightPos0]
//      ConstBuffer "UnityPerDraw" 176
//      Matrix 64 [unity_WorldToObject]
//      ConstBuffer "UnityPerFrame" 368
//      Vector 0 [glstate_lightmodel_ambient]
//      SetTexture 0 [_Water01] 2D 2
//      SetTexture 1 [_Water02] 2D 3
//      SetTexture 2 [_CameraDepthTexture] 2D 1
//      SetTexture 3 [_GrabTexture] 2D 0
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityLighting" 2
//      BindCB "UnityPerDraw" 3
//      BindCB "UnityPerFrame" 4
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:22:13 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[11], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[1], immediateIndexed
dcl_constantbuffer cb3[7], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyw
dcl_input_ps linear v7.xyzw
dcl_output o0.xyzw
dcl_temps 7
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r5.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 734edfaa0b83555b-ps.txt

mul r5.w, -r5.x, r5.y
mad r6.xyz, -r5.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, cb3[4].x
mov r0.y, cb3[5].x
mov r0.z, cb3[6].x
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
mul r0.xyzw, r0.xxxx, v1.xyxy
add r1.x, cb0[4].y, cb1[0].y
mul r2.xyzw, r1.xxxx, l(0.000000, 1.000000, 0.010000, -0.120000)
mad r1.xyzw, r1.xxxx, l(0.010000, 0.000000, -0.001000, -0.050000), r0.xyzw
mad r0.xyzw, r0.zwzw, l(5.000000, 5.000000, 5.000000, 5.000000), r2.xyzw
mad r0.xy, r0.xyxx, cb0[8].xyxx, cb0[8].zwzz
mad r0.zw, r0.zzzw, cb0[9].xxxy, cb0[9].zzzw
sample r2.xyzw, r0.zwzz, t1.xyzw, s3
sample r0.xyzw, r0.xyxx, t0.xyzw, s2
mul r0.x, r0.w, r0.x
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r0.xyxx, r0.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r0.z, r0.w
mul r2.x, r2.w, r2.x
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r2.z, r0.w
add r0.xyz, r0.xyzx, r2.xyzx
mad r1.xy, r1.xyxx, cb0[8].xyxx, cb0[8].zwzz
mad r1.zw, r1.zzzw, cb0[9].xxxy, cb0[9].zzzw
sample r2.xyzw, r1.zwzz, t1.xyzw, s3
sample r1.xyzw, r1.xyxx, t0.xyzw, s2
mul r1.x, r1.w, r1.x
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r1.xyxx, r1.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r1.z, r0.w
mul r2.x, r2.w, r2.x
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
sqrt r2.z, r0.w
add r1.xyz, r1.xyzx, r2.xyzx
add r2.xyz, -r0.xyzx, r1.xyzx
mad r0.xyz, r2.xyzx, l(0.700000, 0.700000, 0.700000, 0.000000), r0.xyzx
add r1.xyz, -r0.xyzx, r1.xyzx
mad r1.xyz, r1.xyzx, l(0.600000, 0.600000, 0.600000, 0.000000), r0.xyzx
mul r2.xyz, r1.yyyy, v5.xyzx
mad r1.xyw, r1.xxxx, v4.xyxz, r2.xyxz
dp3 r0.z, v3.xyzx, v3.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, v3.xyzx
mad r1.xyz, r1.zzzz, r2.xyzx, r1.xywx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r1.xyz, r0.zzzz, r1.xyzx
dp3 r0.z, cb2[0].xyzx, cb2[0].xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, cb2[0].xyzx
add r3.xyz, -v2.xyzx, r6.xyzx
dp3 r0.z, r3.xyzx, r3.xyzx
rsq r0.z, r0.z
mad r4.xyz, r3.xyzx, r0.zzzz, r2.xyzx
mul r3.xyz, r0.zzzz, r3.xyzx
dp3 r0.z, r1.xyzx, r3.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r4.xyzx
dp3_sat r0.w, r1.xyzx, r3.xyzx
dp3 r1.x, r1.xyzx, r2.xyzx
dp3_sat r1.y, r2.xyzx, r3.xyzx
mul r0.w, r0.w, r0.w
mad r0.w, r0.w, l(-0.937500), l(1.000000)
mad r0.w, r0.w, r0.w, l(1.000000012E-007)
div r0.w, l(0.0198943671), r0.w
mad r1.z, |r0.z|, l(0.750000), l(0.250000)
max r1.w, r1.x, l(0.000000)
min r2.x, r1.w, l(1.000000)
mad r2.y, r2.x, l(0.750000), l(0.250000)
mul r2.y, |r0.z|, r2.y
add r0.z, -|r0.z|, l(1.000000)
mad r1.z, r2.x, r1.z, r2.y
add r1.z, r1.z, l(0.000010)
div r1.z, l(0.500000), r1.z
mul r0.w, r0.w, r1.z
mul r0.w, r2.x, r0.w
mul r0.w, r0.w, l(3.14159274)
mul r2.xyz, r0.wwww, cb0[2].xyzx
add r0.w, -r1.y, l(1.000000)
mul r1.z, r0.w, r0.w
mul r1.z, r1.z, r1.z
mul r0.w, r0.w, r1.z
mad r0.w, r0.w, l(0.980000), l(0.020000)
mul r2.xyz, r0.wwww, r2.xyzx
mul r0.w, r0.z, r0.z
mul r0.w, r0.w, r0.w
mul r0.z, r0.z, r0.w
add r0.w, r1.y, r1.y
mul r0.w, r1.y, r0.w
mad r0.w, r0.w, l(0.500000), l(-0.500000)
mad r0.z, r0.w, r0.z, l(1.000000)
mad r1.yz, -r1.xxxx, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 0.500000, 1.000000, 0.000000)
mad r1.x, r1.x, l(0.500000), l(0.500000)
mul r2.w, r1.z, r1.z
mul r2.w, r2.w, r2.w
mul r1.z, r1.z, r2.w
max r1.xy, r1.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r1.x, r1.y, r1.x
mad r0.w, r0.w, r1.z, l(1.000000)
mul r0.z, r0.z, r0.w
mad r0.z, r0.z, r1.w, r1.x
add r1.xyz, cb4[0].xyzx, cb4[0].xyzx
mad r1.xyz, r0.zzzz, cb0[2].xyzx, r1.xyzx
div r0.zw, v7.xxxy, v7.wwww
sample r3.xyzw, r0.zwzz, t2.xyzw, s1
mad r0.z, cb1[7].z, r3.x, cb1[7].w
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
add r0.z, r0.z, -cb1[5].y
add r0.w, v7.z, -cb1[5].y
max r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
add r0.z, -r0.w, r0.z
div_sat r0.w, r0.z, cb0[10].x
mul r3.xyz, cb0[2].xyzx, cb0[6].xyzx
mul r3.xyz, r0.wwww, r3.xyzx
mul r3.xyz, r3.xyzx, l(0.960400045, 0.960400045, 0.960400045, 0.000000)
mad r1.xyz, r1.xyzx, r3.xyzx, r2.xyzx
div_sat r0.w, r0.z, cb0[7].x
div_sat r0.z, r0.z, cb0[5].y
mul r0.z, r0.z, cb0[6].w
mul r0.xy, r0.wwww, r0.xyxx
mul r0.w, cb1[5].x, -cb1[5].x
div r2.xy, v6.xyxx, v6.wwww
mul r2.z, r0.w, r2.y
mad r2.xy, r2.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mad r0.xy, r0.xyxx, cb0[5].xxxx, r2.xyxx
sample r2.xyzw, r0.xyxx, t3.xyzw, s0
add r0.xyw, r1.xyxz, -r2.xyxz
mad o0.xyz, r0.zzzz, r0.xywx, r2.xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used