// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 110718f4d9867996-ps.txt
// 3DMigoto: 110718f4d9867996 |    Unity headers extracted from Hidden_TerrainEngine_Splatmap_Standard-AddPass
//    Shader "Hidden/TerrainEngine/Splatmap/Standard-AddPass" {
//      Fallback "Hidden/TerrainEngine/Splatmap/Diffuse-AddPass"
//      SubShader 1/1 {
//        Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Geometry-99" "RenderType"="Opaque" }
//        Pass 2/3 {
//          Name "FORWARD"
//          Tags { "IGNOREPROJECTOR"="true" "LIGHTMODE"="FORWARDADD" "QUEUE"="Geometry-99" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Hidden_TerrainEngine_Splatmap_Standard-AddPass:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 208 12 4
//   undeciphered1a: 13
//   Keywords { "SPOT" "SHADOWS_DEPTH" "SHADOWS_SOFT" "FOG_LINEAR" "_NORMALMAP" }
//   undeciphered2: 1 13 7 13 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 352
//   Vector 32 [_LightColor0]
//   Vector 128 [_ShadowMapTexture_TexelSize]
//   Vector 224 [_Control_TexelSize]
//   Vector 240 [_Splat0_ST]
//   Vector 256 [_Splat1_ST]
//   Vector 272 [_Splat2_ST]
//   Vector 288 [_Splat3_ST]
//   Float 304 [_NormalScale0]
//   Float 308 [_NormalScale1]
//   Float 312 [_NormalScale2]
//   Float 316 [_NormalScale3]
//   Float 320 [_Metallic0]
//   Float 324 [_Metallic1]
//   Float 328 [_Metallic2]
//   Float 332 [_Metallic3]
//   Float 336 [_Smoothness0]
//   Float 340 [_Smoothness1]
//   Float 344 [_Smoothness2]
//   Float 348 [_Smoothness3]
//   Matrix 144 [unity_WorldToLight]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   Matrix 128 [unity_WorldToShadow0]
//   Matrix 192 [unity_WorldToShadow1]
//   Matrix 256 [unity_WorldToShadow2]
//   Matrix 320 [unity_WorldToShadow3]
//   ConstBuffer "UnityPerFrame" 368
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_Control] 2D 4
//   SetTexture 1 [_Splat0] 2D 5
//   SetTexture 2 [_Splat1] 2D 6
//   SetTexture 3 [_Splat2] 2D 7
//   SetTexture 4 [_Splat3] 2D 8
//   SetTexture 5 [_Normal0] 2D 9
//   SetTexture 6 [_Normal1] 2D 10
//   SetTexture 7 [_Normal2] 2D 11
//   SetTexture 8 [_Normal3] 2D 12
//   SetTexture 9 [_LightTexture0] 2D 2
//   SetTexture 10 [_LightTextureB0] 2D 3
//   SetTexture 11 [unity_ProbeVolumeSH] 3D 0
//   SetTexture 12 [_ShadowMapTexture] 2D 1
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 08:31:28 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyz         1     NONE   float   xyz
// TEXCOORD                 5      w        1     NONE   float      w
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyzw        5     NONE   float   xy
// TEXCOORD                 6   xyzw        6     NONE   float
// TEXCOORD                 7   xyzw        7     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[22], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s10, mode_default
dcl_sampler s11, mode_default
dcl_sampler s12, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xy
dcl_output o0.xyzw
dcl_temps 15
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r13.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 110718f4d9867996-ps.txt

mul r13.w, -r13.x, r13.y
mad r14.xyz, -r13.wwww, cb10[0].xyzw, cb1[4].xyzw

add r0.xyz, -v4.xyzx, cb2[0].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
add r2.xyz, -v4.xyzx, r14.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r2.xyzx
add r4.xy, cb0[14].zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
mad r4.xy, v5.xyxx, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, cb0[14].xyxx
sample r4.xyzw, r4.xyxx, t0.xyzw, s4
dp4 r1.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
eq r2.w, r1.w, l(0.000000)
discard_nz r2.w
add r2.w, r1.w, l(0.001000)
div r4.xyzw, r4.xyzw, r2.wwww
mad r5.xy, v5.xyxx, cb0[15].xyxx, cb0[15].zwzz
mad r5.zw, v5.xxxy, cb0[16].xxxy, cb0[16].zzzw
mad r6.xy, v5.xyxx, cb0[17].xyxx, cb0[17].zwzz
mad r6.zw, v5.xxxy, cb0[18].xxxy, cb0[18].zzzw
sample r7.xyzw, r5.xyxx, t1.xyzw, s5
mul r7.xyzw, r4.xxxx, r7.xyzw
mul r7.w, r7.w, cb0[21].x
sample r8.xyzw, r5.zwzz, t2.xyzw, s6
mul r8.xyzw, r4.yyyy, r8.xyzw
mul r8.w, r8.w, cb0[21].y
add r7.xyzw, r7.xyzw, r8.xyzw
sample r8.xyzw, r6.xyxx, t3.xyzw, s7
mul r8.xyzw, r4.zzzz, r8.xyzw
mul r8.w, r8.w, cb0[21].z
add r7.xyzw, r7.xyzw, r8.xyzw
sample r8.xyzw, r6.zwzz, t4.xyzw, s8
mul r8.xyzw, r4.wwww, r8.xyzw
mul r8.w, r8.w, cb0[21].w
add r7.xyzw, r7.xyzw, r8.xyzw
sample r8.xyzw, r5.xyxx, t5.xyzw, s9
mul r8.x, r8.w, r8.x
mad r5.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r8.xy, r5.xyxx, cb0[19].xxxx
dp2 r2.w, r8.xyxx, r8.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r8.z, r2.w
sample r5.xyzw, r5.zwzz, t6.xyzw, s10
mul r5.x, r5.w, r5.x
mad r5.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r5.xy, r5.xyxx, cb0[19].yyyy
dp2 r2.w, r5.xyxx, r5.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r5.z, r2.w
mul r5.xyz, r4.yyyy, r5.xyzx
mad r5.xyz, r8.xyzx, r4.xxxx, r5.xyzx
sample r8.xyzw, r6.xyxx, t7.xyzw, s11
mul r8.x, r8.w, r8.x
mad r6.xy, r8.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r8.xy, r6.xyxx, cb0[19].zzzz
dp2 r2.w, r8.xyxx, r8.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r8.z, r2.w
mad r5.xyz, r8.xyzx, r4.zzzz, r5.xyzx
sample r6.xyzw, r6.zwzz, t8.xyzw, s12
mul r6.x, r6.w, r6.x
mad r6.xy, r6.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xy, r6.xyxx, cb0[19].wwww
dp2 r2.w, r6.xyxx, r6.xyxx
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
sqrt r6.z, r2.w
mad r5.xyz, r6.xyzx, r4.wwww, r5.xyzx
dp4 r2.w, r4.xyzw, cb0[20].xyzw
mul r4.xyzw, v4.yyyy, cb0[10].xyzw
mad r4.xyzw, cb0[9].xyzw, v4.xxxx, r4.xyzw
mad r4.xyzw, cb0[11].xyzw, v4.zzzz, r4.xyzw
add r4.xyzw, r4.xyzw, cb0[12].xyzw
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r2.x, r2.xyzx, r6.xyzx
add r6.xyz, v4.xyzx, -cb3[25].xyzx
dp3 r2.y, r6.xyzx, r6.xyzx
sqrt r2.y, r2.y
add r2.y, -r2.x, r2.y
mad r2.x, cb3[25].w, r2.y, r2.x
mad_sat r2.x, r2.x, cb3[24].z, cb3[24].w
eq r2.y, cb6[0].x, l(1.000000)
if_nz r2.y
  eq r2.y, cb6[0].y, l(1.000000)
  mul r6.xyz, v4.yyyy, cb6[2].xyzx
  mad r6.xyz, cb6[1].xyzx, v4.xxxx, r6.xyzx
  mad r6.xyz, cb6[3].xyzx, v4.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb6[4].xyzx
  movc r6.xyz, r2.yyyy, r6.xyzx, v4.xyzx
  add r6.xyz, r6.xyzx, -cb6[6].xyzx
  mul r6.yzw, r6.xxyz, cb6[5].xxyz
  mad r2.y, r6.y, l(0.250000), l(0.750000)
  mad r2.z, cb6[0].z, l(0.500000), l(0.750000)
  max r6.x, r2.z, r2.y
  sample r6.xyzw, r6.xzwx, t11.xyzw, s0
else
  mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r2.y, r6.xyzw, cb2[46].xyzw
lt r2.z, r2.x, l(0.990000)
if_nz r2.z
  mul r6.xyzw, v4.yyyy, cb3[9].xyzw
  mad r6.xyzw, cb3[8].xyzw, v4.xxxx, r6.xyzw
  mad r6.xyzw, cb3[10].xyzw, v4.zzzz, r6.xyzw
  add r6.xyzw, r6.xyzw, cb3[11].xyzw
  div r6.xyz, r6.xyzx, r6.wwww
  mad r8.xy, r6.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  round_ni r8.xy, r8.xyxx
  mad r6.xy, r6.xyxx, cb0[8].zwzz, -r8.xyxx
  add r9.xyzw, r6.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  mul r10.xw, r9.xxxz, r9.xxxz
  mad r8.zw, r10.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r6.xxxy
  add r9.xz, -r6.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  min r11.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r9.xz, -r11.xxyx, r11.xxyx, r9.xxzx
  max r6.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  mad r6.xy, -r6.xyxx, r6.xyxx, r9.ywyy
  mov r11.x, r8.z
  mov r11.y, r9.x
  mov r11.z, r6.x
  mov r11.w, r10.x
  mul r11.xyzw, r11.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  mov r10.x, r8.w
  mov r10.y, r9.z
  mov r10.z, r6.y
  mul r9.xyzw, r10.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  add r10.xyzw, r11.ywyw, r11.xzxz
  add r12.xyzw, r9.yyww, r9.xxzz
  div r6.xy, r11.ywyy, r10.zwzz
  add r6.xy, r6.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  div r8.zw, r9.yyyw, r12.yyyw
  add r8.zw, r8.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  mul r9.xy, r6.xyxx, cb0[8].xxxx
  mul r9.zw, r8.zzzw, cb0[8].yyyy
  mul r10.xyzw, r10.xyzw, r12.xyzw
  mad r11.xyzw, r8.xyxy, cb0[8].xyxy, r9.xzyz
  sample_c_lz r2.z, r11.xyxx, t12.xxxx, s1, r6.z
  sample_c_lz r3.w, r11.zwzz, t12.xxxx, s1, r6.z
  mul r3.w, r3.w, r10.y
  mad r2.z, r10.x, r2.z, r3.w
  mad r8.xyzw, r8.xyxy, cb0[8].xyxy, r9.xwyw
  sample_c_lz r3.w, r8.xyxx, t12.xxxx, s1, r6.z
  mad r2.z, r10.z, r3.w, r2.z
  sample_c_lz r3.w, r8.zwzz, t12.xxxx, s1, r6.z
  mad r2.z, r10.w, r3.w, r2.z
  add r3.w, -cb3[24].x, l(1.000000)
  mad r2.z, r2.z, r3.w, cb3[24].x
else
  mov r2.z, l(1.000000)
endif
add r2.y, -r2.z, r2.y
mad r2.x, r2.x, r2.y, r2.z
lt r2.y, l(0.000000), r4.z
and r2.y, r2.y, l(0x3f800000)
div r6.xy, r4.xyxx, r4.wwww
add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample r6.xyzw, r6.xyxx, t9.xyzw, s2
mul r2.y, r2.y, r6.w
dp3 r2.z, r4.xyzx, r4.xyzx
sample r4.xyzw, r2.zzzz, t10.xyzw, s3
mul r2.y, r2.y, r4.x
mul r2.x, r2.x, r2.y
add r5.w, r5.z, l(0.000010)
dp3 r4.x, v1.xyzx, r5.xywx
dp3 r4.y, v2.xyzx, r5.xywx
dp3 r4.z, v3.xyzx, r5.xywx
dp3 r2.y, r4.xyzx, r4.xyzx
rsq r2.y, r2.y
mul r4.xyz, r2.yyyy, r4.xyzx
mul r2.xyz, r2.xxxx, cb0[2].xyzx
add r5.xyz, r7.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r5.xyz, r2.wwww, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r2.w, -r2.w, l(0.960000), l(0.960000)
mul r6.xyz, r2.wwww, r7.xyzx
add r2.w, -r7.w, l(1.000000)
mad r0.xyz, r0.xyzx, r0.wwww, r3.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r4.xyzx, r3.xyzx
dp3_sat r3.x, r4.xyzx, r1.xyzx
dp3_sat r3.y, r4.xyzx, r0.xyzx
dp3_sat r0.x, r1.xyzx, r0.xyzx
mul r0.y, r0.x, r0.x
dp2 r0.y, r0.yyyy, r2.wwww
add r0.y, r0.y, l(-0.500000)
add r0.z, -r3.x, l(1.000000)
mul r1.x, r0.z, r0.z
mul r1.x, r1.x, r1.x
mul r0.z, r0.z, r1.x
mad r0.z, r0.y, r0.z, l(1.000000)
add r1.x, -|r0.w|, l(1.000000)
mul r1.y, r1.x, r1.x
mul r1.y, r1.y, r1.y
mul r1.x, r1.x, r1.y
mad r0.y, r0.y, r1.x, l(1.000000)
mul r0.y, r0.y, r0.z
mul r0.z, r2.w, r2.w
max r0.z, r0.z, l(0.002000)
add r1.x, -r0.z, l(1.000000)
mad r1.y, |r0.w|, r1.x, r0.z
mad r1.x, r3.x, r1.x, r0.z
mul r0.w, |r0.w|, r1.x
mad r0.w, r3.x, r1.y, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r0.z, r0.z, r0.z
mad r1.x, r3.y, r0.z, -r3.y
mad r1.x, r1.x, r3.y, l(1.000000)
mul r0.z, r0.z, l(0.318309873)
mad r1.x, r1.x, r1.x, l(1.000000012E-007)
div r0.z, r0.z, r1.x
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, l(3.14159274)
mul r0.yz, r3.xxxx, r0.yyzy
max r0.z, r0.z, l(0.000000)
dp3 r0.w, r5.xyzx, r5.xyzx
ne r0.w, r0.w, l(0.000000)
and r0.w, r0.w, l(0x3f800000)
mul r0.z, r0.w, r0.z
mul r1.xyz, r0.yyyy, r2.xyzx
mul r0.yzw, r2.xxyz, r0.zzzz
add r0.x, -r0.x, l(1.000000)
mul r2.x, r0.x, r0.x
mul r2.x, r2.x, r2.x
mul r0.x, r0.x, r2.x
add r2.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r5.xyzx
mul r0.xyz, r0.yzwy, r2.xyzx
mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
mul r0.xyz, r1.wwww, r0.xyzx
div r0.w, v1.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
mul o0.xyz, r0.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used