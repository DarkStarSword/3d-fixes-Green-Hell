// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 4f373588b02625df-vs.txt
// 3DMigoto: 4f373588b02625df | Matched 4 variants of 1 shaders: Time of Day/Cloud Layer
//
//       Unity headers extracted from Time of Day_Cloud Layer
//       Shader "Time of Day/Cloud Layer" {
//         SubShader 1/1 {
//           Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Geometry+530" "RenderType"="Background" }
//           Pass 1/1 {
//             Tags { "IGNOREPROJECTOR"="true" "QUEUE"="Geometry+530" "RenderType"="Background" }
//             ZWrite Off
//             Program "vp" {
//               SubProgram "d3d11" {
//               }
//             }
//           }
//         }
//       }
//
//    Unity 5.3 headers extracted from Time of Day_Cloud Layer:
//      API d3d11
//      Shader model vs_4_0
//      undeciphered1: 201802150 125 0 1
//      undeciphered1a: 9
// 2:   Keywords { "TOD_OUTPUT_DITHERING" "TOD_CLOUDS_BUMPED" }
// 8:   Keywords { "TOD_OUTPUT_DITHERING" "TOD_CLOUDS_DENSITY" "TOD_CLOUDS_BUMPED" }
// 4:   Keywords { "TOD_OUTPUT_DITHERING" "TOD_CLOUDS_DENSITY" }
// 1:   Keywords { "TOD_OUTPUT_DITHERING" }
//      undeciphered2: 1 0 4 0 0 0
//      undeciphered3: 23 1 0 0
//      ConstBuffer "$Globals" 656
//      Vector 192 [TOD_SunSkyColor] 3
//      Vector 256 [TOD_SunCloudColor] 3
//      Vector 272 [TOD_MoonCloudColor] 3
//      Vector 288 [TOD_FogColor] 3
//      Vector 384 [TOD_LocalSunDirection] 3
//      Vector 400 [TOD_LocalMoonDirection] 3
//      Float 428 [TOD_Contrast]
//      Float 432 [TOD_Brightness]
//      Float 436 [TOD_Fogginess]
//      Float 440 [TOD_MoonHaloPower]
//      Vector 448 [TOD_MoonHaloColor] 3
//      Float 460 [TOD_CloudOpacity]
//      Float 484 [TOD_CloudScattering]
//      Float 488 [TOD_CloudBrightness]
//      Vector 496 [TOD_CloudOffset] 3
//      Vector 512 [TOD_CloudWind] 3
//      Vector 528 [TOD_CloudSize] 3
//      Vector 576 [TOD_kBetaMie] 3
//      Vector 592 [TOD_kSun]
//      Vector 608 [TOD_k4PI]
//      Vector 624 [TOD_kRadius]
//      Vector 640 [TOD_kScale]
//      ConstBuffer "UnityPerCamera" 144
//      Vector 80 [_ProjectionParams]
//      Vector 96 [_ScreenParams]
//      ConstBuffer "UnityPerDraw" 176
//      Matrix 0 [unity_ObjectToWorld]
//      ConstBuffer "UnityPerFrame" 368
//      Matrix 272 [unity_MatrixVP]
//      BindCB "$Globals" 0
//      BindCB "UnityPerCamera" 1
//      BindCB "UnityPerDraw" 2
//      BindCB "UnityPerFrame" 3
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:01:09 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz
// TANGENT                  0   xyzw        1     NONE   float
// NORMAL                   0   xyz         2     NONE   float
// TEXCOORD                 0   xyzw        3     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyz         4     NONE   float   xyz
// TEXCOORD                 4   xyz         5     NONE   float   xyz
// TEXCOORD                 5   xy          6     NONE   float   xy
//
vs_4_0
dcl_constantbuffer cb0[41], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_input v0.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xy
dcl_temps 10

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw

mul r0.xyzw, v0.yyyy, cb2[1].xyzw
mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
add r0.xyzw, r0.xyzw, cb2[3].xyzw
mul r1.xyzw, r0.yyyy, cb3[18].xyzw
mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
dp3 r1.x, v0.xyzx, v0.xyzx
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v0.xyzx
mad r2.x, r1.y, l(0.850000), l(0.150000)
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
mul r2.xz, r1.xxzx, r2.xxxx
mov r2.y, l(1.000000)
div r2.xyz, r2.xyzx, cb0[33].xyzx
add r3.xy, r2.xzxx, cb0[31].xzxx
add o2.xy, r3.xyxx, cb0[32].xzxx
dp2 r3.z, l(0.984807730, -0.173648179, 0.000000, 0.000000), r2.xzxx
dp2 r3.w, l(0.173648179, 0.984807730, 0.000000, 0.000000), r2.xzxx
add r3.xy, r3.zwzz, cb0[31].xzxx
add o2.zw, r3.xxxy, cb0[32].xxxz

// Relocated to here with asmtool.py
mov o0.xyzw, r0.xyzw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed 4f373588b02625df-vs.txt
ne r9.w, r0.w, l(1.0)
if_nz r9.w
  add r9.w, r0.w, -r9.y
  mad r0.x, r9.w, r9.x, r0.x
endif

mul r3.xz, r0.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
mul r2.w, r0.y, cb1[5].x
mul r3.w, r2.w, l(0.500000)
add r3.xy, r3.zzzz, r3.xwxx
div r3.xy, r3.xyxx, r0.wwww
mul r3.xy, r3.xyxx, cb1[6].xyxx
mul o6.xy, r3.xyxx, l(0.125000, 0.125000, 0.000000, 0.000000)
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
max r1.w, r1.y, l(0.000000)
mul r2.w, cb0[30].y, cb0[40].x
add r3.y, cb0[39].x, cb0[40].w
mul r4.xy, r1.wyww, r1.wyww
mad r3.w, r4.x, cb0[39].y, cb0[39].w
add r3.w, r3.w, -cb0[39].y
sqrt r3.w, r3.w
mad r3.w, -cb0[39].x, r1.w, r3.w
mul r4.x, -cb0[40].w, cb0[40].z
mul r4.x, r4.x, l(1.442695)
exp r4.x, r4.x
mul r4.z, r1.w, r3.y
div r4.z, r4.z, r3.y
add r4.z, -r4.z, l(1.000000)
mad r4.w, r4.z, l(5.250000), l(-6.800000)
mad r4.w, r4.z, r4.w, l(3.830000)
mad r4.w, r4.z, r4.w, l(0.459000)
mad r4.z, r4.z, r4.w, l(-0.002870)
mul r4.z, r4.z, l(1.442695)
exp r4.z, r4.z
mul r4.x, r4.z, r4.x
mul r3.w, r3.w, l(0.500000)
mul r2.w, r2.w, r3.w
mul r5.xyz, r1.xwzx, r3.wwww
mov r3.xz, l(0,0,0,0)
mad r3.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
add r5.xyz, cb0[38].wwww, cb0[38].xyzx
mov r6.xyz, r3.xyzx
mov r7.xyz, l(0,0,0,0)
mov r4.z, l(0)
loop
  ige r4.w, r4.z, l(2)
  breakc_nz r4.w
  dp3 r4.w, r6.xyzx, r6.xyzx
  sqrt r4.w, r4.w
  div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
  add r4.w, -r4.w, cb0[39].x
  mul r4.w, r4.w, cb0[40].z
  mul r4.w, r4.w, l(1.442695)
  exp r4.w, r4.w
  mul r6.w, r2.w, r4.w
  dp3 r7.w, r1.xwzx, r6.xyzx
  dp3 r8.x, cb0[24].xyzx, r6.xyzx
  mad r8.x, -r8.x, r5.w, l(1.000000)
  mad r8.y, r8.x, l(5.250000), l(-6.800000)
  mad r8.y, r8.x, r8.y, l(3.830000)
  mad r8.y, r8.x, r8.y, l(0.459000)
  mad r8.x, r8.x, r8.y, l(-0.002870)
  mul r8.x, r8.x, l(1.442695)
  exp r8.x, r8.x
  mad r5.w, -r7.w, r5.w, l(1.000000)
  mad r7.w, r5.w, l(5.250000), l(-6.800000)
  mad r7.w, r5.w, r7.w, l(3.830000)
  mad r7.w, r5.w, r7.w, l(0.459000)
  mad r5.w, r5.w, r7.w, l(-0.002870)
  mul r5.w, r5.w, l(1.442695)
  exp r5.w, r5.w
  mul r5.w, r5.w, l(0.250000)
  mad r5.w, r8.x, l(0.250000), -r5.w
  mul r4.w, r4.w, r5.w
  mad r4.w, r4.x, l(0.250000), r4.w
  mul r8.xyz, r5.xyzx, -r4.wwww
  mul r8.xyz, r8.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
  exp r8.xyz, r8.xyzx
  mad r7.xyz, r8.xyzx, r6.wwww, r7.xyzx
  mad r6.xyz, r1.xwzx, r3.wwww, r6.xyzx
  iadd r4.z, r4.z, l(1)
endloop
mul r3.xyz, r7.xyzx, cb0[12].xyzx
mul r3.xyz, r3.xyzx, cb0[37].wwww
dp3 r1.w, cb0[24].xyzx, r1.xyzx
mad r2.w, r1.w, r1.w, l(1.000000)
mul r2.w, r2.w, cb0[36].x
mad r1.w, cb0[36].z, r1.w, cb0[36].y
log r1.w, r1.w
mul r1.w, r1.w, l(1.500000)
exp r1.w, r1.w
div r1.w, r2.w, r1.w
dp3 r1.x, r1.xyzx, cb0[25].xyzx
max r1.x, r1.x, l(0.000000)
log r1.x, r1.x
mul r1.x, r1.x, cb0[27].z
exp r1.x, r1.x
mul r1.xyz, r1.xxxx, cb0[28].xyzx
mad r1.xyz, r1.wwww, r3.xyzx, r1.xyzx
add r3.xyz, -r1.xyzx, cb0[18].xyzx
mad r1.xyz, cb0[27].yyyy, r3.xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, cb0[27].xxxx
log r1.xyz, r1.xyzx
mul r1.xyz, r1.xyzx, cb0[26].wwww
exp o5.xyz, r1.xyzx
mad_sat r1.x, cb0[24].y, l(4.000000), l(1.000000)
dp3 r1.y, r2.xyzx, cb0[24].xyzx
add_sat r1.y, r1.y, l(1.250000)
mul r1.x, r1.y, r1.x
mad r1.yzw, cb0[30].zzzz, cb0[16].xxyz, -cb0[17].xxyz
mad r1.xyz, r1.xxxx, r1.yzwy, cb0[17].xyzx
mad r3.xyz, cb0[30].zzzz, cb0[18].xyzx, -r1.xyzx
mad o1.xyz, cb0[27].yyyy, r3.xyzx, r1.xyzx
mul_sat r1.x, r4.y, l(500.000000)
mul o1.w, r1.x, cb0[28].w

// mov o0.xyzw, r0.xyzw // Relocated from here with asmtool.py

mov o3.xyz, r2.xyzx
mov o4.xyz, cb0[24].xyzx
ret
// Approximately 0 instruction slots used