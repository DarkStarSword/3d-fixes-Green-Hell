// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6cc817ab78eba0d7-ps.txt
// 3DMigoto: 6cc817ab78eba0d7 |    Unity headers extracted from Standard
//    Shader "Standard" {
//      CustomEditor "StandardShaderGUI"
//      Fallback "VertexLit"
//      SubShader 1/2 {
//        LOD 300
//        Tags { "PerformanceChecks"="False" "RenderType"="Opaque" }
//        Pass 1/5 {
//          Name "FORWARD"
//          Tags { "LIGHTMODE"="FORWARDBASE" "PerformanceChecks"="False" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//          ZWrite [_ZWrite]
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from Standard:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 151 9 4
//   undeciphered1a: 9
//   Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTPROBE_SH" "FOG_LINEAR" "_NORMALMAP" "_GLOSSYREFLECTIONS_OFF" "_PARALLAXMAP" }
//   undeciphered2: 1 6 7 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 176
//   Vector 32 [_LightColor0]
//   Vector 64 [_Color]
//   Float 128 [_BumpScale]
//   Float 136 [_Metallic]
//   Float 140 [_Glossiness]
//   Float 148 [_OcclusionStrength]
//   Float 152 [_Parallax]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 80 [_ProjectionParams]
//   ConstBuffer "UnityLighting" 768
//   Vector 0 [_WorldSpaceLightPos0]
//   Vector 624 [unity_SHAr]
//   Vector 640 [unity_SHAg]
//   Vector 656 [unity_SHAb]
//   Vector 736 [unity_OcclusionMaskSelector]
//   ConstBuffer "UnityShadows" 416
//   Vector 384 [_LightShadowData]
//   Vector 400 [unity_ShadowFadeCenterAndType]
//   ConstBuffer "UnityPerFrame" 368
//   Vector 64 [unity_IndirectSpecColor]
//   Matrix 144 [unity_MatrixV]
//   ConstBuffer "UnityFog" 32
//   Vector 0 [unity_FogColor]
//   Vector 16 [unity_FogParams]
//   ConstBuffer "UnityProbeVolume" 112
//   Vector 0 [unity_ProbeVolumeParams]
//   Vector 80 [unity_ProbeVolumeSizeInv] 3
//   Vector 96 [unity_ProbeVolumeMin] 3
//   Matrix 16 [unity_ProbeVolumeWorldToObject]
//   SetTexture 0 [_ParallaxMap] 2D 4
//   SetTexture 1 [_MainTex] 2D 1
//   SetTexture 2 [_BumpMap] 2D 2
//   SetTexture 3 [_ShadowMapTexture] 2D 5
//   SetTexture 4 [_OcclusionMap] 2D 3
//   SetTexture 5 [unity_ProbeVolumeSH] 3D 0
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//   BindCB "UnityLighting" 2
//   BindCB "UnityShadows" 3
//   BindCB "UnityPerFrame" 4
//   BindCB "UnityFog" 5
//   BindCB "UnityProbeVolume" 6
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:18:24 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xyzw        1     NONE   float   xy
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
// TEXCOORD                 8   xyz         8     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[10], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_constantbuffer cb2[47], immediateIndexed
dcl_constantbuffer cb3[26], immediateIndexed
dcl_constantbuffer cb4[12], immediateIndexed
dcl_constantbuffer cb5[2], immediateIndexed
dcl_constantbuffer cb6[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyw
dcl_input_ps linear v8.xyz
dcl_output o0.xyzw
dcl_temps 11
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r9.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 6cc817ab78eba0d7-ps.txt

mul r9.w, -r9.x, r9.y
mad r10.xyz, -r9.wwww, cb10[0].xyzw, cb1[4].xyzw

mov r0.x, v3.w
mov r0.y, v4.w
mov r0.z, v5.w
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xy, r0.wwww, r0.xyxx
sample r1.xyzw, v1.xyxx, t0.xyzw, s4
mul r1.x, cb0[9].z, l(0.500000)
mad r1.x, r1.y, cb0[9].z, -r1.x
mad r0.z, r0.z, r0.w, l(0.420000)
div r0.xy, r0.xyxx, r0.zzzz
mad r0.xy, r1.xxxx, r0.xyxx, v1.xyxx
sample r1.xyzw, r0.xyxx, t1.xyzw, s1
mul r2.xyz, r1.xyzx, cb0[4].xyzx
mad r1.xyz, cb0[4].xyzx, r1.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r1.xyz, cb0[8].zzzz, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
mad r0.z, -cb0[8].z, l(0.960000), l(0.960000)
mul r2.xyz, r0.zzzz, r2.xyzx
sample r3.xyzw, r0.xyxx, t2.xyzw, s2
mul r3.x, r3.w, r3.x
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, cb0[8].xxxx
dp2 r0.w, r3.xyxx, r3.xyxx
min r0.w, r0.w, l(1.000000)
add r0.zw, -r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
sqrt r0.w, r0.w
mul r3.yzw, r3.yyyy, v4.xxyz
mad r3.xyz, v3.xyzx, r3.xxxx, r3.yzwy
mad r3.xyz, v5.xyzx, r0.wwww, r3.xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, r3.xyzx
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, v2.xyzx
add r5.xyz, -v8.xyzx, r10.xyzx
mov r6.x, cb4[9].z
mov r6.y, cb4[10].z
mov r6.z, cb4[11].z
dp3 r1.w, r5.xyzx, r6.xyzx
add r5.xyz, v8.xyzx, -cb3[25].xyzx
dp3 r2.w, r5.xyzx, r5.xyzx
sqrt r2.w, r2.w
add r2.w, -r1.w, r2.w
mad r1.w, cb3[25].w, r2.w, r1.w
mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
eq r2.w, cb6[0].x, l(1.000000)
if_nz r2.w
  eq r4.w, cb6[0].y, l(1.000000)
  mul r5.xyz, v8.yyyy, cb6[2].xyzx
  mad r5.xyz, cb6[1].xyzx, v8.xxxx, r5.xyzx
  mad r5.xyz, cb6[3].xyzx, v8.zzzz, r5.xyzx
  add r5.xyz, r5.xyzx, cb6[4].xyzx
  movc r5.xyz, r4.wwww, r5.xyzx, v8.xyzx
  add r5.xyz, r5.xyzx, -cb6[6].xyzx
  mul r5.yzw, r5.xxyz, cb6[5].xxyz
  mad r4.w, r5.y, l(0.250000), l(0.750000)
  mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  max r5.x, r4.w, r5.y
  sample r5.xyzw, r5.xzwx, t5.xyzw, s0
else
  mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
endif
dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
div r5.xy, v7.xyxx, v7.wwww
sample r5.xyzw, r5.xyxx, t3.xyzw, s5
add r4.w, r4.w, -r5.x
mad r1.w, r1.w, r4.w, r5.x
sample r5.xyzw, r0.xyxx, t4.xyzw, s3
add r0.x, -cb0[9].y, l(1.000000)
mad r0.x, r5.y, cb0[9].y, r0.x
mul r5.xyz, r1.wwww, cb0[2].xyzx
if_nz r2.w
  eq r0.y, cb6[0].y, l(1.000000)
  mul r6.xyz, v8.yyyy, cb6[2].xyzx
  mad r6.xyz, cb6[1].xyzx, v8.xxxx, r6.xyzx
  mad r6.xyz, cb6[3].xyzx, v8.zzzz, r6.xyzx
  add r6.xyz, r6.xyzx, cb6[4].xyzx
  movc r6.xyz, r0.yyyy, r6.xyzx, v8.xyzx
  add r6.xyz, r6.xyzx, -cb6[6].xyzx
  mul r6.yzw, r6.xxyz, cb6[5].xxyz
  mul r0.y, r6.y, l(0.250000)
  mul r1.w, cb6[0].z, l(0.500000)
  mad r2.w, -cb6[0].z, l(0.500000), l(0.250000)
  max r0.y, r0.y, r1.w
  min r6.x, r2.w, r0.y
  sample r7.xyzw, r6.xzwx, t5.xyzw, s0
  add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  sample r8.xyzw, r8.xyzx, t5.xyzw, s0
  add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  sample r6.xyzw, r6.xyzx, t5.xyzw, s0
  mov r3.w, l(1.000000)
  dp4 r7.x, r7.xyzw, r3.xyzw
  dp4 r7.y, r8.xyzw, r3.xyzw
  dp4 r7.z, r6.xyzw, r3.xyzw
else
  mov r3.w, l(1.000000)
  dp4 r7.x, cb2[39].xyzw, r3.xyzw
  dp4 r7.y, cb2[40].xyzw, r3.xyzw
  dp4 r7.z, cb2[41].xyzw, r3.xyzw
endif
add r6.xyz, r7.xyzx, v6.xyzx
max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r7.xyz, r0.xxxx, cb4[4].xyzx
add r0.y, -cb0[8].w, l(1.000000)
mad r8.xyz, -v2.xyzx, r0.wwww, cb2[0].xyzx
dp3 r0.w, r8.xyzx, r8.xyzx
max r0.w, r0.w, l(0.001000)
rsq r0.w, r0.w
mul r8.xyz, r0.wwww, r8.xyzx
dp3 r0.w, r3.xyzx, -r4.xyzx
dp3_sat r1.w, r3.xyzx, cb2[0].xyzx
dp3_sat r2.w, r3.xyzx, r8.xyzx
dp3_sat r3.x, cb2[0].xyzx, r8.xyzx
mul r3.y, r3.x, r3.x
dp2 r3.y, r3.yyyy, r0.yyyy
add r3.y, r3.y, l(-0.500000)
add r3.z, -r1.w, l(1.000000)
mul r3.w, r3.z, r3.z
mul r3.w, r3.w, r3.w
mul r3.z, r3.z, r3.w
mad r3.z, r3.y, r3.z, l(1.000000)
add r3.w, -|r0.w|, l(1.000000)
mul r4.x, r3.w, r3.w
mul r4.x, r4.x, r4.x
mul r3.w, r3.w, r4.x
mad r3.y, r3.y, r3.w, l(1.000000)
mul r3.y, r3.y, r3.z
mul r3.y, r1.w, r3.y
mul r0.y, r0.y, r0.y
max r0.y, r0.y, l(0.002000)
add r3.z, -r0.y, l(1.000000)
mad r4.x, |r0.w|, r3.z, r0.y
mad r3.z, r1.w, r3.z, r0.y
mul r0.w, |r0.w|, r3.z
mad r0.w, r1.w, r4.x, r0.w
add r0.w, r0.w, l(0.000010)
div r0.w, l(0.500000), r0.w
mul r3.z, r0.y, r0.y
mad r4.x, r2.w, r3.z, -r2.w
mad r2.w, r4.x, r2.w, l(1.000000)
mul r3.z, r3.z, l(0.318309873)
mad r2.w, r2.w, r2.w, l(1.000000012E-007)
div r2.w, r3.z, r2.w
mul r0.w, r0.w, r2.w
mul r0.w, r0.w, l(3.14159274)
mul r0.w, r1.w, r0.w
max r0.w, r0.w, l(0.000000)
mad r0.y, r0.y, r0.y, l(1.000000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
dp3 r1.w, r1.xyzx, r1.xyzx
ne r1.w, r1.w, l(0.000000)
and r1.w, r1.w, l(0x3f800000)
mul r0.w, r0.w, r1.w
add_sat r0.z, r0.z, cb0[8].w
mul r4.xyz, r3.yyyy, r5.xyzx
mad r4.xyz, r6.xyzx, r0.xxxx, r4.xyzx
mul r5.xyz, r5.xyzx, r0.wwww
add r0.x, -r3.x, l(1.000000)
mul r0.w, r0.x, r0.x
mul r0.w, r0.w, r0.w
mul r0.x, r0.x, r0.w
add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r3.xyzx, r0.xxxx, r1.xyzx
mul r3.xyz, r3.xyzx, r5.xyzx
mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
mul r0.xyw, r7.xyxz, r0.yyyy
add r3.xyz, -r1.xyzx, r0.zzzz
mad r1.xyz, r3.wwww, r3.xyzx, r1.xyzx
mad r0.xyz, r0.xywx, r1.xyzx, r2.xyzx
div r0.w, v2.w, cb1[5].y
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, cb1[5].z
max r0.w, r0.w, l(0.000000)
mad_sat r0.w, r0.w, cb5[1].z, cb5[1].w
add r0.xyz, r0.xyzx, -cb5[0].xyzx
mad o0.xyz, r0.wwww, r0.xyzx, cb5[0].xyzx
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used