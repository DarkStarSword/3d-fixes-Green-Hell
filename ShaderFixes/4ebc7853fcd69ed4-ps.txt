// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4ebc7853fcd69ed4-ps.txt
// 3DMigoto: 4ebc7853fcd69ed4 |    Unity headers extracted from VolumetricFogAndMist_VolumetricFog
//    Shader "VolumetricFogAndMist/VolumetricFog" {
//      SubShader 1/1 {
//        Pass 1/5 {
//          ZWrite Off
//          Program "fp" {
//            SubProgram "d3d11" {
//            }
//          }
//        }
//      }
//    }
//
// Unity 5.3 headers extracted from VolumetricFogAndMist_VolumetricFog:
//   API d3d11
//   Shader model ps_4_0
//   undeciphered1: 201802150 145 4 12
//   undeciphered1a: 14
//   Keywords { "FOG_OF_WAR_ON" "FOG_DISTANCE_ON" "FOG_AREA_BOX" "FOG_USE_XY_PLANE" "FOG_BLUR_ON" "FOG_SUN_SHADOWS_ON" }
//   undeciphered2: 1 6 2 6 0 0
//   undeciphered3: 0 0
//   ConstBuffer "$Globals" 512
//   Float 172 [_FogAlpha]
//   Vector 176 [_Color] 3
//   Vector 192 [_FogDistance]
//   Vector 208 [_FogData]
//   Vector 224 [_FogWindDir] 3
//   Vector 240 [_FogStepping]
//   Vector 256 [_FogSkyData]
//   Vector 272 [_FogAreaPosition] 3
//   Vector 288 [_FogAreaData]
//   Vector 320 [_FogOfWarSize] 3
//   Vector 336 [_FogOfWarCenterAdjusted] 3
//   Vector 432 [_VolumetricFogSunWorldPos]
//   Vector 448 [_VolumetricFogSunShadowsData]
//   Float 464 [_Jitter]
//   Matrix 368 [_VolumetricFogSunProj]
//   ConstBuffer "UnityPerCamera" 144
//   Vector 64 [_WorldSpaceCameraPos] 3
//   Vector 96 [_ScreenParams]
//   Vector 112 [_ZBufferParams]
//   SetTexture 0 [_CameraDepthTexture] 2D 2
//   SetTexture 1 [_FogOfWar] 2D 4
//   SetTexture 2 [_NoiseTex] 2D 1
//   SetTexture 3 [_VolumetricFogSunDepthTexture] 2D 5
//   SetTexture 4 [_MainTex] 2D 0
//   SetTexture 5 [_BlurTex] 2D 3
//   BindCB "$Globals" 0
//   BindCB "UnityPerCamera" 1
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 09:00:56 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xyz         2     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_constantbuffer cb0[30], immediateIndexed
dcl_constantbuffer cb1[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.xyz
dcl_output o0.xyzw
dcl_temps 16
dcl_constantbuffer cb10[4], immediateIndexed

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r14.xyzw, l(0, 0, 0, 0), t125.xyzw


// Unity reflection/specular fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --fix-unity-reflection --only-autofixed 4ebc7853fcd69ed4-ps.txt

mul r14.w, -r14.x, r14.y
mad r15.xyz, -r14.wwww, cb10[0].xyzw, cb1[4].xyzw

sample r0.xyzw, v1.zwzz, t0.xyzw, s2
mad r0.x, cb1[7].x, r0.x, cb1[7].y
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
add r1.z, -cb0[13].x, r15.z
mov r1.xy, r15.xyxx
mad r2.xyz, v2.xyzx, r0.xxxx, r1.xyzx
add r0.y, r2.z, l(0.000010)
mul r0.zw, v1.xxxy, cb1[6].xxxy
dp2 r0.z, l(2.40845060, 3.25352120, 0.000000, 0.000000), r0.zwzz
frc r0.z, r0.z
add r0.z, r0.z, l(-0.500000)
lt r0.w, cb0[13].y, r1.z
lt r1.w, cb0[13].y, r0.y
and r0.w, r0.w, r1.w
lt r1.w, r1.z, -cb0[13].y
lt r0.y, r0.y, -cb0[13].y
and r0.y, r0.y, r1.w
or r0.y, r0.y, r0.w
if_z r0.y
  lt r0.x, r0.x, cb0[16].w
  if_nz r0.x
    div r0.xy, r2.xyxx, cb0[20].xyxx
    add r0.xy, r0.xyxx, -cb0[21].xyxx
    sample r3.xyzw, r0.xyxx, t1.wxyz, s4
    ge r0.x, l(0.000000), r3.x
  else
    mov r3.x, l(1.000000)
    mov r0.x, l(0)
  endif
  if_z r0.x
    add r2.w, r2.z, l(0.000010)
    add r0.xyw, -r1.xyxz, r2.xyxw
    dp3 r1.w, r0.xywx, r0.xywx
    sqrt r1.w, r1.w
    add r2.xyz, r1.xyzx, -cb0[17].xyzx
    div r3.yzw, r1.wwww, r0.xxyw
    div r4.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[18].xyzx
    add r5.xyz, -r2.xyzx, -r4.xyzx
    mul r5.xyz, r3.yzwy, r5.xyzx
    add r2.xyz, -r2.xyzx, r4.xyzx
    mul r2.xyz, r2.xyzx, r3.yzwy
    min r4.xyz, r5.xyzx, r2.xyzx
    max r4.xy, r4.yzyy, r4.xxxx
    max r2.w, r4.y, r4.x
    max r2.w, r2.w, l(0.000000)
    max r2.xyz, r5.xyzx, r2.xyzx
    min r2.xy, r2.yzyy, r2.xxxx
    min r2.x, r2.y, r2.x
    min r2.y, r1.w, cb0[12].z
    min r2.x, r2.y, r2.x
    add r2.x, -r2.w, r2.x
    lt r2.z, l(0.000000), r2.x
    if_nz r2.z
      div r3.yzw, r2.wwww, r3.yyzw
      add r4.xyz, r1.xyzx, r3.yzwy
      div r1.xy, cb0[18].xyxx, cb0[13].wwww
      log r1.z, r2.x
      mul r1.z, r1.z, l(0.693147182)
      max r1.z, r1.z, l(0.000000)
      mad r1.z, r1.z, cb0[15].x, l(0.100000)
      mul r1.z, r1.z, cb0[13].z
      mul_sat r2.z, r2.y, cb0[15].y
      mul r1.z, r1.z, r2.z
      add r2.y, -r2.w, r2.y
      max r1.z, r1.z, l(0.010000)
      mul r3.yzw, r0.xxyw, r1.zzzz
      div r3.yzw, r3.yyzw, r1.wwww
      div r1.z, r2.x, r1.z
      mul r5.xy, r3.yzyy, cb0[13].wwww
      mul r2.z, cb0[13].z, cb0[13].y
      div r5.z, r3.w, r2.z
      add r3.yz, r4.xxyx, cb0[14].xxzx
      mul r3.yz, r3.yyzy, cb0[13].wwww
      div r2.z, r4.z, r2.z
      add r6.xy, cb0[14].xyxx, cb0[17].xyxx
      add r6.zw, cb0[14].xxxy, r15.xxxy
      frc r3.w, r0.z
      mad r1.z, r3.w, cb0[29].x, r1.z
      add r4.w, r4.z, cb0[13].x
      mul r7.xyz, r4.yyyy, cb0[24].xywx
      mad r7.xyz, cb0[23].xywx, r4.xxxx, r7.xyzx
      mad r7.xyz, cb0[25].xywx, r4.wwww, r7.xyzx
      add r7.xyz, r7.xyzx, cb0[26].xywx
      div r7.xy, r7.xyxx, r7.zzzz
      mad r7.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mad r3.w, r0.z, cb0[28].y, l(1.000000)
      mul r3.w, r2.x, r3.w
      mul r0.xyw, r0.xyxw, r3.wwww
      div r0.xyw, r0.xyxw, r1.wwww
      add r0.xyw, r0.xyxw, r4.xyxw
      mul r8.xyz, r0.yyyy, cb0[24].xywx
      mad r8.xyz, cb0[23].xywx, r0.xxxx, r8.xyzx
      mad r8.xyz, cb0[25].xywx, r0.wwww, r8.xyzx
      add r8.xyz, r8.xyzx, cb0[26].xywx
      div r7.zw, r8.xxxy, r8.zzzz
      mad r7.zw, r7.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r1.w, -r2.w, cb0[27].w
      mul_sat r1.w, r1.w, l(0.0285714287)
      mul r1.w, r1.w, cb0[28].x
      div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
      ge r2.x, r2.x, r2.y
      and r2.x, r2.x, l(0x3f800000)
      add r7.xy, -r7.zwzz, r7.xyxx
      add r4.xyz, -r0.xywx, r4.xywx
      mov r8.xyzw, l(0,0,0,0)
      mov r10.xy, r3.yzyy
      mov r2.y, r1.z
      mov r10.z, r2.z
      mov r9.xyzw, l(0,0,0,0)
      loop
        ge r3.w, l(1.000000), r2.y
        breakc_nz r3.w
        mad r11.xy, r6.xyxx, cb0[13].wwww, -r10.xyxx
        mul r11.xy, r1.xyxx, |r11.xyxx|
        max r3.w, r11.y, r11.x
        sample_l r11.xyzw, r10.xyxx, t2.xyzw, s1, l(0.000000)
        mad r3.w, r3.w, cb0[18].w, |r10.z|
        add r3.w, -r3.w, r11.w
        mad r12.xy, r6.zwzz, cb0[13].wwww, -r10.xyxx
        dp2 r4.w, r12.xyxx, r12.xyxx
        add r4.w, -r4.w, cb0[12].x
        max r4.w, r4.w, l(0.000000)
        mad r3.w, -r4.w, cb0[12].y, r3.w
        lt r4.w, l(0.000000), r3.w
        if_nz r4.w
          add r4.w, -r3.w, l(1.000000)
          mul r12.xyz, r4.wwww, cb0[11].xyzx
          mul r12.w, r3.w, l(0.400000)
          mul r3.w, r2.w, r2.y
          mad r13.xy, r3.wwww, r7.xyxx, r7.zwzz
          sample_l r13.xyzw, r13.xyxx, t3.xyzw, s5, l(0.000000)
          dp4 r4.w, r13.xyzw, l(1.000000, 0.00392156886, 0.0000153787005, 6.030862920E-008)
          div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
          mad r13.xyz, r3.wwww, r4.xyzx, r0.xywx
          add r13.xyz, r13.xyzx, -cb0[27].xyzx
          dp3 r3.w, r13.xyzx, r13.xyzx
          sqrt r3.w, r3.w
          add_sat r3.w, -r3.w, r4.w
          mul r4.w, r1.w, r9.w
          add r3.w, r3.w, l(-1.000000)
          mad r4.w, r4.w, r3.w, l(1.000000)
          mul r11.xyz, r4.wwww, r11.xyzx
          mad r3.w, cb0[28].z, r3.w, l(1.000000)
          mul r12.xyzw, r3.wwww, r12.xyzw
          mul r11.xyz, r11.xyzx, r12.wwww
          mul r12.xyz, r11.xyzx, r12.xyzx
          add r3.w, -r9.w, l(1.000000)
          mad r11.xyzw, r12.xyzw, r3.wwww, r9.xyzw
          lt r3.w, l(0.990000), r11.w
          if_nz r3.w
            mov r8.xyzw, r12.xyzw
            mov r9.xyzw, r11.xyzw
            break
          endif
          mov r8.xyzw, r12.xyzw
          mov r9.xyzw, r11.xyzw
        endif
        add r2.y, r2.y, l(-1.000000)
        add r10.xyz, r5.xyzx, r10.xyzx
      endloop
      lt r0.x, r9.w, l(0.990000)
      and r0.x, r0.x, l(0x3f800000)
      add r0.y, -r9.w, l(1.000000)
      mul r0.w, r2.y, r2.x
      mul r0.x, r0.y, r0.x
      mul r0.x, r0.w, r0.x
      mad r1.xyzw, r8.xyzw, r0.xxxx, r9.xyzw
      mul r1.xyzw, r1.xyzw, cb0[10].wwww
      mul r1.xyzw, r3.xxxx, r1.xyzw
    else
      mov r1.xyzw, l(0,0,0,0)
    endif
  else
    mov r1.xyzw, l(0,0,0,0)
  endif
else
  mov r1.xyzw, l(0,0,0,0)
endif
mad r0.x, r0.z, cb0[15].w, l(1.000000)
mul r2.xyzw, r0.xxxx, r1.xyzw
sample r3.xyzw, v1.xyxx, t4.xyzw, s0
sample r4.xyzw, v1.zwzz, t5.xyzw, s3
add r0.yzw, -r3.xxyz, r4.xxyz
mad r0.yzw, r2.wwww, r0.yyzw, r3.xxyz
mad_sat r0.x, -r1.w, r0.x, l(1.000000)
mad o0.xyz, r0.yzwy, r0.xxxx, r2.xyzx
mov o0.w, r2.w
ret
// Approximately 0 instruction slots used