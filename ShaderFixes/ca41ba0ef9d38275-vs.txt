// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed ca41ba0ef9d38275-vs.txt
// 3DMigoto: ca41ba0ef9d38275 | Matched 12 variants of 4 shaders: Amplify/mud_buildings_rain, Amplify/rock_surface, Amplify/rock_surface_lod, Amplify/standard_rain
//
// 01f:    Unity headers extracted from Amplify_mud_buildings_rain
// c00:    Unity headers extracted from Amplify_rock_surface
// 200:    Unity headers extracted from Amplify_rock_surface_lod
// 1e0:    Unity headers extracted from Amplify_standard_rain
// 01f:    Shader "Amplify/mud_buildings_rain" {
// c00:    Shader "Amplify/rock_surface" {
// 200:    Shader "Amplify/rock_surface_lod" {
// 1e0:    Shader "Amplify/standard_rain" {
//           CustomEditor "ASEMaterialInspector"
//           Fallback "Diffuse"
//           SubShader 1/1 {
//             Tags { "QUEUE"="Geometry+0" "RenderType"="Opaque" }
// 3e0:        Pass 4/4 {
// c1f:        Pass 5/5 {
//               Name "ShadowCaster"
//               Tags { "LIGHTMODE"="SHADOWCASTER" "QUEUE"="Geometry+0" "RenderType"="Opaque" "SHADOWSUPPORT"="true" }
//               Program "vp" {
//                 SubProgram "d3d11" {
//                 }
//               }
//             }
//           }
//         }
//
// 01f: Unity 5.3 headers extracted from Amplify_mud_buildings_rain:
// c00: Unity 5.3 headers extracted from Amplify_rock_surface:
// 200: Unity 5.3 headers extracted from Amplify_rock_surface_lod:
// 1e0: Unity 5.3 headers extracted from Amplify_standard_rain:
//        API d3d11
//        Shader model vs_5_0
//        undeciphered1: 201802150 43 0 1
//        undeciphered1a: 6
// 080:   Keywords { "SHADOWS_CUBE" "INSTANCING_ON" "UNITY_PASS_SHADOWCASTER" "_INVERTMASK_ON" "_USE_TRANSMISSION_ON" }
// 022:   Keywords { "SHADOWS_CUBE" "INSTANCING_ON" "UNITY_PASS_SHADOWCASTER" "_INVERTMASK_ON" }
// 040:   Keywords { "SHADOWS_CUBE" "INSTANCING_ON" "UNITY_PASS_SHADOWCASTER" "_WETMASK_WORLD_SPACE_UVS_ON" }
// b10:   Keywords { "SHADOWS_CUBE" "INSTANCING_ON" "UNITY_PASS_SHADOWCASTER" }
// 008:   Keywords { "SHADOWS_CUBE" "INSTANCING_ON" "_LIGHTEN_ON" "UNITY_PASS_SHADOWCASTER" "_1OR2COLORVARIABLE_ON" "_INVERTMASK_ON" }
// 004:   Keywords { "SHADOWS_CUBE" "INSTANCING_ON" "_LIGHTEN_ON" "UNITY_PASS_SHADOWCASTER" "_INVERTMASK_ON" }
// 001:   Keywords { "SHADOWS_CUBE" "INSTANCING_ON" "_LIGHTEN_ON" "UNITY_PASS_SHADOWCASTER" }
// 400:   Keywords { "SHADOWS_CUBE" "INSTANCING_ON" "_USE_MOSS_ALBEDO_ON" "UNITY_PASS_SHADOWCASTER" }
//        undeciphered2: 1 0 6 0 0 0
//        undeciphered3: 255 4 0 0 2 2 1 1 4 5
//        ConstBuffer "UnityLighting" 768
//        Vector 0 [_WorldSpaceLightPos0]
//        ConstBuffer "UnityShadows" 416
//        Vector 80 [unity_LightShadowBias]
//        ConstBuffer "UnityPerDraw" 176
//        Vector 144 [unity_WorldTransformParams]
//        ConstBuffer "UnityPerFrame" 368
//        Matrix 272 [unity_MatrixVP]
//        ConstBuffer "UnityDrawCallInfo" 16
//        ScalarInt 0 [unity_BaseInstanceID]
//        ConstBuffer "UnityInstancing_PerDraw0" 256
//        Struct 0 [unity_Builtins0Array] 2 128
//        Matrix 0 [unity_ObjectToWorldArray]
//        Matrix 64 [unity_WorldToObjectArray]
//        BindCB "UnityLighting" 0
//        BindCB "UnityShadows" 1
//        BindCB "UnityPerDraw" 2
//        BindCB "UnityPerFrame" 3
//        BindCB "UnityDrawCallInfo" 4
//        BindCB "UnityInstancing_PerDraw0" 5
//
// Headers extracted with DarkStarSword's extract_unity55_shaders.py
// https://github.com/DarkStarSword/3d-fixes

//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 07 10:10:36 2019
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xyzw        3     NONE   float   xy
// TEXCOORD                 1   xyzw        4     NONE   float
// TEXCOORD                 2   xyzw        5     NONE   float
// TEXCOORD                 3   xyzw        6     NONE   float
// COLOR                    0   xyzw        7     NONE   float
// SV_InstanceID            0   x           8   INSTID    uint   x
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 1   xy          1     NONE   float   xy
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
// TEXCOORD                 4   xyzw        4     NONE   float   xyzw
// SV_InstanceID            0   x           5     NONE    uint   x
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_constantbuffer cb1[6], immediateIndexed
dcl_constantbuffer cb2[10], immediateIndexed
dcl_constantbuffer cb3[21], immediateIndexed
dcl_constantbuffer cb4[1], immediateIndexed
dcl_constantbuffer cb5[15], dynamicIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xyz
dcl_input v3.xy
dcl_input_sgv v8.x, instance_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.x
dcl_temps 7

// 3DMigoto StereoParams:
dcl_resource_texture2d (float,float,float,float) t125

ld_indexable(texture2d)(float,float,float,float) r6.xyzw, l(0, 0, 0, 0), t125.xyzw

iadd r0.x, v8.x, cb4[0].x
ishl r0.x, r0.x, l(3)
mul r0.yzw, v0.yyyy, cb5[r0.x + 1].xxyz
mad r0.yzw, cb5[r0.x + 0].xxyz, v0.xxxx, r0.yyzw
mad r0.yzw, cb5[r0.x + 2].xxyz, v0.zzzz, r0.yyzw
mad r0.yzw, cb5[r0.x + 3].xxyz, v0.wwww, r0.yyzw
dp3 r1.x, v2.xyzx, cb5[r0.x + 4].xyzx
dp3 r1.y, v2.xyzx, cb5[r0.x + 5].xyzx
dp3 r1.z, v2.xyzx, cb5[r0.x + 6].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mul r2.xyz, v1.yyyy, cb5[r0.x + 1].yzxy
mad r2.xyz, cb5[r0.x + 0].yzxy, v1.xxxx, r2.xyzx
mad r2.xyz, cb5[r0.x + 2].yzxy, v1.zzzz, r2.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r1.w, v1.w, cb2[9].w
mul r3.xyz, r1.zxyz, r2.xyzx
mad r3.xyz, r1.yzxy, r2.yzxy, -r3.xyzx
mul r3.xyz, r1.wwww, r3.xyzx
mul r4.xyzw, v0.yyyy, cb5[r0.x + 1].xyzw
mad r4.xyzw, cb5[r0.x + 0].xyzw, v0.xxxx, r4.xyzw
mad r4.xyzw, cb5[r0.x + 2].xyzw, v0.zzzz, r4.xyzw
mad r4.xyzw, cb5[r0.x + 3].xyzw, v0.wwww, r4.xyzw
ne r0.x, cb1[5].z, l(0.000000)
if_nz r0.x
  mad r5.xyz, -r4.xyzx, cb0[0].wwww, cb0[0].xyzx
  dp3 r0.x, r5.xyzx, r5.xyzx
  rsq r0.x, r0.x
  mul r5.xyz, r0.xxxx, r5.xyzx
  dp3 r0.x, r1.xyzx, r5.xyzx
  mad r0.x, -r0.x, r0.x, l(1.000000)
  sqrt r0.x, r0.x
  mul r0.x, r0.x, cb1[5].z
  mad r4.xyz, -r1.xyzx, r0.xxxx, r4.xyzx
endif
mul r5.xyzw, r4.yyyy, cb3[18].xyzw
mad r5.xyzw, cb3[17].xyzw, r4.xxxx, r5.xyzw
mad r5.xyzw, cb3[19].xyzw, r4.zzzz, r5.xyzw
mad r4.xyzw, cb3[20].xyzw, r4.wwww, r5.xyzw

// Relocated to here with asmtool.py
mov o0.xyw, r4.xyxw

// Automatic vertex shader halo fix inserted with DarkStarSword's asmtool.py:
// asmtool.py -I ../.. --auto-fix-vertex-halo --fix-unusual-halo-with-inconsistent-w-optimisation --fix-unity-reflection --fix-unity-frustum-world --only-autofixed ca41ba0ef9d38275-vs.txt
ne r6.w, r4.w, l(1.0)
if_nz r6.w
  add r6.w, r4.w, -r6.y
  mad r4.x, r6.w, r6.x, r4.x
endif

min r0.x, r4.w, r4.z
add r0.x, -r4.z, r0.x
mad o0.z, cb1[5].y, r0.x, r4.z

// mov o0.xyw, r4.xyxw // Relocated from here with asmtool.py

mov o2.x, r2.z
mov o2.y, r3.x
mov o2.z, r1.x
mov o2.w, r0.y
mov o3.x, r2.x
mov o3.y, r3.y
mov o3.z, r1.y
mov o3.w, r0.z
mov o4.x, r2.y
mov o4.y, r3.z
mov o4.z, r1.z
mov o4.w, r0.w
mov o1.xy, v3.xyxx
mov o5.x, v8.x
ret
// Approximately 0 instruction slots used